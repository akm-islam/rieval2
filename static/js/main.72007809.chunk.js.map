{"version":3,"sources":["Data/fiscal.csv","Data/school.csv","Data/house.csv","Data/data/fiscal/lime/fiscal_rank.csv","Data/data/fiscal/lime/fiscal_lime.csv","Data/data/school/lime/school_rank.csv","Data/data/school/lime/school_lime.csv","Data/data/house/lime/house_rank.csv","Data/data/house/lime/house_lime.csv","Data/data/house/lime/chart1_data.csv","Algorithms/algo1.js","components/Charts/explanation_chart.js","components/Charts/misc_algo.js","components/Charts/deviation_chart.js","components/Charts/Model/ModelChart.js","components/Charts/Range/RangeChart.js","components/Charts/Time/YearChart.js","components/TopBar/DefaultModels.js","components/TopBar/Sort.js","components/TopBar/TopBar.js","components/Sidebar/Histogram.js","components/Sidebar/Histograms.js","components/Sidebar/Tracking.js","components/Sidebar/Modes.js","components/Sidebar/Sidebar.js","App.js","store/reducer.js","Themes.js","index.js","Data/data/fiscal/lime/chart1_data.csv","Data/data/school/lime/chart1_data.csv"],"names":["module","exports","groupby_year","original_data","years","sparkline_data","forEach","element","replace","temp_dict","year","parseInt","rank","push","sort","type","state_range","default_models","selected_year","grouped_by_year_data","nDCG_dict","i","Object","keys","key","parseFloat","items","map","substring","first","second","temp_ndcg","length","includes","temp1","myitem","console","log","mydict","model","temp","Math","sqrt","temp_ap","features_with_score","dataset","models","number_of_charts","rank_data","temp_final","temp2","v","top_nine","data","feautures","tempvoted_data_with_score","data2","filter","index","item","feauture","items2","sorted_features","key2","CreatexpChart","parent_id","selected_instances","lime_data","defualt_models","clicked_circles","Set_clicked_circles","diverginColor","anim_config","clicked_features","Set_clicked_features","margin","parent_width","$","width","parent_height","height","item_width","item_height","parent_svg","d3","selectAll","join","attr","d","text","enter","append","svg_index","this","update","transition","duration","feature_animation","delay","rank_animation","deviation_animation","exit","remove","x_transformation","feature_name","feature_contrib_name","circ_data","xScale","domain","range","yScale","circle_animation","on","preventDefault","handle_transparency","class_name","id","draw_lines","lines","two_realRank","points","each","raise","Create_deviation_chart","selected_years","average","div","style","temp_scale_data","abs","config","y_distance","circle_radius","data_for_all_years","line_data","model_name","a","temp_max","sclale1","d2","avg","html","pageX","pageY","SlopeChart","props","line_color","state","height_slope_exp_chart","mouseX","mouseY","setState","window","innerHeight","prevProps","prevState","min","interpolate","algo1","entries","b","slice","deviation_chart","average_m","explanation_chart","misc_algo","Grid","container","className","backgroundColor","padding","border","boxShadow","marginBottom","Component","connect","deviate_by","clicked_items_in_slopechart","tracking","time_mode_model","chart_scale_type","histogram_data","show","default_model_scores","sort_by","average_y","dispatch","val","value","Set_prev_prop","Set_sparkline_data","Set_clicked_items_in_slopechart","Set_replay","range_mode_range1","range_mode_range2","selected_instances2","features_with_score2","sorted_features2","direction","justifyContent","paddingRight","paddingLeft","fontWeight","borderBottom","overflow","marginRight","marginTop","paddingTop","marginLeft","time_mode_range","time_mode_year1","time_mode_year2","Set_defualt_models","Set_pop_over_models","React","useState","anchorEl","setAnchorEl","open","Boolean","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","splice","borderRight","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","onClose","TransitionComponent","Fade","List","labelId","ListItem","role","undefined","Checkbox","edge","tabIndex","onChange","temp_Models","target","myfunc","appHandleChange","checkboxChanged","Set_sort_by","Set_default_model_scores","set_sort_by","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","label","useStyles","makeStyles","theme","MuiAutocompleteroot","root","listroot","maxWidth","paper","heading","fontSize","typography","pxToRem","fontWeightRegular","all_models","years_for_dropdown","mode","prev_prop","replay","add","Set_selected_years","Set_selected_year","set_tracking","Set_histogram_data","Set_changed","Set_state_range","Set_slider_max","Set_range_mode_range1","Set_range_mode_range2","Set_time_mode_range","Set_average_m","handle_year_click","handle_model_click","display","CreateChart","feature","node","feature_height","handleHistogramselection","feature_data","feature_width","svg","isNaN","y","occur","x","sum_x","cScale","interpolator","svg1","classed","statelist","country","cat_states","temp_x","tick_values","nice","ticks","hist_height","bins","thresholds","histogram","y_hist","svg0","x0","x1","call","tickValues","tickFormat","selectionRect","previousElement","currentY","currentX","originX","originY","setElement","ele","getNewAttributes","getCurrentAttributes","y1","x2","y2","getCurrentAttributesAsText","attrs","init","newX","newY","rectElement","NewAttr","focus","removePrevious","dragBehavior","p","finalAttributes","myx1","myx2","temp_range","invert","toFixed","states","sourceEvent","Chart","selected_states","update_histogram_data","alert","filtered_states","slider_and_feature_value","makeArr","startValue","stopValue","arr","myRef","createRef","feaures_dict","features_voted","filename","self","exp_fiscal_CordAscent","exp_school_CordAscent","exp_house_CordAscent","then","legend_data","height_between","number_of_elements","exp_chart_height","floor","features_dict","feature_index","feature_id","setTimeout","justify","alignItems","labelPlacement","color","flexBasis","flexShrink","secondaryHeading","palette","secondary","tRoot","rang_input","slider_max","range_mode_model","Set_years_for_dropdown","Set_mode","Set_range_mode_model","Set_time_mode_model","Set_time_mode_year1","Set_time_mode_year2","Set_slider_and_feature_value","classes","sliderRange","set_sliderRange","range_mode_slider_value1","set_range_mode_slider_value1","range_mode_slider_value2","set_range_mode_slider_value2","time_mode_slider_value","set_time_mode_slider_value","set_dummy","temp_marks","step","marks","borderTop","Autocomplete","borderRadius","paddingBottom","defaultValue","debug","options","renderInput","params","TextField","fullWidth","InputProps","disableUnderline","temp_val","JSON","stringify","Slider","newValue","onChangeCommitted","valueLabelDisplay","aria-labelledby","input","Histograms","toString","Sidebar_width","Typography","option","Set_ref_year","Set_original_data","Set_deviate_by","Set_show","view_data","variant","inputchanged","temp_show","App","handleradioChange","Set_dataset","dataprocessor","task2","reduced_opacity","idName","textClickHandler_original","state_name","dataset_name","process_data","school","school_rank","school_lime","fiscal","fiscal_rank","fiscal_lime","house","house_rank","house_lime","slopechart_data_filename","rank_data_filename","lime_data_filename","Set_legend_year","ref_year","Set_grouped_by_year_data","nested_data","values","Set_rank_data","Set_lime_data","buttonclickHandler","random","Legend_ready_to_vis","legend_model","Row","Col","innerWidth","minHeight","spacing","left","onSubmit","ModelChart","RangeChart","YearChart","popup_chart_data","initialState","slope_chart_ready_to_vis","slider_min","cmodel","dummy","legend_show_option","legend_year","reducer","action","dbclicked_features","drag_drop_feautre_data","changed","pop_over","pop_over_models","createMuiTheme","button","textTransform","store","createStore","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.72007809.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fiscal.977bae2d.csv\";","module.exports = __webpack_public_path__ + \"static/media/school.2d2c77ef.csv\";","module.exports = __webpack_public_path__ + \"static/media/house.88979d03.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_rank.6e0a824e.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_lime.7992abf1.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_rank.edf0b9e3.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_lime.644683c6.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_rank.f85c2352.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_lime.b31dfb61.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.45acbae8.csv\";","export function groupby_year(original_data) {\n  var years = {}\n  var sparkline_data = {}\n  original_data.forEach(element => {\n    years[element['1-qid']] = []\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')] = []\n  });\n\n  original_data.forEach(element => {\n    var temp_dict = { year: parseInt(element['1-qid']), rank: parseInt(element['two_realRank']) }\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')].push(temp_dict)\n    years[element['1-qid']].push(element)\n  });\n  return { years: years, sparkline_data: sparkline_data };\n}\n//------------------------------------------------------------------------------------------------- Sort Models\nexport function sort(type, state_range, default_models, selected_year, grouped_by_year_data) {\n  //------------Handle ndgc sorting\n  if (type == 'Discounted Cumulative Gain') {\n    var nDCG_dict = { \"ndcg_term_CordAscent\": 0, \"ndcg_term_LambdaMART\": 0, \"ndcg_term_LambdaRank\": 0, \"ndcg_term_LinearReg\": 0, \"ndcg_term_ListNet\": 0, \"ndcg_term_MART\": 0, \"ndcg_term_RandomFor\": 0, \"ndcg_term_RankBoost\": 0, \"ndcg_term_RankNet\": 0 }\n    for (var i = state_range[0]; i < state_range[1]; i++) {\n      Object.keys(nDCG_dict).forEach(key => {\n          nDCG_dict[key] = nDCG_dict[key] + parseFloat(grouped_by_year_data[selected_year][i][key])\n      })\n    }\n    //---- sort\n    var items = Object.keys(nDCG_dict).map(function (key) {\n      return [key.substring(10), nDCG_dict[key]];\n    });\n    items.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    var temp_ndcg = []\n    for (var i = 0; i < items.length; i++) {\n      if (default_models.includes(items[i][0])) {\n        temp_ndcg.push(items[i][0])\n      }\n    }\n    var temp1={}\n    items.map(myitem=>{temp1[myitem[0]]=myitem[1]})\n    console.log(items)\n    return [temp_ndcg,temp1]\n  }\n  //----\n\n  //------------Handle AP sorting\n  if (type == 'Average Precision') {\n    var mydict = {}\n    default_models.forEach((model) => {\n      var temp = 1\n      for (var i = state_range[0]; i < state_range[1]; i++) {\n        temp = temp + (grouped_by_year_data[selected_year][i][\"two_realRank\"] - grouped_by_year_data[selected_year][i][model]) ** 2\n      }\n      mydict[model] = ((state_range[1] - state_range[0]) + 1) / (Math.sqrt(temp))\n    })\n    //---- sort\n    var items = Object.keys(mydict).map(function (key) {\n      return [key, mydict[key]];\n    });\n    items.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    var temp_ap = []\n    for (var i = 0; i < items.length; i++) {\n      if (default_models.includes(items[i][0])) {\n        temp_ap.push(items[i][0])\n      }\n    }\n    return [temp_ap,mydict]\n  }\n  //------------Handle Alphabatic sorting\n  if (type == 'Alphabetically') {\n    var temp=default_models.sort()\n    return [temp,[0]]\n  }\n}\n\n\nexport function features_with_score(dataset, models, state_range, selected_year, number_of_charts, rank_data) {\n  var temp1 = {}\n  var temp_final = {}\n  models.map(model => {\n    var temp2 = {}\n    var v = number_of_charts;\n    var top_nine = sorted_features(dataset, model, state_range, selected_year,rank_data)\n    if (top_nine.length < number_of_charts) { v = top_nine.length;; number_of_charts = top_nine.length } // This is because number of charts is calculated based on space but there are cases when we don't have that many features\n    for (var i = 0; i < number_of_charts; i++) {\n      temp2[top_nine[i]] = v;\n      v = v - 1\n    }\n    temp1[model] = temp2\n  });\n\n  for (var key in temp1) {\n    for (var key2 in temp1[key]) {\n      if (temp_final[key2] > 0) {\n\n        temp_final[key2] = temp_final[key2] + temp1[key][key2]\n      }\n      else {\n        temp_final[key2] = temp1[key][key2]\n      }\n    }\n  }\n  return temp_final;\n}\n\n\nexport function sorted_features(dataset, model, state_range, selected_year,rank_data) { // Uses feature rank to rank and return features name by removing the feature_rank string\n  if (!state_range.length > 0) { return [] }\n  state_range = state_range.map(element => element - 1)\n  var tempvoted_data_with_score = {},items,data,feautures;\n\n  if (model == \"ListNet\") { return [] }\n  var data2 = rank_data[model].filter(element => { if (parseInt(element['1-qid']) == parseInt(selected_year)) { return element } })\n  data = state_range.map(index => data2[index])\n  feautures = Object.keys(data[0])\n\n  data.map(item => {\n    feautures.forEach(feauture => {\n      if (tempvoted_data_with_score[feauture] >= 0 || tempvoted_data_with_score[feauture] < 0) {\n        tempvoted_data_with_score[feauture] = tempvoted_data_with_score[feauture] + (parseFloat(item[feauture]))\n      }\n      else { tempvoted_data_with_score[feauture] = parseFloat(item[feauture]) }\n    })\n  })\n  //-----------------------------------------------------------------\n  // Create items array\n  items = Object.keys(tempvoted_data_with_score).map(function (key) {\n    return [key, tempvoted_data_with_score[key]];\n  });\n  // Sort the array based on the second element\n  items.sort(function (first, second) {\n    return first[1] - second[1];\n  });\n  var items2 = items.map((element) => element[0].replace(\"_feature_rank\", \"\"))\n  items2 = items2.filter(item => item != \"1-qid\" && item!=\"model\")\n  return items2;\n  //-----------------------------------------------------------------\n}\n","\nimport * as d3 from 'd3';\nimport * as $ from 'jquery';\nexport function CreatexpChart(parent_id, selected_instances, sorted_features, lime_data, selected_year, defualt_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, clicked_features, Set_clicked_features) {\n  //var lime_data=lime_data.filter(item=>parseInt(item['1-qid'])==selected_year)\n  var margin = { item_top_margin: 15, right: 14, bottom: 0, left: 20, circ_radius: 5, item_left_margin: 25, item_right_margin: 3 }\n  var parent_width = $(\"#\" + parent_id).width() - margin.item_left_margin\n  var parent_height = $(\"#\" + parent_id).height() - margin.item_top_margin * 2\n  var item_width = parent_width / sorted_features.length - margin.item_right_margin\n  var item_height = parent_height\n  var parent_svg = d3.select(\"#\" + parent_id)\n  // Draw ++ --\n  parent_svg.selectAll(\".ylabels\").data([[.125, \"++\"], [.375, \"+\"], [.5, \"0\"], [.625, \"-\"], [.875, \"--\"]]).join('text').attr('class', 'ylabels').attr(\"y\", d => d[0] * item_height).attr(\"x\", margin.item_left_margin - 5).attr('text-anchor', 'end').attr('dominant-baseline', 'hanging').text(d => d[1]).attr(\"font-size\", 14).attr('fill', \"#636363\")\n  // Add title rectangle, title text and rectangles around each feature\n  var feature_g = parent_svg.selectAll('.feature_g').data(sorted_features, d => d[0]).join(\n    enter => enter.append('g').attr('class', 'feature_g').attr('transform', (d, svg_index) => \"translate(\" + (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)) + \",0)\").attr('x_transformation', (d, svg_index) => (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)))\n      .attr(\"id\", d => d[0].replace(/[^\\w\\s]/gi, ''))\n      .attr('add_title_rect', function (d) { d3.select(this).selectAll('.title_rect').data([0]).join('rect').attr('class', 'title_rect').attr('width', item_width + 2).attr('x', -1).attr('height', margin.item_top_margin).attr('fill', '#d1d1d1') })\n      .attr('add_title_text', function (d, svg_index) { d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr('class', 'title_text').text(d[0]).attr('y', 0).attr('dominant-baseline', 'hanging').attr(\"font-size\", 12).attr('x', 10).attr('text-anchor', 'start') })\n      .attr('add_item_rect', function (d, svg_index) { d3.select(this).selectAll('.item_rect').data([0]).join('rect').attr('class', 'item_rect').attr('width', item_width).attr('height', item_height).attr('y', margin.item_top_margin).attr('fill', clicked_features.includes(d[0]) ? \"#F8FDB8\" : '#f2f2f2').attr('fill-opacity', 1).attr('stroke', '#b2b0b0') })\n      .attr('svg_index', (d, svg_index) => svg_index)\n      .attr('add_contrib_lines', function (d, svg_index) {\n        d3.select(this).selectAll(\".mylines\").data([[.25], [.5], [.75]]).join('line').attr('class', 'mylines')\n          .attr('x1', 0).attr('x2', item_width)\n          .attr('y1', d => d * (item_height + margin.item_top_margin)).attr('y2', d => d * (item_height + margin.item_top_margin)).attr('stroke-width', 1).attr(\"stroke\", \"#bababa\")\n      })\n    , update => {\n      //parent_svg.selectAll('.feature_g').attr('opacity',0.5)\n      //update.attr('opacity',1)\n      return update.transition().duration(anim_config.feature_animation).delay(anim_config.rank_animation + anim_config.deviation_animation).attr('transform', (d, svg_index) => \"translate(\" + (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)) + \",0)\").attr('x_transformation', (d, svg_index) => (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)))\n        .attr(\"id\", d => d[0].replace(/[^\\w\\s]/gi, ''))\n        .attr('svg_index', (d, svg_index) => svg_index)\n        .attr('add_title_rect', function (d) { d3.select(this).selectAll('.title_rect').data([0]).join('rect').attr('class', 'title_rect').attr('width', item_width + 2).attr('x', -1).attr('height', margin.item_top_margin).attr('fill', '#d1d1d1') })\n        .attr('add_title_text', function (d, svg_index) { d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr('class', 'title_text').text(d[0]).attr('y', 0).attr('dominant-baseline', 'hanging').attr(\"font-size\", 12).attr('x', 10).attr('text-anchor', 'start') })\n        .attr('add_item_rect', function (d, svg_index) { d3.select(this).selectAll('.item_rect').data([0]).join('rect').attr('class', 'item_rect').attr('width', item_width).attr('height', item_height).attr('y', margin.item_top_margin).attr('fill', clicked_features.includes(d[0]) ? \"#F8FDB8\" : '#f2f2f2').attr('fill-opacity', 1).attr('stroke', '#b2b0b0') })\n        //Add circles and lines to divide the rectangle\n        .attr('add_contrib_lines', function (d, svg_index) {\n          d3.select(this).selectAll(\".mylines\").data([[.25], [.5], [.75]]).join('line').attr('class', 'mylines')\n            .attr('x1', 0).attr('x2', item_width)\n            .attr('y1', d => d * (item_height + margin.item_top_margin)).attr('y2', d => d * (item_height + margin.item_top_margin)).attr('stroke-width', 1).attr(\"stroke\", \"#bababa\")\n        })\n    }\n    , exit => exit.remove())\n  //---------------------------------------------------------------------------------------------------------------------------------------------------\n  feature_g.attr('add_circle', function (d, i) {\n    var svg_index = parseInt(d3.select(this).attr('svg_index'))\n    d3.select(this).selectAll(\"circle\").remove()\n    var x_transformation = margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)\n    var feature_name = d[0]\n    var feature_contrib_name = d[0] + \"_contribution\"\n    defualt_models.map(model => {\n      var circ_data = []\n      lime_data[model].map(item => {\n        if (item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n          item['id'] = item['State'].replace(/\\s/g, '') + model.replace(/\\s/g, '')\n          item[\"x_transformation\"] = x_transformation\n          circ_data.push(item)\n        }\n      })\n      // Draw circle starts here\n      var xScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[d[0]]))), d3.max(circ_data.map(item => parseFloat(item[d[0]])))])\n        .range([2 * margin.circ_radius, item_width - 2 * margin.circ_radius])\n      var yScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[feature_contrib_name]))), d3.max(circ_data.map(item => parseFloat(item[feature_contrib_name])))]).range([margin.item_top_margin + margin.circ_radius, item_height - margin.circ_radius])\n      var mycircles = d3.select(this).selectAll(\".my_circles\" + model).data(circ_data, d => d['id']).join(\n        enter => enter.append('circle')\n          .attr('id', d => d['id'])\n          .attr(\"parent_id\", parent_id)\n          .attr('class', 'circle2 my_circles' + model)\n          .attr('r', margin.circ_radius)\n          .attr('cy', d => margin.circ_radius / 2 + yScale(parseFloat(d[feature_contrib_name])))\n          .attr('cx', (d, i) => xScale(parseFloat(d[feature_name])))\n          .attr('fill', d => diverginColor(d['two_realRank']))\n          .attr('cx2', (d, i) => d['x_transformation'] + xScale(parseFloat(d[feature_name])))\n          .attr('two_realRank', d => d['two_realRank'])\n        // Update\n        , update => update.attr('class', 'circle2 my_circles' + model)\n          .transition().duration(anim_config.circle_animation).delay(anim_config.rank_animation + anim_config.deviation_animation + anim_config.feature_animation)\n          .attr('id', d => d['id'])\n          .attr(\"parent_id\", parent_id)\n          .attr('class', 'circle2 my_circles' + model)\n          .attr('r', margin.circ_radius)\n          .attr('cy', d => margin.circ_radius / 2 + yScale(parseFloat(d[feature_contrib_name])))\n          .attr('cx', (d, i) => xScale(parseFloat(d[feature_name])))\n          .attr('fill', d => diverginColor(d['two_realRank']))\n          .attr('cx2', (d, i) => d['x_transformation'] + xScale(parseFloat(d[feature_name])))\n          .attr('two_realRank', d => d['two_realRank'])\n        , exit => exit.remove())\n      mycircles.on('click', d => Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']]))\n      // Draw circle ends here\n    })\n  }).on('dblclick', function (d) {\n    d3.event.preventDefault()\n    //d3.select(this).select('.item_rect').attr('fill','#F8FDB8')\n    var temp = []\n    if (clicked_features.includes(d[0])) {\n      temp = clicked_features.filter(item => item != d[0])\n    }\n    else {\n      temp = [...clicked_features, d[0]]\n    }\n    Set_clicked_features(temp)\n  })\n}\n","import * as d3 from 'd3';\nexport function handle_transparency(class_name, clicked_circles, anim_config) {\n    if (clicked_circles.length == 0) { d3.selectAll(\".\" + class_name).attr('opacity', 1) }\n    else {\n        d3.selectAll(\".items\").attr('opacity', 0.5)\n        d3.selectAll(\".\" + class_name).attr('opacity', 0.2)\n        clicked_circles.map(id => d3.selectAll(\"#\" + id).attr('opacity', 1).attr('stroke-width',0).attr('stroke','black'))\n    }\n}\nexport function draw_lines(clicked_circles, diverginColor, anim_config) {\n    d3.selectAll(\"#mylines\").remove()\n    clicked_circles.map(d => {\n        var lines = []\n        var two_realRank = 0\n        var parent_id = d3.select(\"#\" + d).attr('parent_id')\n        var points = []\n        d3.select(\"#\" + parent_id).selectAll(\"#\" + d).each(function (d) {\n            two_realRank = d3.select(this).attr('two_realRank')\n            points.push([d3.select(this).attr('cx2'), d3.select(this).attr('cy')])\n        })\n        lines.push([d, d3.line()(points), two_realRank])\n        console.log(lines,parent_id,d3.select(\"#\" + parent_id).selectAll(\"#\" + d))\n        d3.select(\"#\"+parent_id).selectAll('.'+d).raise().data(lines, d => d[0]).join('path').attr(\"stroke\", d => diverginColor(d[2])).attr(\"stroke-width\", 2)\n            .attr('id','mylines').attr('State', d => d[2]).attr('class', d).transition().duration(5000).attr('d', d => d[1]).attr(\"fill\", \"none\")\n    })\n}","import * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport { update } from 'lodash';\nimport * as misc_algo from './misc_algo'\nexport function Create_deviation_chart(parent_id,selected_instances, original_data, defualt_models, anim_config, selected_years, average,clicked_circles,Set_clicked_circles,diverginColor) {\n  \n  var div = d3.select(\"body\").selectAll('.tooltip').data([0]).join(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n  var parent_width = $(\"#\"+parent_id).width()-5\n  var data = original_data.filter(item => selected_years.includes(item['1-qid']) && selected_instances.includes(parseInt(item['two_realRank'])))\n  var temp_scale_data = []\n  data.map(item => {defualt_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n  var config = { fontSize: 12, font_dy: -6, font_line_gap: 4, line_stroke_width: 10, animation_duration: 0, container_height: 100, my_svg_top_margin: 10, myg_top_margin: 10, left_margin: 100 }\n  var y_distance = config.line_stroke_width + 2\n  var circle_radius = config.line_stroke_width / 2\n  var parent_g = d3.select(\"#\"+parent_id).attr('height', y_distance + data.length * y_distance)\n    .selectAll(\".parent_g\").data([0]).join('g').attr('class', 'parent_g').attr('transform', \"translate(\" + 0 + \",13)\")\n  var items_g=parent_g.selectAll(\".items\").data(data,d=>d['State']).join(enter=>enter.append(\"g\").attr(\"class\", \"items\")\n    .attr('transform', (d, i) => \"translate(\" + config.left_margin + \",\" + i * y_distance + \")\")\n    ,update=>update.transition().duration(anim_config.rank_animation).attr('transform', (d, i) => \"translate(\" + config.left_margin + \",\" + i * y_distance + \")\")\n    ,exit=>exit.remove()\n    )\n    items_g.attr(\"add_state\", function (d) {\n      d3.select(this).selectAll(\"text\").data([d]).join('text').text(d['State']+\" \"+d['two_realRank']).attr('fill', d=>diverginColor(d['two_realRank'])).attr(\"dominant-baseline\", \"hanging\").attr(\"font-size\", config.fontSize)\n        .attr(\"x\", 0).attr('text-anchor', 'end').attr(\"dy\", config.font_dy)\n    })\n    .attr(\"add_lines_and_circles\", function (d) {\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n      var line_data = []\n      defualt_models.map(model_name => {\n        data_for_all_years.map(item => {\n          var a = {}\n          a['two_realRank'] = parseInt(item['two_realRank'])\n          a['predicted_rank'] = parseInt(item[model_name])\n          a[\"model\"] = model_name\n          a['year'] = item['1-qid']\n          line_data.push(a)\n        })\n      })\n      // This is only for scaling starts here\n      var temp_scale_data = []\n      data.map(item => { defualt_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n      var temp_max=d3.max(temp_scale_data)\n      var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, parent_width - (config.left_margin + circle_radius)])\n      if(temp_max==0){var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, 0])}\n      // This is only for scaling ends here\n      var mylines=d3.select(this).selectAll(\"line\").data([d]).join(enter=>enter.append('line')\n        .attr(\"x1\", config.font_line_gap).attr(\"y1\", (d, i) => y_distance * i).attr(\"y2\", (d, i) => y_distance * i).attr(\"stroke-width\", config.line_stroke_width).attr(\"stroke\", \"#cecece\").attr(\"x2\", (d2) => {\n          var temp = []\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n          return sclale1(d3.max(temp))\n        })\n        // Update\n        ,update=>update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"x2\", (d2) => {\n          var temp = []\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n          return sclale1(d3.max(temp))\n        }))\n      // ------------ Circles start here\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n      var circ_data = []\n      defualt_models.map(model_name => {\n        data_for_all_years.map(item => {\n          var a = {}\n          a['two_realRank'] = parseInt(item['two_realRank'])\n          a['predicted_rank'] = parseInt(item[model_name])\n          a[\"model\"] = model_name\n          a['year'] = item['1-qid']\n          a['id'] = item['State'].replace(/\\s/g,'')+model_name.replace(/\\s/g,'')\n          circ_data.push(a)\n        })\n      })\n      if (average) {\n        var avg = d3.mean(circ_data.map(item => item['predicted_rank']))\n        circ_data = circ_data.map(item => {\n          item['predicted_rank'] = avg\n          item['model'] = \"Average\"\n          item['year'] = \"Average\"\n          return item;\n        })\n      }\n      var my_circs=d3.select(this).selectAll(\"circle\").data(circ_data,d=>d['id']).join(enter=>enter.append(\"circle\").attr('id',d=>d['id']).attr('class','circle2').attr(\"cx\", (d2, i) => {\n        if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n        console.log(d3.select(this).attr('id',d2['id']))\n        return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n      })\n      // Update\n      ,update=>update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"cx\", (d2, i) => {\n        if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n        return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n      })\n)\n        my_circs.attr(\"r\", circle_radius).attr('fill', d=>diverginColor(d['two_realRank']))\n        .on('click',d=>Set_clicked_circles(clicked_circles.includes(d['id'])?clicked_circles.filter(item=>item!=d['id']):[...clicked_circles,d['id']]))\n        .on(\"mouseover\", function (d2) {\n          div.transition().duration(200).style(\"opacity\", .9);\n          div.html(\"Year : \" + d2[\"year\"] + \"<br></br>\" +\"Model: \"+ d2[\"model\"]+\"<br></br>\"+\"Deviation: \"+ Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])).style(\"left\", (d3.event.pageX - 140) + \"px\").style(\"top\", (d3.event.pageY - 98) + \"px\");\n        }).on(\"mouseout\", function (d2) {\n          div.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n        })\n  \n    })\n    \n}","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n   // var diverginColor = d3.scaleLinear().domain([this.props.state_range[0], this.props.state_range[1]]).range(['#93003a','#00429d'])\n      var min=this.props.state_range[0],max=this.props.state_range[1];\n      var d = (max - min) / 8;\n      var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.state_range, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, 18)\n    \n    deviation_chart.Create_deviation_chart('dev_plot_container',selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_years, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles,diverginColor)\n    explanation_chart.CreatexpChart(\"exp_container\",selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles,diverginColor,this.props.anim_config,this.props.clicked_features,this.props.Set_clicked_features)\n    misc_algo.draw_lines(this.props.clicked_circles,diverginColor,this.props.anim_config,sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles,this.props.anim_config)\n  }\n  render() {\n    return (\n      <Grid container className=\"slope_chart_exp\" style={{ backgroundColor:'white',padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"99%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <svg id=\"dev_plot_container\" style={{ width: \"100%\", height: \"50%\", marginBottom: 10 }}></svg>\n        <svg id=\"exp_container\" style={{ width: \"100%\", height: \"50%\" }}></svg>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n    selected_year: state.selected_year,\n    selected_years: state.selected_years,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    sort_by: state.sort_by,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features:state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Range1\n    var min = d3.min([this.props.range_mode_range1[0],this.props.range_mode_range2[0]]), max = d3.max([this.props.range_mode_range1[1],this.props.range_mode_range2[1]]);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    \n    var selected_instances = d3.range(this.props.range_mode_range1[0], this.props.range_mode_range1[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.range_mode_range1, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('r1d', selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_years, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('r1e', selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n\n    // Range2\n    var selected_instances2 = d3.range(this.props.range_mode_range2[0], this.props.range_mode_range2[1] + 1)\n    var features_with_score2 = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.range_mode_range2, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features2 = Object.entries(features_with_score2).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('r2d', selected_instances2, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_years, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('r2e', selected_instances2, sorted_features2, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    //---------------------------------\n    misc_algo.draw_lines(this.props.clicked_circles, diverginColor, this.props.anim_config, sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    return (\n      <Grid container direction=\"row\" justifyContent=\"space-between\" className=\"slope_chart_exp\" style={{ backgroundColor: 'white', padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"100%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ paddingRight: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 1</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"r1d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"r1e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ marginLeft: \"1%\", padding: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 2</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"r2d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"r2e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    selected_year: state.selected_year,\n    selected_years: state.selected_years,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    sort_by: state.sort_by,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Range1\n    var min = this.props.time_mode_range[0], max = this.props.time_mode_range[1];\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    \n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.time_mode_range, this.props.time_mode_year1, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('y1d', selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.time_mode_year1, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('y1e', selected_instances, sorted_features, this.props.lime_data, this.props.time_mode_year1, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n\n    // Range2\n    var selected_instances2 = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var features_with_score2 = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.time_mode_range, this.props.time_mode_year2, number_of_charts, this.props.rank_data)\n    var sorted_features2 = Object.entries(features_with_score2).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('y2d', selected_instances2, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.time_mode_year2, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('y2e', selected_instances2, sorted_features2, this.props.lime_data, this.props.time_mode_year2, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    //---------------------------------\n    misc_algo.draw_lines(this.props.clicked_circles, diverginColor, this.props.anim_config, sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    return (\n      <Grid container direction=\"row\" justifyContent=\"space-between\" className=\"slope_chart_exp\" style={{ backgroundColor: 'white', padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"100%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ paddingRight: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>{\"Year : \"+this.props.time_mode_year1}</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"y1d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"y1e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ marginLeft: \"1%\", padding: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>{\"Year : \"+this.props.time_mode_year2}</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"y2d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"y2e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    time_mode_model: state.time_mode_model,\n    time_mode_range: state.time_mode_range,\n    deviate_by: state.deviate_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    sort_by: state.sort_by,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Fade from '@material-ui/core/Fade';\nimport { connect } from \"react-redux\";\nimport * as algo1 from \"../../Algorithms/algo1\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nfunction FadeMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  //------------For list and chckbox\n  const [checked, setChecked] = React.useState([0]);\n  const [selected_states, setSelected_states] = React.useState([]);\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  //----------------\n  const show_checkboxChanged = (event) => {\n    var myfunc = props.appHandleChange\n    myfunc(event.target.value, \"show_checkboxChanged\")\n  }\n  const checkboxChanged = (event) => {\n    var temp_Models;\n    if (props.defualt_models.includes(event.target.value)) {\n      temp_Models = props.defualt_models.filter(item => {\n        if (item != event.target.value)\n          return item\n      })\n      temp_Models = algo1.sort(props.sort_by, props.state_range, temp_Models, props.selected_year, props.grouped_by_year_data)[0];\n      props.Set_defualt_models(temp_Models)\n      props.Set_pop_over_models(temp_Models)\n    }\n    else {\n      temp_Models = props.defualt_models\n      temp_Models.push(event.target.value)\n      temp_Models = algo1.sort(props.sort_by, props.state_range, temp_Models, props.selected_year, props.grouped_by_year_data)[0];\n      props.Set_defualt_models(temp_Models)\n      props.Set_pop_over_models(temp_Models)\n    }\n    var myfunc = props.appHandleChange\n    myfunc(event.target.value, \"clicked_model\")\n  }\n  return (\n    <div style={{ borderRight: \"1px dashed #eaeaea\" }}>\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Select Model\n        <ArrowDropDownIcon></ArrowDropDownIcon>\n      </Button>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Fade}\n      >\n        <div className=\"CheckboxContainer\">\n          <List>\n            {[ \"MART\",\"RandomFor\",\"LinearReg\",\"CordAscent\", \"LambdaMART\", \"LambdaRank\",\"RankBoost\", \"RankNet\"].map((value) => {\n              const labelId = `checkbox-list-label-${value}`;\n              return (\n                <ListItem key={value} role={undefined} onClick={handleToggle(value)}>\n                  <Checkbox\n                    checked={props.defualt_models.includes(value)}\n                    edge=\"start\"\n                    tabIndex={-1}\n                    value={value}\n                    onChange={(event, value) => {\n                      checkboxChanged(event, value)\n                    }\n                    }\n                  />\n                  <p className=\"list_item_label\" id={labelId}>{value}</p>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      </Menu>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    defualt_models: state.defualt_models,\n    sort_by: state.sort_by,\n    state_range: state.state_range,\n    selected_year: state.selected_year,\n    grouped_by_year_data: state.grouped_by_year_data,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);\n//https://material-ui.com/components/menus/\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Menu from '@material-ui/core/Menu';\nimport Fade from '@material-ui/core/Fade';\nimport * as algo1 from \"../../Algorithms/algo1\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nfunction Sort(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [sort_by, set_sort_by] = React.useState(props.sort_by);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const handleradioChange = (event) => {\n        set_sort_by(event.target.value)\n        if(event.target.value==\"None\"){var val=\"Alphabetically\"}\n        else{var val=event.target.value}\n        props.Set_sort_by(val)\n        var temp_Models = algo1.sort(val, props.state_range, props.defualt_models, props.selected_year,props.grouped_by_year_data)[0];\n        var default_model_scores = algo1.sort(val, props.state_range, props.defualt_models, props.selected_year,props.grouped_by_year_data)[1];\n        props.Set_default_model_scores(default_model_scores)\n        props.Set_defualt_models(temp_Models)\n      };\n    return (\n        <div className=\"sort\" style={{borderRight:\"1px dashed #eaeaea\"}}>\n            <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Metrics <ArrowDropDownIcon></ArrowDropDownIcon></Button>\n            <Menu\n                id=\"fade-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\"></FormLabel>\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={sort_by} onChange={handleradioChange}>\n                    {['Discounted Cumulative Gain', 'Average Precision', 'None'].map((value) => {\n                        return <FormControlLabel value={value} control={<Radio />} label={value} />\n                    })}\n                </RadioGroup>\n            </FormControl>\n            </Menu>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        defualt_models: state.defualt_models,\n        sort_by:state.sort_by,\n        state_range: state.state_range,\n        selected_year: state.selected_year,\n        grouped_by_year_data:state.grouped_by_year_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_sort_by: (val) => dispatch({ type: \"sort_by\", value: val }),\n        Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Sort);\n//https://material-ui.com/components/menus/\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./TopBar.scss\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport * as d3 from 'd3';\nimport DefaultModels from './DefaultModels'\nimport Sort from './Sort'\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport * as algo1 from \"../../Algorithms/algo1\"\nconst useStyles = makeStyles((theme) => ({\n  MuiAutocompleteroot: {\n    marginTop: 0,\n  },\n  root: {\n    width: '100%',\n  },\n  listroot: {\n    width: '100%',\n    maxWidth: 360,\n  },\n  paper: {\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\nfunction TopBar(props) {\n  const classes = useStyles();\n  const handleyearChange = (event, value, reason) => {\n    if (reason == 'select-option') {\n      props.Set_selected_year(value)\n      var myfunc = props.appHandleChange\n      myfunc(value, \"year_changed\")\n    }\n  };\n  var handle_year_click = (year) => {\n    if(year==\"All\"){props.Set_selected_years([...props.years_for_dropdown])}\n    else{\n      if (props.selected_years.includes(year)) {\n        props.Set_selected_years(props.selected_years.filter(item=>item!=year))\n      }\n      else {\n        props.Set_selected_years([...props.selected_years,year])\n      }  \n    }\n  }\n  var handle_model_click=(model)=>{\n    if(model==\"All\"){props.Set_defualt_models([...props.all_models])}\n    else if(model==\"Average\"){props.Set_average_m(!props.average_m)}\n    else{\n      if (props.defualt_models.includes(model)) {\n        props.Set_defualt_models(props.defualt_models.filter(item=>item!=model))\n      }\n      else {\n        props.Set_defualt_models([...props.defualt_models,model])\n      }  \n    }\n  }\n  return (\n    <div>\n    <div><h5 style={{ display: \"inline-block\", marginLeft: 30 }}>Years:</h5>{props.years_for_dropdown.map(item => <p className={props.selected_years.includes(item) ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_year_click(item)}>{item}</p>)}<p className=\"years_p\" style={{ display: \"inline-block\"}} onClick={() => handle_year_click(\"All\")}>All</p> <p className=\"years_p\" style={{ display: \"inline-block\"}}>Average</p></div>\n    <div><h5 style={{ display: \"inline-block\", marginLeft: 30 }}>Models:</h5>{props.all_models.map(item => <p className={props.defualt_models.includes(item) ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}<p className=\"years_p\" style={{ display: \"inline-block\"}} onClick={() => handle_model_click(\"All\")}>All</p> <p className={props.average_m ? \"years_p_selected years_p\" : \"years_p\"} style={{ display: \"inline-block\"}} onClick={() => handle_model_click(\"Average\")}>Average</p></div>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    all_models:state.all_models,\n    selected_years: state.selected_years,\n    tracking: state.tracking,\n    selected_year: state.selected_year,\n    years_for_dropdown: state.years_for_dropdown,\n    defualt_models: state.defualt_models,\n    mode: state.mode,\n    prev_prop: state.prev_prop,\n    state_range: state.state_range,\n    replay: state.replay,\n    grouped_by_year_data: state.grouped_by_year_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    time_mode_range: state.time_mode_range,\n    mode: state.mode, // Model mode model\n    sort_by: state.sort_by,\n    average_m:state.average_m\n\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    add: (val) => dispatch({ type: \"add\", value: val }),\n    Set_selected_years: (val) => dispatch({ type: \"selected_years\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    set_tracking: (val) => dispatch({ type: \"tracking\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    Set_average_m: (val) => dispatch({ type: \"average_m\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(TopBar);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import * as d3 from 'd3';\nimport * as $ from \"jquery\"\nexport default function CreateChart(feature, data, node, feature_height, selected_year, handleHistogramselection, feature_data) {\n  var feature_width = $(\".Sidebar_parent\").width()\n  var svg = d3.select(node),\n    margin = { top: 30, right: 15, bottom: 20, left: 7 },\n    width = feature_width - margin.left - margin.right,\n    height = feature_height - margin.top - margin.bottom;\n  if (isNaN(data[0].y)) {\n    //-----------------------------------------------------------(handle the categorical features here)\n    var occur = {}\n    data.map(item => {\n      if (item.y in occur) {\n        occur[item.y] = occur[item.y] + 1\n      }\n      else {\n        occur[item.y] = 1\n      }\n    })\n    // Create items array\n    var items = Object.keys(occur).map(function (key) {\n      return [key, occur[key]];\n    });\n\n    // Sort the array based on the second element\n    items.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    //-----\n    var y = items.map(element => element[0]);\n    var x = items.map(element => element[1]);\n    var sum_x = d3.sum(x)\n    var cScale = d3.scaleSequential()\n      .interpolator(d3.interpolate(\"#999999b3\", \"#999999b3\"))\n      .domain([0, x.length]);\n    svg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", 15).attr(\"x\", width / 2).attr(\"text-anchor\", \"middle\").text(feature);\n    var g = svg.selectAll(\".g1\").data([0]).join(\"g\").attr(\"class\", \"g1\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    var svg1 = g.selectAll(\".svg1\").data([0]).join('svg').attr(\"class\", \"svg1\").attr('width', width).attr('height', height)\n    svg1.selectAll('rect').data(x).join(\"rect\")\n      .style('fill', (d, i) => cScale(i)).attr(\"height\", height)\n      .attr('width', (d, i) => {\n        return (((d / sum_x) * width) - .2)\n      })\n      .attr(\"x\", (d, i) => {\n        var temp_sum = d3.sum(x.slice(0, i))\n        return ((temp_sum / sum_x) * width)\n      })\n      .attr(\"id\", (d, i) => y[i])\n      .on(\"click\", (d, i) => {\n        d3.select(\"#\" + y[i]).classed(\"cat_item_clicked\", () => {\n          if (d3.select(\"#\" + y[i]).classed(\"cat_item_clicked\")) {\n\n            return false\n          }\n          else {\n            var statelist = cat_states(feature_data, selected_year, y[i])\n            handleHistogramselection(statelist, \"histogram_data\")\n            return true\n          }\n        })\n\n      }\n      )\n    //---\n    svg1.selectAll(\"text\").data(y, d => d).join(\"text\")\n      .text((d, i) => {\n        if (((x[i] / sum_x) * width) > 12) { return d }\n        else { return \"\" }\n      })\n      .attr(\"x\", (d, i) => {\n        var temp_sum = d3.sum(x.slice(0, i))\n        return ((temp_sum / sum_x) * width) + 8\n      })\n      .attr(\"y\", height / 2)\n      .style(\"font-size\", 9)\n      .style(\"writing-mode\", \"tb\")\n      .style(\"text-anchor\", \"middle\")\n    //-----------------------------------------------------------Barchart ends here\n  }\n  else {\n    //----------------------------------------------------------- Handle the Numeric features here)\n    svg.selectAll(\".hist_title\").data([feature], d => d).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", 15).attr(\"x\", width / 2).attr(\"text-anchor\", \"middle\").text(feature.replace(/_/g, ' '));\n\n    var temp_x = data.map(item => parseFloat(item['y'])),\n      x = d3.scaleLinear().domain([d3.min(temp_x), d3.max(temp_x)]).range([0, width]).nice(),\n      tick_values = x.ticks(4),\n      hist_height = height,\n      histogram = d3.histogram()\n        .value(d => d)   // I need to give the vector of value\n        .domain(x.domain())  // then the domain of the graphic\n        .thresholds(4); // then the numbers of bins\n    var bins = histogram(temp_x),\n      y_hist = d3.scaleLinear()\n        .range([hist_height, 0]);\n    y_hist.domain([0, d3.max(bins, function (d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\n    var svg0 = svg.selectAll('.svg0').data([0]).join('svg').attr(\"class\", \"svg0\").selectAll(\".myg0\").data([0]).join('g').attr(\"class\", \"myg0\").attr(\"transform\",\n      \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n    svg0.selectAll(\"rect\").data(bins).join('rect')\n      .attr(\"x\", 1)\n      .attr(\"fill\", \"#999999b3\")\n      .attr(\"transform\", function (d) {\n        if(d.x0==d.x1){return \"translate(\" + 0 + \",\" + y_hist(d.length) + \")\"}\n        return \"translate(\" + x(d.x0) + \",\" + y_hist(d.length) + \")\";\n      })\n      .attr(\"width\", function (d) { \n        if(d.x0==d.x1){return width}\n        return x(d.x1) - x(d.x0) - 0.2; })\n      .attr(\"height\", function (d) { return hist_height - y_hist(d.length); });\n    //-------Add text of bars\n    \n    svg0.selectAll(\".mylabel\").data(bins).join('text').attr(\"class\",\"mylabel\")\n      .attr(\"x\", d=>x(d.x0)+((x(d.x1)-x(d.x0))/3))\n      .text(d=>d.length)\n      .attr('y',d=> y_hist(d.length)-2)\n      .attr('font-size',10)\n  \n    //------------- Add X axis\n    if(d3.max(tick_values)>1000){\n      svg0.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n      .attr(\"transform\", \"translate(0,\" + hist_height + \")\")\n      .call(d3.axisBottom(x).tickValues(tick_values).tickFormat(d3.format(\".2s\")))\n    }\n    else{\n      svg0.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n      .attr(\"transform\", \"translate(0,\" + hist_height + \")\")\n      .call(d3.axisBottom(x).tickValues(tick_values))\n    }\n\n    svg0.selectAll(\".tick line,.domain\").attr(\"stroke\", \"#adadad\")\n\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here    \n    //---drag starts here\n    var selectionRect = {\n      element: null,\n      previousElement: null,\n      currentY: 0,\n      currentX: 0,\n      originX: 0,\n      originY: 0,\n      setElement: function (ele) {\n        this.previousElement = this.element;\n        this.element = ele;\n      },\n      getNewAttributes: function () {\n        var x = this.currentX < this.originX ? this.currentX : this.originX;\n        var y = this.currentY < this.originY ? this.currentY : this.originY;\n        var width = Math.abs(this.currentX - this.originX);\n        var height = Math.abs(this.currentY - this.originY);\n        return { x: x, y: y, width: width, height: height }; // returning the javascript object\n      },\n      getCurrentAttributes: function () {\n        // use plus sign to convert string into number\n        var x = +this.element.attr(\"x\");\n        var y = +this.element.attr(\"y\");\n        var width = +this.element.attr(\"width\");\n        var height = +this.element.attr(\"height\");\n        return { x1: x, y1: y, x2: x + width, y2: y + height }; // returning the javascript object\n      },\n      getCurrentAttributesAsText: function () {\n        var attrs = this.getCurrentAttributes();\n        return \"x1: \" + attrs.x1 + \" x2: \" + attrs.x2 + \" y1: \" + attrs.y1 + \" y2: \" + attrs.y2;\n      },\n      init: function (newX, newY) {\n        var rectElement = svg.append(\"rect\")\n          .attr('rx', 1).attr('ry', 1).attr(\"x\", 0).attr(\"y\", 0)\n          .attr('width', 0).attr('height', 0).classed(\"selection\", true);\n        this.setElement(rectElement);\n        this.originX = newX;\n        this.originY = newY;\n        this.update(newX, newY);\n      },\n      update: function (newX, newY) {\n        this.currentX = newX;\n        this.currentY = newY;\n        var NewAttr = this.getNewAttributes()\n        this.element.attr(\"x\", NewAttr.x).attr(\"y\", NewAttr.y)\n          .attr('width', NewAttr.width).attr('height', NewAttr.height)\n      },\n      focus: function () {\n        this.element\n          .style(\"stroke\", \"\")\n          .style(\"stroke-width\", \"1\");\n      },\n      remove: function () {\n        this.element.remove();\n        this.element = null;\n      },\n      removePrevious: function () {\n        if (this.previousElement) {\n          this.previousElement.remove();\n        }\n      }\n    };\n\n    //-----------------\n    function dragStart() {\n      var p = d3.mouse(this);\n      selectionRect.init(p[0], p[1]);\n      selectionRect.removePrevious();\n    }\n    function dragMove() {\n      var p = d3.mouse(this);\n      selectionRect.update(p[0], p[1]);\n    }\n    function dragEnd() {\n      var finalAttributes = selectionRect.getCurrentAttributes();\n      if (finalAttributes.x1 != finalAttributes.x2) {\n        var myx1 = finalAttributes.x1 - margin.left\n        var myx2 = finalAttributes.x2 - margin.left\n        var temp_range = [x.invert(myx1).toFixed(4), x.invert(myx2).toFixed(4)]\n        var statelist = states(feature_data, temp_range, selected_year, feature)\n        handleHistogramselection(statelist, \"histogram_data\")\n      }\n      if (finalAttributes.x2 - finalAttributes.x1 > 1 && finalAttributes.y2 - finalAttributes.y1 > 1) {\n        // range selected\n        d3.event.sourceEvent.preventDefault();\n        selectionRect.focus();\n      } else {\n        selectionRect.remove();\n      }\n    }\n    var dragBehavior = d3.drag()\n      .on(\"start\", dragStart)\n      .on(\"drag\", dragMove)\n      .on(\"end\", dragEnd);\n    svg.call(dragBehavior);\n    //---drag ends here\n  }\n  function states(original_data,range,year,feature){\n    var temp=[]\n    original_data.forEach(element => {\n      if(element[\"1-qid\"]==year && parseFloat(element[feature])>=range[0] && parseFloat(element[feature])<=range[1]){\n       temp.push(parseInt(element['two_realRank']))\n      }\n    });\n    return temp;\n  }\n  function cat_states(original_data,year,country){\n    var temp=[]\n    original_data.forEach(element => {\n      if(element[\"1-qid\"]==year && element[\"country\"]==country){\n       temp.push(parseInt(element['two_realRank']))\n      }\n    });\n    return temp;\n  }\n  //----------------------------------------------------------- Histogram creation ends here\n}\n\n//https://www.youtube.com/watch?v=N9nHQzboCUI","import React, { Component, PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport './Histogram.css';\nimport * as algo1 from \"../../Algorithms/algo1\";\nimport CreateChart from \"./Histogram\"\nimport exp_fiscal_CordAscent from \"../../Data/data/fiscal/lime/chart1_data.csv\";\nimport exp_school_CordAscent from \"../../Data/data/school/lime/chart1_data.csv\";\nimport exp_house_CordAscent from \"../../Data/data/house/lime/chart1_data.csv\";\nimport { connect } from 'react-redux'\nimport { Button } from '@material-ui/core';\nimport * as $ from \"jquery\"\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = { feaures_dict: {}, features_voted: null, feature_data: null, selected_states: [] } // This is the default height\n  }\n  componentDidMount() {\n    var self = this\n    var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent } else if (this.props.dataset == \"house\") { filename = exp_house_CordAscent }\n    d3.csv(filename).then(function (feature_data) {\n      self.setState({ feature_data: feature_data })\n    })\n  }\n  shouldComponentUpdate() {\n    return true;\n  }\n  componentDidUpdate() {\n    var self = this\n    var legend_data = this.makeArr(this.props.state_range);\n    //------\n    var height_between = 20\n    var feature_height = 260\n    var number_of_elements = (this.props.state_range[1] - this.props.state_range[0]) + (2 * this.props.deviate_by);\n    if (number_of_elements * height_between < 700) { height_between = 700 / number_of_elements }\n    var exp_chart_height = (number_of_elements * height_between);\n    var number_of_charts = Math.floor(exp_chart_height / feature_height) * 3\n    if(number_of_charts<9){number_of_charts=9}\n    //------\n    var features_dict = algo1.features_with_score(this.props.dataset, this.props.defualt_models, legend_data, this.props.selected_year,number_of_charts,this.props.rank_data)\n    var items = Object.keys(features_dict).map(function (key) {\n      return [key, features_dict[key]];\n    });\n    items.sort(function (first, second) { // Sort the array based on the second element\n      return second[1] - first[1];\n    });\n    items = items.map((element) => element[0])\n    //--------\n    var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent }\n    //--------------------------------Iterate through each features\n    if (this.state.feature_data != null) {\n      var feature_width=$(\".Sidebar_parent\").width()\n      var feature_height = 150; // Feature height for individual feature\n //--------------------------------------------- Iterate trough eact item and create histograms\n    items.forEach((feature, feature_index) => {\n        var feature_id = \"feature\"+feature.replace(/[^\\w\\s]/gi, '')\n        var temp = []\n        this.state.feature_data.forEach(element => {\n          if (element[\"1-qid\"] == self.props.selected_year) {\n            var temp_dict = {}\n            temp_dict[\"x\"] = parseInt(element['two_realRank'])\n            temp_dict[\"y\"] = element[feature]\n            temp.push(temp_dict)\n          }\n        });\n        d3.select(\"#histogram_container\").attr(\"height\", items.length * feature_height).selectAll(\"#\" + feature_id).data([feature_id], d => d).join(\"svg\").attr(\"id\", feature_id).attr(\"width\", feature_width)\n          .attr(\"x\", d => {\n            //--------------------------------------------- Create chart is imported from the Histogram.js and this is the function that creates all the histograms\n            CreateChart(feature, temp, \"#\" + feature_id, feature_height, self.props.selected_year, self.handleHistogramselection, self.state.feature_data)\n            return 0;\n          })\n          .attr(\"y\", (d, i) => feature_height * feature_index)\n      })\n    }\n  }\n  handleHistogramselection = (data, type) => {\n    \n    var temp = this.state.selected_states\n    data.forEach(element => {\n      if (!temp.includes(element)) { temp.push(element) }\n    });\n    this.setState({ selected_states: temp })\n  }\n  update_histogram_data = () => {\n    d3.selectAll(\".cat_item_clicked\").classed(\"cat_item_clicked\",false)\n    d3.selectAll(\".selection\").remove()\n    if(this.state.selected_states.length<1){alert(\"Empty selection!\");return}\n    var myfunc = this.props.appHandleChange\n    var filtered_states = this.state.selected_states.filter((item) => {\n      if (item >= this.props.state_range[0] && item <= this.props.state_range[1]) {\n        return item\n      }\n    })\n    if(filtered_states.length<1){alert(\"Empty Selection\")}\n    if (this.props.slider_and_feature_value[\"Feature\"] == 1 && this.props.slider_and_feature_value[\"Rank range\"] == 1) { // If rank range is selected then filter states within the range\n      this.props.Set_histogram_data(filtered_states)\n      myfunc(filtered_states, \"histogram_data\")\n    }\n    else {\n      this.props.Set_histogram_data(this.state.selected_states) // else set states as selected\n      myfunc(this.state.selected_states, \"histogram_data\")\n    }\n    this.setState({ selected_states: [] })\n  }\n  //-----------------------------------------------------------------\n  render() {\n    return (\n      <div>\n        <Button className=\"update\" style={{marginLeft:0,padding:0,width:197}} onClick={() => {\n          var self=this\n              if(!this.props.slider_and_feature_value[\"Rank range\"]){\n                if(d3.min(this.state.selected_states)<this.props.state_range[0]){\n                  this.props.Set_state_range([d3.min(this.state.selected_states),this.props.state_range[1]])\n                }\n                if(d3.max(this.state.selected_states)>this.props.state_range[1]){\n                  this.props.Set_state_range([this.props.state_range[0],d3.max(this.state.selected_states)])\n                }\n              }\n              setTimeout(function(){ self.update_histogram_data(); }, 500);\n          }}\n          >Update</Button>\n        <div className=\"hitograms_container\">\n        <svg id=\"histogram_container\" style={{ width: this.props.width }}></svg>\n        </div>\n      </div>\n    );\n  }\n  makeArr = (state_range) => {\n    var startValue = state_range[0];\n    var stopValue = state_range[1];\n    var arr = [];\n    for (var i = startValue; i <= stopValue; i++) {\n      arr.push(i);\n    }\n    return arr;\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n    defualt_models: state.defualt_models,\n    dataset: state.dataset,\n    selected_year: state.selected_year,\n    slider_and_feature_value: state.slider_and_feature_value,\n    deviate_by:state.deviate_by,\n    rank_data:state.rank_data\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\nimport { connect } from 'react-redux'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nfunction Tracking(props) {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"baseline\"\n    >\n      <FormControlLabel\n        labelPlacement=\"start\"\n        control={\n          <Checkbox\n            checked={props.tracking}\n            onChange={(event) => props.set_tracking(event.target.checked)}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Tracking\"\n      />\n    </Grid>\n  );\n}\n\nconst maptstateToprop = (state) => {\n  return {\n    tracking: state.tracking,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    set_tracking: (val) => dispatch({ type: \"tracking\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Tracking);\n//https://material-ui.com/components/menus/\n","import React from 'react';\nimport \"./Sidebar.scss\";\nimport * as $ from 'jquery';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport Histograms from \"./Histograms\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport Tracking from \"./Tracking\"\nimport * as algo1 from \"../../Algorithms/algo1\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.state_range);\n    const [range_mode_slider_value1, set_range_mode_slider_value1] = React.useState(props.range_mode_range1);\n    const [range_mode_slider_value2, set_range_mode_slider_value2] = React.useState(props.range_mode_range2);\n    const [time_mode_slider_value, set_time_mode_slider_value] = React.useState(props.time_mode_range);\n    const [dummy, set_dummy] = React.useState(0);\n\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div style={{ borderTop: \"1px solid #eaeaea\" }}>\n            <p className=\"title_show\" style={{ marginBottom: 8 }}>Compare:</p>\n            <Autocomplete className=\"autocomplete_mode\" style={{ border: \"1px solid grey\", borderRadius: 0, paddingTop: 0, paddingBottom: 0, marginLeft: 5, marginRight: 30, width: $('.Sidebar').width() - 10 }}\n                defaultValue={\"Models\"}\n                id=\"debug\"\n                debug\n                options={[\"Models\", \"Ranges\", \"Time\"]}\n                renderInput={(params) => (\n                    <TextField {...params} label=\"\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                )}\n                onChange={(event, val) => {\n                    var value = val.replace('s', \"\")\n                    props.Set_mode(value)\n                    props.Set_clicked_items_in_slopechart([])\n                }\n                }\n            />\n            {props.mode == \"Model\" ? <div style={{ marginTop: 10, paddingLeft: 5, width: $('.Sidebar').width() }}>\n                <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                <div key={props.slider_and_feature_value} className=\"slider_feature_container\">\n                    <List className={classes.listroot}>\n                        {['Rank range', 'Feature'].map((value) => {\n                            const labelId = `checkbox-list-label-${value}`;\n                            return (\n                                <div className=\"listItem\"><ListItem key={value} role={undefined} >\n                                    <Checkbox\n                                        checked={props.slider_and_feature_value[value]}\n                                        edge=\"start\"\n                                        tabIndex={-1}\n                                        value={value}\n                                        onChange={(event) => {\n                                            var temp_val = props.slider_and_feature_value\n                                            if (props.slider_and_feature_value[event.target.value]) { temp_val[event.target.value] = 0 }\n                                            else { temp_val[event.target.value] = 1 }\n                                            set_dummy(JSON.stringify(temp_val)) // This is to change the state so that the component is updated\n                                            //console.log(\"dummy\",dummy)\n                                            props.Set_slider_and_feature_value(temp_val)\n                                        }}\n                                    />\n                                    <p className=\"list_item_label\" id={labelId}>{value}</p>\n                                </ListItem>\n                                </div>\n                            );\n                        })}\n                    </List>\n                </div>\n                {props.slider_and_feature_value[\"Rank range\"] == 1 ?\n                    <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                        <Slider\n                            value={sliderRange}\n                            onChange={(event, newValue) => set_sliderRange(newValue)}\n                            onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                            valueLabelDisplay=\"auto\"\n                            aria-labelledby=\"range-slider\"\n                            valueLabelDisplay=\"on\"\n                            min={1}\n                            max={props.slider_max}\n                            marks={marks}\n                        />\n                        <Grid style={{ marginBottom: 15 }} container\n                            direction=\"row\"\n                            justify=\"space-around\"\n                            alignItems=\"center\">\n                            <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: 40 }}\n                                onChange={event => {\n                                    if (isNaN(parseInt(event.target.value))) {\n                                        set_sliderRange([\"\", sliderRange[1]])\n                                    } else {\n                                        if (event.target.value > sliderRange[1]) {\n                                            alert(\"Lower range can not be larger than the upper range\")\n                                        }\n                                        else {\n                                            set_sliderRange([event.target.value, sliderRange[1]])\n                                        }\n                                    }\n                                }\n                                }\n                            />\n                            <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: 40 }}\n                                onChange={event => {\n                                    if (isNaN(parseInt(event.target.value))) {\n                                        set_sliderRange([sliderRange[0], \"\"])\n                                    } else {\n                                        if (parseInt(event.target.value) > props.slider_max) {\n                                            alert(\"Upper range can not exceed maximum\")\n                                            set_sliderRange([sliderRange[0], props.slider_max])\n                                        }\n                                        else {\n                                            set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                                        }\n                                    }\n                                }\n                                }\n                            />\n                        </Grid>\n                        <Tracking></Tracking>\n                        <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                            onClick={() =>{\n                                props.Set_state_range(sliderRange)\n                                var temp_Models = algo1.sort(props.sort_by, sliderRange, props.defualt_models,props.selected_year, props.grouped_by_year_data)[0];\n                                var default_model_scores = algo1.sort(props.sort_by, sliderRange, props.defualt_models,props.selected_year, props.grouped_by_year_data)[1];\n                                props.Set_default_model_scores(default_model_scores)\n                                props.Set_defualt_models([...temp_Models])\n                                \n                            }}\n                        >Update range</Button>\n                    </div> : null}\n                {props.slider_and_feature_value[\"Feature\"] == 1 ?\n                    <div>\n                        <div>\n                            <Histograms\n                                year={props.selected_year.toString()} state_range={props.state_range}\n                                Sidebar_width={$('.Sidebar').width()} appHandleChange={props.appHandleChange}>\n                            </Histograms>\n                        </div>\n                    </div> : null\n                }\n            </div> : null}\n            {props.mode == \"Range\" ? <div style={{ marginTop: 10, paddingLeft: 5, width: $('.Sidebar').width() }}>\n                <div className=\"range_model\">\n\n                    <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                </div>\n                <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                    <Typography classes={{ root: classes.tRoot }}>\n                        Group 1\n                        </Typography>\n                    <Slider\n                        value={range_mode_slider_value1}\n                        onChange={(event, newValue) => set_range_mode_slider_value1(newValue)}\n                        onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"on\"\n                        min={1}\n                        max={props.slider_max}\n                        marks={marks}\n                    />\n                    <Grid style={{ marginBottom: 15 }} container\n                        direction=\"row\"\n                        justify=\"space-around\"\n                        alignItems=\"center\">\n                        <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={range_mode_slider_value1[0]} style={{ width: 40 }}\n                            onChange={event => {\n                                if (isNaN(parseInt(event.target.value))) {\n                                    set_range_mode_slider_value1([\"\", range_mode_slider_value1[1]])\n                                } else {\n                                    if (event.target.value > range_mode_slider_value1[1]) {\n                                        alert(\"Lower range can not be larger than the upper range\")\n                                    }\n                                    else {\n                                        set_range_mode_slider_value1([event.target.value, range_mode_slider_value1[1]])\n                                    }\n                                }\n                            }\n                            }\n                        />\n                        <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={range_mode_slider_value1[1]} style={{ width: 40 }}\n                            onChange={event => {\n                                if (isNaN(parseInt(event.target.value))) {\n                                    set_range_mode_slider_value1([range_mode_slider_value1[0], \"\"])\n                                } else {\n                                    if (parseInt(event.target.value) > props.slider_max) {\n                                        alert(\"Upper range can not exceed maximum\")\n                                        set_range_mode_slider_value1([range_mode_slider_value1[0], props.slider_max])\n                                    }\n                                    else {\n                                        set_range_mode_slider_value1([range_mode_slider_value1[0], parseInt(event.target.value)])\n                                    }\n                                }\n                            }\n                            }\n                        />\n                    </Grid>\n                    <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                        onClick={() => props.Set_range_mode_range1(range_mode_slider_value1)}\n                    >Update range</Button>\n                </div>\n                <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                    <Typography classes={{ root: classes.tRoot }}>\n                        Group 2\n                        </Typography>\n                    <Slider\n                        value={range_mode_slider_value2}\n                        onChange={(event, newValue) => set_range_mode_slider_value2(newValue)}\n                        onChangeCommitted={(event, newValue) => { props.Set_changed(\"range\") }}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"on\"\n                        min={1}\n                        max={props.slider_max}\n                        marks={marks}\n                    />\n                </div>\n                <Grid style={{ marginBottom: 15 }} container\n                    direction=\"row\"\n                    justify=\"space-around\"\n                    alignItems=\"center\">\n                    <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={range_mode_slider_value2[0]} style={{ width: 40 }}\n                        onChange={event => {\n                            if (isNaN(parseInt(event.target.value))) {\n                                set_range_mode_slider_value2([\"\", range_mode_slider_value2[1]])\n                            } else {\n                                if (event.target.value > range_mode_slider_value2[1]) {\n                                    alert(\"Lower range can not be larger than the upper range\")\n                                }\n                                else {\n                                    set_range_mode_slider_value2([event.target.value, range_mode_slider_value2[1]])\n                                }\n                            }\n                        }\n                        }\n                    />\n                    <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={range_mode_slider_value2[1]} style={{ width: 40 }}\n                        onChange={event => {\n                            if (isNaN(parseInt(event.target.value))) {\n                                set_range_mode_slider_value2([range_mode_slider_value2[0], \"\"])\n                            } else {\n                                if (parseInt(event.target.value) > props.slider_max) {\n                                    alert(\"Upper range can not exceed maximum\")\n                                    set_range_mode_slider_value2([range_mode_slider_value2[0], props.slider_max])\n                                }\n                                else {\n                                    set_range_mode_slider_value2([range_mode_slider_value2[0], parseInt(event.target.value)])\n                                }\n                            }\n                        }\n                        }\n                    />\n                </Grid>\n                <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: 0 }}\n                    onClick={() => props.Set_range_mode_range2(range_mode_slider_value2)}\n                >Update range</Button>\n\n            </div> : null}\n            {props.mode == \"Time\" ?\n                <div style={{ marginTop: 10, paddingLeft: 5, marginBottom: 10, width: $('.Sidebar').width() }}>\n                    <div className=\"model\">\n                        <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                        <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                            <Slider\n                                value={time_mode_slider_value}\n                                onChange={(event, newValue) => set_time_mode_slider_value(newValue)}\n                                onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                                valueLabelDisplay=\"auto\"\n                                aria-labelledby=\"range-slider\"\n                                valueLabelDisplay=\"on\"\n                                min={1}\n                                max={props.slider_max}\n                                marks={marks}\n                            />\n                            <Grid style={{ marginBottom: 15 }} container\n                                direction=\"row\"\n                                justify=\"space-around\"\n                                alignItems=\"center\">\n                                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={time_mode_slider_value[0]} style={{ width: 40 }}\n                                    onChange={event => {\n                                        if (isNaN(parseInt(event.target.value))) {\n                                            set_time_mode_slider_value([\"\", time_mode_slider_value[1]])\n                                        } else {\n                                            if (event.target.value > time_mode_slider_value[1]) {\n                                                alert(\"Lower range can not be larger than the upper range\")\n                                            }\n                                            else {\n                                                set_time_mode_slider_value([event.target.value, time_mode_slider_value[1]])\n                                            }\n                                        }\n                                    }\n                                    }\n                                />\n                                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={time_mode_slider_value[1]} style={{ width: 40 }}\n                                    onChange={event => {\n                                        if (isNaN(parseInt(event.target.value))) {\n                                            set_time_mode_slider_value([time_mode_slider_value[0], \"\"])\n                                        } else {\n                                            if (parseInt(event.target.value) > props.slider_max) {\n                                                alert(\"Upper range can not exceed maximum\")\n                                                set_time_mode_slider_value([time_mode_slider_value[0], props.slider_max])\n                                            }\n                                            else {\n                                                set_time_mode_slider_value([time_mode_slider_value[0], parseInt(event.target.value)])\n                                            }\n                                        }\n                                    }\n                                    }\n                                />\n                            </Grid>\n                            <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                                onClick={() => props.Set_time_mode_range(time_mode_slider_value)}\n                            >Update range</Button>\n                        </div>\n                        <div className=\"year\">\n                            <Autocomplete className={{ root: classes.MuiAutocompleteroot }}\n                                defaultValue={props.time_mode_year1.toString()}\n                                id=\"debug\"\n                                debug\n                                options={props.years_for_dropdown.map((option) => option)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Year 1\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                                )}\n                                onChange={(event, value) => {\n                                    props.Set_time_mode_year1(value)\n                                    props.Set_changed(\"year\")\n                                }}\n                            />\n                        </div>\n                        <div className=\"year\">\n                            <Autocomplete className={{ root: classes.MuiAutocompleteroot }}\n                                defaultValue={props.time_mode_year2.toString()}\n                                id=\"debug\"\n                                debug\n                                options={props.years_for_dropdown.map((option) => option)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Year 2\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                                )}\n                                onChange={(event, value) => {\n                                    props.Set_time_mode_year2(value)\n                                    props.Set_changed(\"year\")\n                                }}\n                            />\n                        </div>\n                    </div></div> : null}\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        selected_year: state.selected_year,\n        state_range: state.state_range,\n        mode: state.mode, // Model mode model\n        slider_max: state.slider_max,\n        range_mode_model: state.range_mode_model, // Range mode model\n        range_mode_range1: state.range_mode_range1,\n        range_mode_range2: state.range_mode_range2,\n        time_mode_model: state.time_mode_model, // Time mode model\n        time_mode_range: state.time_mode_range,\n        time_mode_year1: state.time_mode_year1,\n        time_mode_year2: state.time_mode_year2,\n        years_for_dropdown: state.years_for_dropdown,\n        dataset: state.dataset,\n        defualt_models: state.defualt_models,\n        slider_and_feature_value: state.slider_and_feature_value,\n        sort_by: state.sort_by,\n        grouped_by_year_data: state.grouped_by_year_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n        Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n        Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n        Set_range_mode_model: (val) => dispatch({ type: \"range_mode_model\", value: val }),\n        Set_time_mode_model: (val) => dispatch({ type: \"time_mode_model\", value: val }),\n        Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n        Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n        Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n        Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n        Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n        Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n        Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\n        Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n        Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n        Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./Sidebar.scss\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from \"react-redux\";\nimport Modes from \"./Modes\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  listroot: {\n    width: '100%',\n    maxWidth: 360,\n  },\n  paper: {\n\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction Sidebar(props) {\n  const classes = useStyles();\n  //------------For list and chckbox\n  const [checked, setChecked] = React.useState([0]);\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  const inputchanged = (event) => {\n    var val = parseInt(event.target.value)\n    if (val > -1) {\n      setTimeout(function () {\n        props.Set_deviate_by(val)\n      }, 100);\n\n    }\n  }\n  const show_checkboxChanged = (event,val) => {\n    var myfunc = props.appHandleChange\n    myfunc(val, \"show_checkboxChanged\")\n  }\n  return (\n    <div className=\"Sidebar_parent\" style={{height:window.innerHeight}}>\n      <h4 className=\"app_title\">RIEVAL </h4>\n      {props.view_data==1?\n      <div className=\"rangeSlidercontainer\">\n        <Modes appHandleChange={props.appHandleChange} ></Modes>\n        <div className=\"deviation\" style={{marginLeft:5, borderTop:\"0px solid #eaeaea\"}}>\n          <p className=\"title_show\">Margin:</p>\n          <TextField\n            id=\"outlined-size-normal\"\n            defaultValue={props.deviate_by}\n            variant=\"filled\"\n            color=\"primary\"\n            onChange={(event) => inputchanged(event)}\n            fullWidth={false}\n            style={{height:24}}\n          />\n        </div>\n        <div className=\"show\">\n          <p className=\"title_show\">Show:</p>\n          <List className={classes.listroot}>\n            {['Rankings', 'Explanation'].map((value) => {\n              const labelId = `checkbox-list-label-${value}`;\n              return (\n                <ListItem key={value} role={undefined} onClick={handleToggle(value)}>\n                  <Checkbox\n                    checked={props.show.includes(value)}\n                    edge=\"start\"\n                    tabIndex={-1}\n                    value={value}\n                    onChange={(event, value) => {\n                      var temp_show=[...props.show]\n                      if(temp_show.includes(event.target.value) && event.target.value!=\"Rankings\"){\n                        temp_show=temp_show.filter(item=>item!=event.target.value)\n                      }\n                      else{\n                        temp_show.push(event.target.value)\n                      }\n                      props.Set_show(temp_show)\n                    }\n                  }\n                  />\n                  <p className=\"list_item_label\" id={labelId}>{value}</p>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      </div>:null}\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    deviate_by:state.deviate_by,\n    state_range:state.state_range,\n    defualt_models:state.defualt_models,\n    selected_year:state.selected_year,\n    sparkline_data:state.sparkline_data,\n    show:state.show,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_deviate_by:(val) => dispatch({ type: \"deviate_by\", value: val }),\n    Set_show:(val)=>dispatch({type:\"show\",value:val}),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Sidebar);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import React, { Component } from 'react';\n//------------------------------------------------All datasets imports\nimport fiscal from \"./Data/fiscal.csv\";\nimport school from \"./Data/school.csv\";\nimport house from \"./Data/house.csv\";\n\nimport fiscal_rank from \"./Data/data/fiscal/lime/fiscal_rank.csv\";\nimport fiscal_lime from \"./Data/data/fiscal/lime/fiscal_lime.csv\";\n\nimport school_rank from \"./Data/data/school/lime/school_rank.csv\";\nimport school_lime from \"./Data/data/school/lime/school_lime.csv\";\n\nimport house_rank from \"./Data/data/house/lime/house_rank.csv\";\nimport house_lime from \"./Data/data/house/lime/house_lime.csv\";\n//import fiscal from \"./Data/data/fiscal/lime/fiscal.json\";\n//import house from \"../Data/data/house/lime/house.json\";\n//------------------------------------------------All datasets imports ends here\nimport \"./App.scss\";\nimport * as d3 from 'd3';\nimport * as algo1 from \"./Algorithms/algo1\";\nimport ModelChart from \"./components/Charts/Model/ModelChart\"\nimport RangeChart from \"./components/Charts/Range/RangeChart\"\nimport YearChart from \"./components/Charts/Time/YearChart\"\nimport TopBar from \"./components/TopBar/TopBar\"\nimport { Row, Col } from 'reactstrap';\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport * as $ from 'jquery';\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport \"./components/Charts/Charts.css\"\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // mydata is original data\n    this.state = {\n      random: 10,\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",\n    };\n  }\n  handleradioChange = (event) => {\n    this.setState({ show: [\"Slope charts\", \"Rankings\", \"Explanation\"] })\n    this.props.Set_slider_and_feature_value({ 'Rank range': 1, 'Feature': 0 })\n    this.props.Set_clicked_items_in_slopechart([])\n    this.props.Set_state_range([1, 15])\n    this.props.Set_histogram_data([])\n    this.props.Set_mode(\"Model\")\n    this.props.Set_range_mode_range1([5, 35])\n    this.props.Set_range_mode_range2([15, 35])\n    this.props.Set_time_mode_range([5, 35])\n    if (event.target.value == 'Fiscal Dataset') {\n      this.setState({ dataset: 'fiscal' })\n      this.props.Set_dataset('fiscal')\n      this.dataprocessor(\"fiscal\")\n    }\n    else if (event.target.value == 'House Dataset') {\n      this.setState({ dataset: 'house' })\n      this.props.Set_dataset('house')\n      this.dataprocessor(\"house\")\n    }\n    else {\n      this.setState({ dataset: 'school' })\n      this.props.Set_dataset('school')\n      this.dataprocessor(\"school\")\n    }\n  };\n\n  task2 = () => {\n    if (this.props.clicked_items_in_slopechart.length > 0) {\n      d3.selectAll('circle,.datapoint').attr('opacity', this.props.config.reduced_opacity)\n    }\n    this.props.clicked_items_in_slopechart.map(idName => d3.selectAll('#' + idName).attr('opacity', 1))\n  }\n\n  textClickHandler_original = (state_name) => { // state_name is set as the id of each element\n    var idName = state_name.replace(/ +/g, \"\")\n\n    //----Whatever properties are changed due to click change back here for the original \n    d3.selectAll('#' + idName).filter(d3.matcher('line')).style('stroke-width', 1)\n    //----Whatever properties are changed due to click change back here for the original\n\n    //-----Store the clicked items\n    var clicked_items_in_slopechart = [...this.props.clicked_items_in_slopechart]\n    if (clicked_items_in_slopechart.includes(idName)) {\n      clicked_items_in_slopechart = clicked_items_in_slopechart.filter(element => element != idName)\n    }\n    else { clicked_items_in_slopechart.push(idName) }\n    this.props.Set_clicked_items_in_slopechart(clicked_items_in_slopechart)\n    //-----Store the clicked items ends here\n\n    if (clicked_items_in_slopechart.length > 0) {\n      d3.selectAll('circle,.datapoint').attr('opacity', this.props.config.reduced_opacity)\n      this.props.clicked_items_in_slopechart.map(idName => {\n        d3.selectAll('#' + idName).attr('opacity', 1)\n        d3.selectAll('#' + idName).filter(d3.matcher('line')).style('stroke-width', 3)\n      })\n    }\n    else {\n      d3.selectAll('circle,.datapoint').attr('opacity', 1)\n    }\n\n    //d3.selectAll('.line1,.line2').attr('opacity',1)\n  }\n\n  //--------- data processor processes data for initial render\n  dataprocessor = (dataset_name) => {\n    if (dataset_name == \"school\") { this.process_data(school, school_rank, school_lime, dataset_name) }\n    if (dataset_name == \"fiscal\") { this.process_data(fiscal, fiscal_rank, fiscal_lime, dataset_name) }\n    if (dataset_name == \"house\") { this.process_data(house, house_rank, house_lime, dataset_name) }\n  }\n  process_data = (slopechart_data_filename, rank_data_filename, lime_data_filename, dataset_name) => {\n    var self = this\n    //-------------\n    d3.csv(slopechart_data_filename).then(original_data => {\n\n      var grouped_by_year_data = algo1.groupby_year(original_data).years\n      var sparkline_data = algo1.groupby_year(original_data).sparkline_data\n      var years_for_dropdown = Object.keys(grouped_by_year_data)\n      self.props.Set_sparkline_data(sparkline_data)\n      self.props.Set_slider_max(grouped_by_year_data[years_for_dropdown[0]].length)\n      self.setState({ years_for_dropdown: years_for_dropdown })\n      self.props.Set_years_for_dropdown(years_for_dropdown)\n      self.props.Set_time_mode_year1(years_for_dropdown[0])\n      self.props.Set_time_mode_year2(years_for_dropdown[1])\n      self.props.Set_legend_year(years_for_dropdown[0])\n      self.setState({ ref_year: years_for_dropdown[0] })\n      self.props.Set_grouped_by_year_data(grouped_by_year_data)\n      self.setState({ grouped_by_year_data: grouped_by_year_data }, () => {\n        self.appHandleChange(original_data, \"original\");\n      })\n      self.setState({ original_data: original_data })\n      self.props.Set_original_data(original_data)\n      if (dataset_name == 'fiscal') {\n        self.props.Set_selected_year(\"2011\")\n        var all_models = [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"ListNet\", \"RankBoost\", \"RankNet\"]\n        var temp_Models = algo1.sort(this.props.sort_by, this.props.state_range, all_models, \"2011\", grouped_by_year_data)[0];\n        var default_model_scores = algo1.sort(this.props.sort_by, this.props.state_range, all_models, \"2011\", grouped_by_year_data)[1];\n      }\n      else {\n        self.props.Set_selected_year(\"2016\")\n        var all_models = [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"ListNet\", \"RankBoost\", \"RankNet\"]\n        var temp_Models = algo1.sort(this.props.sort_by, this.props.state_range, all_models, \"2016\", grouped_by_year_data)[0];\n        var default_model_scores = algo1.sort(this.props.sort_by, this.props.state_range, all_models, \"2016\", grouped_by_year_data)[1];\n      }\n      this.props.Set_default_model_scores(default_model_scores)\n      this.props.Set_defualt_models(temp_Models.slice(1, 3))\n      this.props.Set_pop_over_models(temp_Models.slice(1, 3))\n\n    })\n    //-------------\n    d3.csv(rank_data_filename).then(data => {\n      var nested_data = {}\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\n        nested_data[item.key] = item.values\n      })\n      self.props.Set_rank_data(nested_data)\n    })\n    //-------------\n    d3.csv(lime_data_filename).then(data => {\n      var nested_data = {}\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\n        nested_data[item.key] = item.values\n      })\n      self.props.Set_lime_data(nested_data)\n    })\n\n  }\n  //---------\n  appHandleChange = (data, type) => { // get the resopnses from Sidebar\n    this.setState({ features_dict: {} })\n    var temp_Models = this.props.defualt_models\n    var temp_show = this.state.show\n    var year = this.props.selected_year\n    if (type == 'year_changed') { this.props.Set_selected_year(data) } // This is called when circles on the sparklines are clicked\n    if (type == 'original') { var original_data = data } else { original_data = this.props.original_data }\n    //-----------------Handle show changes here\n    if (type == \"show_checkboxChanged\") {\n      if (temp_show.includes(data)) { temp_show = temp_show.filter(element => element != data) }\n      else { temp_show.push(data) }\n      this.setState({ show: temp_show })\n    }\n    temp_Models = algo1.sort(this.props.sort_by, this.props.state_range, temp_Models, this.props.selected_year, this.state.grouped_by_year_data)[0];\n    this.setState({ defualt_models: temp_Models })\n    //--------------------------------------------------------------------------------------------------------------All types are handled here end\n    var prev_year;\n    if (parseInt(year) == this.state.years_for_dropdown[0]) { prev_year = parseInt(year) } else { prev_year = parseInt(year) - 1 }\n\n  }\n\n  buttonclickHandler = (value, type) => {\n    setTimeout(() => { this.setState({ random: Math.random() }) }, 500);\n    type = \"button\" ? this.setState({ view_data: value }) : null\n    type = \"form\" ? this.setState({ view_data: value }) : null\n  }\n  //-----------------Models are generated ends here\n  componentDidMount() {\n    this.dataprocessor(\"fiscal\")\n  }\n  shouldComponentUpdate() {\n    return true;\n  }\n  render() {\n    return (\n      <div key={this.state.random}>\n\n        <Row>\n          <div style={{ width: 207 }} className=\"Sidebar\">\n            {this.props.selected_year != null ?\n              <Sidebar view_data={this.state.view_data} appHandleChange={this.appHandleChange}\n                dataset={this.props.dataset} sort_by={this.props.sort_by} chart_scale_type={this.props.chart_scale_type}>\n              </Sidebar> : null}\n          </div>\n          <Col style={{ width: window.innerWidth - 200, minHeight: window.innerHeight }} className=\"container_header_and_components\">\n            <div className=\"uploader_topbar\">\n              <Grid container spacing={0} className=\"myheader\" style={{ left: $('.Sidebar').width() }}>\n                <Grid item style={{ borderRight: \"1px dashed #eaeaea\", width: 100 }}><Button onClick={() => this.buttonclickHandler(1, \"button\")}>View Data</Button></Grid>\n                <Grid item style={{ borderRight: \"1px dashed #eaeaea\", width: 120 }}><Button onClick={() => this.buttonclickHandler(0, \"button\")}>Load Data</Button></Grid>\n              </Grid>\n              {this.state.view_data == false ?\n                <Row className=\"Topbar_container\">\n                  <div className=\"load\">\n                    <form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\n                      <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\"></FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={this.handleradioChange}>\n                          {['Fiscal Dataset', 'School Dataset'].map((value) => {\n                            return <FormControlLabel value={value} control={<Radio />} label={value} />\n                          })}\n                        </RadioGroup>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Load</Button>\n                      </FormControl>\n                    </form>\n                  </div></Row>\n                : null}\n              {this.state.view_data == true ? <Row className=\"Topbar_container\"><TopBar key={this.props.selected_year} appHandleChange={this.appHandleChange} tracking={this.props.tracking}></TopBar></Row> : null}\n            </div>\n            {this.state.view_data == true ?\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\n                <Grid container spacing={0} direction=\"row\" justify=\"space-evenly\" className=\"slopechart_container\" style={{ height: this.props.mode == \"Time\" ? window.innerHeight - $('.myheader').height() - 5 : window.innerHeight - $('.uploader_topbar').height() - 5, marginLeft: 5, width: window.innerWidth - ($('.Sidebar_parent').width() + $('.legend').width() + 15) }}>\n                  {this.props.mode == \"Model\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <ModelChart></ModelChart> : null}\n                  {this.props.mode == \"Range\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <RangeChart></RangeChart> : null}\n                  {this.props.mode == \"Time\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <YearChart></YearChart> : null}\n                </Grid>\n              </Grid> : null}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n  makeArr = () => {\n    var startValue = this.props.state_range[0];\n    var stopValue = this.props.state_range[1];\n    var arr = [];\n    for (var i = startValue; i <= stopValue; i++) {\n      arr.push(i);\n    }\n    //hi\n    return arr;\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    tracking: state.tracking,\n    state_range: state.state_range,\n    deviate_by: state.deviate_by,\n    defualt_models: state.defualt_models,\n    sparkline_data: state.sparkline_data,\n    selected_year: state.selected_year,\n    mode: state.mode,\n    range_mode_model: state.range_mode_model,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sort_by: state.sort_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    popup_chart_data: state.popup_chart_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    config: state.config,\n    lime_data: state.lime_data,\n    rank_data: state.rank_data,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_dataset: (val) => dispatch({ type: \"dataset\", value: val }),\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: parseInt(val) }),\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\n    Set_grouped_by_year_data: (val) => dispatch({ type: \"grouped_by_year_data\", value: val }),\n    Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\n\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n    Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n    Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n\n    Set_rank_data: (val) => dispatch({ type: \"rank_data\", value: val }),\n    Set_lime_data: (val) => dispatch({ type: \"lime_data\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","let initialState = {\n   anim_config: {rank_animation:3000,deviation_animation:3000,feature_animation:3000,circle_animation:3000},\n   appHandleChange: null,\n   sparkline_data: null,\n   sort_by: \"Average Precision\",\n   original_data: null,\n   rank_data: null,\n   lime_data: null,\n   grouped_by_year_data: null,\n   slope_chart_ready_to_vis: null,\n   defualt_models: [\"MART\", \"LinearReg\"], // Change the pop_over_models as well\n   state_range: [1, 25], // Change in handleradioChange\n   deviate_by: 0,\n   show: [\n      \"Slope charts\", \"Rankings\", \"Explanation\" // change in app.js\n   ],\n   years_for_dropdown: [\n      \"2006\"\n   ],\n   selected_year: 2006,\n   selected_years: [\"2006\"],\n   slider_min: 1,\n   slider_max: 50,\n   view_data: 1,\n   dataset: \"fiscal\", // change in componentDidmount in app.js too\n   histogram_data: [],\n   chart_scale_type: \"true\",\n   features_with_score: null,\n   ref_year: null,\n   cmodel: \"CordAscent\",\n   clicked_items_in_slopechart: [],\n   tracking: false,\n   dummy: null,\n   features_dict: {},\n   features_voted: null,\n   Legend_ready_to_vis: null,\n   legend_model: \"CordAscent\",\n   legend_show_option: \"Rank\",\n   legend_year: 2012,\n   mode: \"Model\",\n   range_mode_model: \"CordAscent\",\n   range_mode_range1: [1, 25],\n   range_mode_range2: [15, 40],\n   time_mode_model: \"CordAscent\",\n   time_mode_year1: \"Null\",\n   time_mode_year2: \"Null\",\n   time_mode_range: [6, 32],\n   chart_scale_type: \"true\",\n   slider_and_feature_value: { 'Rank range': 1, 'Feature': 0 },\n   prev_prop: {},\n   replay: false,\n   changed: \"year\",\n   popup_chart_data: null,\n   pop_over: true,\n   pop_over_models: [\"MART\", \"LinearReg\"],\n   clicked_features: [],\n   drag_drop_feautre_data: {},\n   dbclicked_features: [],\n   default_model_scores: {},\n   all_models: [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"RankBoost\", \"RankNet\"],\n   average_y: false,\n   average_m: false,\n   clicked_circles:[]\n}\n//---InitialState ends here\nconst reducer = (state = initialState, action) => {\n   if (action.type === \"clicked_circles\") {\n      //console.log(action.value)\n      return { ...state, clicked_circles: action.value }\n   }\n   if (action.type === \"average_y\") {\n      console.log(action.value)\n      return { ...state, average_y: action.value }\n   }\n   if (action.type === \"average_m\") {\n      console.log(action.value)\n      return { ...state, average_m: action.value }\n   } \n   if (action.type === \"selected_years\") {\n      console.log(action.value)\n      return { ...state, selected_years: action.value[action.value.length-1],selected_year:action.value[action.value.length-1] }\n   }\n   if (action.type === \"default_model_scores\") {\n      //console.log(action.value)\n      return { ...state, default_model_scores: action.value }\n   }\n   if (action.type === \"dbclicked_features\") {\n      return { ...state, dbclicked_features: action.value }\n   }\n   if (action.type === \"drag_drop_feautre_data\") {\n      return { ...state, drag_drop_feautre_data: action.value }\n   }\n   if (action.type === \"anim_config\") {\n      return { ...state, config: action.value }\n   }\n   if (action.type === \"show\") {\n      return { ...state, show: action.value }\n   }\n   if (action.type === \"lime_data\") {\n      return { ...state, lime_data: action.value }\n   }\n   if (action.type === \"defualt_models\") {\n      return { ...state, defualt_models: action.value }\n   }\n   if (action.type === \"rank_data\") {\n      return { ...state, rank_data: action.value }\n   }\n   if (action.type === \"original_data\") {\n      return { ...state, original_data: action.value }\n   }\n   if (action.type === \"years_for_dropdown\") {\n      return { ...state, years_for_dropdown: action.value }\n   }\n   if (action.type === \"appHandleChange\") {\n      return { ...state, appHandleChange: action.value }\n   }\n   if (action.type === \"state_range\") {\n      return { ...state, state_range: action.value }\n   }\n   if (action.type === \"selected_year\") {\n      return { ...state, selected_year: action.value,selected_years: [action.value.toString()] }\n   }\n   if (action.type === \"tracking\") {\n      return { ...state, tracking: action.value }\n   }\n   if (action.type === \"grouped_by_year_data\") {\n      return { ...state, grouped_by_year_data: action.value }\n   }\n   if (action.type === \"sort_by\") {\n      return { ...state, sort_by: action.value }\n   }\n   if (action.type === \"deviate_by\") {\n      return { ...state, deviate_by: action.value }\n   }\n   if (action.type === \"mode\") {\n      return { ...state, mode: action.value }\n   }\n   if (action.type === \"slider_max\") {\n      return { ...state, slider_max: action.value }\n   }\n   if (action.type === \"range_mode_model\") {\n      return { ...state, range_mode_model: action.value }\n   }\n   //----\n   if (action.type === \"range_mode_range1\") {\n      return { ...state, range_mode_range1: action.value }\n   }\n   if (action.type === \"range_mode_range2\") {\n      return { ...state, range_mode_range2: action.value }\n   }\n   if (action.type === \"time_mode_range\") {\n      return { ...state, time_mode_range: action.value }\n   }\n   if (action.type === \"time_mode_model\") {\n      return { ...state, time_mode_model: action.value }\n   }\n   if (action.type === \"time_mode_year1\") {\n      return { ...state, time_mode_year1: action.value }\n   }\n   if (action.type === \"time_mode_year2\") {\n      return { ...state, time_mode_year2: action.value }\n   }\n   if (action.type === \"clicked_items_in_slopechart\") {\n      return { ...state, clicked_items_in_slopechart: action.value }\n   }\n   if (action.type === \"features_with_score\") {\n      return { ...state, features_with_score: action.value }\n   }\n   if (action.type === \"sparkline_data\") {\n      return { ...state, sparkline_data: action.value }\n   }\n   if (action.type === \"legend_show_option\") {\n      return { ...state, legend_show_option: action.value }\n   }\n   if (action.type === \"legend_model\") {\n      return { ...state, legend_model: action.value }\n   }\n   if (action.type === \"histogram_data\") {\n      return { ...state, histogram_data: action.value }\n   }\n   if (action.type === \"dataset\") {\n      return { ...state, dataset: action.value }\n   }\n   if (action.type === \"slider_and_feature_value\") {\n      return { ...state, slider_and_feature_value: action.value }\n   }\n   if (action.type === \"legend_year\") {\n      return { ...state, legend_year: action.value }\n   }\n   if (action.type === \"prev_prop\") {\n      return { ...state, prev_prop: action.value }\n   }\n   if (action.type === \"replay\") {\n      return { ...state, replay: action.value }\n   }\n   if (action.type === \"changed\") {\n      return { ...state, changed: action.value }\n   }\n   if (action.type === \"popup_chart_data\") {\n      return { ...state, popup_chart_data: action.value }\n   }\n   if (action.type === \"pop_over\") {\n      return { ...state, pop_over: action.value }\n   }\n   if (action.type === \"pop_over_models\") {\n      var temp = action.value.filter(item => item != \"ListNet\")\n      return { ...state, pop_over_models: temp }\n   }\n   if (action.type === \"clicked_features\") {\n      //console.log(action.value)\n      return { ...state, clicked_features: action.value }\n   }\n   return state;\n}\nexport default reducer;","import { createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({      \n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  }\n});\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './store/reducer';\nimport theme from './Themes'; \nimport { ThemeProvider } from '@material-ui/styles';\nconst store=createStore(reducer);\nReactDOM.render( <ThemeProvider theme={theme}><Provider store={store}><App /></Provider></ThemeProvider>,document.getElementById('root'));\n\n\n","module.exports = __webpack_public_path__ + \"static/media/chart1_data.d3b20544.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.cca71c9e.csv\";"],"sourceRoot":""}