{"version":3,"sources":["Data/data/fiscal/lime/chart1_data.csv","Data/data/school/lime/chart1_data.csv","Data/fiscal.csv","Data/school.csv","Data/house.csv","Data/data/fiscal/lime/fiscal_rank.csv","Data/data/fiscal/lime/fiscal_lime.csv","Data/data/school/lime/school_rank.csv","Data/data/school/lime/school_lime.csv","Data/data/house/lime/house_rank.csv","Data/data/house/lime/house_lime.csv","Data/data/house/lime/chart1_data.csv","Algorithms/algo1.js","components/Charts/DevPlot/deviation_chart.js","components/Charts/DevPlot/Sparkline.js","components/Charts/misc_algo.js","components/Charts/Model/ModelSlider.js","store/reducer.js","components/Charts/ExpChart/Create_exp_circles.js","components/Charts/ExpChart/MDS.js","components/Charts/Model/ExpChartComponent.js","components/Charts/Model/YearAndModelSelection/YearModelSelection.js","components/Charts/Popover/CreateCatChart.js","components/Charts/Popover/CreateNumChart.js","components/Charts/Popover/02Charts.js","components/Charts/Popover/FilterModel.js","components/Charts/Popover/01Popover.js","components/Charts/Model/ModelChartComponent.js","components/Charts/Range/SliderGroup1.js","components/Charts/Range/SliderGroup2.js","components/Charts/Range/YearAndModelSelection/YearModelSelection.js","components/Charts/Range/02RangeExpChart.js","components/Charts/Range/04PopoverCharts.js","components/Charts/Range/03RangePopover.js","components/Charts/Range/01RangeChartComponent.js","components/themes.js","components/Charts/Time/Year1DropDown.js","components/Charts/Time/Year2DropDown.js","components/Charts/Time/YearAndModelSelection/Slider.js","components/Charts/Time/YearAndModelSelection/YearModelSelection.js","components/Charts/Time/02ExpChartComponent.js","components/Charts/Time/04PopoverCharts.js","components/Charts/Time/03TimePopover.js","components/Charts/Time/01YearChartComponent.js","components/Top/FeatureHistograms/FeatureHistograms.js","components/Top/FeatureHistograms/CreateBarChart.js","components/Top/FeatureHistograms/CreateHistogram.js","components/Top/FeaturesDropdown.js","components/Top/SelectMode.js","components/Top/theme.js","components/Top/Threshold.js","components/Top/SortModels.js","components/Top/Top.js","components/Legend/Legend.js","App.js","Themes.js","index.js"],"names":["module","exports","sort","type","state_range","default_models","selected_year","grouped_by_year_data","console","log","nDCG_dict","i","Object","keys","forEach","key","parseFloat","items","map","substring","first","second","temp_ndcg","length","includes","push","temp1","myitem","mydict","model","temp","Math","sqrt","temp_ap","groupby_year","original_data","years","sparkline_data","element","replace","temp_dict","year","parseInt","rank","features_with_score","dataset","models","selected_instances","number_of_charts","rank_data","temp_final","temp2","v","top_nine","data","feautures","tempvoted_data_with_score","data2","filter","index","item","feauture","items2","sorted_features","key2","Create_deviation_chart","parent_id","parent_exp_id","anim_config","average","clicked_circles","Set_clicked_circles","diverginColor","Set_selected_year","threshold","div","d3","selectAll","join","attr","style","parent_width","$","width","parent_height","height","temp_scale_data","abs","config","space_for_state_name","fontSize","font_dy","sparkline_width","font_line_gap","line_stroke_width","animation_duration","container_height","my_svg_top_margin","myg_top_margin","y_distance","circle_radius","t","textures","lines","size","strokeWidth","stroke","background","call","d","enter","append","update","transition","duration","rank_animation","exit","remove","this","text","dd","val","parent","s_margin","s_width","s_height","s_svg","x","domain","range","datum","y0","y","y1","raise","on","preventDefault","Create_sparkline","data_for_all_years","line_data","model_name","a","two_realRank","predicted_rank","temp_max","sclale1","url","d2","deviation_animation","delay","circ_data","classed","html","pageX","pageY","handle_transparency","class_name","circle_id","useStyles","makeStyles","theme","root","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","secondary","tRoot","marginBottom","rang_input","marginLeft","connect","state","mode","slider_max","range_mode_model","range_mode_range1","range_mode_range2","time_mode_model","time_mode_range","time_mode_year1","time_mode_year2","years_for_dropdown","slider_and_feature_value","sort_by","dispatch","Set_state_range","value","Set_changed","Set_default_models","Set_default_model_scores","props","classes","React","useState","sliderRange","set_sliderRange","temp_marks","step","marks","label","className","paddingTop","border","padding","marginTop","TextField","input","id","onChange","event","isNaN","target","alert","margin","Slider","newValue","onChangeCommitted","valueLabelDisplay","aria-labelledby","xs","Button","backgroundColor","onClick","temp_Models","algo1","default_model_scores","initialState","global_config","max_circle_r","feature_animation","circle_animation","appHandleChange","lime_data","slope_chart_ready_to_vis","deviate_by","show","slider_min","view_data","histogram_data","chart_scale_type","ref_year","cmodel","clicked_items_in_slopechart","tracking","dummy","features_dict","features_voted","Legend_ready_to_vis","legend_model","legend_show_option","legend_year","reducer","action","dragged_features","deviation_array","average_y","average_m","dbclicked_features","drag_drop_feautre_data","pop_over_models","prev_prop","replay","changed","popup_chart_data","pop_over","clicked_features","createStore","getState","CreatexpCircle","selection","item_width","item_height","feature_name","feature_contrib_name","sum_data","xScale","my_mean","rScale","exponent","getRandomArbitrary","min","max","seed","rand","rnd","disp","sin","floor","random","getMdsData","myurl","fetch","method","body","JSON","stringify","headers","then","res","json","response","catch","error","Create_MDS","mds_ref","circle_data","mds_id","b","w","h","r","yScale","svg","current","circles","lasso","d3lasso","closePathSelect","closePathDistance","targetArea","possibleItems","notPossibleItems","selected_ids","selectedItems","each","notSelectedItems","SlopeChart","Createsvg","indexed_features","self","under_threshold_instances","year_data","excluded_features","entries","slice","mds_height","feature_containers","setState","Set_clicked_features","feature","unshift","set_dbclicked_features","Set_popup_chart_data","set_pop_over","deltaY","parentNode","origin_index","lower","difference","document","elementFromPoint","sourceEvent","clientX","clientY","origin_feature","dest_index","indexOf","dest_feature","Set_dragged_features","container","feature_contrib_data_for_mds","MDS_response","parse","mds","misc_algo","line_color","exp","createRef","mouseX","mouseY","window","innerHeight","prevProps","prevState","ref","Component","Set_prev_prop","Set_sparkline_data","Set_replay","all_models","sortModels","display","justifyContent","marginRight","fontWeight","modelName","handle_model_click","CreateCatChart","scatterplot_data","feature_contribute","barplot_data","temp_x","temp_y","values","nice","parent_svg","myid","svg1","hist_height","svg0","bandwidth","y2","tickSize","ticks","tickValues","tickFormat","select","CreateNumChart","data_arr","feature_width","data_for_x_axis","data_for_y_axis","bins","histogram","binned_data","area_chart_data","x0","areaGenerator","curve","data_for_x_axis2","data_for_y_axis2","xScale2","yScale2","xScale3","yScale3","regression","SimpleLinearRegression","predicted_data","predict","pathData","lineGenerator","Chart","merged_arr","concat","apply","Set_pop_over_models","anchorEl","setAnchorEl","open","Boolean","checked","setChecked","handleToggle","currentIndex","newChecked","splice","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","onClose","TransitionComponent","Fade","List","labelId","ListItem","role","undefined","Checkbox","edge","tabIndex","checkboxChanged","set_clicked_features","position","top","left","pointerEvents","boxShadow","borderBottom","direction","justify","alignItems","FilterModel","maxHeight","overflow","maxWidth","textClickHandler_original","height_slope_exp_chart","interpolate","deviation_chart","selectedModel","Set_selected_instances","Set_deviation_array","Grid","class","columnSpacing","exp_id","Set_range_mode_range1","Set_range_mode_range2","paddingLeft","Set_range_mode_model","exp_data","selected_instances1","data1","selected_instances2","zIndex","paddingRight","SliderGroup1","borderRight","SliderGroup2","createMuiTheme","primary","main","overrides","MuiAutocomplete","MuiFilledInput","MuiInputLabel","MuiTextField","MuiButton","textTransform","fullWidth","Root","disableRipple","variant","MuiCheckbox","InputLabelProps","shrink","MuiPaper","elevation","MuiCard","Set_time_mode_year1","Autocomplete","disableClearable","defaultValue","toString","debug","options","option","renderInput","params","InputProps","disableUnderline","Set_time_mode_year2","Set_time_mode_range","Set_time_mode_model","verticalAlign","Box","sx","borderTop","borderLeft","Year1DropDown","Year2DropDown","FeatureHistograms","store_instances","instances","all_instances","feature_data","filename","exp_fiscal_CordAscent","exp_school_CordAscent","exp_house_CordAscent","nextProps","nextState","feature_index","number_of_features","occur","sum_x","feature_height","CreateBarChart","item_data","area_chart_height","myticks","thresholds","x1","extent","invert","upper","CreateHistogram","borderRadius","filtered_instances","Set","handleClose","Set_histogram_data","Set_slider_max","SimpleMenu","Set_mode","onSubmit","buttonclickHandler","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","outerTheme","spacing","Set_threshold","set_threshold","ThemeProvider","noValidate","autoComplete","Input","inputProps","Set_sort_by","set_sort_by","App","setTimeout","Set_view_data","ButtonGroup","SelectMode","SortModels","Threshold","Row","handleradioChange","Legend","legend_container_width","legend_container_height","legend1_rScale","legend1_yScale","legend1_height","legend1_ticks","legend1_svg","legend2_svg_height","legend2_yScale","legend2_ticks","rect_height","legend2_svg","legend_width","Set_legend_year","dataprocessor","dataset_name","process_data","school","school_rank","school_lime","fiscal","fiscal_rank","fiscal_lime","house","house_rank","house_lime","slopechart_data_filename","rank_data_filename","lime_data_filename","Set_years_for_dropdown","Set_grouped_by_year_data","Set_original_data","nested_data","Set_rank_data","temp_data","Set_lime_data","selected_dataset","Set_clicked_items_in_slopechart","Set_dataset","innerWidth","Top","Set_ref_year","Set_slider_and_feature_value","button","MuiGrid","store","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fd94aaf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chart1_data.bbc13ad4.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.e95760f9.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal.977bae2d.csv\";","module.exports = __webpack_public_path__ + \"static/media/school.2d2c77ef.csv\";","module.exports = __webpack_public_path__ + \"static/media/house.88979d03.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_rank.442b3a04.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_lime.9d697bff.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_rank.a78bd499.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_lime.ef16e4c0.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_rank.e66c7c0d.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_lime.66415f13.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.81e362e3.csv\";","//------------------------------------------------------------------------------------------------- Sort Models\r\nexport function sort(type, state_range, default_models, selected_year, grouped_by_year_data) {\r\n  console.log(type, state_range, default_models, selected_year, grouped_by_year_data,'sort')\r\n  //------------Handle ndgc sorting\r\n  if (type == 'Discounted Cumulative Gain') {\r\n    var nDCG_dict = { \"ndcg_term_CordAscent\": 0, \"ndcg_term_LambdaMART\": 0, \"ndcg_term_LambdaRank\": 0, \"ndcg_term_LinearReg\": 0, \"ndcg_term_ListNet\": 0, \"ndcg_term_MART\": 0, \"ndcg_term_RandomFor\": 0, \"ndcg_term_RankBoost\": 0, \"ndcg_term_RankNet\": 0 }\r\n    for (var i = state_range[0]; i < state_range[1]; i++) {\r\n      Object.keys(nDCG_dict).forEach(key => {\r\n          nDCG_dict[key] = nDCG_dict[key] + parseFloat(grouped_by_year_data[selected_year][i][key])\r\n      })\r\n    }\r\n    //---- sort\r\n    var items = Object.keys(nDCG_dict).map(function (key) {\r\n      return [key.substring(10), nDCG_dict[key]];\r\n    });\r\n    items.sort(function (first, second) {\r\n      return second[1] - first[1];\r\n    });\r\n    var temp_ndcg = []\r\n    for (var i = 0; i < items.length; i++) {\r\n      if (default_models.includes(items[i][0])) {\r\n        temp_ndcg.push(items[i][0])\r\n      }\r\n    }\r\n    var temp1={}\r\n    items.map(myitem=>{temp1[myitem[0]]=myitem[1]})\r\n    console.log(items)\r\n    return [temp_ndcg,temp1]\r\n  }\r\n  //----\r\n\r\n  //------------Handle AP sorting\r\n  if (type == 'Average Precision') {\r\n    var mydict = {}\r\n    default_models.forEach((model) => {\r\n      var temp = 1\r\n      for (var i = state_range[0]; i < state_range[1]; i++) {\r\n        temp = temp + (grouped_by_year_data[selected_year][i][\"two_realRank\"] - grouped_by_year_data[selected_year][i][model]) ** 2\r\n      }\r\n      mydict[model] = ((state_range[1] - state_range[0]) + 1) / (Math.sqrt(temp))\r\n    })\r\n    //---- sort\r\n    var items = Object.keys(mydict).map(function (key) {\r\n      return [key, mydict[key]];\r\n    });\r\n    items.sort(function (first, second) {\r\n      return second[1] - first[1];\r\n    });\r\n    var temp_ap = []\r\n    for (var i = 0; i < items.length; i++) {\r\n      if (default_models.includes(items[i][0])) {\r\n        temp_ap.push(items[i][0])\r\n      }\r\n    }\r\n    return [temp_ap,mydict]\r\n  }\r\n  //------------Handle Alphabatic sorting\r\n  if (type == 'Alphabetically') {\r\n    var temp=default_models.sort()\r\n    return [temp,[0]]\r\n  }\r\n}\r\nexport function groupby_year(original_data) {\r\n  var years = {}\r\n  var sparkline_data = {}\r\n  original_data.forEach(element => {\r\n    years[element['1-qid']] = []\r\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')] = []\r\n  });\r\n\r\n  original_data.forEach(element => {\r\n    var temp_dict = { year: parseInt(element['1-qid']), rank: parseInt(element['two_realRank']) }\r\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')].push(temp_dict)\r\n    years[element['1-qid']].push(element)\r\n  });\r\n  return { years: years, sparkline_data: sparkline_data };\r\n}\r\nexport function features_with_score(dataset, models, selected_instances, selected_year, number_of_charts, rank_data) {\r\n  var temp1 = {}\r\n  var temp_final = {}\r\n  models.map(model => {\r\n    var temp2 = {}\r\n    var v = number_of_charts;\r\n    var top_nine = sorted_features(dataset, model, selected_instances, selected_year,rank_data)\r\n    if (top_nine.length < number_of_charts) { v = top_nine.length;; number_of_charts = top_nine.length } // This is because number of charts is calculated based on space but there are cases when we don't have that many features\r\n    for (var i = 0; i < number_of_charts; i++) {\r\n      temp2[top_nine[i]] = v;\r\n      v = v - 1\r\n    }\r\n    temp1[model] = temp2\r\n  });\r\n\r\n  for (var key in temp1) {\r\n    for (var key2 in temp1[key]) {\r\n      if (temp_final[key2] > 0) {\r\n\r\n        temp_final[key2] = temp_final[key2] + temp1[key][key2]\r\n      }\r\n      else {\r\n        temp_final[key2] = temp1[key][key2]\r\n      }\r\n    }\r\n  }\r\n  return temp_final;\r\n}\r\n\r\n\r\nexport function sorted_features(dataset, model, selected_instances, selected_year,rank_data) { // Uses feature rank to rank and return features name by removing the feature_rank string\r\n //return Object.keys(rank_data[model][0]).filter(item=>!['1-qid','model'].includes(item)).map(item=>item.replace(\"_feature_rank\", \"\"))\r\n  if (!selected_instances.length > 0) { return [] }\r\n  selected_instances = selected_instances.map(element => element - 1)\r\n  var tempvoted_data_with_score = {},items,data,feautures;\r\n\r\n  if (model == \"ListNet\") { return [] }\r\n  var data2 = rank_data[model].filter(element => { if (parseInt(element['1-qid']) == parseInt(selected_year)) { return element } })\r\n  data = selected_instances.map(index => data2[index])\r\n  feautures = Object.keys(data[0])\r\n  data.map(item => {\r\n    feautures.forEach(feauture => {\r\n      if (tempvoted_data_with_score[feauture] >= 0 || tempvoted_data_with_score[feauture] < 0) {\r\n        tempvoted_data_with_score[feauture] = tempvoted_data_with_score[feauture] + (parseFloat(item[feauture]))\r\n      }\r\n      else { tempvoted_data_with_score[feauture] = parseFloat(item[feauture]) }\r\n    })\r\n  })\r\n  //-----------------------------------------------------------------\r\n  // Create items array\r\n  items = Object.keys(tempvoted_data_with_score).map(function (key) {\r\n    return [key, tempvoted_data_with_score[key]];\r\n  });\r\n  // Sort the array based on the second element\r\n  items.sort(function (first, second) {\r\n    return first[1] - second[1];\r\n  });\r\n  var items2 = items.map((element) => element[0].replace(\"_feature_rank\", \"\"))\r\n  items2 = items2.filter(item => item != \"1-qid\" && item!=\"model\")\r\n  return items2;\r\n  //-----------------------------------------------------------------\r\n}\r\n","import * as d3 from 'd3';\r\nimport * as $ from 'jquery';\r\nimport textures from 'textures';\r\nimport Create_sparkline from \"./Sparkline\"\r\n\r\nexport function Create_deviation_chart(parent_id,parent_exp_id, selected_instances, original_data, default_models, anim_config, selected_year, average, clicked_circles, Set_clicked_circles, diverginColor,sparkline_data,Set_selected_year,dataset,threshold) {\r\n  var div = d3.select(\"body\").selectAll('.tooltip').data([0]).join(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\r\n  var parent_width = $(\"#\" + parent_id).width() - 5\r\n  var parent_height = $(\".\" + 'deviation_plot_container_div').height() // deviation_plot_container_div is the div that contains the deviation plot for all modes\r\n  var data = original_data.filter(item => selected_year==item['1-qid'] && selected_instances.includes(parseInt(item['two_realRank'])))\r\n  var temp_scale_data = []\r\n  data.map(item => { default_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\r\n  // font_line_gap=sparkline_width+4\r\n  var config = { space_for_state_name: 120,fontSize: 12, font_dy: -6, sparkline_width:20,font_line_gap: 24, line_stroke_width: 10, animation_duration: 0, container_height: 100, my_svg_top_margin: 10, myg_top_margin: 10 }\r\n  var y_distance = parent_height/selected_instances.length\r\n  if(y_distance<15){var y_distance=15}\r\n  d3.select(\"#\" + parent_id).attr(\"height\",y_distance*selected_instances)\r\n\r\n  var circle_radius = config.line_stroke_width / 2\r\n  var t = textures.lines().size(5).strokeWidth(2).stroke(\"#cccccc\").background(\"gray\");\r\n  var svg=d3.select(\"#\" + parent_id).attr('height', y_distance + data.length * y_distance).call(t)\r\n  var parent_g = svg.selectAll(\".parent_g\").data([0]).join('g').attr('class', 'parent_g').attr('transform', \"translate(\" + 0 + \",13)\")\r\n  var items_g = parent_g.selectAll(\".items\").data(data, d => d['State']).join(enter => enter.append(\"g\").attr(\"class\", \"items\")\r\n    .attr('transform', (d, i) => \"translate(\" + config.space_for_state_name + \",\" + i * y_distance + \")\")\r\n    , update => update.transition().duration(anim_config.rank_animation).attr('transform', (d, i) => \"translate(\" + config.space_for_state_name + \",\" + i * y_distance + \")\")\r\n    , exit => exit.remove()\r\n  )\r\n  items_g.attr(\"add_state\", function (d) {\r\n    d3.select(this).selectAll(\"text\").data([d]).join('text')\r\n    .text(dd=>{\r\n      var max_textsize=15\r\n      var val = d['State']\r\n          if (val.length > max_textsize) { val = val.replace(\"University\", \"U\") }\r\n          if(val.length > max_textsize){val = val.substring(0, max_textsize)+\"..\"}\r\n          return val + \" \" + d['two_realRank'] \r\n    })\r\n    .attr('fill', d => diverginColor(d['two_realRank'])).attr(\"dominant-baseline\", \"hanging\").attr(\"font-size\", config.fontSize)\r\n      .attr(\"x\", 0).attr('text-anchor', 'end').attr(\"dy\", config.font_dy)\r\n  }).attr(\"add_sparkline\", function (d) {\r\n    // sparkline height is y_distance\r\n    if(dataset!='house'){Create_sparkline(d3.select(this),config,config.line_stroke_width,sparkline_data,d,diverginColor,selected_year,Set_selected_year)}\r\n  })\r\n    .attr(\"add_lines_and_circles\", function (d) {\r\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\r\n      var line_data = []\r\n      default_models.map(model_name => {\r\n        data_for_all_years.map(item => {\r\n          var a = {}\r\n          var two_realRank = parseInt(item['two_realRank'])\r\n          var predicted_rank = parseInt(item[model_name])\r\n          a['two_realRank'] = two_realRank\r\n          a['predicted_rank'] = predicted_rank\r\n          a[\"model\"] = model_name\r\n          a['year'] = item['1-qid']\r\n          if (Math.abs(predicted_rank - two_realRank) < threshold) {\r\n            line_data.push(a)\r\n          }\r\n        })\r\n      })\r\n      // This is only for scaling starts here\r\n      var temp_scale_data = []\r\n      data.map(item => { default_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\r\n      var temp_max = d3.max(temp_scale_data)\r\n      var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, parent_width - (config.space_for_state_name + circle_radius)])\r\n      if (temp_max == 0) { var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, 0]) }\r\n      // This is only for scaling ends here\r\n      d3.select(this).selectAll(\"line\").data([d]).join(enter => enter.append('line')\r\n        .attr(\"x1\", config.font_line_gap).attr(\"y1\", (d, i) => y_distance * i).attr(\"y2\", (d, i) => y_distance * i).attr(\"stroke-width\", config.line_stroke_width).attr(\"stroke\", t.url()).attr(\"x2\", (d2) => {\r\n          var temp = []\r\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\r\n          return sclale1(d3.max(temp))\r\n        })\r\n        // Update\r\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"x2\", (d2) => {\r\n          var temp = []\r\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\r\n          return sclale1(d3.max(temp))\r\n        }))\r\n      // ------------ Circles start here\r\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\r\n      var circ_data = []\r\n      default_models.map(model_name => {\r\n        data_for_all_years.map(item => {\r\n          var a = {}\r\n          var two_realRank = parseInt(item['two_realRank'])\r\n          var predicted_rank = parseInt(item[model_name])\r\n          a['two_realRank'] = two_realRank\r\n          a['predicted_rank'] = predicted_rank\r\n          a[\"model\"] = model_name\r\n          a['year'] = item['1-qid']\r\n          a['id'] =item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n          a['className']=\"deviation_circles \"+model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n          if (Math.abs(predicted_rank - two_realRank) < threshold) {\r\n            circ_data.push(a)            \r\n          }\r\n        })\r\n      })\r\n      var my_circs = d3.select(this).selectAll(\".my_circles\").data(circ_data, d => d['id']).join(\r\n        enter => enter.append(\"circle\").attr('id', d => d['id']).attr(\"cx\", (d2, i) => {\r\n          d3.select(this).classed(d2['id'], true)\r\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\r\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\r\n        })\r\n        // Update\r\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"cx\", (d2, i) => {\r\n          d3.select(this).classed(d2['id'], true)\r\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\r\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\r\n        })\r\n      )\r\n      my_circs.attr(\"r\",circle_radius).attr('class', d=>'my_circles '+d['className'])\r\n      .attr('fill', d => diverginColor(d['two_realRank'])).attr(\"parent_id\", parent_exp_id)\r\n        .on('click', d => Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']]))\r\n        .on(\"mouseover\", function (d2) {\r\n          div.transition().duration(200).style(\"opacity\", .9);\r\n          div.html(\"Year : \" + d2[\"year\"] + \"<br></br>\" + \"Model: \" + d2[\"model\"] + \"<br></br>\" + \"Deviation: \" + Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\r\n          .style(\"left\", (d3.event.pageX - 140) + \"px\").style(\"top\", (d3.event.pageY - 98) + \"px\");\r\n        }).on(\"mouseout\", function (d2) {\r\n          //d3.select(this).classed(d2['id'],true)\r\n          div.transition()\r\n            .duration(500)\r\n            .style(\"opacity\", 0);\r\n        })\r\n\r\n    })\r\n\r\n}","import * as d3 from 'd3';\r\nexport default function Create_sparkline(parent, config, y_distance, sparkline_data, d, diverginColor, selected_year, Set_selected_year) { // sparkline height is y_distance\r\n    var year = selected_year\r\n    var s_margin = { top: 0, right: 0, bottom: 0, left: 4 },\r\n        s_width = config.sparkline_width - 2,\r\n        s_height = y_distance - 2;\r\n    var s_svg = parent.selectAll(\".sparkline_svg\").data([0]).join(\"svg\").attr(\"class\", \"sparkline_svg\").attr(\"x\", 2).attr(\"y\", -3)\r\n        .attr(\"width\", s_width + s_margin.left + s_margin.right)\r\n        .attr(\"height\", s_height + s_margin.top + s_margin.bottom)\r\n    \r\n    var data = sparkline_data[d['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")]\r\n    // Add X axis  \r\n    var x = d3.scaleLinear().domain(d3.extent(data, function (d) { return d.year; })).range([0, s_width]);\r\n    //-----------------------------------------------------------------------------------------------------------------------------------------Add the area\r\n    s_svg.selectAll(\"path\").remove()\r\n    s_svg.append(\"path\")\r\n        .datum(data, d => d)\r\n        .attr(\"id\", \"A\")\r\n        .attr(\"opacity\", 1)\r\n        .attr(\"fill\", diverginColor(d['two_realRank'])) //#969696\r\n        .attr(\"stroke\", diverginColor(d['two_realRank']))\r\n        .attr(\"stroke-width\", (d) => {\r\n            return 1.5\r\n        })\r\n        .attr(\"d\", d3.area()\r\n            .x(function (d) { return x(d.year) })\r\n            .y0(function () {\r\n                var y = d3.scaleLinear().domain([0, d3.max(data, function (d) { return +d.rank; })]).range([s_height, 0]);\r\n                return y(0)\r\n            })\r\n            .y1(function (d) {\r\n                var y = d3.scaleLinear().domain([0, d3.max(data, function (d) { return +d.rank; })]).range([0, s_height]);\r\n                return y(d.rank)\r\n            })\r\n        )\r\n    //------------Circles\r\n    s_svg.selectAll('circle').raise().data(data).join('circle')\r\n        .attr('cx', function (d, i) { return x(d.year) })\r\n        .attr('cy', s_height - 2)\r\n        .attr(\"class\", \"myid\")\r\n        .on(\"mouseover\", function (d) {\r\n            d3.select(this).style('fill', 'black')\r\n            d3.select(this).attr('r', 3)\r\n        })\r\n        .style('fill', (d) => d.year != year ? 'transparent' : 'black')\r\n        .attr('class', (d) => d.year != year ? 'transparent_class' : 'red_class')\r\n        .attr('r', 2)\r\n        .on('dblclick', (d, i) => {\r\n            d3.event.preventDefault();\r\n            Set_selected_year(d.year)\r\n        })\r\n        .on(\"mouseout\", function (d) {\r\n            d3.select(this).style('fill', 'transparent')\r\n            d3.select(this).style('fill', d.year != year ? 'transparent' : 'black')\r\n            d3.select(this).attr('r', 2)\r\n        })\r\n}","import * as d3 from 'd3';\r\nexport function handle_transparency(class_name, clicked_circles, anim_config) {\r\n    if (clicked_circles.length != 0) { // If there are no clicked circles make all opacity 1\r\n        d3.selectAll(\".items\").attr('opacity', 0.6) // Groups\r\n        d3.selectAll(\".\" + \"my_circles\").attr('opacity', 0.3) // Circles\r\n        clicked_circles.map(circle_id => {\r\n            d3.selectAll(\".\" + circle_id).attr('opacity', 1) // Groups\r\n            d3.selectAll(\"#\" + circle_id).attr('opacity', 1) // Circles\r\n        })\r\n    }\r\n    else {\r\n        d3.selectAll(\".items\").attr('opacity', 1); // Groups\r\n        d3.selectAll(\".\" + \"my_circles\").attr('opacity', 1) // Circles \r\n    }\r\n}","import React from 'react';\r\nimport * as $ from 'jquery';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './ModelSlider.scss';\r\nimport * as algo1 from \"../../../Algorithms/algo1\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tRoot: {\r\n        marginBottom: 35,\r\n    },\r\n    rang_input: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\nfunction Modes(props) {\r\n    const classes = useStyles();\r\n    // states \r\n    const [sliderRange, set_sliderRange] = React.useState(props.state_range);\r\n    //-----------------------------------------------------------------\r\n    var temp_marks = [];\r\n    var step = (props.slider_max - 1) / (6 - 1);\r\n    for (var i = 0; i < 6; i++) {\r\n        temp_marks.push(1 + (step * i));\r\n    }\r\n    var marks = temp_marks.map(item => {\r\n        var myitem = parseInt(item)\r\n        return { value: myitem, label: myitem }\r\n    })\r\n    //console.log(props.marks)\r\n    //-----------------------------------------------------------------\r\n    return (\r\n        <div className=\"Modelslider\" style={{height: 70, width: \"99%\",\r\n            paddingTop: 30, border: \"2px solid rgb(178, 178, 178,0.5)\"\r\n        }} >\r\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([\"\", sliderRange[1]])\r\n                        } else {\r\n                            if (event.target.value > sliderRange[1]) {\r\n                                alert(\"Lower range can not be larger than the upper range\")\r\n                            }\r\n                            else {\r\n                                set_sliderRange([event.target.value, sliderRange[1]])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\r\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\r\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\r\n                />\r\n            </div>\r\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([sliderRange[0], \"\"])\r\n                        } else {\r\n                            if (parseInt(event.target.value) > props.slider_max) {\r\n                                alert(\"Upper range can not exceed maximum\")\r\n                                set_sliderRange([sliderRange[0], props.slider_max])\r\n                            }\r\n                            else {\r\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\r\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\r\n                    onClick={() => {\r\n                        var temp_Models = algo1.sort(props.sort_by, sliderRange, props.default_models, props.selected_year, props.grouped_by_year_data)[0];\r\n                        var default_model_scores = algo1.sort(props.sort_by, sliderRange,props.default_models, props.selected_year, props.grouped_by_year_data)[1];\r\n                        props.Set_default_model_scores(default_model_scores)\r\n                        props.Set_default_models([...temp_Models])\r\n                        props.Set_state_range(sliderRange)\r\n                    }}\r\n                >Update range</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        selected_year: state.selected_year,\r\n        state_range: state.state_range,\r\n        mode: state.mode, // Model mode model\r\n        slider_max: state.slider_max,\r\n        range_mode_model: state.range_mode_model, // Range mode model\r\n        range_mode_range1: state.range_mode_range1,\r\n        range_mode_range2: state.range_mode_range2,\r\n        time_mode_model: state.time_mode_model, // Time mode model\r\n        time_mode_range: state.time_mode_range,\r\n        time_mode_year1: state.time_mode_year1,\r\n        time_mode_year2: state.time_mode_year2,\r\n        years_for_dropdown: state.years_for_dropdown,\r\n        dataset: state.dataset,\r\n        default_models: state.default_models,\r\n        slider_and_feature_value: state.slider_and_feature_value,\r\n        sort_by: state.sort_by,\r\n        grouped_by_year_data: state.grouped_by_year_data\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\r\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\r\n        Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\r\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","let initialState = {\r\n   global_config:{max_circle_r:8},\r\n   anim_config: {rank_animation:3000,deviation_animation:3000,feature_animation:3000,circle_animation:3000},\r\n   appHandleChange: null,\r\n   sparkline_data: null,\r\n   sort_by: \"Average Precision\",\r\n   original_data: null,\r\n   rank_data: null,\r\n   lime_data: null,\r\n   grouped_by_year_data: null,\r\n   slope_chart_ready_to_vis: null,\r\n   default_models: [\"LinearReg\",\"CordAscent\"], // Change the pop_over_models as well\r\n   state_range: [1, 30], // Change in handleradioChange\r\n   deviate_by: 0,\r\n   show: [\r\n      \"Slope charts\", \"Rankings\", \"Explanation\" // change in app.js\r\n   ],\r\n   years_for_dropdown: [\r\n      \"2006\"\r\n   ],\r\n   selected_year: 2006,\r\n   slider_min: 1,\r\n   slider_max: 50,\r\n   view_data: 1,\r\n   dataset: \"school\", // change in componentDidmount in app.js too\r\n   histogram_data: [],\r\n   chart_scale_type: \"true\",\r\n   features_with_score: null,\r\n   ref_year: null,\r\n   cmodel: \"CordAscent\",\r\n   clicked_items_in_slopechart: [],\r\n   tracking: false,\r\n   dummy: null,\r\n   features_dict: {},\r\n   features_voted: null,\r\n   Legend_ready_to_vis: null,\r\n   legend_model: \"CordAscent\",\r\n   legend_show_option: \"Rank\",\r\n   legend_year: 2012,\r\n   mode: \"Model\",\r\n   range_mode_model: \"CordAscent\",\r\n   range_mode_range1: [1, 25],\r\n   range_mode_range2: [15, 40],\r\n   time_mode_model: \"CordAscent\",\r\n   time_mode_year1: \"Null\",\r\n   time_mode_year2: \"Null\",\r\n   time_mode_range: [6, 32],\r\n   chart_scale_type: \"true\",\r\n   slider_and_feature_value: { 'Rank range': 1, 'Feature': 1 },\r\n   prev_prop: {},\r\n   replay: false,\r\n   changed: \"year\",\r\n   popup_chart_data: null,\r\n   pop_over: false,\r\n   pop_over_models: [\"LinearReg\",\"CordAscent\"],\r\n   clicked_features: [],\r\n   drag_drop_feautre_data: {},\r\n   dbclicked_features: [],\r\n   default_model_scores: {},\r\n   all_models: [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"RankBoost\", \"RankNet\"],\r\n   average_y: false,\r\n   average_m: false,\r\n   clicked_circles:[],\r\n   threshold:100,\r\n   deviation_array:[], // This is for legend\r\n   selected_instances:[], // This is for legend\r\n   dragged_features:{},\r\n   //url:\"http://0.0.0.0:5000/test\",\r\n   url:\"http://privacyprofiling.njitvis.com:5000/api/v2/rieval_mds\",\r\n}\r\n//---InitialState ends here\r\nconst reducer = (state = initialState, action) => {\r\n   if (action.type === \"dragged_features\") {\r\n      //console.log('dragged_features',action.value)\r\n      return { ...state, dragged_features: action.value }\r\n   }\r\n   if (action.type === \"selected_instances\") {\r\n      return { ...state, selected_instances: action.value }\r\n   }\r\n   if (action.type === \"deviation_array\") {\r\n      return { ...state, deviation_array: action.value }\r\n   }\r\n   if (action.type === \"view_data\") {\r\n      return { ...state, view_data: action.value }\r\n   }\r\n   if (action.type === \"threshold\") {\r\n      return { ...state, threshold: action.value }\r\n   }\r\n   if (action.type === \"clicked_circles\") {\r\n      return { ...state, clicked_circles: action.value }\r\n   }\r\n   if (action.type === \"average_y\") {\r\n      \r\n      return { ...state, average_y: action.value }\r\n   }\r\n   if (action.type === \"average_m\") {\r\n      \r\n      return { ...state, average_m: action.value }\r\n   }\r\n   if (action.type === \"default_model_scores\") {\r\n     \r\n      return { ...state, default_model_scores: action.value }\r\n   }\r\n   if (action.type === \"dbclicked_features\") {\r\n      return { ...state, dbclicked_features: action.value }\r\n   }\r\n   if (action.type === \"drag_drop_feautre_data\") {\r\n      return { ...state, drag_drop_feautre_data: action.value }\r\n   }\r\n   if (action.type === \"anim_config\") {\r\n      return { ...state, config: action.value }\r\n   }\r\n   if (action.type === \"show\") {\r\n      return { ...state, show: action.value }\r\n   }\r\n   if (action.type === \"lime_data\") {\r\n      return { ...state, lime_data: action.value }\r\n   }\r\n   if (action.type === \"default_models\") {\r\n      return { ...state,pop_over_models:action.value, default_models: action.value }\r\n   }\r\n   if (action.type === \"rank_data\") {\r\n\r\n      return { ...state, rank_data: action.value }\r\n   }\r\n   if (action.type === \"original_data\") {\r\n      return { ...state, original_data: action.value }\r\n   }\r\n   if (action.type === \"years_for_dropdown\") {\r\n      return { ...state, years_for_dropdown: action.value }\r\n   }\r\n   if (action.type === \"appHandleChange\") {\r\n      return { ...state, appHandleChange: action.value }\r\n   }\r\n   if (action.type === \"state_range\") {\r\n      return { ...state, dragged_features:{},state_range: action.value }\r\n   }\r\n   if (action.type === \"selected_year\") {\r\n      return { ...state,dragged_features:{}, selected_year: action.value}\r\n   }\r\n   if (action.type === \"tracking\") {\r\n      return { ...state, tracking: action.value }\r\n   }\r\n   if (action.type === \"grouped_by_year_data\") {\r\n     \r\n      return { ...state, grouped_by_year_data: action.value }\r\n   }\r\n   if (action.type === \"sort_by\") {\r\n      return { ...state, sort_by: action.value }\r\n   }\r\n   if (action.type === \"deviate_by\") {\r\n      return { ...state, deviate_by: action.value }\r\n   }\r\n   if (action.type === \"mode\") {\r\n      if(action.value=='Model'){\r\n         return { ...state,pop_over_models:state.default_models, mode: action.value }\r\n      }\r\n      if(action.value=='Ranges'){\r\n         return { ...state,pop_over_models:[state.range_mode_model], mode: action.value }\r\n      }\r\n      else{\r\n         return { ...state,pop_over_models:[state.time_mode_model], mode: action.value }\r\n      }\r\n   }\r\n   if (action.type === \"slider_max\") {\r\n      return { ...state, slider_max: action.value }\r\n   }\r\n   if (action.type === \"range_mode_model\") {\r\n      return { ...state,pop_over_models:[action.value],range_mode_model: action.value }\r\n   }\r\n   //----\r\n   if (action.type === \"range_mode_range1\") {\r\n      console.log(action.value)\r\n      return { ...state, range_mode_range1: action.value }\r\n   }\r\n   if (action.type === \"range_mode_range2\") {\r\n      console.log(action.value)\r\n      return { ...state, range_mode_range2: action.value }\r\n   }\r\n   if (action.type === \"time_mode_range\") {\r\n      return { ...state, time_mode_range: action.value }\r\n   }\r\n   if (action.type === \"time_mode_model\") {\r\n      return { ...state, pop_over_models:[action.value],time_mode_model: action.value }\r\n   }\r\n   if (action.type === \"time_mode_year1\") {\r\n      return { ...state, time_mode_year1: action.value }\r\n   }\r\n   if (action.type === \"time_mode_year2\") {\r\n      return { ...state, time_mode_year2: action.value }\r\n   }\r\n   if (action.type === \"clicked_items_in_slopechart\") {\r\n      return { ...state, clicked_items_in_slopechart: action.value }\r\n   }\r\n   if (action.type === \"features_with_score\") {\r\n      return { ...state, features_with_score: action.value }\r\n   }\r\n   if (action.type === \"sparkline_data\") {\r\n      return { ...state, sparkline_data: action.value }\r\n   }\r\n   if (action.type === \"legend_show_option\") {\r\n      return { ...state, legend_show_option: action.value }\r\n   }\r\n   if (action.type === \"legend_model\") {\r\n      return { ...state, legend_model: action.value }\r\n   }\r\n   if (action.type === \"histogram_data\") {\r\n      return { ...state,dragged_features:{}, histogram_data: action.value }\r\n   }\r\n   if (action.type === \"dataset\") {\r\n      return { ...state, dataset: action.value }\r\n   }\r\n   if (action.type === \"slider_and_feature_value\") {\r\n      return { ...state, slider_and_feature_value: action.value }\r\n   }\r\n   if (action.type === \"legend_year\") {\r\n      return { ...state, legend_year: action.value }\r\n   }\r\n   if (action.type === \"prev_prop\") {\r\n      return { ...state, prev_prop: action.value }\r\n   }\r\n   if (action.type === \"replay\") {\r\n      return { ...state, replay: action.value }\r\n   }\r\n   if (action.type === \"changed\") {\r\n      return { ...state, changed: action.value }\r\n   }\r\n   if (action.type === \"popup_chart_data\") {\r\n      return { ...state, popup_chart_data: action.value }\r\n   }\r\n   if (action.type === \"pop_over\") {\r\n      return { ...state, pop_over: action.value }\r\n   }\r\n   if (action.type === \"pop_over_models\") {\r\n      var temp = action.value.filter(item => item != \"ListNet\")\r\n      return { ...state, pop_over_models: temp }\r\n   }\r\n   if (action.type === \"clicked_features\") {\r\n      //console.log(action.value)\r\n      return { ...state, clicked_features: action.value }\r\n   }\r\n   return state;\r\n}\r\nexport default reducer;","import * as d3 from \"d3\";\r\nimport { createStore } from 'redux';\r\nimport reducer from \"../../../store/reducer\";\r\nconst store = createStore(reducer);\r\nconst state = store.getState();\r\nexport default function CreatexpCircle(d, selection, selected_instances,\r\n    lime_data, selected_year, default_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, item_width, item_height, deviation_array, index,threshold) {\r\n    var margin = { item_top_margin: 25, item_bottom_margin: 6, circ_radius: 5, item_left_margin: 6, item_right_margin: 6 }\r\n    console.log(state,'state')\r\n    var feature_name = d[0]\r\n    var feature_contrib_name = d[0] + \"_contribution\"\r\n    var circ_data = []\r\n    var sum_data = []\r\n    default_models.map(model => {\r\n        lime_data[model].map(item => {\r\n            if (parseFloat(item[feature_contrib_name])>0 && item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\r\n                if(item['deviation']<threshold){sum_data.push(parseFloat(item[feature_contrib_name]))}\r\n                item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n                circ_data.push(item)\r\n            }\r\n        })\r\n    })\r\n    // Draw circle starts here\r\n    if (isNaN(lime_data[default_models[0]][0][feature_name])) {\r\n        var yScale = d3.scaleBand().domain(lime_data[default_models[0]].map(item => item[feature_name])).range([margin.item_top_margin, item_height - margin.item_bottom_margin])\r\n    }\r\n    else {\r\n        var yScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[d[0]]))), d3.max(circ_data.map(item => parseFloat(item[d[0]])))]).range([margin.item_top_margin, item_height - margin.item_bottom_margin])\r\n    }\r\n    var xScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[feature_contrib_name]))), d3.max(circ_data.map(item => parseFloat(item[feature_contrib_name])))]).range([margin.item_left_margin, item_width - margin.item_right_margin])\r\n    //----------\r\n    var my_mean = d3.mean(sum_data)\r\n    //----------\r\n    selection.selectAll(\".my_mean_line\").data([0]).join(\"line\").attr(\"class\", \"my_mean_line\").attr(\"x1\", xScale(my_mean)).attr(\"x2\", xScale(my_mean)).attr(\"y1\", 18).attr(\"y2\", item_height).attr('stroke', \"rgb(96, 96, 96,0.5)\").attr('stroke-width', 1)\r\n    var rScale = d3.scalePow().exponent(0.2).domain(d3.extent(deviation_array)).range([state.global_config.max_circle_r, 1])\r\n    var mycircles = selection.selectAll(\".my_circles\").data(circ_data, d => d['id']).join(\r\n        enter => enter.append('circle')\r\n            .attr('id', d => d['id'])\r\n            .attr('class', d => 'my_circles')\r\n            .attr(\"transform\", function (d, i) {\r\n                var x_transform = xScale(parseFloat(d[feature_contrib_name]))\r\n                var y_transform = getRandomArbitrary(margin.item_top_margin, item_height - margin.item_bottom_margin, i)\r\n                return \"translate(\" + x_transform + \",\" + y_transform + \")\";\r\n            })\r\n            .attr(\"r\", d => d['deviation']>threshold?0:rScale(d['deviation']))\r\n            //.attr('test',(d)=>console.log(rScale(50),'rScale',d['deviation']))\r\n        // Update\r\n        , update => update.attr('class', d => d['id'] + ' items circle2 my_circles')\r\n            .transition().duration(anim_config.circle_animation).delay(anim_config.rank_animation + anim_config.deviation_animation + anim_config.feature_animation)\r\n            .attr(\"transform\", function (d, i) {\r\n                var x_transform = xScale(parseFloat(d[feature_contrib_name]))\r\n                var y_transform = getRandomArbitrary(margin.item_top_margin, item_height - margin.item_bottom_margin, i)\r\n                return \"translate(\" + x_transform + \",\" + y_transform + \")\";\r\n            })\r\n            .attr('id', d => d['id'])\r\n            .attr(\"r\", d => d['deviation']>threshold?0:rScale(d['deviation']))\r\n        , exit => exit.remove())\r\n    mycircles.attr(\"myindex\",index).attr('feature_name',d[0]).on('click', d => {\r\n        Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']])\r\n    })\r\n    .attr(\"fill\", (d) => {\r\n        return diverginColor(d['two_realRank']).replace(\")\",\",.7)\")\r\n    })\r\n    .style('stroke',(d) => {\r\n        return diverginColor(d['two_realRank'])\r\n    })\r\n    if(index==0){selection.selectAll(\".avg_text\").data(['avg']).join(\"text\").attr(\"x\", xScale(my_mean)+5).attr(\"class\", \"avg_text\").attr(\"myindex\",index).attr(\"y\", (item_height-margin.item_top_margin-margin.item_bottom_margin)/2+margin.item_top_margin).text('avg').attr('font-size', 12)\r\n    .attr('dominant-baseline', \"middle\").attr('text-anchor','middle').attr('transform',d=>\"rotate(-90,\"+(xScale(my_mean)+5)+\",\"+((item_height-margin.item_top_margin-margin.item_bottom_margin)/2+margin.item_top_margin)+\")\")}\r\n    else{selection.selectAll('.avg_text').remove()}\r\n    // Draw circle ends here\r\n    function getRandomArbitrary(min, max, seed) {\r\n        min = min || 0;\r\n        max = max || 1;\r\n        var rand;\r\n        if (typeof seed === \"number\") {\r\n            seed = (seed * 9301 + 49297) % 233280;\r\n            var rnd = seed / 233280;\r\n            var disp = Math.abs(Math.sin(seed));\r\n            rnd = (rnd + disp) - Math.floor((rnd + disp));\r\n            rand = Math.floor(min + rnd * (max - min + 1));\r\n        } else {\r\n            rand = Math.floor(Math.random() * (max - min + 1)) + min;\r\n        }\r\n        return rand;\r\n    }\r\n}","import * as d3 from 'd3';\r\nimport * as $ from 'jquery';\r\nimport * as d3lasso from 'd3-lasso';\r\nimport { createStore } from 'redux';\r\nimport reducer from \"../../../store/reducer\";\r\nconst store = createStore(reducer);\r\nconst state = store.getState();\r\nexport default function getMdsData(myurl, data) {\r\n  return fetch(myurl, {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n    .then(response => {\r\n      console.log(response)\r\n      return response;\r\n    }).catch(error => console.error('Error: from Json Handler', error));\r\n}\r\nexport function Create_MDS(mds_ref,circle_data,mds_id,diverginColor, Set_clicked_circles,deviation_array) {\r\n  console.log(circle_data,\"MDS_data\")\r\n  var circle_data=circle_data.sort((a,b)=>b['deviation']-a['deviation'])\r\n  var rScale = d3.scalePow().exponent(0.2).domain(d3.extent(deviation_array)).range([state.global_config.max_circle_r, 1])\r\n   \r\n  //---------------------------------------------------------------------------\r\n  // Create mds ends here\r\n  var margin = { item_top_margin: 15, right: 14, bottom: 0, left: 20, circ_radius: 5, item_left_margin: 25, item_right_margin: 3 }\r\n  var w = $(mds_id).width() - margin.item_left_margin\r\n  var h = $(mds_id).height() - margin.item_top_margin * 2\r\n  var r = 5;\r\n  var xScale = d3.scaleLinear().domain(d3.extent(circle_data.map(item => item['x']))).range([r * 2, w - r * 2])\r\n  var yScale = d3.scaleLinear().domain(d3.extent(circle_data.map(item => item['y']))).range([r * 2, h - r * 2])\r\n\r\n  var svg = d3.select(mds_ref.current).style(\"border\", \"1px solid #eaeaea\")\r\n  var circles = svg.selectAll(\"circle\")\r\n    .data(circle_data)\r\n    .join(\"circle\")\r\n    .attr(\"cx\", d => xScale(d['x']))\r\n    .attr(\"cy\", d => yScale(d['y']))\r\n    .attr(\"r\", d=>rScale(d['deviation']))\r\n    .attr(\"fill\", (d) => {\r\n      return diverginColor(d['two_realRank']).replace(\")\",\",.7)\")\r\n  })\r\n  .style('stroke',(d) => {\r\n      return diverginColor(d['two_realRank'])\r\n  })\r\n    .attr('id', d => d['id'])\r\n    .attr('class', 'my_circles')\r\n  // Lasso functions\r\n  var lasso_start = function () {\r\n    lasso.items()\r\n      .classed(\"not_possible\", true)\r\n      .classed(\"selected\", false);\r\n  };\r\n\r\n  var lasso_draw = function () {\r\n    // Style the possible dots\r\n    lasso.possibleItems()\r\n      .classed(\"not_possible\", false)\r\n      .classed(\"possible\", true);\r\n\r\n    // Style the not possible dot\r\n    lasso.notPossibleItems()\r\n      .classed(\"not_possible\", true)\r\n      .classed(\"possible\", false);\r\n  };\r\n\r\n  var lasso_end = function () {\r\n    var selected_ids = []\r\n    lasso.selectedItems().each(function () {\r\n      selected_ids.push(d3.select(this).attr(\"id\"))\r\n    })\r\n    Set_clicked_circles(selected_ids)\r\n    // Reset the color of all dots\r\n    lasso.items()\r\n      .classed(\"not_possible\", false)\r\n      .classed(\"possible\", false);\r\n\r\n    // Style the selected dots\r\n    lasso.selectedItems()\r\n      .classed(\"selected\", true)\r\n\r\n    // Reset the style of the not selected dots\r\n    lasso.notSelectedItems()\r\n\r\n  };\r\n  var lasso = d3lasso.lasso()\r\n    .closePathSelect(true)\r\n    .closePathDistance(100)\r\n    .items(circles)\r\n    .targetArea(svg)\r\n    .on(\"start\", lasso_start)\r\n    .on(\"draw\", lasso_draw)\r\n    .on(\"end\", lasso_end);\r\n  svg.call(lasso);\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\nimport * as algo1 from \"../../../Algorithms/algo1\";\r\nimport * as $ from 'jquery';\r\nimport CreatexpCircle from \"../ExpChart/Create_exp_circles\"\r\nimport getMdsData from \"../ExpChart/MDS\"\r\nimport { Create_MDS } from \"../ExpChart/MDS\"\r\nimport \"../ExpChart/MDS.css\"\r\nimport * as misc_algo from '../misc_algo'\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.line_color = null;\r\n    this.exp = React.createRef()\r\n    this.mds = React.createRef()\r\n    this.state = { mds_height: 110, mouseX: 0, mouseY: 0, excluded_features: [], sorted_features: null, circle_data: null, indexed_features: null, random: true }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ width: window.innerHeight })\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.Createsvg(this.props.model_name, this.props.dragged_features, null)\r\n    /*\r\n    setTimeout(()=>{\r\n      misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\r\n    },3000)\r\n    */\r\n  }\r\n  Createsvg = (model_name, dragged_features, indexed_features) => {\r\n    var self = this\r\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\r\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\r\n    //-------------------- Threshold filter\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n    this.props.default_models.map(model_name => {\r\n      year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[model_name])\r\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n          under_threshold_instances.push(two_realRank)\r\n        }\r\n      })\r\n    })\r\n    selected_instances = selected_instances.filter(item => under_threshold_instances.includes(item))\r\n    //--------------------\r\n\r\n    //------------------------------\r\n    var number_of_charts = 8 + self.state.excluded_features.length\r\n    var features_with_score = algo1.features_with_score(this.props.dataset, [model_name], selected_instances, this.props.selected_year, number_of_charts, this.props.rank_data)\r\n    if (model_name in self.props.dragged_features) { features_with_score = self.props.dragged_features[model_name] }\r\n    var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\r\n    var temp_sorted_features = indexed_features.filter(item => !this.state.excluded_features.includes(item))// Exclude crossed features \r\n    var sorted_features = temp_sorted_features.slice(0, number_of_charts).map((item, index) => [item, index])\r\n    var marginTop = 5;\r\n    var parent_height = parseInt($('.explanation_chart_parent').height()) - this.state.mds_height - parseInt($('.title_p').height())\r\n    var item_width = parseInt($(\"#\" + model_name).width())\r\n    var item_height = (parent_height - 10) / sorted_features.length - marginTop // 10 is the top margin\r\n    var feature_containers = d3.select('#' + model_name).attr('height', parent_height).selectAll(\".feature_items\").data(sorted_features, d => d[0])\r\n      .join(enter => enter.append(\"svg\").attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , update => update.transition().duration(2000).attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , exit => exit.remove()\r\n      )\r\n    feature_containers.attr(\"class\", d => \"feature_items \" + d[0]).attr(\"myindex\", (d, i) => i).attr('feature_name', d => d[0])\r\n    feature_containers.attr(\"add_title_text_and_rect_for_title_text\", function (d, index) {\r\n      d3.select(this).selectAll(\".title_rect\").data([0]).join('rect').attr(\"class\", \"title_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", 18).attr(\"fill\", \"#e2e2e2\").attr(\"y\", 0).attr(\"x\", 0)\r\n      d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr(\"class\", \"title_text\").attr(\"myindex\", index).attr('feature_name', d[0]).attr('x', item_width / 2).text(d[0]).attr(\"dominant-baseline\", \"hanging\")\r\n        .attr(\"y\", 2).attr('text-anchor', 'middle').attr('font-size', 12)\r\n    })\r\n    feature_containers.attr(\"add_cross_button\", function (d, index) {\r\n      d3.select(this).selectAll(\".cross_button\").data([0]).join(\"text\").attr('y', 7.3).attr('dominant-baseline', 'middle').attr(\"myindex\", index).attr('feature_name', d[0]).raise()\r\n        .attr('x', item_width - 15).style('cursor', 'pointer').attr('font-size', 12).attr('fill', 'black')\r\n        .text(\"\\uf410\").attr('class', \"cross_button fa make_cursor\").on('click', () => {\r\n          //alert(\"clicked!\")\r\n          d3.event.preventDefault()\r\n          self.setState({ excluded_features: [...self.state.excluded_features, d[0]] })\r\n        })\r\n    })\r\n    feature_containers.attr(\"add_rect_for_circle_background_and_handle_clicks\", function (d, index) {\r\n      d3.select(this).selectAll(\".circ_rect\").data([0]).join('rect').attr(\"class\", \"circ_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", item_height - 18).attr(\"fill\", \"#f2f2f2\").attr(\"y\", 18).attr(\"x\", 0)\r\n        .on('click', () => {\r\n          if (self.props.clicked_features.includes(d[0])) {\r\n            self.props.Set_clicked_features(self.props.clicked_features.filter(item => item != d[0]))\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").remove()\r\n          }\r\n          else {\r\n            self.props.Set_clicked_features([...self.props.clicked_features, d[0]])\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n          }\r\n        })\r\n        .on('dblclick', () => {\r\n          var feature = d[0]\r\n          var year = self.props.selected_year\r\n          d3.event.preventDefault()\r\n          var temp = [...self.props.dbclicked_features]\r\n          if (!temp.includes(feature)) {\r\n            temp.unshift(feature)\r\n            d3.selectAll(\".rect\").classed(\"exp_chart_clicked\", true)\r\n          }\r\n          self.props.set_dbclicked_features(temp)\r\n          //self.props.set_dbclicked_features([feature])\r\n          //----------------------------Data for popup chart\r\n          var popup_chart_data = {}\r\n          self.props.default_models.filter(item => item != \"ListNet\").map(model_name => {\r\n            var data = []\r\n            if (self.props.histogram_data.length > 0) {\r\n              data = self.props.lime_data[model_name].filter(element => { if ((parseInt(element['1-qid']) == parseInt(year)) && (self.props.histogram_data.includes(parseInt(element['two_realRank'])))) { return element } });\r\n            }\r\n            else {\r\n              data = self.props.lime_data[model_name].filter(element => parseInt(element['1-qid']) == parseInt(year) && selected_instances.includes(parseInt(element['two_realRank'])))\r\n            }\r\n            popup_chart_data[model_name] = data\r\n          })\r\n          self.props.Set_popup_chart_data([popup_chart_data, feature]) // This is to update the pop when the year or anything changes during the pop up is open\r\n          //self.props.Set_popup_chart_data([popup_chart_data, feature])\r\n          self.props.set_pop_over(true)\r\n        })\r\n\r\n    })\r\n    feature_containers.attr(\"CreatexpCircle\", function (d, index) {\r\n      CreatexpCircle(d, d3.select(this), selected_instances, self.props.lime_data, self.props.selected_year, [model_name], self.props.clicked_circles,\r\n        self.props.Set_clicked_circles, self.props.diverginColor, self.props.anim_config, item_width, item_height, self.props.deviation_array, index,self.props.threshold)\r\n    }).attr(\"height\", item_height).attr('width', item_width)\r\n    feature_containers.attr('check_clicked_features', d => {\r\n      if (self.props.clicked_features.includes(d[0])) {\r\n        d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n      }\r\n    })\r\n    feature_containers.attr('add_drag_drop', function (d, index) {\r\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", item_width - 18).attr(\"height\", 18).style(\"fill\", \"transparent\").style('cursor', 'move')\r\n        .call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended).container(this.parentNode.parentNode)) // Set the parent node based on which the distance will be calculated\r\n      var deltaY, is_dragging;\r\n      function dragstarted(event, d) {\r\n        //d3.select(this).attr(\"width\", '100%').attr(\"height\", '100%').style('fill','rgb(249, 195, 87,0.3)')\r\n        d3.select(this.parentNode).raise()\r\n        deltaY = d3.select(this.parentNode).attr(\"y\") - d3.event.y;\r\n      }\r\n      function dragged(event, d) {\r\n        is_dragging = true\r\n        d3.select(this.parentNode).raise()\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n      }\r\n      function dragended(event, d) {\r\n        var origin_index = parseInt(d3.select(this).attr(\"myindex\")); d3.select(this.parentNode).lower();\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n        var difference = parseInt(d3.select(document.elementFromPoint(d3.event.sourceEvent.clientX, d3.event.sourceEvent.clientY)).attr(\"myindex\")) - origin_index\r\n        //if (isNaN(dest_index)) { alert(\"Please drop properly!\"); dest_index = origin_index }\r\n        var origin_feature = d3.select(this).attr(\"feature_name\")\r\n\r\n        var temp1 = {}\r\n        var number_of_charts = 15 // change this number to have features when cross button clicked\r\n        self.props.default_models.map(model_name => {\r\n          var features_with_score = algo1.features_with_score(self.props.dataset, [model_name], selected_instances, self.props.selected_year, number_of_charts, self.props.rank_data)\r\n          if (model_name in self.props.dragged_features) {\r\n            features_with_score = self.props.dragged_features[model_name]\r\n          }\r\n          var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\r\n          var origin_index = indexed_features.indexOf(origin_feature)\r\n          var dest_index = origin_index + difference\r\n          if (dest_index < 0) { var dest_feature = indexed_features[0] }\r\n          else if (dest_index > number_of_charts - 1) { var dest_feature = indexed_features[number_of_charts - 1] }\r\n          else { var dest_feature = indexed_features[dest_index] }\r\n\r\n          features_with_score[origin_feature] = features_with_score[origin_feature] - difference\r\n          features_with_score[dest_feature] = features_with_score[dest_feature] + difference\r\n          temp1[model_name] = features_with_score\r\n        })\r\n        self.props.Set_dragged_features(temp1)\r\n        //-------------------------------------\r\n        d3.select(this).raise()\r\n      }\r\n    })\r\n    //--------------------------------------MDS Plot-------------------------------------//\r\n    var feature_contrib_data_for_mds = this.props.lime_data[model_name].filter(item => item['1-qid'] == this.props.selected_year && selected_instances.includes(item['two_realRank']))\r\n    getMdsData(this.props.url, { \"data\": feature_contrib_data_for_mds, \"weight\": features_with_score }).then(data => {\r\n      if (typeof data != 'undefined') {\r\n        var MDS_response = JSON.parse(data.response)\r\n        var circle_data = feature_contrib_data_for_mds.map((item, index) => {\r\n          item['x'] = MDS_response[index][0]\r\n          item['y'] = MDS_response[index][1]\r\n          item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + item[\"model\"].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n          return item\r\n        })\r\n        Create_MDS(this.mds, circle_data, \"#mds\" + model_name, self.props.diverginColor, this.props.Set_clicked_circles,this.props.deviation_array)\r\n        misc_algo.handle_transparency(\"circle2\", self.props.clicked_circles, self.props.anim_config)\r\n      }\r\n    })\r\n  }\r\n  //------------------------------\r\n  render() {\r\n    return (\r\n      <div key={this.props.model_name} className={\"explanation_chart_parent exp\" + this.props.model_name} style={{ width: '100%', height: '100%', \"border\": this.props.mode == 'Model' ? \"2px solid #e2e2e2\" : 'none', padding: \"2px 5px\" }}>\r\n        <p className=\"title_p\" style={{ padding: 0, margin: 0 }}>{this.props.model_name}</p>\r\n        <svg ref={this.mds} id={\"mds\" + this.props.model_name} style={{ margin: 0, width: \"100%\", height: this.state.mds_height }}></svg>\r\n        <svg ref={this.exp} id={this.props.model_name} style={{ marginTop: 0, width: \"100%\" }}></svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    deviation_array: state.deviation_array,\r\n    original_data: state.original_data,\r\n    time_mode_model: state.time_mode_model,\r\n    chart_scale_type: state.chart_scale_type,\r\n    dataset: state.dataset,\r\n    histogram_data: state.histogram_data,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    show: state.show,\r\n    average_m: state.average_m,\r\n    average_y: state.average_y,\r\n    lime_data: state.lime_data,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    clicked_features: state.clicked_features,\r\n    threshold: state.threshold,\r\n    mode: state.mode,\r\n    dbclicked_features: state.dbclicked_features,\r\n    dragged_features: state.dragged_features,\r\n    url: state.url,\r\n    default_models: state.default_models,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_dragged_features: (val) => dispatch({ type: \"dragged_features\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\r\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\r\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\r\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\r\n    Set_popup_chart_data: (val) => dispatch({ type: \"popup_chart_data\", value: val }),\r\n    set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React from 'react';\r\nimport \"./YearModelSelection.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport * as d3 from 'd3';\r\nimport * as algo1 from \"../../../../Algorithms/algo1\";\r\nfunction YearModelSelection(props) {\r\n  var handle_year_click = (year) => {\r\n    props.Set_selected_year(year)\r\n    sortModels(year)\r\n  }\r\n  var handle_model_click = (model) => {\r\n    if (props.default_models.includes(model)) {\r\n      props.Set_default_models(props.default_models.filter(item => item != model))\r\n    }\r\n    else {\r\n      var temp_Models = algo1.sort(props.sort_by, props.state_range, [...props.default_models, model], props.selected_year, props.grouped_by_year_data)[0];\r\n      var default_model_scores = algo1.sort(props.sort_by, props.state_range, [...props.default_models, model], props.selected_year, props.grouped_by_year_data)[1];\r\n      props.Set_default_model_scores(default_model_scores)\r\n      props.Set_default_models([...temp_Models])\r\n    }\r\n  }\r\n  const sortModels = (selected_year) => {\r\n    var temp_Models = algo1.sort(props.sort_by, props.state_range, props.default_models, selected_year, props.grouped_by_year_data)[0];\r\n    var default_model_scores = algo1.sort(props.sort_by, props.state_range, props.default_models, selected_year, props.grouped_by_year_data)[1];\r\n    props.Set_default_model_scores(default_model_scores)\r\n    props.Set_default_models([...temp_Models])\r\n    console.log(temp_Models, default_model_scores, 'temp_model')\r\n  };\r\n  return (\r\n    <div className=\"model_topbar\" style={{ width: \"100%\", marginBottom: 2, display: 'flex', justifyContent: \"center\", margin: 0 }}>\r\n      <div ><h5 style={{ display: \"inline-block\", marginLeft: 0, marginRight: 3, fontSize: 16, fontWeight: 600 }}>Years: </h5>{props.years_for_dropdown.map(item => <p className={props.selected_year == item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_year_click(item)}>{item}</p>)}</div>\r\n      <div style={{ marginLeft: 20 }}><h5 style={{ display: \"inline-block\", marginLeft: 0, marginRight: 3, fontSize: 16, fontWeight: 600 }}>Models:</h5>{props.all_models.map(item => <p modelName={item} className={props.default_models.includes(item) ? \"years_p_selected years_p model_p\" : \"years_p model_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</div>\r\n    </div>\r\n  );\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    state_range: state.state_range,\r\n    all_models: state.all_models,\r\n    selected_year: state.selected_year,\r\n    years_for_dropdown: state.years_for_dropdown,\r\n    default_models: state.default_models,\r\n    sort_by: state.sort_by,\r\n    grouped_by_year_data: state.grouped_by_year_data\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\r\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\r\n\r\n//https://material-ui.com/api/slider/\r\n//https://material-ui.com/components/expansion-panels/\r\n//https://material-ui.com/api/checkbox/\r\n//https://material-ui.com/components/radio-buttons/","import * as d3 from 'd3';\r\nvar CreateCatChart = (data, feature, scatterplot_data,props) => {\r\n    var rScale = d3.scalePow().exponent(0.2).domain(d3.extent(props.deviation_array)).range([8, 1])\r\n    var feature_contribute = feature + \"_contribution\"\r\n    var margin = { top: 0, right: 30, bottom: 75, left: 50, space_for_hist: 50 }, width = 520 - margin.left - margin.right, height = 270 - margin.top - margin.bottom;\r\n    var barplot_data = {}\r\n    data = data.filter(d => parseFloat(d[feature_contribute]) > 0)\r\n    data.map(item => { if (barplot_data[item[feature]] > 0) { barplot_data[item[feature]] += 1 } else { barplot_data[item[feature]] = 1 } })\r\n\r\n    var temp_x = Object.keys(barplot_data),\r\n        temp_y = Object.values(barplot_data),\r\n        y = d3.scaleLinear().domain([d3.min(temp_y), d3.max(temp_y)]).range([height, 0]).nice(); // circles will start from y position 10 and go upto height-10\r\n\r\n    var x = d3.scaleBand().domain(temp_x).range([0, width]).padding(0.1);\r\n    // add the x Axis\r\n    //------------------------------------------------------------- All svgs\r\n    var parent_svg = d3.select(\"#\" + props.myid).attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom + margin.space_for_hist),\r\n        svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"y\", margin.space_for_hist).attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\",\r\n            \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n\r\n    //------------------------------------------------------------------------------------------------------ Create Histogram starts here\r\n    var hist_height = margin.space_for_hist\r\n    y = d3.scaleLinear().domain([0, d3.max(temp_y)]).range([hist_height, 0]).nice();\r\n    var svg0 = parent_svg.selectAll('.svg0').data([0]).join('svg').attr(\"class\", \"svg0\").selectAll(\".myg0\").data([0]).join('g').attr(\"class\", \"myg0\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n    // Add line on the bottom of the histogram\r\n    svg0.selectAll(\".myline\").data([0]).join('line').attr(\"class\", \"myline\").attr(\"x1\", 0).attr(\"y1\", margin.space_for_hist).attr(\"x2\", width).attr(\"y2\", margin.space_for_hist).attr(\"stroke\", \"#EBEBEB\");\r\n    svg0.selectAll(\"rect\").data(Object.entries(barplot_data)).join('rect')\r\n        .attr(\"x\", d => x(d[0]))\r\n        .attr(\"fill\", \"#b7b7b7\")\r\n        .attr(\"width\", x.bandwidth())\r\n        .attr(\"y\", d => y(d[1]))\r\n        .attr(\"height\", d => hist_height - y(d[1]));\r\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here\r\n\r\n    var svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\",\r\n        \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n    svg1.selectAll(\".myline2\").data([0]).join('line').attr(\"class\", \"myline2\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\r\n    svg1.selectAll(\".myline3\").data([0]).join('line').attr(\"class\", \"myline3\").attr(\"x1\", 0).attr(\"y1\", height).attr(\"x2\", width).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\r\n\r\n\r\n    //------------- Add Y axis\r\n    var y2 = d3.scaleOrdinal().domain([\".\", \"0\", \"..\"]).range([height / 4, height / 2, (3 * height) / 4]); // circles will start from y position 10 and go upto height-10\r\n    svg1.selectAll(\".myYaxis\").data([0]).join('g').attr(\"class\", \"myYaxis\").call(d3.axisLeft(y2).tickSize(-width * 1.0).ticks(1).tickValues([\"0\"]).tickFormat(d => d))\r\n        .select(\".domain\").remove()\r\n    svg1.selectAll(\".myYaxis\").selectAll('text').remove()\r\n    d3.selectAll('.svg11').selectAll('.myYtext').data([[\"++ ve\", height * .25], [\"+ ve\", height * .75]]).join(\"text\").attr(\"class\", \"myYtext\")\r\n        .attr(\"x\", 45).attr(\"y\", (d, i) => d[1] + 4).text(d => d[0]).attr('font-size', 14).attr(\"text-anchor\", \"end\")\r\n\r\n    //------------- Add X axis\r\n    svg1.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(d3.axisBottom(x).tickSize(-height * 1.3)).selectAll(\"text\")\r\n        .style(\"text-anchor\", \"end\")\r\n        .attr(\"dx\", \"-.8em\")\r\n        .attr(\"dy\", \"0em\")\r\n        .attr(\"transform\", \"rotate(-90)\")\r\n        .selectAll(\".tick line\").remove()\r\n    svg1.selectAll(\".domain\").remove()\r\n    svg1.selectAll(\".tick line\").attr(\"stroke\", \"#EBEBEB\")\r\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here\r\n    //------------------------------------------------------------------------------------------------------ Scatterplot starts here\r\n    svg1.selectAll(\".scatterplot_g\").data(scatterplot_data).join('g').attr(\"id\", d => d[0] + \"scatterplot_g_id\").attr(\"class\", \"scatterplot_g\").attr(\"ax\", function (d) {\r\n        var temp_y = d[1].map(item => parseFloat(item[feature + \"_contribution\"])) // d[1] \r\n        y = d3.scaleLinear().domain([d3.min(temp_y), d3.max(temp_y)]).range([height, 0]).nice();\r\n        var circle_data=d[1].sort((a,b)=>a['deviation']-b['deviation'])\r\n        d3.select(this).selectAll('circle').data(circle_data)\r\n            .join(\"circle\")\r\n            .attr(\"cx\", (d, i) => {\r\n                return x(d[feature]) + x.bandwidth() / 2\r\n            })\r\n            .attr(\"cy\", (d, i) => {\r\n                if (y(parseFloat(d[feature_contribute])) < 10) {\r\n                    return 10;\r\n                }\r\n                else if (y(parseFloat(d[feature_contribute])) > (height - 10)) {\r\n                    return height - 10;\r\n                }\r\n                return y(parseFloat(d[feature_contribute])) - 0\r\n\r\n            })\r\n            .attr(\"actual_Y_value\", d => d[feature_contribute])\r\n            .attr(\"r\", d => parseFloat(d[feature_contribute]) <= 0 ? 0 : rScale(d['deviation']))\r\n            .attr(\"fill\", (d) => {\r\n                return props.diverginColor(d['two_realRank']).replace(\")\",\",.7)\")\r\n            })\r\n            .style('stroke',(d) => {\r\n                return props.diverginColor(d['two_realRank'])\r\n            })\r\n            .attr('class', d => 'my_circles')\r\n            .attr(\"id\", d => d['id'])\r\n            .on('click', d => {\r\n                props.Set_clicked_circles(props.clicked_circles.includes(d['id']) ? props.clicked_circles.filter(item => item != d['id']) : [...props.clicked_circles, d['id']])\r\n            })\r\n    })\r\n\r\n    // Define the div for the tooltip\r\n    var div = d3.select(\"body\").append(\"div\")\r\n        .attr(\"class\", \"tooltip2\")\r\n        .style(\"opacity\", 0);\r\n    d3.selectAll('.exp_circles')\r\n        .on(\"mouseover\", function (d) {\r\n            div.transition()\r\n                .duration(200)\r\n                .style(\"opacity\", .9);\r\n            div.html(\"<p>\" + d['State'] + \"</p>\" + \"<p>\" + \"Model: \" + d3.select(this).attr('dataset_name') + \"</p>\")\r\n                //div.html(d['State'])\r\n                .style(\"left\", (d3.event.pageX) + \"px\")\r\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n        })\r\n        .on(\"mouseout\", function (d) {\r\n            d3.selectAll('.tooltip2').transition()\r\n                .duration(500)\r\n                .style(\"opacity\", 0);\r\n        })\r\n\r\n    //------------------------------------------------------------------------------------------------------ Scatterplot ends here\r\n}\r\nexport default CreateCatChart","import { width } from '@mui/system';\r\nimport * as d3 from 'd3';\r\nimport SimpleLinearRegression from 'ml-regression-simple-linear';\r\nvar CreateNumChart = (data, feature, scatterplot_data, props) => {\r\n    var rScale = d3.scalePow().exponent(0.2).domain(d3.extent(props.deviation_array)).range([8, 1])\r\n    var feature_contribute = feature + \"_contribution\"\r\n    var scatterplot_data = scatterplot_data.map(data_arr => {\r\n        var temp = data_arr[1].filter(item => item['deviation'] < props.threshold && parseFloat(item[feature_contribute]) > 0)\r\n        return [data_arr[0], temp]\r\n    })\r\n    // set the dimensions and margins of the graph\r\n    var margin = { top: 0, right: 30, bottom: 45, left: 50, space_for_hist: 50 },\r\n        feature_width = 520 - margin.left - margin.right,\r\n        height = 250 - margin.top - margin.bottom;\r\n    \r\n    data = data.filter(d => parseFloat(d[feature_contribute]) > 0)\r\n    \r\n    var data_for_x_axis = data.map(item => parseFloat(item[feature])),\r\n        data_for_y_axis = data.map(item => parseFloat(item[feature_contribute]))\r\n    \r\n    var xScale = d3.scaleLinear().domain([d3.min(data_for_x_axis), d3.max(data_for_x_axis)]).range([0, feature_width]).nice(),\r\n        yScale = d3.scaleLinear().domain([d3.min(data_for_y_axis), d3.max(data_for_y_axis)]).range([height, 0]).nice(); // circles will start from y position 10 and go upto height-10\r\n    //-------------------------------------------------------------All svgs\r\n    var parent_svg = d3.select(\"#\" + props.myid).attr(\"width\", feature_width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom + margin.space_for_hist),\r\n        svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"y\", margin.space_for_hist).attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n    \r\n    //------------------------------------------------------------------------------------------------------Create the areaChart starts here\r\n    var histogram = d3.histogram().value(d => d).domain(xScale.domain())\r\n    //.thresholds(xScale.ticks(5))\r\n    var bins = histogram(data_for_x_axis)\r\n    var svg0 = parent_svg.selectAll('.svg0').data([0]).join('svg').attr(\"class\", \"svg0\").selectAll(\".myg0\").data([0]).join('g').attr(\"class\", \"myg0\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n    svg0.selectAll(\".myline\").data([0]).join('line').attr(\"class\", \"myline\").attr(\"x1\", 0).attr(\"y1\", margin.space_for_hist).attr(\"x2\", feature_width).attr(\"y2\", margin.space_for_hist).attr(\"stroke\", \"#EBEBEB\") // // Add line on the bottom of the histogram\r\n\r\n    var histogram = d3.histogram().value(d => d).domain(xScale.domain())\r\n    //.thresholds(xScale.ticks(25))\r\n    var binned_data = histogram(data_for_x_axis)\r\n    \r\n    var area_chart_data = []\r\n    binned_data.map((item, i) => area_chart_data.push([item.x0, item.length]))\r\n    var xScale = d3.scaleLinear().domain(d3.extent(area_chart_data.map(item => item[0]))).range([0, feature_width + 1])\r\n    var yScale = d3.scaleLinear().domain([0, d3.max(area_chart_data.map(item => item[1]))]).range([margin.space_for_hist, 0])\r\n    const areaGenerator = d3.area().curve(d3.curveMonotoneX).x(d => xScale(d[0])).y0(yScale(0)).y1(d => yScale(d[1]))\r\n\r\n    svg0.append(\"path\").attr('transform', 'translate(0,' + margin.top + ')')\r\n        .attr(\"d\", areaGenerator(area_chart_data))\r\n        .style(\"fill\", \"gray\");\r\n    //------------------------------------------------------------------------------------------------------ Create the areaChart ends here\r\n    var svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\",\r\n        \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n    svg1.selectAll(\".myline2\").data([0]).join('line').attr(\"class\", \"myline2\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\r\n    svg1.selectAll(\".myline3\").data([0]).join('line').attr(\"class\", \"myline3\").attr(\"x1\", 0).attr(\"y1\", height).attr(\"x2\", feature_width).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\r\n\r\n    //------------- Add X axis\r\n    if (d3.max(d3.max(bins)) > 1000) {\r\n        svg1.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n            .call(d3.axisBottom(xScale).tickSize(-height * 1.3).tickValues(bins.map(item => item['x1'])).tickFormat(d3.format(\".2s\")))\r\n            .select(\".domain\").remove()\r\n    }\r\n    else {\r\n        svg1.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\r\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n            .call(d3.axisBottom(xScale).tickSize(-height * 1.3).tickValues(bins.map(item => item['x1'])))\r\n            .select(\".domain\").remove()\r\n    }\r\n    svg1.selectAll(\".tick line\").attr(\"stroke\", \"#EBEBEB\")\r\n\r\n    //------------------------------------------------------------------------------------------------------ Scatterplot starts here\r\n    svg1.selectAll(\".scatterplot_g\").data(scatterplot_data).join('g').attr(\"id\", d => d[0] + \"scatterplot_g_id\").attr(\"class\", \"scatterplot_g\").attr(\"ax\", function (d) {\r\n        var data_for_x_axis2 = d[1].map(item => parseFloat(item[feature]))\r\n        var data_for_y_axis2 = d[1].map(item => parseFloat(item[feature_contribute]))\r\n\r\n        var xScale2 = d3.scaleLinear().domain([d3.min(data_for_x_axis2), d3.max(data_for_x_axis2)]).range([0, feature_width]).nice() // This scaling is for individual model\r\n        var yScale2 = d3.scaleLinear().domain([d3.min(data_for_y_axis2), d3.max(data_for_y_axis2)]).range([height, 0]).nice(); // This scaling is for individual model\r\n        d3.select(this).selectAll('circle').data(d[1])\r\n            .join(\"circle\")\r\n            .attr(\"cx\", (d, i) => xScale2(d[feature]))\r\n            .attr(\"cy\", (d, i) => {\r\n                if (yScale2(parseFloat(d[feature_contribute])) < 10) {\r\n                    return 10;\r\n                }\r\n                else if (yScale2(parseFloat(d[feature_contribute])) > (height - 10)) {\r\n                    return height - 10;\r\n                }\r\n                return yScale2(parseFloat(d[feature_contribute])) - 0\r\n\r\n            })\r\n            .attr(\"actual_Y_value\", d => d[feature_contribute] + \" : x value : \" + d[feature])\r\n            //.attr(\"r\", 4)\r\n            .attr(\"r\", d => parseFloat(d[feature_contribute]) <= 0 ? 0 : rScale(d['deviation']))\r\n            .attr(\"fill\", (d) => {\r\n                return props.diverginColor(d['two_realRank']).replace(\")\",\",.6)\")\r\n            })\r\n            .style('stroke',(d) => {\r\n                return props.diverginColor(d['two_realRank'])\r\n            })\r\n            .attr('class', d => 'my_circles')\r\n            .attr(\"id\", d => d['id'])\r\n            .on('click', d => {\r\n                props.Set_clicked_circles(props.clicked_circles.includes(d['id']) ? props.clicked_circles.filter(item => item != d['id']) : [...props.clicked_circles, d['id']])\r\n            })\r\n    })\r\n    //------------------------------------------------------------------------------------------------------ Regression Line\r\n    var xScale3 = d3.scaleLinear().domain([d3.min(data_for_x_axis), d3.max(data_for_x_axis)]).range([0, feature_width]).nice() // This scaling is only for regression line\r\n    var yScale3 = d3.scaleLinear().domain([d3.min(data_for_y_axis), d3.max(data_for_y_axis)]).range([height, 0]).nice();\r\n    const regression = new SimpleLinearRegression(data_for_x_axis, data_for_y_axis);\r\n    var predicted_data = data_for_x_axis.map(item => [item, regression.predict(item)])\r\n    predicted_data=predicted_data.filter(item=>yScale3(item[1])<height).sort((a,b)=>a[0]-b[0])\r\n    var lineGenerator = d3.line().x(d => xScale3(d[0])).y(d => yScale3(d[1]))\r\n    var pathData = lineGenerator(predicted_data)\r\n    console.log(data_for_x_axis,\"data_for_x_axis\",predicted_data,pathData)\r\n    svg1.selectAll('.regression_path').data([0]).join('path').attr('class','regression_path').attr('d', pathData).attr('stroke', 'rgb(188, 188, 188,0.5)').attr('stroke-width',3);\r\n}\r\nexport default CreateNumChart","import { merge } from 'jquery';\r\nimport React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as misc_algo from '../misc_algo'\r\nimport CreateCatChart from './CreateCatChart'\r\nimport CreateNumChart from './CreateNumChart'\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ a: 5 })\r\n  }\r\n  componentDidUpdate() {\r\n    //console.log(this.props.default_models,'popover',this.props.popup_chart_data[0])\r\n    var temp_dict = {}\r\n    this.props.default_models.filter(item => item != \"ListNet\").map(model => {\r\n      temp_dict[model] = this.props.popup_chart_data[0][model].filter(item=>item['deviation']<this.props.threshold).map(item=>{\r\n        item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n        return item\r\n      })\r\n    })\r\n    var merged_arr = [].concat.apply([], Object.values(temp_dict))\r\n    var scatterplot_data = Object.entries(this.props.popup_chart_data[0]).filter(item => this.props.pop_over_models.includes(item[0]))\r\n    console.log(merged_arr,temp_dict,'temp',scatterplot_data)\r\n    //----------------------------------------------------------------------------------------------------------Call createChart\r\n    if (merged_arr.length > 0) { // This is to avoid the error caused by the next line\r\n      if (isNaN(merged_arr[0][this.props.popup_chart_data[1]])) {\r\n        CreateCatChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\r\n      }\r\n      else {\r\n        CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\r\n      }\r\n    }\r\n    else {\r\n      CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array) // calling the function to set the  graph empty when all models are unselected\r\n    }\r\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div key={this.props.popup_chart_data[1]} style={{ margin: 10, padding: 10, border: this.props.index == 0 ? \"3px solid #e5e5e5\" : \"white\" }}>\r\n        <svg id={this.props.myid}> </svg>\r\n        <p style={{ color: \"#4f4c4c\", marginLeft: \"42%\", marginTop: -25, marginBottom: 0 }}>{this.props.popup_chart_data[1]}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    //popup_chart_data: state.popup_chart_data,\r\n    pop_over_models: state.pop_over_models,\r\n    clicked_circles: state.clicked_circles,\r\n    threshold: state.threshold,\r\n    anim_config:state.anim_config,\r\n    deviation_array: state.deviation_array,\r\n  }\r\n}\r\n//item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { connect } from \"react-redux\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nfunction FadeMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  //------------For list and chckbox\r\n  const [checked, setChecked] = React.useState([0]);\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setChecked(newChecked);\r\n  };\r\n  //----------------\r\n  const checkboxChanged = (event) => {\r\n    let temp_Models=[...props.pop_over_models].filter(item=>item!=\"ListNet\")\r\n    if (temp_Models.includes(event.target.value)) {\r\n      temp_Models = props.pop_over_models.filter(item => item != event.target.value)\r\n      props.Set_pop_over_models(temp_Models)\r\n    }\r\n    else {\r\n      temp_Models.push(event.target.value)\r\n      props.Set_pop_over_models(temp_Models)\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        Filter Models\r\n        <ArrowDropDownIcon></ArrowDropDownIcon>\r\n      </Button>\r\n      <Menu\r\n        id=\"fade-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n      >\r\n        <div className=\"CheckboxContainer\">\r\n          <List>\r\n            {props.default_models.map((value) => {\r\n              const labelId = `checkbox-list-label-${value}`;\r\n              return (\r\n                <ListItem key={value} role={undefined} onClick={handleToggle(value)}>\r\n                  <Checkbox\r\n                    checked={props.pop_over_models.includes(value)}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                    value={value}\r\n                    onChange={(event, value) => {\r\n                      checkboxChanged(event, value)\r\n                    }\r\n                    }\r\n                  />\r\n                  <p className=\"list_item_label\" id={labelId}>{value}</p>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    pop_over_models:state.pop_over_models\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);\r\n//https://material-ui.com/components/menus/\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from \"react-redux\";\r\nimport Chart_pop from './02Charts'\r\nimport Draggable from 'react-draggable';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport FilterModel from \"./FilterModel\"\r\nexport function SimplePopover(props) {\r\n    console.log(props.default_models, 'popover')\r\n    const handleClose = () => {\r\n        props.set_pop_over(false)\r\n        props.set_dbclicked_features([])\r\n    };\r\n    return (\r\n        <div className=\"pop_over\" style={{ position: \"relative\" }}>\r\n            {props.pop_over == true ?\r\n                <div style={{ top: \"2%\", left: \"14%\", position: \"fixed\", pointerEvents: \"none\", backgroundColor: \"transparent\" }}>\r\n                    <Draggable>\r\n                        <Grid style={{ backgroundColor: \"#ffffff\", boxShadow: \"3px 2px 15px -7px #000000\", pointerEvents: \"auto\" }}>\r\n                            <Grid container style={{ borderBottom: \"1px solid #e2e2e2\", marginBottom: 20 }}\r\n                                direction=\"row\"\r\n                                justify=\"space-between\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <FilterModel default_models={props.default_models}></FilterModel>\r\n                                <Button color=\"secondary\" id=\"draggable-dialog-title\" onClick={handleClose}>close</Button>\r\n                            </Grid>\r\n                            {\r\n                                props.mode == \"Model\" ? <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\r\n                                    {\r\n                                        props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Chart_pop\r\n                                            index={index}\r\n                                            popup_chart_data={[props.popup_chart_data[0], item]} default_models={props.default_models}\r\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')} diverginColor={props.diverginColor}\r\n                                        ></Chart_pop>) : <Chart_pop popup_chart_data={props.popup_chart_data} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\r\n                                    }\r\n                                </Grid> : null\r\n                            }\r\n                            {\r\n                                props.mode == \"Ranges\" ? <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\r\n                                    {\r\n                                        props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Chart_pop\r\n                                            index={index}\r\n                                            popup_chart_data={[props.popup_chart_data[0], item]} default_models={props.default_models}\r\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')} diverginColor={props.diverginColor}\r\n                                        ></Chart_pop>) : <Chart_pop popup_chart_data={props.popup_chart_data} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\r\n                                    }\r\n                                </Grid> : null\r\n                            }\r\n                            {\r\n                                props.mode == \"Time\" ? <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\r\n                                    {\r\n                                        props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Chart_pop\r\n                                            index={index}\r\n                                            popup_chart_data={[props.popup_chart_data[0], item]} default_models={props.default_models}\r\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')} diverginColor={props.diverginColor}\r\n                                        ></Chart_pop>) : <Chart_pop popup_chart_data={props.popup_chart_data} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\r\n                                    }\r\n                                </Grid> : null\r\n                            }\r\n                        </Grid>\r\n                    </Draggable>\r\n                </div> : null}\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        popup_chart_data: state.popup_chart_data,\r\n        pop_over: state.pop_over,\r\n        dbclicked_features: state.dbclicked_features,\r\n        mode: state.mode,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\r\n        set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\r\n        set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SimplePopover);\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\r\nimport * as misc_algo from '../misc_algo'\r\nimport * as $ from 'jquery';\r\nimport ModelSlider from './ModelSlider';\r\nimport ExpChart from './ExpChartComponent';\r\nimport './ModelSlider.scss';\r\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\r\nimport Grid from '@mui/material/Grid';\r\nimport Popover from '../Popover/01Popover';\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.line_color = null;\r\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\r\n  }\r\n  componentDidMount() { this.setState({ width: window.innerHeight }) }\r\n  shouldComponentUpdate(prevProps, prevState) { return true; }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    var self=this\r\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\r\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\r\n\r\n    //--------------------\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n\r\n    //-------------------- Threshold filter\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n    this.props.default_models.map(model_name => {\r\n      year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[model_name])\r\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n          under_threshold_instances.push(two_realRank)\r\n        }\r\n      })\r\n    })\r\n    selected_instances = selected_instances.filter(item => under_threshold_instances.includes(item))\r\n    deviation_chart.Create_deviation_chart('dev_plot_container_svg', 'exp', selected_instances, this.props.original_data, this.props.default_models, this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\r\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\r\n    //-------------------------Handle model mousever start here \r\n    d3.selectAll(\".model_p\").on('mouseover',function(){\r\n      var selectedModel=d3.select(this).attr('modelName')\r\n      if(self.props.default_models.includes(selectedModel)){\r\n        d3.selectAll('.deviation_circles').attr('opacity',0.1)\r\n        d3.selectAll('.'+selectedModel).attr('opacity',1)  \r\n      }\r\n    })\r\n    .on('mouseout',function(){\r\n      d3.selectAll('.deviation_circles').attr('opacity',1)\r\n    })\r\n  //-------------------------Handle model mousever start here\r\n  }\r\n  render() {\r\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\r\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\r\n    //--------------------\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n    this.props.Set_selected_instances(selected_instances)\r\n    //--------------------\r\n    var deviation_array = []\r\n    this.props.default_models.map(model => {\r\n      this.props.lime_data[model].map(item => {\r\n        if (item['1-qid'] == this.props.selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\r\n          deviation_array.push(item['deviation'])\r\n        }\r\n      })\r\n    })\r\n    this.props.Set_deviation_array(deviation_array)\r\n    //console.log('deviation_array: ', d3.extent(deviation_array))\r\n    //--------------------\r\n    return (\r\n      <Grid className=\"ModelChartParent\" container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ height: '100%', width: '100%', backgroundColor: 'white', margin: 2, padding: 2, boxShadow: \"-2px 1px 4px -1px white\" }}> {/* This model chart's height and width is the parent*/}\r\n        <Grid item className=\"left_container\" style={{width:400, backgroundColor: \"#fcfcfc\" }}>\r\n          {/* The deviation plot container starts below */}\r\n          <div className=\"year_and_model_selector_and_slider_container\"> {/* This is used to calculate the deviation plot height */}\r\n            <YearModelSelection></YearModelSelection><ModelSlider></ModelSlider>\r\n          </div>\r\n          {/* The deviation plot container starts below */}\r\n          <div class=\"deviation_plot_container_div\" style={{ width: \"100%\", height: $('.ModelChartParent').height() - $('.year_and_model_selector_and_slider_container').height(), marginBottom: 0, overflow: 'scroll' }}>\r\n            <svg id=\"dev_plot_container_svg\" style={{ width: \"100%\", overflow: 'hidden' }}></svg>\r\n          </div>\r\n          {/* The deviation plot container ends here */}\r\n        </Grid>\r\n        {/* The explanation plot container starts below */}\r\n        {this.props.rank_data != null ?\r\n          <Grid className=\"right_container\" item container xs direction=\"row\" columnSpacing={1} style={{ height: '100%'}}>\r\n              {\r\n                this.props.default_models.map((model_name, index) => {\r\n                  return <Grid item xs={12/this.props.default_models.length} style={{height: \"100%\"}}>\r\n                    <ExpChart diverginColor={diverginColor} exp_id={\"exp\" + index} default_models={this.props.default_models} state_range={this.props.state_range} selected_year={this.props.selected_year} model_name={model_name}></ExpChart>\r\n                  </Grid>\r\n                })\r\n              }\r\n            \r\n          </Grid> : null}\r\n        {/* The explanation plot container ends here */}\r\n        <Popover diverginColor={diverginColor} default_models={this.props.default_models}></Popover>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    default_models: state.default_models,\r\n    histogram_data: state.histogram_data,\r\n    state_range: state.state_range,\r\n    selected_year: state.selected_year,\r\n    lime_data: state.lime_data,\r\n    default_models: state.default_models,\r\n    original_data: state.original_data,\r\n    dataset: state.dataset,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    average_m: state.average_m,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    threshold: state.threshold\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\r\n    Set_deviation_array: (val) => dispatch({ type: \"deviation_array\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './ModelSlider.scss';\r\nimport * as $ from 'jquery'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tRoot: {\r\n        marginBottom: 35,\r\n    },\r\n    rang_input: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\nfunction Modes(props) {\r\n    const classes = useStyles();\r\n    // states \r\n    const [sliderRange, set_sliderRange] = React.useState(props.range_mode_range1);\r\n    //-----------------------------------------------------------------\r\n    var temp_marks = [];\r\n    var step = (props.slider_max - 1) / (6 - 1);\r\n    for (var i = 0; i < 6; i++) {\r\n        temp_marks.push(1 + (step * i));\r\n    }\r\n    var marks = temp_marks.map(item => {\r\n        var myitem = parseInt(item)\r\n        return { value: myitem, label: myitem }\r\n    })\r\n    //console.log(props.marks)\r\n    //-----------------------------------------------------------------\r\n    return (\r\n        <div className=\"Modelslider\" \r\n        style={{height: 70, width: '100%',marginBottom:5,padding: 30, border: \"1px solid rgb(178, 178, 178,0.5)\"}}>\r\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([\"\", sliderRange[1]])\r\n                        } else {\r\n                            if (event.target.value > sliderRange[1]) {\r\n                                alert(\"Lower range can not be larger than the upper range\")\r\n                            }\r\n                            else {\r\n                                set_sliderRange([event.target.value, sliderRange[1]])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\r\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\r\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\r\n                />\r\n            </div>\r\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([sliderRange[0], \"\"])\r\n                        } else {\r\n                            if (parseInt(event.target.value) > props.slider_max) {\r\n                                alert(\"Upper range can not exceed maximum\")\r\n                                set_sliderRange([sliderRange[0], props.slider_max])\r\n                            }\r\n                            else {\r\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\r\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\r\n                    onClick={() => {\r\n                        props.Set_range_mode_range1(sliderRange)\r\n                    }}\r\n                >Update range</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        slider_max: state.slider_max,\r\n        range_mode_range1: state.range_mode_range1,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\r\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './ModelSlider.scss';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tRoot: {\r\n        marginBottom: 35,\r\n    },\r\n    rang_input: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\nfunction Modes(props) {\r\n    const classes = useStyles();\r\n    // states \r\n    const [sliderRange, set_sliderRange] = React.useState(props.range_mode_range2);\r\n    //-----------------------------------------------------------------\r\n    var temp_marks = [];\r\n    var step = (props.slider_max - 1) / (6 - 1);\r\n    for (var i = 0; i < 6; i++) {\r\n        temp_marks.push(1 + (step * i));\r\n    }\r\n    var marks = temp_marks.map(item => {\r\n        var myitem = parseInt(item)\r\n        return { value: myitem, label: myitem }\r\n    })\r\n    //console.log(props.marks)\r\n    //-----------------------------------------------------------------\r\n    return (\r\n        <div className=\"Modelslider\" style={{height: 70, width: \"100%\",marginBottom:5, paddingTop: 30,paddingLeft:15, border: \"1px solid rgb(178, 178, 178,0.5)\"}}>\r\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([\"\", sliderRange[1]])\r\n                        } else {\r\n                            if (event.target.value > sliderRange[1]) {\r\n                                alert(\"Lower range can not be larger than the upper range\")\r\n                            }\r\n                            else {\r\n                                set_sliderRange([event.target.value, sliderRange[1]])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\r\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\r\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\r\n                />\r\n            </div>\r\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([sliderRange[0], \"\"])\r\n                        } else {\r\n                            if (parseInt(event.target.value) > props.slider_max) {\r\n                                alert(\"Upper range can not exceed maximum\")\r\n                                set_sliderRange([sliderRange[0], props.slider_max])\r\n                            }\r\n                            else {\r\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\r\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\r\n                    onClick={() => {\r\n                        props.Set_range_mode_range2(sliderRange)\r\n                    }}\r\n                >Update range</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        slider_max: state.slider_max,\r\n        range_mode_range2: state.range_mode_range2,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\r\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\r\nimport \"./YearModelSelection.scss\";\r\nimport { connect } from \"react-redux\";\r\nfunction YearModelSelection(props) {\r\n  var handle_year_click = (year) => {\r\n    props.Set_selected_year(year)\r\n  }\r\n  var handle_model_click=(model)=>props.Set_range_mode_model(model)\r\n  return (\r\n    <div className=\"range_topbar\" style={{width:\"100%\",marginBottom:2,display:'flex',justifyContent: \"center\",margin:0}}>\r\n    <div ><h5 style={{ display: \"inline-block\", marginLeft: 0,marginRight:3,fontSize:16,fontWeight:600 }}>Years: </h5>{props.years_for_dropdown.map(item => <p className={props.selected_year==item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_year_click(item)}>{item}</p>)}</div>\r\n    <div style={{marginLeft:20}}><h5 style={{ display: \"inline-block\", marginLeft: 0,marginRight:3,fontSize:16,fontWeight:600}}>Models:</h5>{props.all_models.map(item => <p className={props.range_mode_model==item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</div>\r\n    </div>\r\n  );\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    all_models:state.all_models,\r\n    selected_year: state.selected_year,\r\n    years_for_dropdown: state.years_for_dropdown,\r\n    default_models: state.default_models,\r\n    range_mode_model:state.range_mode_model,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    Set_range_mode_model: (val) => dispatch({ type: \"range_mode_model\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\r\n\r\n//https://material-ui.com/api/slider/\r\n//https://material-ui.com/components/expansion-panels/\r\n//https://material-ui.com/api/checkbox/\r\n//https://material-ui.com/components/radio-buttons/","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\nimport * as algo1 from \"../../../Algorithms/algo1\";\r\nimport * as $ from 'jquery';\r\nimport CreatexpCircle from \"../ExpChart/Create_exp_circles\"\r\nimport getMdsData from \"../ExpChart/MDS\"\r\nimport { Create_MDS } from \"../ExpChart/MDS\"\r\nimport \"../ExpChart/MDS.css\"\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.line_color = null;\r\n    this.exp = React.createRef()\r\n    this.mds = React.createRef()\r\n    this.state = { mds_height: 110, mouseX: 0, mouseY: 0, excluded_features: [], sorted_features: null, circle_data: null, indexed_features: null, random: true }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ width: window.innerHeight })\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.Createsvg(this.props.model_name, this.props.exp_id, this.props.state_range)\r\n  }\r\n  Createsvg = (model_name, exp_id, state_range) => {\r\n    var self = this\r\n    var selected_instances = d3.range(state_range[0], state_range[1] + 1)\r\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\r\n    //-------------------- Threshold filter\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n    this.props.default_models.map(model_name => {\r\n      year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[model_name])\r\n        if (Math.abs(predicted_rank - two_realRank) > this.props.threshold) {\r\n          under_threshold_instances.push(two_realRank)\r\n        }\r\n      })\r\n    })\r\n    selected_instances = selected_instances.filter(item => !under_threshold_instances.includes(item))\r\n    //--------------------\r\n\r\n    //------------------------------\r\n    var number_of_charts = 8 + self.state.excluded_features.length\r\n    var features_with_score = algo1.features_with_score(this.props.dataset, [model_name], selected_instances, this.props.selected_year, number_of_charts, this.props.rank_data)\r\n    if (exp_id in self.props.dragged_features) { features_with_score = self.props.dragged_features[exp_id] }\r\n    var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\r\n    var temp_sorted_features = indexed_features.filter(item => !this.state.excluded_features.includes(item))// Exclude crossed features \r\n    var sorted_features = temp_sorted_features.slice(0, number_of_charts).map((item, index) => [item, index])\r\n    var marginTop = 5;\r\n    var parent_height = parseInt($('.explanation_chart_parent').height()) - this.state.mds_height - parseInt($('.title_p').height())\r\n    var item_width = parseInt($(\"#\" + this.props.exp_id).width())\r\n    var item_height = (parent_height - 10) / sorted_features.length - marginTop // 10 is the top margin\r\n    var feature_containers = d3.select('#' + this.props.exp_id).attr('height', parent_height).selectAll(\".feature_items\").data(sorted_features, d => d[0])\r\n      .join(enter => enter.append(\"svg\").attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , update => update.transition().duration(2000).attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , exit => exit.remove()\r\n      )\r\n    feature_containers.attr(\"class\", d => \"feature_items \" + d[0]).attr(\"myindex\", (d, i) => i).attr('feature_name', d => d[0])\r\n    feature_containers.attr(\"add_title_text_and_rect_for_title_text\", function (d, index) {\r\n      d3.select(this).selectAll(\".title_rect\").data([0]).join('rect').attr(\"class\", \"title_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", 18).attr(\"fill\", \"#e2e2e2\").attr(\"y\", 0).attr(\"x\", 0)\r\n      d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr(\"class\", \"title_text\").attr(\"myindex\", index).attr('feature_name', d[0]).attr('x', item_width / 2).text(d[0]).attr(\"dominant-baseline\", \"hanging\")\r\n        .attr(\"y\", 2).attr('text-anchor', 'middle').attr('font-size', 12)\r\n    })\r\n    feature_containers.attr(\"add_cross_button\", function (d, index) {\r\n      d3.select(this).selectAll(\".cross_button\").data([0]).join(\"text\").attr('y', 7.3).attr('dominant-baseline', 'middle').attr(\"myindex\", index).attr('feature_name', d[0]).raise()\r\n        .attr('x', item_width - 15).style('cursor', 'pointer').attr('font-size', 12).attr('fill', 'black')\r\n        .text(\"\\uf410\").attr('class', \"cross_button fa make_cursor\").on('click', () => {\r\n          //alert(\"clicked!\")\r\n          d3.event.preventDefault()\r\n          self.setState({ excluded_features: [...self.state.excluded_features, d[0]] })\r\n        })\r\n    })\r\n    feature_containers.attr(\"add_rect_for_circle_background_and_handle_clicks\", function (d, index) {\r\n      d3.select(this).selectAll(\".circ_rect\").data([0]).join('rect').attr(\"class\", \"circ_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", item_height - 18).attr(\"fill\", \"#f2f2f2\").attr(\"y\", 18).attr(\"x\", 0)\r\n        .on('click', () => {\r\n          if (self.props.clicked_features.includes(d[0])) {\r\n            self.props.Set_clicked_features(self.props.clicked_features.filter(item => item != d[0]))\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").remove()\r\n          }\r\n          else {\r\n            self.props.Set_clicked_features([...self.props.clicked_features, d[0]])\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n          }\r\n        })\r\n        .on('dblclick', () => {\r\n          var feature = d[0]\r\n          var year = self.props.selected_year\r\n          d3.event.preventDefault()\r\n          var temp = [...self.props.dbclicked_features]\r\n          if (!temp.includes(feature)) {\r\n            temp.unshift(feature)\r\n            //temp.unshift(feature)\r\n            d3.selectAll(\".rect\").classed(\"exp_chart_clicked\", true)\r\n          }\r\n          self.props.set_dbclicked_features(temp)\r\n          //self.props.set_dbclicked_features([feature])\r\n          //----------------------------Data for popup chart\r\n          var popup_chart_data = {}\r\n          self.props.default_models.filter(item => item != \"ListNet\").map(model_name => {\r\n            var data = []\r\n            if (self.props.histogram_data.length > 0) {\r\n              data = self.props.lime_data[model_name].filter(element => { if ((parseInt(element['1-qid']) == parseInt(year)) && (self.props.histogram_data.includes(parseInt(element['two_realRank'])))) { return element } });\r\n            }\r\n            else {\r\n              data = self.props.lime_data[model_name].filter(element => parseInt(element['1-qid']) == parseInt(year) && selected_instances.includes(parseInt(element['two_realRank'])))\r\n            }\r\n            popup_chart_data[model_name] = data\r\n          })\r\n          self.props.Set_popup_chart_data([popup_chart_data, feature]) // This is to update the pop when the year or anything changes during the pop up is open\r\n          //self.props.Set_popup_chart_data([popup_chart_data, feature])\r\n          self.props.set_pop_over(true)\r\n        })\r\n\r\n    })\r\n    feature_containers.attr(\"CreatexpCircle\", function (d, index) {\r\n      CreatexpCircle(d, d3.select(this), selected_instances, self.props.lime_data, self.props.selected_year, [model_name], self.props.clicked_circles,\r\n        self.props.Set_clicked_circles, self.props.diverginColor, self.props.anim_config, item_width, item_height, self.props.deviation_array, index, self.props.threshold)\r\n    }).attr(\"height\", item_height).attr('width', item_width)\r\n    feature_containers.attr('check_clicked_features', d => {\r\n      if (self.props.clicked_features.includes(d[0])) {\r\n        d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n      }\r\n    })\r\n    feature_containers.attr('add_drag_drop', function (d, index) {\r\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", item_width - 18).attr(\"height\", 18).style(\"fill\", \"transparent\").style('cursor', 'move')\r\n        .call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended).container(this.parentNode.parentNode)) // Set the parent node based on which the distance will be calculated\r\n      var deltaY, is_dragging;\r\n      function dragstarted(event, d) {\r\n        //d3.select(this).attr(\"width\", '100%').attr(\"height\", '100%').style('fill','rgb(249, 195, 87,0.3)')\r\n        d3.select(this.parentNode).raise()\r\n        deltaY = d3.select(this.parentNode).attr(\"y\") - d3.event.y;\r\n      }\r\n      function dragged(event, d) {\r\n        is_dragging = true\r\n        d3.select(this.parentNode).raise()\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n      }\r\n      function dragended(event, d) {\r\n        var origin_index = parseInt(d3.select(this).attr(\"myindex\")); d3.select(this.parentNode).lower();\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n        var difference = parseInt(d3.select(document.elementFromPoint(d3.event.sourceEvent.clientX, d3.event.sourceEvent.clientY)).attr(\"myindex\")) - origin_index\r\n        //if (isNaN(dest_index)) { alert(\"Please drop properly!\"); dest_index = origin_index }\r\n        var origin_feature = d3.select(this).attr(\"feature_name\")\r\n        var temp1 = {}\r\n        self.props.exp_data.map((exp_data, index) => { // exp_data={[[\"r1exp\",this.props.range_mode_range1],[\"r2exp\",this.props.range_mode_range2]]}\r\n          var selected_instances = d3.range(exp_data[1][0], exp_data[1][1] + 1)\r\n          if (self.props.histogram_data.length > 0) { selected_instances = self.props.histogram_data }\r\n          var number_of_charts = 15 // change this number to get features when crossed\r\n          var features_with_score = algo1.features_with_score(self.props.dataset, [model_name], selected_instances, self.props.selected_year,\r\n            number_of_charts, self.props.rank_data)\r\n          if (exp_data[0] in self.props.dragged_features) {\r\n            features_with_score = self.props.dragged_features[exp_data[0]]\r\n          }\r\n          var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\r\n          var origin_index = indexed_features.indexOf(origin_feature)\r\n          var dest_index = origin_index + difference\r\n          if (dest_index < 0) { var dest_feature = indexed_features[0] }\r\n          else if (dest_index > number_of_charts - 1) { var dest_feature = indexed_features[number_of_charts - 1] }\r\n          else { var dest_feature = indexed_features[dest_index] }\r\n          features_with_score[origin_feature] = features_with_score[origin_feature] - difference\r\n          features_with_score[dest_feature] = features_with_score[dest_feature] + difference\r\n          temp1[exp_data[0]] = features_with_score\r\n        })\r\n        self.props.Set_dragged_features(temp1)\r\n        //-------------------------------------\r\n        d3.select(this).raise()\r\n      }\r\n    })\r\n    //--------------------------------------MDS Plot-------------------------------------//\r\n    var feature_contrib_data_for_mds = this.props.lime_data[model_name].filter(item => item['1-qid'] == this.props.selected_year && selected_instances.includes(item['two_realRank']))\r\n    getMdsData(this.props.url, { \"data\": feature_contrib_data_for_mds, \"weight\": features_with_score }).then(data => {\r\n      if (typeof data != 'undefined') {\r\n        var MDS_response = JSON.parse(data.response)\r\n        var circle_data = feature_contrib_data_for_mds.map((item, index) => {\r\n          item['x'] = MDS_response[index][0]\r\n          item['y'] = MDS_response[index][1]\r\n          item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + item[\"model\"].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n          return item\r\n        })\r\n        Create_MDS(this.mds, circle_data, \"#mds\" + this.props.exp_id, self.props.diverginColor, this.props.Set_clicked_circles,this.props.deviation_array)\r\n      }\r\n    })\r\n  }\r\n  //------------------------------\r\n  render() {\r\n    return (\r\n      <div className={\"explanation_chart_parent exp\" + this.props.model_name} style={{ width: '100%', height: '100%', \"border\": this.props.mode == 'Model' ? \"2px solid #e2e2e2\" : 'none', padding: \"2px 5px\" }}>\r\n        <p className=\"title_p\" style={{ padding: 0, margin: 0 }}>{this.props.model_name}</p>\r\n        <svg ref={this.mds} id={\"mds\" + this.props.exp_id} style={{ margin: 0, width: \"100%\", height: this.state.mds_height }}></svg>\r\n        <svg id={this.props.exp_id} style={{ marginTop: 0, width: \"100%\" }}></svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    deviation_array: state.deviation_array,\r\n    original_data: state.original_data,\r\n    time_mode_model: state.time_mode_model,\r\n    dataset: state.dataset,\r\n    histogram_data: state.histogram_data,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    show: state.show,\r\n    average_m: state.average_m,\r\n    average_y: state.average_y,\r\n    lime_data: state.lime_data,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    clicked_features: state.clicked_features,\r\n    threshold: state.threshold,\r\n    mode: state.mode,\r\n    dbclicked_features: state.dbclicked_features,\r\n    dragged_features: state.dragged_features,\r\n    url: state.url,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_dragged_features: (val) => dispatch({ type: \"dragged_features\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\r\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\r\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\r\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\r\n    Set_popup_chart_data: (val) => dispatch({ type: \"popup_chart_data\", value: val }),\r\n    set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as misc_algo from '../misc_algo'\r\nimport CreateCatChart from '../Popover/CreateCatChart'\r\nimport CreateNumChart from '../Popover/CreateNumChart'\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ a: 5 })\r\n  }\r\n  componentDidUpdate() {\r\n    var merged_arr = this.props.popup_chart_data[0] // only data\r\n    var scatterplot_data = [[this.props.popup_chart_data[1],this.props.popup_chart_data[0]]] // [feature name, data]\r\n    //----------------------------------------------------------------------------------------------------------Call createChart\r\n    if (merged_arr.length > 0) { // This is to avoid the error caused by the next line\r\n      if (isNaN(merged_arr[0][this.props.popup_chart_data[1]])) {\r\n        CreateCatChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\r\n      }\r\n      else {\r\n        CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\r\n      }\r\n    }\r\n    else {\r\n      CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array) // calling the function to set the  graph empty when all models are unselected\r\n    }\r\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div key={this.props.popup_chart_data[1]} style={{ margin: 10, padding: 10, border: this.props.index == 0 ? \"3px solid #e5e5e5\" : \"white\" }}>\r\n        <svg id={this.props.myid}> </svg>\r\n        <p style={{ color: \"#4f4c4c\", marginLeft: \"42%\", marginTop: -25, marginBottom: 0 }}>{this.props.popup_chart_data[1]}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    //popup_chart_data: state.popup_chart_data,\r\n    pop_over_models: state.pop_over_models,\r\n    clicked_circles: state.clicked_circles,\r\n    threshold: state.threshold,\r\n    anim_config:state.anim_config,\r\n    deviation_array: state.deviation_array,\r\n  }\r\n}\r\n//item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from \"react-redux\";\r\nimport Chart_pop from './04PopoverCharts'\r\nimport Draggable from 'react-draggable';\r\nimport Grid from '@mui/material/Grid';\r\nimport * as d3 from 'd3';\r\nexport function SimplePopover(props) {\r\n    const handleClose = () => {\r\n        props.set_pop_over(false)\r\n        props.set_dbclicked_features([])\r\n    };\r\n     //------------------------------\r\n     var selected_instances = d3.range(d3.min([props.range_mode_range1[0], props.range_mode_range2[0]]), d3.max([props.range_mode_range1[1], props.range_mode_range2[1]]) + 1)\r\n     var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n     var d = (max - min) / 8;\r\n     var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n     //------------------------------\r\n     var selected_instances1 = d3.range(props.range_mode_range1[0], props.range_mode_range1[1] + 1)\r\n     //-------------------- Threshold filter\r\n     var under_threshold_instances = []\r\n     var year_data = props.original_data.filter(item => props.selected_year == item['1-qid'])\r\n       year_data.map(item => {\r\n         var two_realRank = parseInt(item['two_realRank'])\r\n         var predicted_rank = parseInt(item[props.range_mode_model])\r\n         if (Math.abs(predicted_rank - two_realRank) < props.threshold) {\r\n           under_threshold_instances.push(two_realRank)\r\n         }\r\n       })\r\n     selected_instances1 = selected_instances1.filter(item => under_threshold_instances.includes(item))\r\n     var data1 = props.lime_data[props.range_mode_model].filter(element => parseInt(element['1-qid']) == parseInt(props.selected_year) && selected_instances1.includes(parseInt(element['two_realRank'])))\r\n     //------------------------------\r\n     var selected_instances2 = d3.range(props.range_mode_range2[0], props.range_mode_range2[1] + 1)\r\n     var under_threshold_instances = []\r\n     var year_data = props.original_data.filter(item => props.selected_year == item['1-qid'])\r\n     year_data.map(item => {\r\n       var two_realRank = parseInt(item['two_realRank'])\r\n       var predicted_rank = parseInt(item[props.range_mode_model])\r\n       if (Math.abs(predicted_rank - two_realRank) < props.threshold) {\r\n         under_threshold_instances.push(two_realRank)\r\n       }\r\n     })\r\n     selected_instances2 = selected_instances2.filter(item => under_threshold_instances.includes(item))\r\n     var data2 = props.lime_data[props.range_mode_model].filter(element => parseInt(element['1-qid']) == parseInt(props.selected_year) && selected_instances2.includes(parseInt(element['two_realRank'])))\r\n    \r\n    return (\r\n        <div className=\"pop_over\" style={{ position: \"relative\" }}>\r\n            {props.pop_over == true ?\r\n                <div style={{ top: \"2%\", left: \"14%\", position: \"fixed\", pointerEvents: \"none\", backgroundColor: \"transparent\" }}>\r\n                    <Draggable>\r\n                        <Grid style={{ backgroundColor: \"#ffffff\", boxShadow: \"3px 2px 15px -7px #000000\", pointerEvents: \"auto\",display:\"relative\",zIndex:6 }}>\r\n                            <Grid container style={{ borderBottom: \"1px solid #e2e2e2\", marginBottom: 20 }} direction=\"row\" justify=\"flex-end\" alignItems=\"center\" >\r\n                                <Button color=\"secondary\" id=\"draggable-dialog-title\" onClick={handleClose}>close</Button>\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\r\n                                { \r\n                                    props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Grid item container direction=\"row\" ><Chart_pop\r\n                                        index={index}\r\n                                        popup_chart_data={[data1, item]} default_models={props.default_models}\r\n                                        myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')+\"range1\"} diverginColor={props.diverginColor}\r\n                                    ></Chart_pop>\r\n                                    <Chart_pop\r\n                                        index={index}\r\n                                        popup_chart_data={[data2, item]} default_models={props.default_models}\r\n                                        myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')+\"range2\"} diverginColor={props.diverginColor}\r\n                                    ></Chart_pop></Grid>\r\n                                    ) : <Chart_pop popup_chart_data={data1} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Draggable>\r\n                </div> : null}\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        range_mode_range1: state.range_mode_range1,\r\n        range_mode_range2: state.range_mode_range2,\r\n        range_mode_model: state.range_mode_model,    \r\n        popup_chart_data: state.popup_chart_data,\r\n        pop_over: state.pop_over,\r\n        dbclicked_features: state.dbclicked_features,\r\n        selected_year: state.selected_year,\r\n        threshold: state.threshold,\r\n        original_data: state.original_data,\r\n        lime_data: state.lime_data,\r\n        histogram_data: state.histogram_data,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\r\n        set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\r\n        set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SimplePopover);\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\r\nimport * as misc_algo from '../misc_algo'\r\nimport * as $ from 'jquery';\r\nimport SliderGroup1 from './SliderGroup1';\r\nimport SliderGroup2 from './SliderGroup2';\r\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\r\nimport ExpChart from './02RangeExpChart';\r\nimport Popover from './03RangePopover';\r\n\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.line_color = null;\r\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ width: window.innerHeight })\r\n  }\r\n  shouldComponentUpdate(prevProps, prevState) {\r\n    return true;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //------------------------------\r\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1)\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n    //------------------------------\r\n    var selected_instances1 = d3.range(this.props.range_mode_range1[0], this.props.range_mode_range1[1] + 1)\r\n    //-------------------- Threshold filter\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n      year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[this.props.range_mode_model])\r\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n          under_threshold_instances.push(two_realRank)\r\n        }\r\n      })\r\n    \r\n    selected_instances1 = selected_instances1.filter(item => under_threshold_instances.includes(item))\r\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\r\n    //------------------------------\r\n    var selected_instances2 = d3.range(this.props.range_mode_range2[0], this.props.range_mode_range2[1] + 1)\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n    year_data.map(item => {\r\n      var two_realRank = parseInt(item['two_realRank'])\r\n      var predicted_rank = parseInt(item[this.props.range_mode_model])\r\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n        under_threshold_instances.push(two_realRank)\r\n      }\r\n    })\r\n    selected_instances2 = selected_instances2.filter(item => under_threshold_instances.includes(item))\r\n\r\n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\r\n    //------------------------------\r\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\r\n\r\n  }\r\n  render() {\r\n    //------------------------------\r\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1)\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n    this.props.Set_selected_instances(selected_instances)\r\n    //--------------------\r\n    var deviation_array = []\r\n\r\n    this.props.lime_data[this.props.range_mode_model].map(item => {\r\n      if (item['1-qid'] == this.props.selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\r\n        deviation_array.push(item['deviation'])\r\n      }\r\n    })\r\n    this.props.Set_deviation_array(deviation_array)\r\n    //console.log('deviation_array: ', d3.extent(deviation_array))\r\n    //--------------------\r\n    return (\r\n      <Grid key={this.props.mode} className=\"RangeChartParent\" container direction=\"row\" justifyContent=\"space-between\"\r\n        className=\"slope_chart_exp\" style={{ width: \"100%\", height: '100%', backgroundColor: 'white', padding: \"0px 0px\", overflow: 'hidden' }}>\r\n        <div className=\"year_and_model_selector_and_slider_container\" style={{ width: \"100%\" }}> {/* This is used to calculate the deviation plot height */}\r\n          <YearModelSelection></YearModelSelection>\r\n        </div>\r\n        {/* Group 1 */}\r\n        <Grid className=\"Group1_container\" style={{ height: \"100%\", width: \"49.4%\", paddingRight: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\" justifyContent=\"space-between\">\r\n          <p className=\"title_p1\" style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 1</p>\r\n          <Grid className=\"slidergroup1\" item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><SliderGroup1></SliderGroup1></Grid>\r\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\r\n              <svg id=\"r1d\" style={{ width: \"100%\", padding: 5 }}></svg>\r\n            </Grid>\r\n            {\r\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\r\n                <ExpChart diverginColor={diverginColor} exp_data={[[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]]} exp_id=\"r1exp\" state_range={this.props.range_mode_range1} selected_year={this.props.selected_year} model_name={this.props.range_mode_model} default_models={[this.props.range_mode_model]}></ExpChart>\r\n              </Grid> : null\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n        {/* Group 2 */}\r\n        <Grid className=\"Group2_container\" style={{ height: \"100%\", width: \"49.4%\", marginLeft: '0.5%', paddingRight: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\" justifyContent=\"space-between\">\r\n          <p className=\"title_p2\" style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 2</p>\r\n          <Grid className=\"slidergroup2\" item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><SliderGroup2></SliderGroup2></Grid>\r\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group2_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\r\n              <svg id=\"r2d\" style={{ width: \"100%\", padding: 5 }}></svg>\r\n            </Grid>\r\n            {\r\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\r\n                <ExpChart diverginColor={diverginColor} exp_data={[[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]]} exp_id=\"r2exp\" state_range={this.props.range_mode_range2} selected_year={this.props.selected_year} model_name={this.props.range_mode_model} default_models={[this.props.range_mode_model]}></ExpChart>\r\n              </Grid> : null\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n        <Popover diverginColor={diverginColor} default_models={[this.props.range_mode_model]}></Popover>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    mode: state.mode,\r\n    range_mode_range1: state.range_mode_range1,\r\n    range_mode_range2: state.range_mode_range2,\r\n    range_mode_model: state.range_mode_model,\r\n    lime_data: state.lime_data,\r\n    selected_year: state.selected_year,\r\n    original_data: state.original_data,\r\n    dataset: state.dataset,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    average_m: state.average_m,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    threshold: state.threshold,\r\n    histogram_data: state.histogram_data,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\r\n    Set_deviation_array: (val) => dispatch({ type: \"deviation_array\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// Create a theme instance.\r\nconst outerTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#0069d9\"\r\n    },\r\n    secondary: {\r\n      main: \"#0069d9\"\r\n    }\r\n  }\r\n})\r\n\r\n\r\n\r\nexport var year1_drop_down = createMuiTheme({\r\n  overrides: { // This is the place we override classes applied to a component\r\n    MuiAutocomplete:{\r\n        root:{\r\n            \r\n        }\r\n    },\r\n    MuiFilledInput: { // This is the name of the component\r\n      root: { // This is the class we want to edit\r\n        backgroundColor: \"none\",\r\n        \r\n      }\r\n    },\r\n    MuiInputLabel: {\r\n      root: {\r\n\r\n      }\r\n    },\r\n    MuiTextField: {\r\n      root: {}\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: \"none\",\r\n        padding: \"15px\"\r\n      },\r\n      fullWidth: {\r\n        maxWidth: \"100%\"\r\n      }\r\n    },\r\n    MuiFilledInput:{\r\n      root:{\r\n        padding:0,\r\n        backgroundColor:\"yellow\"\r\n      }\r\n    },\r\n    MuiAutocomplete:{\r\n      Root:{\r\n        padding:0\r\n      }\r\n    }\r\n\r\n  },\r\n  props: { // This is the place where we define props\r\n    MuiButton: {\r\n      disableRipple: true,\r\n      variant: \"contained\",\r\n      color: \"primary\"\r\n    },\r\n    MuiCheckbox: {\r\n      disableRipple: true\r\n    },\r\n    MuiTextField: {\r\n      variant: \"filled\",\r\n      InputLabelProps: {\r\n        shrink: true\r\n      }\r\n    },\r\n    MuiPaper: {\r\n      elevation: 12\r\n    },\r\n    MuiCard: {\r\n      elevation: 2\r\n    },\r\n  }\r\n});\r\n\r\nexport default outerTheme\r\n\r\n\r\n\r\n\r\n/*\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      root: {\r\n        \"& $notchedOutline\": {\r\n          borderColor: \"green\"\r\n        },\r\n        \"&:hover $notchedOutline\": {\r\n          borderColor: \"red\"\r\n        },\r\n        \"&$focused $notchedOutline\": {\r\n          borderColor: \"purple\"\r\n        },\r\n        \"&&& $input\": {\r\n          padding: \"1px\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n*/","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from \"react-redux\";\r\nimport * as themes from '../../themes'\r\nfunction FadeMenu(props) {\r\n    return (\r\n            <div className=\"year_drop_down_container1\">\r\n                <p style={{ margin: 0, marginTop: 3, fontSize: 16, fontWeight: 600 }}>Year 1 :</p>\r\n                <Autocomplete style={{ width: 100 }} disableClearable\r\n                    defaultValue={props.time_mode_year1.toString()}\r\n                    id=\"debug\"\r\n                    debug\r\n                    options={props.years_for_dropdown.map((option) => option)}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\r\n                    )}\r\n                    onChange={(event, value) => {\r\n                        props.Set_time_mode_year1(value)\r\n                    }}\r\n                />\r\n            </div>\r\n        \r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        time_mode_year1: state.time_mode_year1,\r\n        years_for_dropdown: state.years_for_dropdown,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from \"react-redux\";\r\nfunction FadeMenu(props) {\r\n    return (\r\n        <div className=\"year_drop_down_container1\">\r\n            <p style={{margin:0,marginTop:3,fontSize:16,fontWeight:600}}>Year 2 :</p>\r\n            <Autocomplete style={{width:100}} disableClearable\r\n                defaultValue={props.time_mode_year2.toString()}\r\n                id=\"debug\"\r\n                debug\r\n                options={props.years_for_dropdown.map((option) => option)}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\r\n                )}\r\n                onChange={(event, value) => {\r\n                    props.Set_time_mode_year2(value)\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        time_mode_year2: state.time_mode_year2,\r\n        years_for_dropdown: state.years_for_dropdown,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './Slider.scss';\r\nimport * as $ from 'jquery'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tRoot: {\r\n        marginBottom: 35,\r\n    },\r\n    rang_input: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\nfunction Modes(props) {\r\n    const classes = useStyles();\r\n    // states \r\n    const [sliderRange, set_sliderRange] = React.useState(props.time_mode_range);\r\n    //-----------------------------------------------------------------\r\n    var temp_marks = [];\r\n    var step = (props.slider_max - 1) / (6 - 1);\r\n    for (var i = 0; i < 6; i++) {\r\n        temp_marks.push(1 + (step * i));\r\n    }\r\n    var marks = temp_marks.map(item => {\r\n        var myitem = parseInt(item)\r\n        return { value: myitem, label: myitem }\r\n    })\r\n    //console.log(props.marks)\r\n    //-----------------------------------------------------------------\r\n    return (\r\n        <div className=\"YearSlider\" \r\n        style={{height: 70, width:'100%',padding: 30}}>\r\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([\"\", sliderRange[1]])\r\n                        } else {\r\n                            if (event.target.value > sliderRange[1]) {\r\n                                alert(\"Lower range can not be larger than the upper range\")\r\n                            }\r\n                            else {\r\n                                set_sliderRange([event.target.value, sliderRange[1]])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\r\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\r\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\r\n                />\r\n            </div>\r\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([sliderRange[0], \"\"])\r\n                        } else {\r\n                            if (parseInt(event.target.value) > props.slider_max) {\r\n                                alert(\"Upper range can not exceed maximum\")\r\n                                set_sliderRange([sliderRange[0], props.slider_max])\r\n                            }\r\n                            else {\r\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"button\" item style={{ marginTop: -10 }}>\r\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30,fontWeight:600,fontSize:18 }}\r\n                    onClick={() => {\r\n                        props.Set_time_mode_range(sliderRange)\r\n                    }}\r\n                >Update range</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        slider_max: state.slider_max,\r\n        time_mode_range: state.time_mode_range,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\r\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\r\nimport \"./YearModelSelection.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport Slider from './Slider'\r\nimport Grid from '@material-ui/core/Grid'\r\nfunction YearModelSelection(props) {\r\n  var handle_year_click = (year) => {\r\n    props.Set_selected_year(year)\r\n  }\r\n  var handle_model_click = (model) => props.Set_time_mode_model(model)\r\n  return (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" style={{width:'100%',height:76,padding:3}}>\r\n      <Grid item xs={4} style={{marginTop:5, marginLeft: 5,verticalAlign:'baseline' }}><h5 style={{ display: \"inline-block\", marginRight: 5,marginTop:-4, fontSize: 20,fontWeight:600 }}>Models:</h5>{props.all_models.map(item => <p className={props.time_mode_model == item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</Grid>\r\n      <Grid item xs={6} style={{marginLeft:15,overflow:'scroll'}}><Slider></Slider></Grid>\r\n    </Grid>\r\n  );\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    all_models: state.all_models,\r\n    selected_year: state.selected_year,\r\n    years_for_dropdown: state.years_for_dropdown,\r\n    default_models: state.default_models,\r\n    time_mode_model: state.time_mode_model,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    Set_time_mode_model: (val) => dispatch({ type: \"time_mode_model\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\r\n\r\n//https://material-ui.com/api/slider/\r\n//https://material-ui.com/components/expansion-panels/\r\n//https://material-ui.com/api/checkbox/\r\n//https://material-ui.com/components/radio-buttons/","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\nimport * as algo1 from \"../../../Algorithms/algo1\";\r\nimport * as $ from 'jquery';\r\nimport CreatexpCircle from \"../ExpChart/Create_exp_circles\"\r\nimport getMdsData from \"../ExpChart/MDS\"\r\nimport { Create_MDS } from \"../ExpChart/MDS\"\r\nimport \"../ExpChart/MDS.css\"\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mds = React.createRef()\r\n    this.state = { mds_height: 110, mouseX: 0, mouseY: 0, excluded_features: [], sorted_features: null, circle_data: null, indexed_features: null, random: true }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ width: window.innerHeight })\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.Createsvg(this.props.model_name,this.props.exp_id,this.props.state_range,this.props.selected_year)\r\n  }\r\n  Createsvg = (model_name,exp_id,state_range,selected_year) => {\r\n    var self = this\r\n    var selected_instances = d3.range(state_range[0], state_range[1] + 1)\r\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\r\n    //-------------------- Threshold filter\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n    this.props.default_models.map(model_name => {\r\n      year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[model_name])\r\n        if (Math.abs(predicted_rank - two_realRank) > this.props.threshold) {\r\n          under_threshold_instances.push(two_realRank)\r\n        }\r\n      })\r\n    })\r\n    selected_instances = selected_instances.filter(item => !under_threshold_instances.includes(item))\r\n    //--------------------\r\n\r\n    //------------------------------\r\n    var number_of_charts = 8 + self.state.excluded_features.length\r\n    var features_with_score = algo1.features_with_score(this.props.dataset, [model_name], selected_instances, selected_year, number_of_charts, this.props.rank_data)\r\n    if(exp_id in self.props.dragged_features){features_with_score=self.props.dragged_features[exp_id]}\r\n    var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0]) \r\n    var temp_sorted_features = indexed_features.filter(item => !this.state.excluded_features.includes(item))// Exclude crossed features \r\n    var sorted_features = temp_sorted_features.slice(0, number_of_charts).map((item, index) => [item, index])\r\n    var marginTop = 5;\r\n    var parent_height = parseInt($('.explanation_chart_parent').height()) - this.state.mds_height - parseInt($('.title_p').height())\r\n    var item_width = parseInt($(\"#\" + this.props.exp_id).width())\r\n    var item_height = (parent_height - 10) / sorted_features.length - marginTop // 10 is the top margin\r\n    var feature_containers = d3.select('#' + this.props.exp_id).attr('height', parent_height).selectAll(\".feature_items\").data(sorted_features, d => d[0])\r\n      .join(enter => enter.append(\"svg\").attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , update => update.transition().duration(2000).attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , exit => exit.remove()\r\n      )\r\n    feature_containers.attr(\"class\", d => \"feature_items \" + d[0]).attr(\"myindex\", (d, i) => i).attr('feature_name', d => d[0])\r\n    feature_containers.attr(\"add_title_text_and_rect_for_title_text\", function (d, index) {\r\n      d3.select(this).selectAll(\".title_rect\").data([0]).join('rect').attr(\"class\", \"title_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", 18).attr(\"fill\", \"#e2e2e2\").attr(\"y\", 0).attr(\"x\", 0)\r\n      d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr(\"class\", \"title_text\").attr(\"myindex\", index).attr('feature_name', d[0]).attr('x', item_width / 2).text(d[0]).attr(\"dominant-baseline\", \"hanging\")\r\n        .attr(\"y\", 2).attr('text-anchor', 'middle').attr('font-size', 12)\r\n    })\r\n    feature_containers.attr(\"add_cross_button\", function (d, index) {\r\n      d3.select(this).selectAll(\".cross_button\").data([0]).join(\"text\").attr('y', 7.3).attr('dominant-baseline', 'middle').attr(\"myindex\", index).attr('feature_name', d[0]).raise()\r\n        .attr('x', item_width - 15).style('cursor', 'pointer').attr('font-size', 12).attr('fill', 'black')\r\n        .text(\"\\uf410\").attr('class', \"cross_button fa make_cursor\").on('click', () => {\r\n          //alert(\"clicked!\")\r\n          d3.event.preventDefault()\r\n          self.setState({ excluded_features: [...self.state.excluded_features, d[0]] })\r\n        })\r\n    })\r\n    feature_containers.attr(\"add_rect_for_circle_background_and_handle_clicks\", function (d, index) {\r\n      d3.select(this).selectAll(\".circ_rect\").data([0]).join('rect').attr(\"class\", \"circ_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", item_height - 18).attr(\"fill\", \"#f2f2f2\").attr(\"y\", 18).attr(\"x\", 0)\r\n        .on('click', () => {\r\n          if (self.props.clicked_features.includes(d[0])) {\r\n            self.props.Set_clicked_features(self.props.clicked_features.filter(item => item != d[0]))\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").remove()\r\n          }\r\n          else {\r\n            self.props.Set_clicked_features([...self.props.clicked_features, d[0]])\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n          }\r\n        })\r\n        .on('dblclick', () => {\r\n          var feature = d[0]\r\n          var year = selected_year\r\n          d3.event.preventDefault()\r\n          var temp = [...self.props.dbclicked_features]\r\n          if (!temp.includes(feature)) {\r\n            temp.unshift(feature)\r\n            d3.selectAll(\".rect\").classed(\"exp_chart_clicked\", true)\r\n          }\r\n          self.props.set_dbclicked_features(temp)\r\n          //self.props.set_dbclicked_features([feature])\r\n          //----------------------------Data for popup chart\r\n          var popup_chart_data = {}\r\n          self.props.default_models.filter(item => item != \"ListNet\").map(model_name => {\r\n            var data = []\r\n            if (self.props.histogram_data.length > 0) {\r\n              data = self.props.lime_data[model_name].filter(element => { if ((parseInt(element['1-qid']) == parseInt(year)) && (self.props.histogram_data.includes(parseInt(element['two_realRank'])))) { return element } });\r\n            }\r\n            else {\r\n              data = self.props.lime_data[model_name].filter(element => parseInt(element['1-qid']) == parseInt(year) && selected_instances.includes(parseInt(element['two_realRank'])))\r\n            }\r\n            popup_chart_data[model_name] = data\r\n          })\r\n          self.props.Set_popup_chart_data([popup_chart_data, feature]) // This is to update the pop when the year or anything changes during the pop up is open\r\n          //self.props.Set_popup_chart_data([popup_chart_data, feature])\r\n          self.props.set_pop_over(true)\r\n        })\r\n\r\n    })\r\n    feature_containers.attr(\"CreatexpCircle\", function (d, index) {\r\n      CreatexpCircle(d, d3.select(this), selected_instances, self.props.lime_data, selected_year, [model_name], self.props.clicked_circles,\r\n        self.props.Set_clicked_circles, self.props.diverginColor, self.props.anim_config, item_width, item_height, self.props.deviation_array, index,self.props.threshold)\r\n    }).attr(\"height\", item_height).attr('width', item_width)\r\n    feature_containers.attr('check_clicked_features', d => {\r\n      if (self.props.clicked_features.includes(d[0])) {\r\n        d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n      }\r\n    })\r\n    feature_containers.attr('add_drag_drop', function (d, index) {\r\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", item_width - 18).attr(\"height\", 18).style(\"fill\", \"transparent\").style('cursor', 'move')\r\n        .call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended).container(this.parentNode.parentNode)) // Set the parent node based on which the distance will be calculated\r\n      var deltaY, is_dragging;\r\n      function dragstarted(event, d) {\r\n        d3.select(this.parentNode).raise()\r\n        deltaY = d3.select(this.parentNode).attr(\"y\") - d3.event.y;\r\n      }\r\n      function dragged(event, d) {\r\n        is_dragging = true\r\n        d3.select(this.parentNode).raise()\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n      }\r\n      function dragended(event, d) {\r\n        var origin_index = parseInt(d3.select(this).attr(\"myindex\")); d3.select(this.parentNode).lower();\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n        var difference = parseInt(d3.select(document.elementFromPoint(d3.event.sourceEvent.clientX, d3.event.sourceEvent.clientY)).attr(\"myindex\"))-origin_index\r\n        //if (isNaN(dest_index)) { alert(\"Please drop properly!\"); dest_index = origin_index }\r\n        var origin_feature = d3.select(this).attr(\"feature_name\")\r\n        \r\n        var temp1={}\r\n        self.props.exp_data.map((exp_data,index) => { // exp_data={[[\"r1exp\",this.props.range_mode_range1],[\"r2exp\",this.props.range_mode_range2]]}\r\n          var selected_instances = d3.range(state_range[0], state_range[1] + 1)\r\n          if (self.props.histogram_data.length > 0) { selected_instances = self.props.histogram_data }\r\n          var number_of_charts = 15 // change this number to get features when crossed\r\n          var features_with_score = algo1.features_with_score(self.props.dataset, [model_name], selected_instances, exp_data[1],\r\n            number_of_charts, self.props.rank_data)\r\n          if(exp_data[0] in self.props.dragged_features){\r\n            features_with_score=self.props.dragged_features[exp_data[0]]\r\n          }\r\n          var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\r\n          var origin_index=indexed_features.indexOf(origin_feature)\r\n          var dest_index=origin_index+difference\r\n          if(dest_index<0){var dest_feature=indexed_features[0]}\r\n          else if(dest_index>number_of_charts-1){var dest_feature=indexed_features[number_of_charts-1]}\r\n          else{var dest_feature=indexed_features[dest_index]}\r\n\r\n          console.log(origin_feature,dest_feature,indexed_features,dest_index,exp_data[1][0],'test')\r\n\r\n          features_with_score[origin_feature]=features_with_score[origin_feature]-difference\r\n          features_with_score[dest_feature]=features_with_score[dest_feature]+difference\r\n          temp1[exp_data[0]]=features_with_score\r\n        })\r\n        console.log(temp1,'temp1')\r\n        self.props.Set_dragged_features(temp1)\r\n        //-------------------------------------\r\n        d3.select(this).raise()\r\n      }\r\n    })\r\n    //--------------------------------------MDS Plot-------------------------------------//\r\n    var feature_contrib_data_for_mds = this.props.lime_data[model_name].filter(item => item['1-qid'] == selected_year && selected_instances.includes(item['two_realRank']))\r\n    getMdsData(this.props.url, { \"data\": feature_contrib_data_for_mds, \"weight\": features_with_score }).then(data => {\r\n      if (typeof data != 'undefined') {\r\n        var MDS_response = JSON.parse(data.response)\r\n        var circle_data = feature_contrib_data_for_mds.map((item, index) => {\r\n          item['x'] = MDS_response[index][0]\r\n          item['y'] = MDS_response[index][1]\r\n          item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + item[\"model\"].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n          return item\r\n        })\r\n        Create_MDS(this.mds, circle_data, \"#mds\" + this.props.exp_id, self.props.diverginColor, this.props.Set_clicked_circles,this.props.deviation_array)\r\n      }\r\n    })\r\n  }\r\n  //------------------------------\r\n  render() {\r\n    return (\r\n      <div className={\"explanation_chart_parent exp\" + this.props.model_name} style={{ width: '100%', height: '100%', \"border\": this.props.mode == 'Model' ? \"2px solid #e2e2e2\" : 'none', padding: \"2px 5px\" }}>\r\n        <p className=\"title_p\" style={{ padding: 0, margin: 0 }}>{this.props.model_name}</p>\r\n        <svg ref={this.mds} id={\"mds\" + this.props.exp_id} style={{ margin: 0, width: \"100%\", height: this.state.mds_height }}></svg>\r\n        <svg id={this.props.exp_id} style={{ marginTop: 0, width: \"100%\" }}></svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    deviation_array: state.deviation_array,\r\n    original_data: state.original_data,\r\n    time_mode_model: state.time_mode_model,\r\n    chart_scale_type: state.chart_scale_type,\r\n    dataset: state.dataset,\r\n    histogram_data: state.histogram_data,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    show: state.show,\r\n    average_m: state.average_m,\r\n    average_y: state.average_y,\r\n    lime_data: state.lime_data,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    clicked_features: state.clicked_features,\r\n    threshold: state.threshold,\r\n    mode: state.mode,\r\n    dbclicked_features: state.dbclicked_features,\r\n    dragged_features: state.dragged_features,\r\n    url: state.url,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_dragged_features: (val) => dispatch({ type: \"dragged_features\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\r\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\r\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\r\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\r\n    Set_popup_chart_data: (val) => dispatch({ type: \"popup_chart_data\", value: val }),\r\n    set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as misc_algo from '../misc_algo'\r\nimport CreateCatChart from '../Popover/CreateCatChart'\r\nimport CreateNumChart from '../Popover/CreateNumChart'\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ a: 5 })\r\n  }\r\n  componentDidUpdate() {\r\n    var merged_arr = this.props.popup_chart_data[0] // only data\r\n    var scatterplot_data = [[this.props.popup_chart_data[1],this.props.popup_chart_data[0]]] // [feature name, data]\r\n    //----------------------------------------------------------------------------------------------------------Call createChart\r\n    if (merged_arr.length > 0) { // This is to avoid the error caused by the next line\r\n      if (isNaN(merged_arr[0][this.props.popup_chart_data[1]])) {\r\n        CreateCatChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\r\n      }\r\n      else {\r\n        CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\r\n      }\r\n    }\r\n    else {\r\n      CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array) // calling the function to set the  graph empty when all models are unselected\r\n    }\r\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div key={this.props.popup_chart_data[1]} style={{ margin: 10, padding: 10, border: this.props.index == 0 ? \"3px solid #e5e5e5\" : \"white\" }}>\r\n        <svg id={this.props.myid}> </svg>\r\n        <p style={{ color: \"#4f4c4c\", marginLeft: \"42%\", marginTop: -25, marginBottom: 0 }}>{this.props.popup_chart_data[1]}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    //popup_chart_data: state.popup_chart_data,\r\n    pop_over_models: state.pop_over_models,\r\n    clicked_circles: state.clicked_circles,\r\n    threshold: state.threshold,\r\n    anim_config:state.anim_config,\r\n    deviation_array: state.deviation_array,\r\n  }\r\n}\r\n//item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from \"react-redux\";\r\nimport Chart_pop from './04PopoverCharts'\r\nimport Draggable from 'react-draggable';\r\nimport Grid from '@mui/material/Grid';\r\nimport * as d3 from 'd3';\r\nexport function SimplePopover(props) {\r\n    const handleClose = () => {\r\n        props.set_pop_over(false)\r\n        props.set_dbclicked_features([])\r\n    };\r\n    //------------------------------\r\n    var selected_instances = d3.range(props.time_mode_range[0], props.time_mode_range[1] + 1)\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n\r\n    //----------\r\n    var under_threshold_instances = []\r\n    var year_data = props.original_data.filter(item => props.time_mode_year1 == item['1-qid'])\r\n    year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[props.time_mode_model])\r\n        if (Math.abs(predicted_rank - two_realRank) < props.threshold) {\r\n            under_threshold_instances.push(two_realRank)\r\n        }\r\n    })\r\n    var selected_instances1 = selected_instances.filter(item => under_threshold_instances.includes(item))\r\n    var data1 = props.lime_data[props.time_mode_model].filter(element => parseInt(element['1-qid']) == parseInt(props.time_mode_year1) && selected_instances1.includes(parseInt(element['two_realRank'])))\r\n    //------------------------------\r\n    var under_threshold_instances = []\r\n    var year_data = props.original_data.filter(item => props.time_mode_year2 == item['1-qid'])\r\n    year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[props.time_mode_model])\r\n        if (Math.abs(predicted_rank - two_realRank) < props.threshold) {\r\n            under_threshold_instances.push(two_realRank)\r\n        }\r\n    })\r\n    var selected_instances2 = selected_instances.filter(item => under_threshold_instances.includes(item))\r\n    var data2 = props.lime_data[props.time_mode_model].filter(element => parseInt(element['1-qid']) == parseInt(props.time_mode_year2) && selected_instances2.includes(parseInt(element['two_realRank'])))\r\n\r\n    return (\r\n        <div className=\"pop_over\" style={{ position: \"relative\" }}>\r\n            {props.pop_over == true ?\r\n                <div style={{ top: \"2%\", left: \"14%\", position: \"fixed\", pointerEvents: \"none\", backgroundColor: \"transparent\" }}>\r\n                    <Draggable>\r\n                        <Grid style={{ backgroundColor: \"#ffffff\", boxShadow: \"3px 2px 15px -7px #000000\", pointerEvents: \"auto\", display: \"relative\", zIndex: 6 }}>\r\n                            <Grid container style={{ borderBottom: \"1px solid #e2e2e2\", marginBottom: 20 }} direction=\"row\" justify=\"flex-end\" alignItems=\"center\" >\r\n                                <Button color=\"secondary\" id=\"draggable-dialog-title\" onClick={handleClose}>close</Button>\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\r\n                                {\r\n                                    props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Grid item container direction=\"row\" ><Chart_pop\r\n                                        index={index}\r\n                                        popup_chart_data={[data1, item]} default_models={props.default_models}\r\n                                        myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '') + \"range1\"} diverginColor={props.diverginColor}\r\n                                    ></Chart_pop>\r\n                                        <Chart_pop\r\n                                            index={index}\r\n                                            popup_chart_data={[data2, item]} default_models={props.default_models}\r\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '') + \"range2\"} diverginColor={props.diverginColor}\r\n                                        ></Chart_pop></Grid>\r\n                                    ) : <Chart_pop popup_chart_data={data1} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Draggable>\r\n                </div> : null}\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        time_mode_year1: state.time_mode_year1,\r\n        time_mode_year2: state.time_mode_year2,\r\n        time_mode_model: state.time_mode_model,\r\n        time_mode_range: state.time_mode_range,\r\n        popup_chart_data: state.popup_chart_data,\r\n        pop_over: state.pop_over,\r\n        dbclicked_features: state.dbclicked_features,\r\n        selected_year: state.selected_year,\r\n        threshold: state.threshold,\r\n        original_data: state.original_data,\r\n        lime_data: state.lime_data,\r\n        histogram_data: state.histogram_data,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\r\n        set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\r\n        set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SimplePopover);\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './YearModeComponent.scss';\r\nimport { connect } from \"react-redux\";\r\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\r\nimport * as misc_algo from '../misc_algo'\r\nimport * as $ from 'jquery';\r\nimport Year1DropDown from './Year1DropDown';\r\nimport Year2DropDown from './Year2DropDown';\r\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\r\nimport ExpChart from './02ExpChartComponent';\r\nimport Popover from './03TimePopover';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.line_color = null;\r\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ width: window.innerHeight })\r\n  }\r\n  shouldComponentUpdate(prevProps, prevState) {\r\n    return true;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //------------------------------\r\n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n\r\n    //----------\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.time_mode_year1 == item['1-qid'])\r\n    year_data.map(item => {\r\n      var two_realRank = parseInt(item['two_realRank'])\r\n      var predicted_rank = parseInt(item[this.props.time_mode_model])\r\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n        under_threshold_instances.push(two_realRank)\r\n      }\r\n    })\r\n    var selected_instances1 = selected_instances.filter(item => under_threshold_instances.includes(item))\r\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.time_mode_model], this.props.anim_config, this.props.time_mode_year1, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_time_mode_year1, this.props.dataset, this.props.threshold)\r\n    //------------------------------\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.time_mode_year2 == item['1-qid'])\r\n    year_data.map(item => {\r\n      var two_realRank = parseInt(item['two_realRank'])\r\n      var predicted_rank = parseInt(item[this.props.time_mode_model])\r\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n        under_threshold_instances.push(two_realRank)\r\n      }\r\n    })\r\n    var selected_instances2 = selected_instances.filter(item => under_threshold_instances.includes(item))\r\n    \r\n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.time_mode_model], this.props.anim_config, this.props.time_mode_year2, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_time_mode_year2, this.props.dataset, this.props.threshold)\r\n    //------------------------------\r\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\r\n\r\n  }\r\n  render() {\r\n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n    this.props.Set_selected_instances(selected_instances)\r\n    return (\r\n      <Box className=\"box_root\" sx={{ width: '100%',height:'100%', padding: 0.5 }}>\r\n        <Grid container justifyContent=\"space-between\">\r\n          <Grid item xs={12}>\r\n            <div className=\"year_and_model_selector_and_slider_container\" style={{ width: '100%' }}><YearModelSelection></YearModelSelection></div>\r\n          </Grid>\r\n          {/* Group 1 */}\r\n          <Grid item xs={5.9} className=\"Group1_container\" style={{ borderTop: '2px solid #eaeaea',borderLeft: '2px solid #eaeaea',borderRight: '2px solid #eaeaea'}}>\r\n            <Grid container>\r\n              <Grid item xs={12} style={{padding:0}}>\r\n                <div className=\"slidergroup1\" style={{ width: '100%', height: 30 }}><Year1DropDown></Year1DropDown></div>\r\n              </Grid>\r\n              <Grid className=\"dev_plot_and_exp_container\" item xs={6}>\r\n                <div className=\"deviation_plot_container_div\" style={{ width: '100%', height:$('.box_root').height() - ($('.year_and_model_selector_and_slider_container').height() + $('.slidergroup1').height()),overflow: 'scroll' }}><svg id=\"r1d\" style={{ width: \"100%\"}}></svg></div>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                {\r\n                  this.props.rank_data != null ? <div className=\"explanation_plot_container\" style={{ width: '100%', height: '100%', }}>\r\n                    <ExpChart exp_data={[[\"r1exp\", this.props.time_mode_year1], [\"r2exp\", this.props.time_mode_year2]]} diverginColor={diverginColor} exp_id=\"r1exp\" default_models={[this.props.time_mode_model]} state_range={this.props.time_mode_range} selected_year={this.props.time_mode_year1} model_name={this.props.time_mode_model}></ExpChart>\r\n                  </div> : null\r\n                }\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          {/* Group 2 */}\r\n          <Grid item xs={5.9} style={{ borderTop: '2px solid #eaeaea',borderLeft: '2px solid #eaeaea',borderRight: '2px solid #eaeaea' }}>\r\n            <Grid container>\r\n              <Grid item xs={12} style={{padding:0}}>\r\n                <div className=\"slidergroup2\" style={{ width: '100%', height: 30 }}><Year2DropDown></Year2DropDown></div>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <div className=\"deviation_plot_container_div\" style={{ width: '100%', height:$('.box_root').height() - ($('.year_and_model_selector_and_slider_container').height() + $('.slidergroup2').height()),overflow: 'scroll' }}><svg id=\"r2d\" style={{ width: \"100%\" }}></svg></div>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                  {\r\n                    this.props.rank_data != null ? <div className=\"explanation_plot_container\" style={{ width: '100%', height: 500, }}>\r\n                      <ExpChart exp_data={[[\"r1exp\", this.props.time_mode_year1], [\"r2exp\", this.props.time_mode_year2]]} diverginColor={diverginColor} exp_id=\"r2exp\" default_models={[this.props.time_mode_model]} state_range={this.props.time_mode_range} selected_year={this.props.time_mode_year2} model_name={this.props.time_mode_model}></ExpChart>\r\n                    </div> : null\r\n                  }\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Popover diverginColor={diverginColor} default_models={[this.props.time_mode_model]}></Popover>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    time_mode_year1: state.time_mode_year1,\r\n    time_mode_year2: state.time_mode_year2,\r\n    mode: state.mode,\r\n    time_mode_range: state.time_mode_range,\r\n    time_mode_model: state.time_mode_model,\r\n    default_models: state.default_models,\r\n    original_data: state.original_data,\r\n    dataset: state.dataset,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    average_m: state.average_m,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    threshold: state.threshold,\r\n    histogram_data: state.histogram_data,\r\n\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_time_mode_year1:(val) => dispatch({ type: \"time_mode_year1\", value: val }),\r\n    Set_time_mode_year2:(val) => dispatch({ type: \"time_mode_year2\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as $ from \"jquery\"\r\nimport * as d3 from 'd3';\r\nimport exp_fiscal_CordAscent from \"../../../Data/data/fiscal/lime/chart1_data.csv\";\r\nimport exp_school_CordAscent from \"../../../Data/data/school/lime/chart1_data.csv\";\r\nimport exp_house_CordAscent from \"../../../Data/data/house/lime/chart1_data.csv\";\r\nimport * as algo1 from \"../../../Algorithms/algo1\";\r\nimport CreateHistogram from './CreateHistogram'\r\nimport CreateBarChart from './CreateBarChart';\r\nimport Button from '@material-ui/core/Button';\r\nimport { delay } from 'lodash';\r\nclass FeatureHistograms extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { feature_data: [] };\r\n    }\r\n    componentDidMount() {\r\n        var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent } else if (this.props.dataset == \"house\") { filename = exp_house_CordAscent }\r\n        d3.csv(filename).then(feature_data => {\r\n            this.setState({ feature_data: feature_data,all_instances:{} })\r\n        })\r\n    }\r\n    store_instances=(feature_name,instances)=>{\r\n        var temp={...this.state.all_instances}\r\n        temp[feature_name]=instances\r\n        this.setState({all_instances:temp})\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(typeof(this.state.all_instances)!=\"undefined\" && JSON.stringify(nextState.all_instances)!==JSON.stringify(this.state.all_instances)){\r\n            return false\r\n        }\r\n        return true    \r\n    }\r\n    componentDidUpdate() {\r\n        var self = this\r\n        var filename;\r\n        var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\r\n        //--------------------\r\n        var number_of_charts = 9\r\n        var features_dict = algo1.features_with_score(this.props.dataset, this.props.default_models, selected_instances, this.props.selected_year, number_of_charts, this.props.rank_data)\r\n        var sorted_features = Object.entries(features_dict).sort((first, second) => second[1] - first[1]).map(element => element[0])\r\n        //--------------------\r\n        if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent }\r\n        //--------------------------------Iterate through each features\r\n        const margin = { top: 10, right: 5, bottom: 50, left: 5 }; // Histogram\r\n        //const margin = { top: 10, right: 5, bottom: 40, left: 5 } // Barchart\r\n        d3.select(\".feature_histograms_container\").selectAll(\".feature\").data(sorted_features, d => d).join(\"svg\").attr(\"class\", 'feature')\r\n            //.attr(\"width\", feature_width)\r\n            //.attr(\"y\", (d, feature_index) => feature_height * feature_index)\r\n            .attr(\"add_histogram\", function (d, feature_index) {\r\n                var histogram_data = []\r\n                if (!isNaN(self.state.feature_data[0][d])) {\r\n                    self.state.feature_data.forEach(element => {\r\n                        if (element[\"1-qid\"] == self.props.selected_year) {\r\n                            var temp_dict = {}\r\n                            temp_dict[\"x\"] = parseInt(element['two_realRank'])\r\n                            temp_dict[\"y\"] = parseFloat(element[d])\r\n                            histogram_data.push(temp_dict)\r\n                        }\r\n                    });\r\n                    CreateHistogram(histogram_data, d3.select(this), d, feature_index, sorted_features.length,self.store_instances)\r\n                }\r\n                else {\r\n                    self.state.feature_data.forEach(element => {\r\n                        if (element[\"1-qid\"] == self.props.selected_year) {\r\n                            var temp_dict = {}\r\n                            temp_dict[\"x\"] = parseInt(element['two_realRank'])\r\n                            temp_dict[\"y\"] = element[d]\r\n                            histogram_data.push(temp_dict)\r\n                        }})\r\n                    CreateBarChart(histogram_data, d3.select(this), d, feature_index, sorted_features.length,self.store_instances,self.state.all_instances)\r\n                }\r\n            })\r\n            .attr('id',d=>d)\r\n            //.call(d3.brush().extent([[0, margin.top], [400, 65]]))\r\n        //--------------------------------Iterate through each features\r\n    }\r\n    render() {\r\n        return (\r\n            this.props.original_data != null ? <div style={{display:'relative', width: 400,marginTop:-8 }}>\r\n                <Button fullWidth style={{margin:0,position:'sticky',top:0,backgroundColor:\"gray\",borderRadius:0}} onClick={()=>{\r\n                    var selected_instances=[...new Set([].concat(...Object.values(this.state.all_instances)))]\r\n                    var filtered_instances=selected_instances.filter(item => item>=this.props.state_range[0] && item<=this.props.state_range[1])\r\n                    this.props.handleClose() // This will close the select menu\r\n                    if(filtered_instances.length==0){alert(\"No instance is available withing the selected range!\")}\r\n                    this.props.Set_histogram_data([...filtered_instances])\r\n                }}> Update </Button>\r\n                <div className=\"feature_histograms_container_div\" style={{display:'relative', width: 400, height: window.innerHeight, overflow: \"scroll\",marginTop:-8 }}>\r\n                <svg className=\"feature_histograms_container\" style={{ width: \"100%\", padding: 10 }}> </svg>\r\n                </div>\r\n            </div> : null\r\n        );\r\n    }\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        dataset: state.dataset,\r\n        deviate_by: state.deviate_by,\r\n        state_range: state.state_range,\r\n        default_models: state.default_models,\r\n        selected_year: state.selected_year,\r\n        sparkline_data: state.sparkline_data,\r\n        show: state.show,\r\n        mode: state.mode,\r\n        original_data: state.original_data,\r\n        rank_data: state.rank_data,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\r\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\r\n        Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(FeatureHistograms);\r\n\r\n//https://material-ui.com/api/slider/\r\n//https://material-ui.com/components/expansion-panels/\r\n//https://material-ui.com/api/checkbox/\r\n//https://material-ui.com/components/radio-buttons/","import * as d3 from 'd3';\r\nimport * as $ from \"jquery\"\r\nexport default function CreateChart(histogram_data, svg, feature_name, feature_index, number_of_features,store_instances,all_instances) {\r\n  //( feature_height, selected_year, handleHistogramselection, feature_data)\r\n  var parent_width = $(\".feature_histograms_container\").width()\r\n  var parent_height = $(\".feature_histograms_container\").height()\r\n  var feature_width = $(\".feature_histograms_container\").width()\r\n  var feature_height = 120\r\n  const margin = { top: 10, right: 5, bottom: 40, left: 5 }\r\n  d3.select(\".feature_histograms_container\").attr('height', feature_height * number_of_features + 20)\r\n  svg.attr('y', feature_height * feature_index).attr('width', parent_width).attr('height', feature_height)\r\n  //-----------------------------------------------------------\r\n  var occur = {}\r\n  histogram_data.map(item => {\r\n    if (item.y in occur) occur[item.y] = occur[item.y] + 1\r\n    else { occur[item.y] = 1 }\r\n  })\r\n  var items = Object.entries(occur).sort((first, second) => second[1] - first[1]);\r\n  var x = items.map(element => element[1]);\r\n  var sum_x = d3.sum(x)\r\n  svg.selectAll('.item_svg').data(items).join(\"svg\").attr(\"class\", 'item_svg').attr(\"x\", (d, i) => (d3.sum(x.slice(0, i)) / sum_x) * feature_width).attr('y',margin.top).attr('width', (d, i) => ((d[1] / sum_x) * feature_width) - .2).attr('height', feature_height - margin.bottom)\r\n    .attr('add_rectangle', function (d) {\r\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"width\", \"100%\").attr(\"height\", feature_height - margin.bottom).style(\"fill\", \"gray\")\r\n      .attr(\"check\",function(){\r\n        if(feature_name+d[0] in all_instances){ if(all_instances[feature_name+d[0]].length>0){d3.select(this).classed('feature_clicked',true) }} // if the feature and the category exists we check the length and decide that it is clicked item. In categorical items if something is clicked it can not have empty instances\r\n      })\r\n      .on('click', function(){\r\n        if(!d3.select(this).classed('feature_clicked')){ // if not classed we add the class and the data\r\n          d3.select(this).classed('feature_clicked',true)\r\n          store_instances(feature_name+d[0],histogram_data.filter(item=>item['y']==d[0]).map(item=>item.x))\r\n        }\r\n        else{ // if claassed we already have it so we set it empty\r\n          d3.select(this).classed('feature_clicked',false)\r\n          store_instances(feature_name+d[0],[])\r\n        }\r\n      })\r\n      \r\n    \r\n    })\r\n    .attr('add_text', function (d) {\r\n      //if(d3.select(this).attr(\"width\")>9)\r\n      d3.select(this).selectAll(\"text\").data([0]).join(\"text\").text(d[0]).attr('x', \"50%\").attr(\"y\", '50%').attr('dominant-baseline', 'middle').style(\"font-size\", d3.select(this).attr(\"width\") > 11 ? 10 : d3.select(this).attr(\"width\") - 2).style(\"writing-mode\", \"tb\").style(\"text-anchor\", \"middle\").style('cursor', 'pointer')\r\n    })\r\n  //----------------------------------------------------------- Histogram creation ends here\r\n  svg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", feature_height-10).attr(\"x\", feature_width / 2).attr(\"text-anchor\", \"middle\").attr('font-size', 14).text(feature_name).style('text-transform','capitalize')\r\n}","import * as d3 from \"d3\"\r\nimport * as $ from \"jquery\"\r\nexport default function CreateHistogram(histogram_data, svg, feature_name, feature_index, number_of_features, store_instances) {\r\n  const margin = { top: 10, right: 5, bottom: 50, left: 5 };\r\n  var parent_width = $(\".feature_histograms_container\").width()\r\n  var feature_height = 120\r\n  var feature_width = parent_width\r\n  d3.select(\".feature_histograms_container\").attr('height', feature_height * number_of_features + 20)\r\n  svg.attr('y', feature_height * feature_index).attr('width', parent_width).attr('height', feature_height)\r\n  var item_data = histogram_data.map(item => item['y'])\r\n  var area_chart_height = feature_height - margin.top - margin.bottom;\r\n  var area_chart_width = feature_width - margin.left - margin.right\r\n  const y = d3.scaleLinear().domain(d3.extent(item_data)).range([margin.top, area_chart_height])\r\n\r\n  var myticks = y.ticks(25)\r\n  var binned_data = d3.histogram().value(d => d).domain(y.domain()).thresholds(myticks)(item_data)\r\n  //--------- Create the areaChart\r\n  var area_chart_data = []\r\n  binned_data.map((item, i) => area_chart_data.push([item.x1, item.length]))\r\n  var xScale = d3.scaleLinear().domain(d3.extent(area_chart_data.map(item => item[0]))).range([margin.left, feature_width - margin.right]) // 20 is the baseline\r\n  var yScale = d3.scaleLinear().domain([0, d3.max(area_chart_data.map(item => item[1]))]).range([area_chart_height, 0])\r\n  const areaGenerator = d3.area().curve(d3.curveMonotoneX).x(d => xScale(d[0])).y0(yScale(0)).y1(d => yScale(d[1]))\r\n\r\n  svg.append(\"path\").attr('transform', 'translate(0,' + margin.top + ')')\r\n    .attr(\"d\", areaGenerator(area_chart_data))\r\n    .style(\"fill\", \"gray\");\r\n//--------------------------------\r\n  svg.selectAll(\".xAxis_g\").data([0]).join('g').attr('class', 'xAxis_g').attr(\"transform\", \"translate(0,\" + (feature_height - margin.bottom) + \")\")\r\n    .call(d3.axisBottom(xScale).ticks(5).tickFormat(d3.format(\".2s\")));\r\n  //.call(d3.axisBottom(xScale).ticks(5));\r\n  svg.selectAll('.domain').attr('stroke', '#dddddd')\r\n  svg.selectAll(\".title\").data([0]).join('text').attr('x', feature_width / 2).attr('y', feature_height - 28).attr('dominant-baseline', 'hanging').attr('text-anchor', 'middle').text(feature_name).attr('font-size', 14).style('text-transform', 'capitalize')\r\n  svg.call(d3.brushX().extent([[0, margin.top], [400, area_chart_height + margin.top]]).on(\"end\", () => {\r\n    var extent = d3.event.selection\r\n    if (extent != null) {\r\n      var lower = xScale.invert(extent[0]), upper = xScale.invert(extent[1])\r\n      var instances = histogram_data.filter(item => item['y'] >= lower && item['y'] <= upper).map(item => item['x']) // x contains the ranking and y contains the value\r\n      store_instances(feature_name, instances)\r\n    }\r\n    else{store_instances(feature_name, [])}\r\n  }))\r\n}\r\n//https://stackoverflow.com/questions/54236051/how-to-draw-a-vertical-area-chart","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport FeatureHistograms from \"./FeatureHistograms/FeatureHistograms\"\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nexport default function SimpleMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop:-2}}>\r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Features<ArrowDropDownIcon></ArrowDropDownIcon></Button>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} style={{marginTop:0}}>\r\n       {anchorEl?<FeatureHistograms handleClose={handleClose}></FeatureHistograms>:null}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { connect } from 'react-redux';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nexport function SimpleMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop:-2}}>\r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Mode<ArrowDropDownIcon></ArrowDropDownIcon></Button>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} style={{marginTop:0}}>\r\n       {anchorEl?<div style={{paddingLeft:10}}><form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\"></FormLabel>\r\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={(event, val) => {handleClose();props.Set_histogram_data([]);props.Set_mode(val)}}>\r\n                    {['Model', 'Ranges', 'Time'].map((value) => {\r\n                      return <FormControlLabel value={value} control={<Radio />} label={value} />\r\n                    })}\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </form></div>:null}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    state_range: state.state_range,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\r\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SimpleMenu);\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// Create a theme instance.\r\nconst outerTheme1 = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#0069d9\"\r\n    },\r\n    secondary: {\r\n      main: \"#0069d9\"\r\n    }\r\n  }\r\n})\r\n\r\n\r\n\r\nconst outerTheme = createMuiTheme({\r\n  spacing: 2,\r\n  overrides: { // This is the place we override classes applied to a component\r\n    MuiFilledInput: { // This is the name of the component\r\n      root: { // This is the class we want to edit\r\n        backgroundColor: \"none\",\r\n        padding:0,\r\n      }\r\n    },\r\n    MuiInputLabel: {\r\n      root: {\r\n        backgroundColor: \"yellow\"\r\n      }\r\n    },\r\n    MuiTextField: {\r\n      root: {}\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: \"none\",\r\n        padding: \"15px\"\r\n      },\r\n      fullWidth: {\r\n        maxWidth: \"100%\"\r\n      }\r\n    },\r\n    MuiFilledInput:{\r\n      root:{\r\n        padding:0,\r\n        backgroundColor:\"yellow\"\r\n      }\r\n    },\r\n    MuiAutocomplete:{\r\n      Root:{\r\n        padding:0\r\n      }\r\n    }\r\n\r\n  },\r\n  props: { // This is the place where we define props\r\n    MuiButton: {\r\n      disableRipple: true,\r\n      variant: \"contained\",\r\n      color: \"primary\"\r\n    },\r\n    MuiCheckbox: {\r\n      disableRipple: true\r\n    },\r\n    MuiTextField: {\r\n      variant: \"filled\",\r\n      InputLabelProps: {\r\n        shrink: true\r\n      }\r\n    },\r\n  }\r\n});\r\n\r\nexport default outerTheme","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport outerTheme from './theme'\r\nimport { connect } from \"react-redux\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState } from 'react';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\nfunction Inputs(props) {\r\n    const [threshold,set_threshold]=useState(props.threshold)\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={outerTheme}>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <span>Deviation threshold:</span>\r\n                <Input style={{width:30}} defaultValue={threshold} inputProps={{ 'aria-label': 'description' }} \r\n                onChange={(event=>set_threshold(event.target.value))}\r\n                />\r\n                <Button style={{height:20,color:\"black\",fontSize:16,backgroundColor:'#f2f2f2'}} variant='string'\r\n                onClick={()=>props.Set_threshold(threshold)}\r\n                >Update</Button>\r\n            </form>\r\n        </ThemeProvider>\r\n\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        threshold:state.threshold\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_threshold: (val) => dispatch({ type: \"threshold\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Inputs);\r\n/*\r\nimport React from 'react';\r\nimport \"./Sliders.scss\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material/TextField';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tRoot: {\r\n        marginBottom: 35,\r\n    },\r\n    rang_input: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\nfunction Modes(props) {\r\n    const classes = useStyles();\r\n    // states\r\n    const [threshold, set_threshold] = React.useState(props.threshold);\r\n    //-----------------------------------------------------------------\r\n    var temp_marks = [];\r\n    var min=0\r\n    var max=20\r\n    var number_marks=10\r\n    var step = (max - 1) / (number_marks - 1);\r\n    for (var i = 0; i < number_marks; i++) {\r\n        temp_marks.push(1 + (step * i));\r\n    }\r\n    var marks = temp_marks.map(item => {\r\n        var myitem = parseInt(item)\r\n        return { value: myitem, label: myitem }\r\n    })\r\n    //console.log(props.marks)\r\n    //-----------------------------------------------------------------\r\n    return (\r\n        <div className=\"rangeslider2\" style={{ marginLeft: 60,marginTop:-28, width: \"100%\", paddingTop: 0 }} >\r\n            <Typography>\r\n                Threshold\r\n            </Typography>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        threshold:state.threshold\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_threshold: (val) => dispatch({ type: \"threshold\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);\r\n*/","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport * as algo1 from \"../../Algorithms/algo1\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n/*\r\nChange in year,model selection and state range selection as well \r\n*/\r\nfunction Sort(props) {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [sort_by, set_sort_by] = React.useState(props.sort_by);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const sortModels = (event) => {\r\n        set_sort_by(event.target.value)\r\n        if(event.target.value==\"None\"){var val=\"Alphabetically\"}\r\n        else{var val=event.target.value}\r\n        props.Set_sort_by(val)\r\n        var temp_Models = algo1.sort(val, props.state_range, props.default_models, props.selected_year,props.grouped_by_year_data)[0];\r\n        var default_model_scores = algo1.sort(val, props.state_range, props.default_models, props.selected_year,props.grouped_by_year_data)[1];\r\n        props.Set_default_model_scores(default_model_scores)\r\n        props.Set_default_models([...temp_Models])\r\n      };\r\n    return (\r\n        <div className=\"sort\" style={{borderRight:\"1px dashed #eaeaea\",paddingLeft:5}}>\r\n            <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Metrics <ArrowDropDownIcon></ArrowDropDownIcon></Button>\r\n            <Menu\r\n                id=\"fade-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\"></FormLabel>\r\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={sort_by} onChange={sortModels}>\r\n                    {['Discounted Cumulative Gain', 'Average Precision', 'None'].map((value) => {\r\n                        return <FormControlLabel value={value} control={<Radio />} label={value} />\r\n                    })}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        default_models: state.default_models,\r\n        sort_by:state.sort_by,\r\n        state_range: state.state_range,\r\n        selected_year: state.selected_year,\r\n        grouped_by_year_data:state.grouped_by_year_data,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_sort_by: (val) => dispatch({ type: \"sort_by\", value: val }),\r\n        Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\r\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Sort);\r\n//https://material-ui.com/components/menus/","import React, { Component } from 'react';\r\n//------------------------------------------------All datasets imports ends here\r\nimport { Row, Col } from 'reactstrap';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport * as $ from 'jquery';\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FeaturesDropdown from \"./FeaturesDropdown\"\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport SelectMode from './SelectMode'\r\nimport Threshold from './Threshold';\r\nimport SortModels from './SortModels';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // mydata is original data\r\n    this.state = {\r\n      random: 10,\r\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\r\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",\r\n    };\r\n  }\r\n  buttonclickHandler = (value, type) => {\r\n    setTimeout(() => { this.setState({ random: Math.random() }) }, 500);\r\n    type = \"button\" ? this.props.Set_view_data(value) : null\r\n    type = \"form\" ? this.setState({ view_data: value }) : null\r\n  }\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid container>\r\n          <ButtonGroup aria-label=\"outlined button group\" style={{marginRight:150,border:'none'}}>\r\n          <Button style={{borderRadius:0,border:'none',borderRight:'1px solid #bfbfbf'}} onClick={() => this.buttonclickHandler(1, \"button\")}>View Data</Button>\r\n          <Button style={{borderRadius:0,border:'none', borderRight:'1px solid #bfbfbf'}} onClick={() => this.buttonclickHandler(0, \"button\")}>Load Data</Button>\r\n          </ButtonGroup>\r\n          <SelectMode></SelectMode>\r\n          {this.props.mode==\"Model\"?<FeaturesDropdown></FeaturesDropdown>:null}\r\n          {this.props.mode==\"Model\"?<SortModels></SortModels>:null}\r\n          <Threshold></Threshold>\r\n        </Grid>\r\n        {this.props.view_data == false ?\r\n          <Row className=\"Topbar_container\">\r\n            <div className=\"load\">\r\n              <form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\"></FormLabel>\r\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={(event, val) => this.props.handleradioChange(val)}>\r\n                    {['Fiscal Dataset', 'School Dataset'].map((value) => {\r\n                      return <FormControlLabel value={value} control={<Radio />} label={value} />\r\n                    })}\r\n                  </RadioGroup>\r\n                  <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Load</Button>\r\n                </FormControl>\r\n              </form>\r\n            </div></Row>\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    view_data: state.view_data,\r\n    mode:state.mode,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_view_data: (val) => dispatch({ type: \"view_data\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","import React, { Component, PureComponent } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as $ from 'jquery';\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@mui/material/Grid';\r\nimport './legend.scss'\r\nclass Legend extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {} // This is the default height\r\n  }\r\n  componentDidMount() { this.setState({ rand: 10 }) }\r\n  componentDidUpdate() {\r\n    var legend_container_width = $('.legend_container').width()\r\n    var legend_container_height = $('.legend_container').height()\r\n    //--------------------------- Legend 1\r\n    var legend1_height = 100\r\n    var legend1_rScale = d3.scaleLinear().domain(d3.extent(this.props.deviation_array)).range([8, 1])\r\n    var legend1_yScale = d3.scaleLinear().domain(d3.extent(this.props.deviation_array)).range([8, legend1_height - 5])\r\n    var legend1_ticks = legend1_yScale.ticks(4)\r\n    var legend1_svg = d3.select('#legend1').attr('width', legend_container_width).attr('height', legend1_height)\r\n    legend1_svg.selectAll('.legend1_circles').data(legend1_ticks).join('circle').attr('class', 'legend1_circles').attr('cx', 10).attr('cy', d => legend1_yScale(d)).attr('r', d => legend1_rScale(d)).attr('fill', 'grey')\r\n    legend1_svg.selectAll('.legend1_text').data(legend1_ticks).join('text').attr('class', 'legend1_text').attr('x', 20).attr('y', d => legend1_yScale(d)).text(d => d).attr('dominant-baseline', 'middle').attr('font-size', 10)\r\n\r\n    //--------------------------- Legend 2\r\n    var min = d3.min(this.props.selected_instances), max = d3.max(this.props.selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n\r\n    var legend2_svg_height = legend_container_height / 2 - 50\r\n\r\n    var legend2_yScale = d3.scaleLinear().domain([min, max]).range([5, legend2_svg_height - 10])\r\n    var legend2_ticks = d3.range(min, max + 1, max / 10)\r\n    var rect_height = legend2_svg_height / legend2_ticks.length\r\n    var rect_width = 8\r\n    var legend2_svg = d3.select('#legend2').attr('width', legend_container_width).attr('height', legend2_svg_height)\r\n    legend2_svg.selectAll('.legend2_rects').data(legend2_ticks).join('rect').attr('class', 'legend2_rects').attr('x', 10)\r\n    .attr('y', (d, i) => rect_height*i).attr('width', rect_width).attr('height', rect_height).attr('fill', d => diverginColor(d))\r\n    legend2_svg.selectAll(\".legend2_labels\").data([min, parseInt(max / 2), max]).join(\"text\").attr(\"x\", 10 + rect_width + 2).attr(\"class\", \"legend2_labels\").attr('dominant-baseline', \"middle\").attr('y', (d, i) => i == 0 ? legend2_yScale(d) + rect_height / 2 : legend2_yScale(d)).text(d => d).attr('font-size', 12)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid className=\"legend_container\" container direction=\"column\" justifyContent=\"center\" alignItems=\"flex-start\" style={{ width: \"100%\", height: \"100%\" }}>\r\n        <Grid item style={{width:this.props.legend_width}}>\r\n          <div item style={{ backgroundColor: 'rgb(211, 211, 211,0.5)', padding: 5, marginBottom: 5 }}>\r\n            <p className=\"title\" style={{ marginBottom: 10 }}> Model Precision</p>\r\n            <svg id=\"legend1\"> </svg>\r\n          </div>\r\n        </Grid>\r\n        <Grid item container  style={{width:this.props.legend_width,backgroundColor: 'rgb(211, 211, 211,0.5)', padding: 5 }}>\r\n            <p className=\"title\" style={{ marginBottom: 10 }}> Rank Range</p>\r\n            <p style={{ margin:0,fontSize:12 }}>High</p>\r\n            <svg id=\"legend2\" style={{marginTop:3,marginBottom:0}}> </svg>\r\n            <p style={{ margin:0,fontSize:12 }}>Low</p>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    selected_instances: state.selected_instances,\r\n    deviation_array: state.deviation_array,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Legend);","import React, { Component } from 'react';\r\n//------------------------------------------------All datasets imports\r\nimport fiscal from \"./Data/fiscal.csv\";\r\nimport school from \"./Data/school.csv\";\r\nimport house from \"./Data/house.csv\";\r\n\r\nimport fiscal_rank from \"./Data/data/fiscal/lime/fiscal_rank.csv\";\r\nimport fiscal_lime from \"./Data/data/fiscal/lime/fiscal_lime.csv\";\r\n\r\nimport school_rank from \"./Data/data/school/lime/school_rank.csv\";\r\nimport school_lime from \"./Data/data/school/lime/school_lime.csv\";\r\n\r\nimport house_rank from \"./Data/data/house/lime/house_rank.csv\";\r\nimport house_lime from \"./Data/data/house/lime/house_lime.csv\";\r\n\r\n//------------------------------------------------All datasets imports ends here\r\nimport \"./App.scss\";\r\nimport * as d3 from 'd3';\r\nimport * as algo1 from \"./Algorithms/algo1\";\r\nimport ModelChart from \"./components/Charts/Model/ModelChartComponent\"\r\nimport RangeChart from \"./components/Charts/Range/01RangeChartComponent\"\r\nimport YearChart from \"./components/Charts/Time/01YearChartComponent\"\r\nimport { Row, Col } from 'reactstrap';\r\nimport * as $ from 'jquery';\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Top from './components/Top/Top';\r\nimport Legend from '../src/components/Legend/Legend'\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // mydata is original data\r\n    this.state = {\r\n      random: 10,\r\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\r\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",\r\n    };\r\n  }\r\n  componentDidMount() { this.dataprocessor(this.props.dataset) }\r\n  //-------------------------------------------------------------------------------------------------------------------- data processor processes data for initial render\r\n  dataprocessor = (dataset_name) => {\r\n    if (dataset_name == \"school\") { this.process_data(school, school_rank, school_lime, dataset_name) }\r\n    if (dataset_name == \"fiscal\") { this.process_data(fiscal, fiscal_rank, fiscal_lime, dataset_name) }\r\n    if (dataset_name == \"house\") { this.process_data(house, house_rank, house_lime, dataset_name) }\r\n  }\r\n  process_data = (slopechart_data_filename, rank_data_filename, lime_data_filename, dataset_name) => {\r\n    var self = this\r\n    //-------------\r\n    d3.csv(slopechart_data_filename).then(original_data => {\r\n      var grouped_by_year_data = algo1.groupby_year(original_data).years\r\n      var sparkline_data = algo1.groupby_year(original_data).sparkline_data\r\n      var years_for_dropdown = Object.keys(grouped_by_year_data)\r\n      //console.log(grouped_by_year_data,sparkline_data,years_for_dropdown,'selected_year')\r\n      self.props.Set_sparkline_data(sparkline_data)\r\n      self.props.Set_slider_max(grouped_by_year_data[years_for_dropdown[0]].length)\r\n      self.setState({ years_for_dropdown: years_for_dropdown })\r\n      self.props.Set_years_for_dropdown(years_for_dropdown)\r\n      self.props.Set_time_mode_year1(years_for_dropdown[0])\r\n      self.props.Set_time_mode_year2(years_for_dropdown[1])\r\n      self.props.Set_legend_year(years_for_dropdown[0])\r\n      self.setState({ ref_year: years_for_dropdown[0] })\r\n      self.props.Set_grouped_by_year_data(grouped_by_year_data)\r\n      self.setState({ grouped_by_year_data: grouped_by_year_data })\r\n      self.setState({ original_data: original_data })\r\n      self.props.Set_original_data(original_data)\r\n      self.props.Set_selected_year(years_for_dropdown[0])\r\n    })\r\n    //-------------\r\n    d3.csv(rank_data_filename).then(data => {\r\n      var nested_data = {}\r\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\r\n        nested_data[item.key] = item.values\r\n      })\r\n      self.props.Set_rank_data(nested_data)\r\n    })\r\n    //-------------\r\n    d3.csv(lime_data_filename).then(temp_data => {\r\n      var data=temp_data.map(item=>{\r\n        item['predicted']=parseInt(item['predicted'])\r\n        item['two_realRank']=parseInt(item['two_realRank'])\r\n        item['deviation']=Math.abs(item['predicted']-item['two_realRank'])\r\n        return item\r\n      })\r\n      var nested_data = {}\r\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\r\n        nested_data[item.key] = item.values\r\n      })\r\n      self.props.Set_lime_data(nested_data)\r\n    })\r\n  }\r\n  //-------------------------------------------------------------------------------------------------------------------- data processor processes data for initial render\r\n\r\n  handleradioChange = (selected_dataset) => {\r\n    this.props.Set_rank_data(null)\r\n    this.props.Set_clicked_items_in_slopechart([])\r\n    this.props.Set_state_range([1, 25])\r\n    this.props.Set_histogram_data([])\r\n    this.props.Set_mode(\"Model\")\r\n    this.props.Set_range_mode_range1([1, 25])\r\n    this.props.Set_range_mode_range2([15, 40])\r\n    this.props.Set_time_mode_range([5, 35])\r\n    if (selected_dataset == 'Fiscal Dataset') {\r\n      this.setState({ dataset: 'fiscal' })\r\n      this.props.Set_dataset('fiscal')\r\n      this.dataprocessor(\"fiscal\")\r\n    }\r\n    else if (selected_dataset == 'House Dataset') {\r\n      this.setState({ dataset: 'house' })\r\n      this.props.Set_dataset('house')\r\n      this.dataprocessor(\"house\")\r\n    }\r\n    else {\r\n      this.setState({ dataset: 'school' })\r\n      this.props.Set_dataset('school')\r\n      this.dataprocessor(\"school\")\r\n    }\r\n  };\r\n  render() {\r\n    var legend_width = 70\r\n    return (\r\n      <div className=\"root_container\" style={{ height: window.innerHeight, width: window.innerWidth}}>\r\n        <div className=\"topBar_root\" style={{ height: 35, width: window.innerWidth}}>\r\n          <Top handleradioChange={this.handleradioChange}></Top>\r\n        </div>\r\n        {this.props.view_data ? <Row>\r\n          <div style={{ width: window.innerWidth, height: window.innerHeight - $('.topBar_root').height(), padding: \"2px 0px\" }} key={this.props.view_data}>\r\n            {this.state.view_data == true ?\r\n              <Grid className=\"charts_and_legend_container\" style={{ height: '100%', width: '100%', border: \"2px solid grey\"}} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid className=\"charts_container\" style={{ height: '100%', width: $('.charts_and_legend_container').width() - legend_width }} container spacing={0} direction=\"row\" justify=\"space-evenly\" >\r\n                  {this.props.mode == \"Model\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <ModelChart></ModelChart> : null}\r\n                  {this.props.mode == \"Ranges\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <RangeChart></RangeChart> : null}\r\n                  {this.props.mode == \"Time\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <YearChart></YearChart> : null}\r\n                </Grid>\r\n                <div style={{ padding: 0,marginTop:5, height: '100%', width: legend_width }}><Legend legend_width={legend_width}></Legend></div>\r\n              </Grid> : null}\r\n          </div>\r\n        </Row> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    tracking: state.tracking,\r\n    state_range: state.state_range,\r\n    deviate_by: state.deviate_by,\r\n    default_models: state.default_models,\r\n    sparkline_data: state.sparkline_data,\r\n    selected_year: state.selected_year,\r\n    mode: state.mode,\r\n    range_mode_model: state.range_mode_model,\r\n    original_data: state.original_data,\r\n    time_mode_model: state.time_mode_model,\r\n    chart_scale_type: state.chart_scale_type,\r\n    dataset: state.dataset,\r\n    histogram_data: state.histogram_data,\r\n    sort_by: state.sort_by,\r\n    time_mode_year1: state.time_mode_year1,\r\n    time_mode_year2: state.time_mode_year2,\r\n    popup_chart_data: state.popup_chart_data,\r\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\r\n    config: state.config,\r\n    lime_data: state.lime_data,\r\n    view_data: state.view_data\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_dataset: (val) => dispatch({ type: \"dataset\", value: val }),\r\n    Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\r\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\r\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\r\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: parseInt(val) }),\r\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\r\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\r\n    Set_grouped_by_year_data: (val) => dispatch({ type: \"grouped_by_year_data\", value: val }),\r\n    Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\r\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\r\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\r\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\r\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\r\n\r\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\r\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\r\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\r\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\r\n    Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\r\n    Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\r\n\r\n    Set_rank_data: (val) => dispatch({ type: \"rank_data\", value: val }),\r\n    Set_lime_data: (val) => dispatch({ type: \"lime_data\", value: val }),\r\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\r\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\r\n\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","import { createMuiTheme } from '@material-ui/core/styles';\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#7f7f7f\"\r\n    },\r\n    secondary: {\r\n      main: \"#7f7f7f\"\r\n    }\r\n  },\r\n  spacing:3,      \r\n  typography: {\r\n    button: {\r\n      textTransform: 'none'\r\n    }\r\n  },\r\n  overrides:{\r\n    MuiGrid:{\r\n      root:{\r\n        margin:0,\r\n        padding:0\r\n      },\r\n    }\r\n  }\r\n});\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { createStore } from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport reducer from './store/reducer';\r\nimport theme from './Themes'; \r\nimport { ThemeProvider } from '@material-ui/styles';\r\nconst store=createStore(reducer);\r\nReactDOM.render( <ThemeProvider theme={theme}><Provider store={store}><App /></Provider></ThemeProvider>,document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}