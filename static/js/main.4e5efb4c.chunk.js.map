{"version":3,"sources":["Data/fiscal.csv","Data/school.csv","Data/house.csv","Data/data/fiscal/lime/fiscal_rank.csv","Data/data/fiscal/lime/fiscal_lime.csv","Data/data/school/lime/school_rank.csv","Data/data/school/lime/school_lime.csv","Data/data/house/lime/house_rank.csv","Data/data/house/lime/house_lime.csv","Data/data/house/lime/chart1_data.csv","Algorithms/algo1.js","components/Charts/misc_algo.js","components/Charts/lasso_circle.js","components/Charts/explanation_chart.js","components/Charts/deviation_chart.js","components/Charts/Sparkline.js","components/Charts/Model/ModelChart.js","components/Charts/Range/RangeChart.js","components/Charts/Time/YearChart.js","components/TopBar/TopBar.js","components/Sidebar/Histogram.js","components/Sidebar/Histograms.js","components/Sidebar/Tracking.js","components/Sidebar/Modes.js","components/Sidebar/Sidebar.js","App.js","store/reducer.js","Themes.js","index.js","Data/data/fiscal/lime/chart1_data.csv","Data/data/school/lime/chart1_data.csv"],"names":["module","exports","groupby_year","original_data","years","sparkline_data","forEach","element","replace","temp_dict","year","parseInt","rank","push","features_with_score","dataset","models","state_range","selected_year","number_of_charts","rank_data","temp1","temp_final","key","map","model","temp2","v","top_nine","length","items","data","feautures","tempvoted_data_with_score","data2","filter","index","console","log","Object","keys","item","feauture","parseFloat","sort","first","second","items2","sorted_features","i","key2","handle_transparency","class_name","clicked_circles","anim_config","d3","attr","circle_id","draw_lines","diverginColor","remove","d","lines","two_realRank","parent_id","substring","points","selectAll","each","this","join","transition","duration","Create_lasso_circles","lime_data","defualt_models","selected_instances","Set_clicked_circles","temp_lime_data_label","temp_lime_data_mds","limedata_all_models","temp","includes","feature_arr","dist_matrix","temp_arr","j","eucDistance","mds_data","distances","dimensions","M","numeric","mean","A","apply","rowMeans","colMeans","totalMean","ret","eigenValues","S","U","row","splice","mds_classic","circle_data","margin","w","$","width","h","height","xScale","domain","range","r","yScale","svg","style","circles","lasso","d3lasso","closePathSelect","closePathDistance","targetArea","on","classed","possibleItems","notPossibleItems","selected_ids","selectedItems","notSelectedItems","call","a","b","x","Math","abs","reduce","sum","now","CreatexpChart","clicked_features","Set_clicked_features","parent_width","parent_height","item_width","item_height","parent_svg","text","enter","append","svg_index","update","feature_animation","delay","rank_animation","deviation_animation","exit","CreatexpCircle","x_transformation","feature_name","feature_contrib_name","circ_data","select","circle_animation","misc_algo","Create_deviation_chart","parent_exp_id","average","Set_selected_year","div","temp_scale_data","config","fontSize","font_dy","sparkline_width","font_line_gap","line_stroke_width","animation_duration","container_height","my_svg_top_margin","myg_top_margin","left_margin","y_distance","circle_radius","parent","s_margin","s_width","s_height","s_svg","datum","y0","y","y1","raise","preventDefault","Create_sparkline","data_for_all_years","line_data","model_name","temp_max","sclale1","d2","avg","html","SlopeChart","props","line_color","state","height_slope_exp_chart","mouseX","mouseY","setState","window","innerHeight","prevProps","prevState","min","interpolate","algo1","entries","slice","deviation_chart","average_m","explanation_chart","Grid","container","className","backgroundColor","padding","border","boxShadow","id","marginBottom","Component","connect","deviate_by","clicked_items_in_slopechart","tracking","time_mode_model","chart_scale_type","histogram_data","show","default_model_scores","average_y","dispatch","val","type","value","Set_prev_prop","Set_sparkline_data","Set_clicked_items_in_slopechart","Set_replay","range_mode_range1","range_mode_range2","selected_years","selected_instances2","features_with_score2","sorted_features2","direction","justifyContent","paddingRight","paddingLeft","fontWeight","borderBottom","overflow","marginRight","marginTop","paddingTop","marginLeft","sort_by","time_mode_range","time_mode_year1","time_mode_year2","useStyles","makeStyles","theme","MuiAutocompleteroot","root","listroot","maxWidth","paper","heading","typography","pxToRem","fontWeightRegular","all_models","years_for_dropdown","mode","prev_prop","replay","grouped_by_year_data","add","set_tracking","Set_histogram_data","Set_changed","Set_state_range","Set_slider_max","Set_range_mode_range1","Set_range_mode_range2","Set_time_mode_range","Set_pop_over_models","Set_defualt_models","Set_default_model_scores","Set_average_m","handle_model_click","display","onClick","CreateChart","feature","node","feature_height","handleHistogramselection","feature_data","feature_width","isNaN","occur","sum_x","cScale","interpolator","svg1","statelist","country","cat_states","temp_x","tick_values","nice","ticks","hist_height","bins","thresholds","histogram","y_hist","svg0","x0","x1","tickValues","tickFormat","selectionRect","previousElement","currentY","currentX","originX","originY","setElement","ele","getNewAttributes","getCurrentAttributes","x2","y2","getCurrentAttributesAsText","attrs","init","newX","newY","rectElement","NewAttr","focus","removePrevious","dragBehavior","p","finalAttributes","myx1","myx2","temp_range","invert","toFixed","states","Chart","selected_states","update_histogram_data","alert","myfunc","appHandleChange","filtered_states","slider_and_feature_value","makeArr","startValue","stopValue","arr","myRef","React","createRef","feaures_dict","features_voted","filename","self","exp_fiscal_CordAscent","exp_school_CordAscent","exp_house_CordAscent","then","legend_data","height_between","number_of_elements","exp_chart_height","floor","features_dict","feature_index","feature_id","Button","setTimeout","justify","alignItems","FormControlLabel","labelPlacement","control","Checkbox","checked","onChange","event","target","name","color","label","flexBasis","flexShrink","secondaryHeading","palette","secondary","tRoot","rang_input","slider_max","range_mode_model","Set_years_for_dropdown","Set_mode","Set_range_mode_model","Set_time_mode_model","Set_time_mode_year1","Set_time_mode_year2","Set_slider_and_feature_value","classes","useState","sliderRange","set_sliderRange","range_mode_slider_value1","set_range_mode_slider_value1","range_mode_slider_value2","set_range_mode_slider_value2","time_mode_slider_value","set_time_mode_slider_value","set_dummy","temp_marks","step","marks","myitem","borderTop","Autocomplete","borderRadius","paddingBottom","defaultValue","debug","options","renderInput","params","TextField","fullWidth","InputProps","disableUnderline","List","labelId","ListItem","role","undefined","edge","tabIndex","temp_val","JSON","stringify","Slider","newValue","onChangeCommitted","valueLabelDisplay","aria-labelledby","input","Histograms","toString","Sidebar_width","Typography","option","Set_ref_year","Set_original_data","Set_deviate_by","Set_show","setChecked","handleToggle","currentIndex","indexOf","newChecked","view_data","variant","inputchanged","temp_show","App","handleradioChange","Set_dataset","dataprocessor","task2","reduced_opacity","idName","textClickHandler_original","state_name","dataset_name","process_data","school","school_rank","school_lime","fiscal","fiscal_rank","fiscal_lime","house","house_rank","house_lime","slopechart_data_filename","rank_data_filename","lime_data_filename","Set_legend_year","ref_year","Set_grouped_by_year_data","nested_data","values","Set_rank_data","Set_lime_data","temp_Models","buttonclickHandler","random","Legend_ready_to_vis","legend_model","Row","Col","innerWidth","minHeight","spacing","left","borderRight","onSubmit","FormControl","component","FormLabel","RadioGroup","aria-label","Radio","ModelChart","RangeChart","YearChart","popup_chart_data","initialState","slope_chart_ready_to_vis","slider_min","cmodel","dummy","legend_show_option","legend_year","reducer","action","dbclicked_features","drag_drop_feautre_data","changed","pop_over","pop_over_models","createMuiTheme","button","textTransform","store","createStore","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4e5efb4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fiscal.977bae2d.csv\";","module.exports = __webpack_public_path__ + \"static/media/school.2d2c77ef.csv\";","module.exports = __webpack_public_path__ + \"static/media/house.88979d03.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_rank.6e0a824e.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_lime.7992abf1.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_rank.edf0b9e3.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_lime.644683c6.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_rank.f85c2352.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_lime.b31dfb61.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.45acbae8.csv\";","export function groupby_year(original_data) {\n  var years = {}\n  var sparkline_data = {}\n  original_data.forEach(element => {\n    years[element['1-qid']] = []\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')] = []\n  });\n\n  original_data.forEach(element => {\n    var temp_dict = { year: parseInt(element['1-qid']), rank: parseInt(element['two_realRank']) }\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')].push(temp_dict)\n    years[element['1-qid']].push(element)\n  });\n  return { years: years, sparkline_data: sparkline_data };\n}\nexport function features_with_score(dataset, models, state_range, selected_year, number_of_charts, rank_data) {\n  var temp1 = {}\n  var temp_final = {}\n  models.map(model => {\n    var temp2 = {}\n    var v = number_of_charts;\n    var top_nine = sorted_features(dataset, model, state_range, selected_year,rank_data)\n    if (top_nine.length < number_of_charts) { v = top_nine.length;; number_of_charts = top_nine.length } // This is because number of charts is calculated based on space but there are cases when we don't have that many features\n    for (var i = 0; i < number_of_charts; i++) {\n      temp2[top_nine[i]] = v;\n      v = v - 1\n    }\n    temp1[model] = temp2\n  });\n\n  for (var key in temp1) {\n    for (var key2 in temp1[key]) {\n      if (temp_final[key2] > 0) {\n\n        temp_final[key2] = temp_final[key2] + temp1[key][key2]\n      }\n      else {\n        temp_final[key2] = temp1[key][key2]\n      }\n    }\n  }\n  return temp_final;\n}\n\n\nexport function sorted_features(dataset, model, state_range, selected_year,rank_data) { // Uses feature rank to rank and return features name by removing the feature_rank string\n  if (!state_range.length > 0) { return [] }\n  state_range = state_range.map(element => element - 1)\n  var tempvoted_data_with_score = {},items,data,feautures;\n\n  if (model == \"ListNet\") { return [] }\n  var data2 = rank_data[model].filter(element => { if (parseInt(element['1-qid']) == parseInt(selected_year)) { return element } })\n  data = state_range.map(index => data2[index])\n  console.log('feautures',data2,selected_year)\n  feautures = Object.keys(data[0])\n\n  data.map(item => {\n    feautures.forEach(feauture => {\n      if (tempvoted_data_with_score[feauture] >= 0 || tempvoted_data_with_score[feauture] < 0) {\n        tempvoted_data_with_score[feauture] = tempvoted_data_with_score[feauture] + (parseFloat(item[feauture]))\n      }\n      else { tempvoted_data_with_score[feauture] = parseFloat(item[feauture]) }\n    })\n  })\n  //-----------------------------------------------------------------\n  // Create items array\n  items = Object.keys(tempvoted_data_with_score).map(function (key) {\n    return [key, tempvoted_data_with_score[key]];\n  });\n  // Sort the array based on the second element\n  items.sort(function (first, second) {\n    return first[1] - second[1];\n  });\n  var items2 = items.map((element) => element[0].replace(\"_feature_rank\", \"\"))\n  items2 = items2.filter(item => item != \"1-qid\" && item!=\"model\")\n  return items2;\n  //-----------------------------------------------------------------\n}\n","import * as d3 from 'd3';\nexport function handle_transparency(class_name, clicked_circles, anim_config) {\n    if (clicked_circles.length != 0) { // If there are no clicked circles make all opacity 1\n        d3.selectAll(\".items\").attr('opacity', 0.6) // Groups\n        d3.selectAll(\".\" + \"circle2\").attr('opacity', 0.3) // Circles\n        clicked_circles.map(circle_id => {\n            d3.selectAll(\".\" + circle_id).attr('opacity', 1) // Groups\n            d3.selectAll(\"#\" + circle_id).attr('opacity', 1) // Circles\n        })\n    }\n    else {\n        d3.selectAll(\".items\").attr('opacity', 1); // Groups\n        d3.selectAll(\".\" + \"circle2\").attr('opacity', 1) // Circles \n    }\n}\nexport function draw_lines(clicked_circles, diverginColor) {\n    d3.selectAll(\"#mylines\").remove()\n    clicked_circles.map(d => {\n        var lines = []\n        var two_realRank = 0\n        var parent_id = d3.select(\"#\" + d).attr('id').substring(0,3)\n        var points = []\n        d3.select(\"#\" + parent_id).selectAll(\"#\" + d).each(function (d) {\n            two_realRank = d3.select(this).attr('two_realRank')\n            points.push([d3.select(this).attr('cx2'), d3.select(this).attr('cy')])\n        })\n        lines.push([d, d3.line()(points), two_realRank])\n        d3.select(\"#\" + parent_id).selectAll('.' + d).data(lines, d => d[0]).join('path').attr(\"stroke\", d => diverginColor(d[2])).attr(\"stroke-width\", 2)\n            .attr('id', 'mylines').attr('State', d => d[2]).attr('class', d).transition().duration(0).attr('d', d => d[1]).attr(\"fill\", \"none\")\n    })\n}","import * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport * as d3lasso from 'd3-lasso';\nimport * as numeric from \"numeric\"\nexport default function Create_lasso_circles(parent_id, lime_data, defualt_models, selected_year, selected_instances, sorted_features, diverginColor, Set_clicked_circles) {\n    // Create mds starts here\n    var temp_lime_data_label = []\n    var temp_lime_data_mds = []\n    var limedata_all_models = []\n\n    for (var i = 0; i < defualt_models.length; i++) { limedata_all_models = [...limedata_all_models, ...lime_data[defualt_models[i]]] }\n    limedata_all_models.map(item => {\n        var temp = []\n        if (item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n            temp_lime_data_label.push({ \"model\": item[\"model\"], \"State\": item['State'], \"1-qid\": item['1-qid'], 'two_realRank': parseInt(item['two_realRank']) })\n            sorted_features.map(feature_arr => temp.push(parseFloat(item[feature_arr[0]+'_contribution'])))\n            temp_lime_data_mds.push(temp)\n        }\n    })\n    //----------------------------------------------------------------------\n    var dist_matrix = []\n    for (var i = 0; i < temp_lime_data_mds.length; i++) {\n        var temp_arr = []\n        for (var j = 0; j < temp_lime_data_mds.length; j++) {\n            temp_arr.push(eucDistance(temp_lime_data_mds[i], temp_lime_data_mds[j]))\n        }\n        dist_matrix.push(temp_arr)\n    }\n    var mds_data = mds_classic(dist_matrix)\n    //---------------------------------------------------------------------------\n    var circle_data = []\n    temp_lime_data_label.map((item, index) => {\n        item['x'] = mds_data[index][0]\n        item['y'] = mds_data[index][1]\n        item['id'] = parent_id + item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + item[\"model\"].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n        circle_data.push(item)\n    })\n    // Create mds ends here\n    var margin = { item_top_margin: 15, right: 14, bottom: 0, left: 20, circ_radius: 5, item_left_margin: 25, item_right_margin: 3 }\n    var w = $(\"#mds\").width() - margin.item_left_margin\n    var h = $(\"#mds\").height() - margin.item_top_margin * 2\n    var r = 5;\n    var xScale = d3.scaleLinear().domain(d3.extent(circle_data.map(item => item['x']))).range([r * 2, w - r * 2])\n    var yScale = d3.scaleLinear().domain(d3.extent(circle_data.map(item => item['y']))).range([r * 2, h - r * 2])\n\n    var svg = d3.select(\"#mds\").style(\"border\", \"1px solid #bcbcbc\")\n\n    var circles = svg.selectAll(\"circle\")\n        .data(circle_data)\n        .join(\"circle\")\n        .attr(\"cx\", d => xScale(d['x']))\n        .attr(\"cy\", d => yScale(d['y']))\n        .attr(\"r\", r)\n        .attr(\"fill\", d => diverginColor(d[\"two_realRank\"]))\n        .attr('id', d => d['id'])\n        .attr('class', 'circle2')\n    // Lasso functions\n    var lasso_start = function () {\n        lasso.items()\n            .attr(\"r\", 5) // reset size\n            .classed(\"not_possible\", true)\n            .classed(\"selected\", false);\n    };\n\n    var lasso_draw = function () {\n        // Style the possible dots\n        lasso.possibleItems()\n            .classed(\"not_possible\", false)\n            .classed(\"possible\", true);\n\n        // Style the not possible dot\n        lasso.notPossibleItems()\n            .classed(\"not_possible\", true)\n            .classed(\"possible\", false);\n    };\n\n    var lasso_end = function () {\n        var selected_ids = []\n        lasso.selectedItems().each(function () {\n            selected_ids.push(d3.select(this).attr(\"id\"))\n        })\n        Set_clicked_circles(selected_ids)\n        // Reset the color of all dots\n        lasso.items()\n            .classed(\"not_possible\", false)\n            .classed(\"possible\", false);\n\n        // Style the selected dots\n        lasso.selectedItems()\n            .classed(\"selected\", true)\n            .attr(\"r\", 6);\n\n        // Reset the style of the not selected dots\n        lasso.notSelectedItems()\n            .attr(\"r\", 5);\n\n    };\n    var lasso = d3lasso.lasso()\n        .closePathSelect(true)\n        .closePathDistance(100)\n        .items(circles)\n        .targetArea(svg)\n        .on(\"start\", lasso_start)\n        .on(\"draw\", lasso_draw)\n        .on(\"end\", lasso_end);\n    svg.call(lasso);\n}\nfunction mds_classic(distances, dimensions) {\n    dimensions = dimensions || 2;\n    // square distances\n    var M = numeric.mul(-0.5, numeric.pow(distances, 2));\n    // double centre the rows/columns\n    function mean(A) { return numeric.div(numeric.add.apply(null, A), A.length); }\n    var rowMeans = mean(M),\n        colMeans = mean(numeric.transpose(M)),\n        totalMean = mean(rowMeans);\n    for (var i = 0; i < M.length; ++i) {\n        for (var j = 0; j < M[0].length; ++j) {\n            M[i][j] += totalMean - rowMeans[i] - colMeans[j];\n        }\n    }\n    // take the SVD of the double centred matrix, and return the\n    // points from it\n    var ret = numeric.svd(M),\n        eigenValues = numeric.sqrt(ret.S);\n    return ret.U.map(function (row) {\n        return numeric.mul(row, eigenValues).splice(0, dimensions);\n    });\n\n};\nfunction eucDistance(a, b) {\n    return a\n        .map((x, i) => Math.abs(x - b[i]) ** 2) // square the difference\n        .reduce((sum, now) => sum + now) // sum\n        ** (1 / 2)\n}\n\n","\nimport * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport * as misc_algo from './misc_algo'\nimport Create_lasso_circles from \"./lasso_circle\"\nexport function CreatexpChart(parent_id, selected_instances, sorted_features, lime_data, selected_year, defualt_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, clicked_features, Set_clicked_features) {\n  Create_lasso_circles(parent_id,lime_data,defualt_models,selected_year,selected_instances,sorted_features,diverginColor,Set_clicked_circles)\n  //----------------\n  var margin = { item_top_margin: 15, right: 14, bottom: 0, left: 20, circ_radius: 5, item_left_margin: 25, item_right_margin: 3 }\n  var parent_width = $(\"#\" + parent_id).width() - margin.item_left_margin\n  var parent_height = $(\"#\" + parent_id).height() - margin.item_top_margin * 2\n  var item_width = parent_width / sorted_features.length - margin.item_right_margin\n  var item_height = parent_height\n  var parent_svg = d3.select(\"#\" + parent_id)\n  // Draw ++ --\n  parent_svg.selectAll(\".ylabels\").data([[.125, \"++\"], [.375, \"+\"], [.5, \"0\"], [.625, \"-\"], [.875, \"--\"]]).join('text').attr('class', 'ylabels').attr(\"y\", d => d[0] * item_height).attr(\"x\", margin.item_left_margin - 5).attr('text-anchor', 'end').attr('dominant-baseline', 'hanging').text(d => d[1]).attr(\"font-size\", 14).attr('fill', \"#636363\")\n  // Add title rectangle, title text and rectangles around each feature\n  parent_svg.selectAll('.feature_g').data(sorted_features, d => d[0]).join(\n    enter => enter.append('g').attr('class', 'feature_g').attr('transform', (d, svg_index) => \"translate(\" + (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)) + \",0)\").attr('x_transformation', (d, svg_index) => (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)))\n      .attr(\"id\", d => d[0].replace(/[^\\w\\s]/gi, ''))\n      .attr('add_title_rect', function (d) { d3.select(this).selectAll('.title_rect').data([0]).join('rect').attr('class', 'title_rect').attr('width', item_width + 2).attr('x', -1).attr('height', margin.item_top_margin).attr('fill', '#d1d1d1') })\n      .attr('add_title_text', function (d, svg_index) { d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr('class', 'title_text').text(d[0]).attr('y', 0).attr('dominant-baseline', 'hanging').attr(\"font-size\", 12).attr('x', 10).attr('text-anchor', 'start') })\n      .attr('add_item_rect', function (d, svg_index) { d3.select(this).selectAll('.item_rect').data([0]).join('rect').attr('class', 'item_rect').attr('width', item_width).attr('height', item_height).attr('y', margin.item_top_margin).attr('fill', clicked_features.includes(d[0]) ? \"#F8FDB8\" : '#f2f2f2').attr('fill-opacity', 1).attr('stroke', '#b2b0b0') })\n      .attr('svg_index', (d, svg_index) => svg_index)\n      .attr('add_contrib_lines', function (d, svg_index) {\n        d3.select(this).selectAll(\".mylines\").data([[.25], [.5], [.75]]).join('line').attr('class', 'mylines')\n          .attr('x1', 0).attr('x2', item_width)\n          .attr('y1', d => d * (item_height + margin.item_top_margin)).attr('y2', d => d * (item_height + margin.item_top_margin)).attr('stroke-width', 1).attr(\"stroke\", \"#bababa\")\n      })\n    , update => {\n      //parent_svg.selectAll('.feature_g').attr('opacity',0.5)\n      //update.attr('opacity',1)\n      return update.transition().duration(anim_config.feature_animation).delay(anim_config.rank_animation + anim_config.deviation_animation).attr('transform', (d, svg_index) => \"translate(\" + (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)) + \",0)\").attr('x_transformation', (d, svg_index) => (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)))\n        .attr(\"id\", d => d[0].replace(/[^\\w\\s]/gi, ''))\n        .attr('svg_index', (d, svg_index) => svg_index)\n        .attr('add_title_rect', function (d) { d3.select(this).selectAll('.title_rect').data([0]).join('rect').attr('class', 'title_rect').attr('width', item_width + 2).attr('x', -1).attr('height', margin.item_top_margin).attr('fill', '#d1d1d1') })\n        .attr('add_title_text', function (d, svg_index) { d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr('class', 'title_text').text(d[0]).attr('y', 0).attr('dominant-baseline', 'hanging').attr(\"font-size\", 12).attr('x', 10).attr('text-anchor', 'start') })\n        .attr('add_item_rect', function (d, svg_index) { d3.select(this).selectAll('.item_rect').data([0]).join('rect').attr('class', 'item_rect').attr('width', item_width).attr('height', item_height).attr('y', margin.item_top_margin).attr('fill', clicked_features.includes(d[0]) ? \"#F8FDB8\" : '#f2f2f2').attr('fill-opacity', 1).attr('stroke', '#b2b0b0') })\n        //Add circles and lines to divide the rectangle\n        .attr('add_contrib_lines', function (d, svg_index) {\n          d3.select(this).selectAll(\".mylines\").data([[.25], [.5], [.75]]).join('line').attr('class', 'mylines')\n            .attr('x1', 0).attr('x2', item_width)\n            .attr('y1', d => d * (item_height + margin.item_top_margin)).attr('y2', d => d * (item_height + margin.item_top_margin)).attr('stroke-width', 1).attr(\"stroke\", \"#bababa\")\n        })\n    }\n    , exit => exit.remove())\n  //---------------------------------------------------------------------------------------------------------------------------------------------------\n}\nexport function CreatexpCircle(parent_id, selected_instances, sorted_features, lime_data, selected_year, defualt_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, clicked_features, Set_clicked_features) {\n  var margin = { item_top_margin: 15, right: 14, bottom: 0, left: 20, circ_radius: 5, item_left_margin: 25, item_right_margin: 3 }\n  var parent_width = $(\"#\" + parent_id).width() - margin.item_left_margin\n  var parent_height = $(\"#\" + parent_id).height() - margin.item_top_margin * 2\n  var item_width = parent_width / sorted_features.length - margin.item_right_margin\n  var item_height = parent_height\n  sorted_features.map((d, svg_index) => {\n    var x_transformation = margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)\n    var feature_name = d[0]\n    var feature_contrib_name = d[0] + \"_contribution\"\n    defualt_models.map(model => {\n      var circ_data = []\n      lime_data[model].map(item => {\n        if (item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n          item['id'] = parent_id + item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n          circ_data.push(item)\n        }\n      })\n      // Draw circle starts here\n      var xScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[d[0]]))), d3.max(circ_data.map(item => parseFloat(item[d[0]])))])\n        .range([2 * margin.circ_radius, item_width - 2 * margin.circ_radius])\n      var yScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[feature_contrib_name]))), d3.max(circ_data.map(item => parseFloat(item[feature_contrib_name])))]).range([margin.item_top_margin + margin.circ_radius, item_height - margin.circ_radius])\n      var mycircles = d3.select(\"#\" + parent_id).select(\"#\" + d[0].replace(/[^\\w\\s]/gi, '')).selectAll(\".my_circles\" + model).data(circ_data, d => d['id']).join(\n        enter => enter.append('circle')\n          .attr('id', d => d['id'])\n          .attr('class', 'circle2 my_circles' + model)\n          .attr('r', margin.circ_radius)\n          .attr('cy', d => margin.circ_radius / 2 + yScale(parseFloat(d[feature_contrib_name])))\n          .attr('cx', (d, i) => xScale(parseFloat(d[feature_name])))\n          .attr('fill', d => diverginColor(d['two_realRank']))\n          .attr('cx2', (d, i) => x_transformation + xScale(parseFloat(d[feature_name])))\n          .attr('two_realRank', d => d['two_realRank'])\n        // Update\n        , update => update.attr('class', 'circle2 my_circles' + model)\n          .transition().duration(anim_config.circle_animation).delay(anim_config.rank_animation + anim_config.deviation_animation + anim_config.feature_animation)\n          .on(\"end\", () => misc_algo.draw_lines(clicked_circles, diverginColor))\n          .attr('id', d => d['id'])\n          .attr('class', 'circle2 my_circles' + model)\n          .attr('r', margin.circ_radius)\n          .attr('cy', d => margin.circ_radius / 2 + yScale(parseFloat(d[feature_contrib_name])))\n          .attr('cx', (d, i) => xScale(parseFloat(d[feature_name])))\n          .attr('fill', d => diverginColor(d['two_realRank']))\n          .attr('cx2', (d, i) => x_transformation + xScale(parseFloat(d[feature_name])))\n          .attr('two_realRank', d => d['two_realRank'])\n        , exit => exit.remove())\n      mycircles.attr('cx2', (d, i) => x_transformation + xScale(parseFloat(d[feature_name]))).on('click', d => {\n        Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']])\n      }\n      )\n      // Draw circle ends here\n\n    })\n  })\n}","import * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport Create_sparkline from \"./Sparkline\"\nexport function Create_deviation_chart(parent_id,parent_exp_id, selected_instances, original_data, defualt_models, anim_config, selected_year, average, clicked_circles, Set_clicked_circles, diverginColor,sparkline_data,Set_selected_year,dataset) {\n  var div = d3.select(\"body\").selectAll('.tooltip').data([0]).join(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n  var parent_width = $(\"#\" + parent_id).width() - 5\n  var data = original_data.filter(item => selected_year==item['1-qid'] && selected_instances.includes(parseInt(item['two_realRank'])))\n  var temp_scale_data = []\n  data.map(item => { defualt_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n  // font_line_gap=sparkline_width+4\n  var config = { fontSize: 12, font_dy: -6, sparkline_width:20,font_line_gap: 24, line_stroke_width: 10, animation_duration: 0, container_height: 100, my_svg_top_margin: 10, myg_top_margin: 10, left_margin: 100 }\n  var y_distance = config.line_stroke_width + 2\n  var circle_radius = config.line_stroke_width / 2\n  var parent_g = d3.select(\"#\" + parent_id).attr('height', y_distance + data.length * y_distance)\n    .selectAll(\".parent_g\").data([0]).join('g').attr('class', 'parent_g').attr('transform', \"translate(\" + 0 + \",13)\")\n  var items_g = parent_g.selectAll(\".items\").data(data, d => d['State']).join(enter => enter.append(\"g\").attr(\"class\", \"items\")\n    .attr('transform', (d, i) => \"translate(\" + config.left_margin + \",\" + i * y_distance + \")\")\n    , update => update.transition().duration(anim_config.rank_animation).attr('transform', (d, i) => \"translate(\" + config.left_margin + \",\" + i * y_distance + \")\")\n    , exit => exit.remove()\n  )\n  items_g.attr(\"add_state\", function (d) {\n    d3.select(this).selectAll(\"text\").data([d]).join('text').text(d['State'] + \" \" + d['two_realRank']).attr('fill', d => diverginColor(d['two_realRank'])).attr(\"dominant-baseline\", \"hanging\").attr(\"font-size\", config.fontSize)\n      .attr(\"x\", 0).attr('text-anchor', 'end').attr(\"dy\", config.font_dy)\n  }).attr(\"add_sparkline\", function (d) {\n    // sparkline height is y_distance\n    if(dataset!='house'){Create_sparkline(d3.select(this),config,y_distance,sparkline_data,d,diverginColor,selected_year,Set_selected_year)}\n  })\n    .attr(\"add_lines_and_circles\", function (d) {\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n      var line_data = []\n      defualt_models.map(model_name => {\n        data_for_all_years.map(item => {\n          var a = {}\n          a['two_realRank'] = parseInt(item['two_realRank'])\n          a['predicted_rank'] = parseInt(item[model_name])\n          a[\"model\"] = model_name\n          a['year'] = item['1-qid']\n          line_data.push(a)\n        })\n      })\n      // This is only for scaling starts here\n      var temp_scale_data = []\n      data.map(item => { defualt_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n      var temp_max = d3.max(temp_scale_data)\n      var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, parent_width - (config.left_margin + circle_radius)])\n      if (temp_max == 0) { var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, 0]) }\n      // This is only for scaling ends here\n      d3.select(this).selectAll(\"line\").data([d]).join(enter => enter.append('line')\n        .attr(\"x1\", config.font_line_gap).attr(\"y1\", (d, i) => y_distance * i).attr(\"y2\", (d, i) => y_distance * i).attr(\"stroke-width\", config.line_stroke_width).attr(\"stroke\", \"#cecece\").attr(\"x2\", (d2) => {\n          var temp = []\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n          return sclale1(d3.max(temp))\n        })\n        // Update\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"x2\", (d2) => {\n          var temp = []\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n          return sclale1(d3.max(temp))\n        }))\n      // ------------ Circles start here\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n      var circ_data = []\n      defualt_models.map(model_name => {\n        data_for_all_years.map(item => {\n          var a = {}\n          a['two_realRank'] = parseInt(item['two_realRank'])\n          a['predicted_rank'] = parseInt(item[model_name])\n          a[\"model\"] = model_name\n          a['year'] = item['1-qid']\n          a['id'] =parent_exp_id+item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n          circ_data.push(a)\n        })\n      })\n      if (average) {\n        var avg = d3.mean(circ_data.map(item => item['predicted_rank']))\n        circ_data = circ_data.map(item => {\n          item['predicted_rank'] = avg\n          item['model'] = \"Average\"\n          item['year'] = \"Average\"\n          return item;\n        })\n      }\n      var my_circs = d3.select(this).selectAll(\".circle2\").data(circ_data, d => d['id']).join(\n        enter => enter.append(\"circle\").attr('id', d => d['id']).attr('class', 'circle2').attr(\"cx\", (d2, i) => {\n          d3.select(this).classed(d2['id'], true)\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n        })\n        // Update\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"cx\", (d2, i) => {\n          d3.select(this).classed(d2['id'], true)\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n        })\n      )\n      my_circs.attr(\"r\", circle_radius).attr('fill', d => diverginColor(d['two_realRank'])).attr(\"parent_id\", parent_exp_id)\n        .on('click', d => Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']]))\n        .on(\"mouseover\", function (d2) {\n          div.transition().duration(200).style(\"opacity\", .9);\n          div.html(\"Year : \" + d2[\"year\"] + \"<br></br>\" + \"Model: \" + d2[\"model\"] + \"<br></br>\" + \"Deviation: \" + Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n          //.style(\"left\", (d3.event.pageX - 140) + \"px\").style(\"top\", (d3.event.pageY - 98) + \"px\");\n        }).on(\"mouseout\", function (d2) {\n          //d3.select(this).classed(d2['id'],true)\n          div.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n        })\n\n    })\n\n}","import * as d3 from 'd3';\nexport default function Create_sparkline(parent, config, y_distance, sparkline_data, d, diverginColor, selected_year, Set_selected_year) { // sparkline height is y_distance\n    var year = selected_year\n    var s_margin = { top: 0, right: 0, bottom: 0, left: 4 },\n        s_width = config.sparkline_width - 2,\n        s_height = y_distance - 5;\n    var s_svg = parent.selectAll(\".sparkline_svg\").data([0]).join(\"svg\").attr(\"class\", \"sparkline_svg\").attr(\"x\", 2).attr(\"y\", -3)\n        .attr(\"width\", s_width + s_margin.left + s_margin.right)\n        .attr(\"height\", s_height + s_margin.top + s_margin.bottom)\n    \n    var data = sparkline_data[d['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")]\n    // Add X axis  \n    var x = d3.scaleLinear().domain(d3.extent(data, function (d) { return d.year; })).range([0, s_width]);\n    //-----------------------------------------------------------------------------------------------------------------------------------------Add the area\n    s_svg.selectAll(\"path\").remove()\n    s_svg.append(\"path\")\n        .datum(data, d => d)\n        .attr(\"id\", \"A\")\n        .attr(\"opacity\", 1)\n        .attr(\"fill\", diverginColor(d['two_realRank'])) //#969696\n        .attr(\"stroke\", diverginColor(d['two_realRank']))\n        .attr(\"stroke-width\", (d) => {\n            return 1.5\n        })\n        .attr(\"d\", d3.area()\n            .x(function (d) { return x(d.year) })\n            .y0(function () {\n                var y = d3.scaleLinear().domain([0, d3.max(data, function (d) { return +d.rank; })]).range([s_height, 0]);\n                return y(0)\n            })\n            .y1(function (d) {\n                var y = d3.scaleLinear().domain([0, d3.max(data, function (d) { return +d.rank; })]).range([0, s_height]);\n                return y(d.rank)\n            })\n        )\n    //------------Circles\n    s_svg.selectAll('circle').raise().data(data).join('circle')\n        .attr('cx', function (d, i) { return x(d.year) })\n        .attr('cy', s_height - 2)\n        .attr(\"class\", \"myid\")\n        .on(\"mouseover\", function (d) {\n            d3.select(this).style('fill', 'black')\n            d3.select(this).attr('r', 3)\n        })\n        .style('fill', (d) => d.year != year ? 'transparent' : 'black')\n        .attr('class', (d) => d.year != year ? 'transparent_class' : 'red_class')\n        .attr('r', 2)\n        .on('dblclick', (d, i) => {\n            d3.event.preventDefault();\n            Set_selected_year(d.year)\n        })\n        .on(\"mouseout\", function (d) {\n            d3.select(this).style('fill', 'transparent')\n            d3.select(this).style('fill', d.year != year ? 'transparent' : 'black')\n            d3.select(this).attr('r', 2)\n        })\n}","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // var diverginColor = d3.scaleLinear().domain([this.props.state_range[0], this.props.state_range[1]]).range(['#93003a','#00429d'])\n    var min = this.props.state_range[0], max = this.props.state_range[1];\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.state_range, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, 18)\n\n    deviation_chart.Create_deviation_chart('dev_plot_container', 'exp', selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor,this.props.sparkline_data,this.props.Set_selected_year,this.props.dataset)\n    explanation_chart.CreatexpChart(\"exp\", selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    explanation_chart.CreatexpCircle(\"exp\", selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    misc_algo.draw_lines(this.props.clicked_circles, diverginColor, this.props.anim_config, sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n  }\n  render() {\n    return (\n      <Grid container className=\"slope_chart_exp\" style={{ backgroundColor: 'white', padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"99%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <svg id=\"dev_plot_container\" style={{ width: \"100%\", height: \"50%\", marginBottom: 10 }}></svg>\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n          <svg id=\"mds\" style={{ width: \"20%\", height: \"50%\" }}></svg>\n          <svg id=\"exp\" style={{ width: \"80%\", height: \"50%\" }}></svg>\n        </div>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n    selected_year: state.selected_year,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Range1\n    var min = d3.min([this.props.range_mode_range1[0],this.props.range_mode_range2[0]]), max = d3.max([this.props.range_mode_range1[1],this.props.range_mode_range2[1]]);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    \n    var selected_instances = d3.range(this.props.range_mode_range1[0], this.props.range_mode_range1[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.range_mode_range1, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('r1d','r1e', selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_years, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor,this.props.sparkline_data,this.props.Set_selected_year)\n    explanation_chart.CreatexpChart('r1e', selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    explanation_chart.CreatexpCircle('r1e', selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    // Range2\n    var selected_instances2 = d3.range(this.props.range_mode_range2[0], this.props.range_mode_range2[1] + 1)\n    var features_with_score2 = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.range_mode_range2, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features2 = Object.entries(features_with_score2).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('r2d','r2e', selected_instances2, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_years, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor,this.props.sparkline_data,this.props.Set_selected_year)\n    explanation_chart.CreatexpChart('r2e', selected_instances2, sorted_features2, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    explanation_chart.CreatexpCircle('r2e', selected_instances2, sorted_features2, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    //---------------------------------\n    misc_algo.draw_lines(this.props.clicked_circles, diverginColor, this.props.anim_config, sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    return (\n      <Grid container direction=\"row\" justifyContent=\"space-between\" className=\"slope_chart_exp\" style={{ backgroundColor: 'white', padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"100%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ paddingRight: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 1</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"r1d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"r1e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ marginLeft: \"1%\", padding: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 2</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"r2d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"r2e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    selected_year: state.selected_year,\n    selected_years: state.selected_years,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    sort_by: state.sort_by,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Range1\n    var min = this.props.time_mode_range[0], max = this.props.time_mode_range[1];\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    \n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.time_mode_range, this.props.time_mode_year1, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('y1d','y1e', selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.time_mode_year1, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('y1e', selected_instances, sorted_features, this.props.lime_data, this.props.time_mode_year1, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n\n    // Range2\n    var selected_instances2 = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var features_with_score2 = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.time_mode_range, this.props.time_mode_year2, number_of_charts, this.props.rank_data)\n    var sorted_features2 = Object.entries(features_with_score2).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('y2d','y2e', selected_instances2, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.time_mode_year2, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('y2e', selected_instances2, sorted_features2, this.props.lime_data, this.props.time_mode_year2, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    //---------------------------------\n    misc_algo.draw_lines(this.props.clicked_circles, diverginColor, this.props.anim_config, sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    return (\n      <Grid container direction=\"row\" justifyContent=\"space-between\" className=\"slope_chart_exp\" style={{ backgroundColor: 'white', padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"100%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ paddingRight: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>{\"Year : \"+this.props.time_mode_year1}</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"y1d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"y1e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ marginLeft: \"1%\", padding: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>{\"Year : \"+this.props.time_mode_year2}</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"y2d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"y2e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    time_mode_model: state.time_mode_model,\n    time_mode_range: state.time_mode_range,\n    deviate_by: state.deviate_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    sort_by: state.sort_by,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./TopBar.scss\";\nimport { connect } from \"react-redux\";\nconst useStyles = makeStyles((theme) => ({\n  MuiAutocompleteroot: {\n    marginTop: 0,\n  },\n  root: {\n    width: '100%',\n  },\n  listroot: {\n    width: '100%',\n    maxWidth: 360,\n  },\n  paper: {\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\nfunction TopBar(props) {\n  const classes = useStyles();\n  const handleyearChange = (event, value, reason) => {\n    if (reason == 'select-option') {\n      props.Set_selected_year(value)\n      var myfunc = props.appHandleChange\n      myfunc(value, \"year_changed\")\n    }\n  };\n  var handle_year_click = (year) => {\n    props.Set_selected_year(year)\n  }\n  var handle_model_click=(model)=>{\n    if(model==\"All\"){props.Set_defualt_models([...props.all_models])}\n    else if(model==\"Average\"){props.Set_average_m(!props.average_m)}\n    else{\n      if (props.defualt_models.includes(model)) {\n        props.Set_defualt_models(props.defualt_models.filter(item=>item!=model))\n      }\n      else {\n        props.Set_defualt_models([...props.defualt_models,model])\n      }  \n    }\n  }\n  return (\n    <div>\n    <div><h5 style={{ display: \"inline-block\", marginLeft: 30 }}>Years:</h5>{props.years_for_dropdown.map(item => <p className={props.selected_years.includes(item) ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_year_click(item)}>{item}</p>)}</div>\n    <div><h5 style={{ display: \"inline-block\", marginLeft: 30 }}>Models:</h5>{props.all_models.map(item => <p className={props.defualt_models.includes(item) ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}<p className=\"years_p\" style={{ display: \"inline-block\"}} onClick={() => handle_model_click(\"All\")}>All</p> <p className={props.average_m ? \"years_p_selected years_p\" : \"years_p\"} style={{ display: \"inline-block\"}} onClick={() => handle_model_click(\"Average\")}>Average</p></div>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    all_models:state.all_models,\n    selected_years: state.selected_years,\n    tracking: state.tracking,\n    selected_year: state.selected_year,\n    years_for_dropdown: state.years_for_dropdown,\n    defualt_models: state.defualt_models,\n    mode: state.mode,\n    prev_prop: state.prev_prop,\n    state_range: state.state_range,\n    replay: state.replay,\n    grouped_by_year_data: state.grouped_by_year_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    time_mode_range: state.time_mode_range,\n    mode: state.mode, // Model mode model\n    sort_by: state.sort_by,\n    average_m:state.average_m\n\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    add: (val) => dispatch({ type: \"add\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    set_tracking: (val) => dispatch({ type: \"tracking\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    Set_average_m: (val) => dispatch({ type: \"average_m\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(TopBar);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import * as d3 from 'd3';\nimport * as $ from \"jquery\"\nexport default function CreateChart(feature, data, node, feature_height, selected_year, handleHistogramselection, feature_data) {\n  var feature_width = $(\".Sidebar_parent\").width()\n  var svg = d3.select(node),\n    margin = { top: 30, right: 15, bottom: 20, left: 7 },\n    width = feature_width - margin.left - margin.right,\n    height = feature_height - margin.top - margin.bottom;\n  if (isNaN(data[0].y)) {\n    //-----------------------------------------------------------(handle the categorical features here)\n    var occur = {}\n    data.map(item => {\n      if (item.y in occur) {\n        occur[item.y] = occur[item.y] + 1\n      }\n      else {\n        occur[item.y] = 1\n      }\n    })\n    // Create items array\n    var items = Object.keys(occur).map(function (key) {\n      return [key, occur[key]];\n    });\n\n    // Sort the array based on the second element\n    items.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    //-----\n    var y = items.map(element => element[0]);\n    var x = items.map(element => element[1]);\n    var sum_x = d3.sum(x)\n    var cScale = d3.scaleSequential()\n      .interpolator(d3.interpolate(\"#999999b3\", \"#999999b3\"))\n      .domain([0, x.length]);\n    svg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", 15).attr(\"x\", width / 2).attr(\"text-anchor\", \"middle\").text(feature);\n    var g = svg.selectAll(\".g1\").data([0]).join(\"g\").attr(\"class\", \"g1\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    var svg1 = g.selectAll(\".svg1\").data([0]).join('svg').attr(\"class\", \"svg1\").attr('width', width).attr('height', height)\n    svg1.selectAll('rect').data(x).join(\"rect\")\n      .style('fill', (d, i) => cScale(i)).attr(\"height\", height)\n      .attr('width', (d, i) => {\n        return (((d / sum_x) * width) - .2)\n      })\n      .attr(\"x\", (d, i) => {\n        var temp_sum = d3.sum(x.slice(0, i))\n        return ((temp_sum / sum_x) * width)\n      })\n      .attr(\"id\", (d, i) => y[i])\n      .on(\"click\", (d, i) => {\n        d3.select(\"#\" + y[i]).classed(\"cat_item_clicked\", () => {\n          if (d3.select(\"#\" + y[i]).classed(\"cat_item_clicked\")) {\n\n            return false\n          }\n          else {\n            var statelist = cat_states(feature_data, selected_year, y[i])\n            handleHistogramselection(statelist, \"histogram_data\")\n            return true\n          }\n        })\n\n      }\n      )\n    //---\n    svg1.selectAll(\"text\").data(y, d => d).join(\"text\")\n      .text((d, i) => {\n        if (((x[i] / sum_x) * width) > 12) { return d }\n        else { return \"\" }\n      })\n      .attr(\"x\", (d, i) => {\n        var temp_sum = d3.sum(x.slice(0, i))\n        return ((temp_sum / sum_x) * width) + 8\n      })\n      .attr(\"y\", height / 2)\n      .style(\"font-size\", 9)\n      .style(\"writing-mode\", \"tb\")\n      .style(\"text-anchor\", \"middle\")\n    //-----------------------------------------------------------Barchart ends here\n  }\n  else {\n    //----------------------------------------------------------- Handle the Numeric features here)\n    svg.selectAll(\".hist_title\").data([feature], d => d).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", 15).attr(\"x\", width / 2).attr(\"text-anchor\", \"middle\").text(feature.replace(/_/g, ' '));\n\n    var temp_x = data.map(item => parseFloat(item['y'])),\n      x = d3.scaleLinear().domain([d3.min(temp_x), d3.max(temp_x)]).range([0, width]).nice(),\n      tick_values = x.ticks(4),\n      hist_height = height,\n      histogram = d3.histogram()\n        .value(d => d)   // I need to give the vector of value\n        .domain(x.domain())  // then the domain of the graphic\n        .thresholds(4); // then the numbers of bins\n    var bins = histogram(temp_x),\n      y_hist = d3.scaleLinear()\n        .range([hist_height, 0]);\n    y_hist.domain([0, d3.max(bins, function (d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\n    var svg0 = svg.selectAll('.svg0').data([0]).join('svg').attr(\"class\", \"svg0\").selectAll(\".myg0\").data([0]).join('g').attr(\"class\", \"myg0\").attr(\"transform\",\n      \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n    svg0.selectAll(\"rect\").data(bins).join('rect')\n      .attr(\"x\", 1)\n      .attr(\"fill\", \"#999999b3\")\n      .attr(\"transform\", function (d) {\n        if(d.x0==d.x1){return \"translate(\" + 0 + \",\" + y_hist(d.length) + \")\"}\n        return \"translate(\" + x(d.x0) + \",\" + y_hist(d.length) + \")\";\n      })\n      .attr(\"width\", function (d) { \n        if(d.x0==d.x1){return width}\n        return x(d.x1) - x(d.x0) - 0.2; })\n      .attr(\"height\", function (d) { return hist_height - y_hist(d.length); });\n    //-------Add text of bars\n    \n    svg0.selectAll(\".mylabel\").data(bins).join('text').attr(\"class\",\"mylabel\")\n      .attr(\"x\", d=>x(d.x0)+((x(d.x1)-x(d.x0))/3))\n      .text(d=>d.length)\n      .attr('y',d=> y_hist(d.length)-2)\n      .attr('font-size',10)\n  \n    //------------- Add X axis\n    if(d3.max(tick_values)>1000){\n      svg0.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n      .attr(\"transform\", \"translate(0,\" + hist_height + \")\")\n      .call(d3.axisBottom(x).tickValues(tick_values).tickFormat(d3.format(\".2s\")))\n    }\n    else{\n      svg0.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n      .attr(\"transform\", \"translate(0,\" + hist_height + \")\")\n      .call(d3.axisBottom(x).tickValues(tick_values))\n    }\n\n    svg0.selectAll(\".tick line,.domain\").attr(\"stroke\", \"#adadad\")\n\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here    \n    //---drag starts here\n    var selectionRect = {\n      element: null,\n      previousElement: null,\n      currentY: 0,\n      currentX: 0,\n      originX: 0,\n      originY: 0,\n      setElement: function (ele) {\n        this.previousElement = this.element;\n        this.element = ele;\n      },\n      getNewAttributes: function () {\n        var x = this.currentX < this.originX ? this.currentX : this.originX;\n        var y = this.currentY < this.originY ? this.currentY : this.originY;\n        var width = Math.abs(this.currentX - this.originX);\n        var height = Math.abs(this.currentY - this.originY);\n        return { x: x, y: y, width: width, height: height }; // returning the javascript object\n      },\n      getCurrentAttributes: function () {\n        // use plus sign to convert string into number\n        var x = +this.element.attr(\"x\");\n        var y = +this.element.attr(\"y\");\n        var width = +this.element.attr(\"width\");\n        var height = +this.element.attr(\"height\");\n        return { x1: x, y1: y, x2: x + width, y2: y + height }; // returning the javascript object\n      },\n      getCurrentAttributesAsText: function () {\n        var attrs = this.getCurrentAttributes();\n        return \"x1: \" + attrs.x1 + \" x2: \" + attrs.x2 + \" y1: \" + attrs.y1 + \" y2: \" + attrs.y2;\n      },\n      init: function (newX, newY) {\n        var rectElement = svg.append(\"rect\")\n          .attr('rx', 1).attr('ry', 1).attr(\"x\", 0).attr(\"y\", 0)\n          .attr('width', 0).attr('height', 0).classed(\"selection\", true);\n        this.setElement(rectElement);\n        this.originX = newX;\n        this.originY = newY;\n        this.update(newX, newY);\n      },\n      update: function (newX, newY) {\n        this.currentX = newX;\n        this.currentY = newY;\n        var NewAttr = this.getNewAttributes()\n        this.element.attr(\"x\", NewAttr.x).attr(\"y\", NewAttr.y)\n          .attr('width', NewAttr.width).attr('height', NewAttr.height)\n      },\n      focus: function () {\n        this.element\n          .style(\"stroke\", \"\")\n          .style(\"stroke-width\", \"1\");\n      },\n      remove: function () {\n        this.element.remove();\n        this.element = null;\n      },\n      removePrevious: function () {\n        if (this.previousElement) {\n          this.previousElement.remove();\n        }\n      }\n    };\n\n    //-----------------\n    function dragStart() {\n      var p = d3.mouse(this);\n      selectionRect.init(p[0], p[1]);\n      selectionRect.removePrevious();\n    }\n    function dragMove() {\n      var p = d3.mouse(this);\n      selectionRect.update(p[0], p[1]);\n    }\n    function dragEnd() {\n      var finalAttributes = selectionRect.getCurrentAttributes();\n      if (finalAttributes.x1 != finalAttributes.x2) {\n        var myx1 = finalAttributes.x1 - margin.left\n        var myx2 = finalAttributes.x2 - margin.left\n        var temp_range = [x.invert(myx1).toFixed(4), x.invert(myx2).toFixed(4)]\n        var statelist = states(feature_data, temp_range, selected_year, feature)\n        handleHistogramselection(statelist, \"histogram_data\")\n      }\n      if (finalAttributes.x2 - finalAttributes.x1 > 1 && finalAttributes.y2 - finalAttributes.y1 > 1) {\n        // range selected\n       // d3.event.sourceEvent.preventDefault();\n        selectionRect.focus();\n      } else {\n        selectionRect.remove();\n      }\n    }\n    var dragBehavior = d3.drag()\n      .on(\"start\", dragStart)\n      .on(\"drag\", dragMove)\n      .on(\"end\", dragEnd);\n    svg.call(dragBehavior);\n    //---drag ends here\n  }\n  function states(original_data,range,year,feature){\n    var temp=[]\n    original_data.forEach(element => {\n      if(element[\"1-qid\"]==year && parseFloat(element[feature])>=range[0] && parseFloat(element[feature])<=range[1]){\n       temp.push(parseInt(element['two_realRank']))\n      }\n    });\n    return temp;\n  }\n  function cat_states(original_data,year,country){\n    var temp=[]\n    original_data.forEach(element => {\n      if(element[\"1-qid\"]==year && element[\"country\"]==country){\n       temp.push(parseInt(element['two_realRank']))\n      }\n    });\n    return temp;\n  }\n  //----------------------------------------------------------- Histogram creation ends here\n}\n\n//https://www.youtube.com/watch?v=N9nHQzboCUI","import React, { Component, PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport './Histogram.css';\nimport * as algo1 from \"../../Algorithms/algo1\";\nimport CreateChart from \"./Histogram\"\nimport exp_fiscal_CordAscent from \"../../Data/data/fiscal/lime/chart1_data.csv\";\nimport exp_school_CordAscent from \"../../Data/data/school/lime/chart1_data.csv\";\nimport exp_house_CordAscent from \"../../Data/data/house/lime/chart1_data.csv\";\nimport { connect } from 'react-redux'\nimport { Button } from '@material-ui/core';\nimport * as $ from \"jquery\"\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = { feaures_dict: {}, features_voted: null, feature_data: null, selected_states: [] } // This is the default height\n  }\n  componentDidMount() {\n    var self = this\n    var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent } else if (this.props.dataset == \"house\") { filename = exp_house_CordAscent }\n    d3.csv(filename).then(function (feature_data) {\n      self.setState({ feature_data: feature_data })\n    })\n  }\n  shouldComponentUpdate() {\n    return true;\n  }\n  componentDidUpdate() {\n    var self = this\n    var legend_data = this.makeArr(this.props.state_range);\n    //------\n    var height_between = 20\n    var feature_height = 260\n    var number_of_elements = (this.props.state_range[1] - this.props.state_range[0]) + (2 * this.props.deviate_by);\n    if (number_of_elements * height_between < 700) { height_between = 700 / number_of_elements }\n    var exp_chart_height = (number_of_elements * height_between);\n    var number_of_charts = Math.floor(exp_chart_height / feature_height) * 3\n    if(number_of_charts<9){number_of_charts=9}\n    //------\n    var features_dict = algo1.features_with_score(this.props.dataset, this.props.defualt_models, legend_data, this.props.selected_year,number_of_charts,this.props.rank_data)\n    var items = Object.keys(features_dict).map(function (key) {\n      return [key, features_dict[key]];\n    });\n    items.sort(function (first, second) { // Sort the array based on the second element\n      return second[1] - first[1];\n    });\n    items = items.map((element) => element[0])\n    //--------\n    var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent }\n    //--------------------------------Iterate through each features\n    if (this.state.feature_data != null) {\n      var feature_width=$(\".Sidebar_parent\").width()\n      var feature_height = 150; // Feature height for individual feature\n //--------------------------------------------- Iterate trough eact item and create histograms\n    items.forEach((feature, feature_index) => {\n        var feature_id = \"feature\"+feature.replace(/[^\\w\\s]/gi, '')\n        var temp = []\n        this.state.feature_data.forEach(element => {\n          if (element[\"1-qid\"] == self.props.selected_year) {\n            var temp_dict = {}\n            temp_dict[\"x\"] = parseInt(element['two_realRank'])\n            temp_dict[\"y\"] = element[feature]\n            temp.push(temp_dict)\n          }\n        });\n        d3.select(\"#histogram_container\").attr(\"height\", items.length * feature_height).selectAll(\"#\" + feature_id).data([feature_id], d => d).join(\"svg\").attr(\"id\", feature_id).attr(\"width\", feature_width)\n          .attr(\"x\", d => {\n            //--------------------------------------------- Create chart is imported from the Histogram.js and this is the function that creates all the histograms\n            CreateChart(feature, temp, \"#\" + feature_id, feature_height, self.props.selected_year, self.handleHistogramselection, self.state.feature_data)\n            return 0;\n          })\n          .attr(\"y\", (d, i) => feature_height * feature_index)\n      })\n    }\n  }\n  handleHistogramselection = (data, type) => {\n    \n    var temp = this.state.selected_states\n    data.forEach(element => {\n      if (!temp.includes(element)) { temp.push(element) }\n    });\n    this.setState({ selected_states: temp })\n  }\n  update_histogram_data = () => {\n    d3.selectAll(\".cat_item_clicked\").classed(\"cat_item_clicked\",false)\n    d3.selectAll(\".selection\").remove()\n    if(this.state.selected_states.length<1){alert(\"Empty selection!\");return}\n    var myfunc = this.props.appHandleChange\n    var filtered_states = this.state.selected_states.filter((item) => {\n      if (item >= this.props.state_range[0] && item <= this.props.state_range[1]) {\n        return item\n      }\n    })\n    if(filtered_states.length<1){alert(\"Empty Selection\")}\n    if (this.props.slider_and_feature_value[\"Feature\"] == 1 && this.props.slider_and_feature_value[\"Rank range\"] == 1) { // If rank range is selected then filter states within the range\n      this.props.Set_histogram_data(filtered_states)\n      myfunc(filtered_states, \"histogram_data\")\n    }\n    else {\n      this.props.Set_histogram_data(this.state.selected_states) // else set states as selected\n      myfunc(this.state.selected_states, \"histogram_data\")\n    }\n    this.setState({ selected_states: [] })\n  }\n  //-----------------------------------------------------------------\n  render() {\n    return (\n      <div>\n        <Button className=\"update\" style={{marginLeft:0,padding:0,width:197}} onClick={() => {\n          var self=this\n              if(!this.props.slider_and_feature_value[\"Rank range\"]){\n                if(d3.min(this.state.selected_states)<this.props.state_range[0]){\n                  this.props.Set_state_range([d3.min(this.state.selected_states),this.props.state_range[1]])\n                }\n                if(d3.max(this.state.selected_states)>this.props.state_range[1]){\n                  this.props.Set_state_range([this.props.state_range[0],d3.max(this.state.selected_states)])\n                }\n              }\n              setTimeout(function(){ self.update_histogram_data(); }, 500);\n          }}\n          >Update</Button>\n        <div className=\"hitograms_container\">\n        <svg id=\"histogram_container\" style={{ width: this.props.width }}></svg>\n        </div>\n      </div>\n    );\n  }\n  makeArr = (state_range) => {\n    var startValue = state_range[0];\n    var stopValue = state_range[1];\n    var arr = [];\n    for (var i = startValue; i <= stopValue; i++) {\n      arr.push(i);\n    }\n    return arr;\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n    defualt_models: state.defualt_models,\n    dataset: state.dataset,\n    selected_year: state.selected_year,\n    slider_and_feature_value: state.slider_and_feature_value,\n    deviate_by:state.deviate_by,\n    rank_data:state.rank_data\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\nimport { connect } from 'react-redux'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nfunction Tracking(props) {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"baseline\"\n    >\n      <FormControlLabel\n        labelPlacement=\"start\"\n        control={\n          <Checkbox\n            checked={props.tracking}\n            onChange={(event) => props.set_tracking(event.target.checked)}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Tracking\"\n      />\n    </Grid>\n  );\n}\n\nconst maptstateToprop = (state) => {\n  return {\n    tracking: state.tracking,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    set_tracking: (val) => dispatch({ type: \"tracking\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Tracking);\n//https://material-ui.com/components/menus/\n","import React from 'react';\nimport \"./Sidebar.scss\";\nimport * as $ from 'jquery';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport Histograms from \"./Histograms\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport Tracking from \"./Tracking\"\nimport * as algo1 from \"../../Algorithms/algo1\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.state_range);\n    const [range_mode_slider_value1, set_range_mode_slider_value1] = React.useState(props.range_mode_range1);\n    const [range_mode_slider_value2, set_range_mode_slider_value2] = React.useState(props.range_mode_range2);\n    const [time_mode_slider_value, set_time_mode_slider_value] = React.useState(props.time_mode_range);\n    const [dummy, set_dummy] = React.useState(0);\n\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div style={{ borderTop: \"1px solid #eaeaea\" }}>\n            <p className=\"title_show\" style={{ marginBottom: 8 }}>Compare:</p>\n            <Autocomplete className=\"autocomplete_mode\" style={{ border: \"1px solid grey\", borderRadius: 0, paddingTop: 0, paddingBottom: 0, marginLeft: 5, marginRight: 30, width: $('.Sidebar').width() - 10 }}\n                defaultValue={\"Models\"}\n                id=\"debug\"\n                debug\n                options={[\"Models\", \"Ranges\", \"Time\"]}\n                renderInput={(params) => (\n                    <TextField {...params} label=\"\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                )}\n                onChange={(event, val) => {\n                    var value = val.replace('s', \"\")\n                    props.Set_mode(value)\n                    props.Set_clicked_items_in_slopechart([])\n                }\n                }\n            />\n            {props.mode == \"Model\" ? <div style={{ marginTop: 10, paddingLeft: 5, width: $('.Sidebar').width() }}>\n                <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                <div key={props.slider_and_feature_value} className=\"slider_feature_container\">\n                    <List className={classes.listroot}>\n                        {['Rank range', 'Feature'].map((value) => {\n                            const labelId = `checkbox-list-label-${value}`;\n                            return (\n                                <div className=\"listItem\"><ListItem key={value} role={undefined} >\n                                    <Checkbox\n                                        checked={props.slider_and_feature_value[value]}\n                                        edge=\"start\"\n                                        tabIndex={-1}\n                                        value={value}\n                                        onChange={(event) => {\n                                            var temp_val = props.slider_and_feature_value\n                                            if (props.slider_and_feature_value[event.target.value]) { temp_val[event.target.value] = 0 }\n                                            else { temp_val[event.target.value] = 1 }\n                                            set_dummy(JSON.stringify(temp_val)) // This is to change the state so that the component is updated\n                                            //console.log(\"dummy\",dummy)\n                                            props.Set_slider_and_feature_value(temp_val)\n                                        }}\n                                    />\n                                    <p className=\"list_item_label\" id={labelId}>{value}</p>\n                                </ListItem>\n                                </div>\n                            );\n                        })}\n                    </List>\n                </div>\n                {props.slider_and_feature_value[\"Rank range\"] == 1 ?\n                    <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                        <Slider\n                            value={sliderRange}\n                            onChange={(event, newValue) => set_sliderRange(newValue)}\n                            onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                            valueLabelDisplay=\"auto\"\n                            aria-labelledby=\"range-slider\"\n                            valueLabelDisplay=\"on\"\n                            min={1}\n                            max={props.slider_max}\n                            marks={marks}\n                        />\n                        <Grid style={{ marginBottom: 15 }} container\n                            direction=\"row\"\n                            justify=\"space-around\"\n                            alignItems=\"center\">\n                            <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: 40 }}\n                                onChange={event => {\n                                    if (isNaN(parseInt(event.target.value))) {\n                                        set_sliderRange([\"\", sliderRange[1]])\n                                    } else {\n                                        if (event.target.value > sliderRange[1]) {\n                                            alert(\"Lower range can not be larger than the upper range\")\n                                        }\n                                        else {\n                                            set_sliderRange([event.target.value, sliderRange[1]])\n                                        }\n                                    }\n                                }\n                                }\n                            />\n                            <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: 40 }}\n                                onChange={event => {\n                                    if (isNaN(parseInt(event.target.value))) {\n                                        set_sliderRange([sliderRange[0], \"\"])\n                                    } else {\n                                        if (parseInt(event.target.value) > props.slider_max) {\n                                            alert(\"Upper range can not exceed maximum\")\n                                            set_sliderRange([sliderRange[0], props.slider_max])\n                                        }\n                                        else {\n                                            set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                                        }\n                                    }\n                                }\n                                }\n                            />\n                        </Grid>\n                        <Tracking></Tracking>\n                        <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                            onClick={() =>{\n                                props.Set_state_range(sliderRange)\n                            }}\n                        >Update range</Button>\n                    </div> : null}\n                {props.slider_and_feature_value[\"Feature\"] == 1 ?\n                    <div>\n                        <div>\n                            <Histograms\n                                year={props.selected_year.toString()} state_range={props.state_range}\n                                Sidebar_width={$('.Sidebar').width()} appHandleChange={props.appHandleChange}>\n                            </Histograms>\n                        </div>\n                    </div> : null\n                }\n            </div> : null}\n            {props.mode == \"Range\" ? <div style={{ marginTop: 10, paddingLeft: 5, width: $('.Sidebar').width() }}>\n                <div className=\"range_model\">\n\n                    <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                </div>\n                <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                    <Typography classes={{ root: classes.tRoot }}>\n                        Group 1\n                        </Typography>\n                    <Slider\n                        value={range_mode_slider_value1}\n                        onChange={(event, newValue) => set_range_mode_slider_value1(newValue)}\n                        onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"on\"\n                        min={1}\n                        max={props.slider_max}\n                        marks={marks}\n                    />\n                    <Grid style={{ marginBottom: 15 }} container\n                        direction=\"row\"\n                        justify=\"space-around\"\n                        alignItems=\"center\">\n                        <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={range_mode_slider_value1[0]} style={{ width: 40 }}\n                            onChange={event => {\n                                if (isNaN(parseInt(event.target.value))) {\n                                    set_range_mode_slider_value1([\"\", range_mode_slider_value1[1]])\n                                } else {\n                                    if (event.target.value > range_mode_slider_value1[1]) {\n                                        alert(\"Lower range can not be larger than the upper range\")\n                                    }\n                                    else {\n                                        set_range_mode_slider_value1([event.target.value, range_mode_slider_value1[1]])\n                                    }\n                                }\n                            }\n                            }\n                        />\n                        <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={range_mode_slider_value1[1]} style={{ width: 40 }}\n                            onChange={event => {\n                                if (isNaN(parseInt(event.target.value))) {\n                                    set_range_mode_slider_value1([range_mode_slider_value1[0], \"\"])\n                                } else {\n                                    if (parseInt(event.target.value) > props.slider_max) {\n                                        alert(\"Upper range can not exceed maximum\")\n                                        set_range_mode_slider_value1([range_mode_slider_value1[0], props.slider_max])\n                                    }\n                                    else {\n                                        set_range_mode_slider_value1([range_mode_slider_value1[0], parseInt(event.target.value)])\n                                    }\n                                }\n                            }\n                            }\n                        />\n                    </Grid>\n                    <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                        onClick={() => props.Set_range_mode_range1(range_mode_slider_value1)}\n                    >Update range</Button>\n                </div>\n                <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                    <Typography classes={{ root: classes.tRoot }}>\n                        Group 2\n                        </Typography>\n                    <Slider\n                        value={range_mode_slider_value2}\n                        onChange={(event, newValue) => set_range_mode_slider_value2(newValue)}\n                        onChangeCommitted={(event, newValue) => { props.Set_changed(\"range\") }}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"on\"\n                        min={1}\n                        max={props.slider_max}\n                        marks={marks}\n                    />\n                </div>\n                <Grid style={{ marginBottom: 15 }} container\n                    direction=\"row\"\n                    justify=\"space-around\"\n                    alignItems=\"center\">\n                    <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={range_mode_slider_value2[0]} style={{ width: 40 }}\n                        onChange={event => {\n                            if (isNaN(parseInt(event.target.value))) {\n                                set_range_mode_slider_value2([\"\", range_mode_slider_value2[1]])\n                            } else {\n                                if (event.target.value > range_mode_slider_value2[1]) {\n                                    alert(\"Lower range can not be larger than the upper range\")\n                                }\n                                else {\n                                    set_range_mode_slider_value2([event.target.value, range_mode_slider_value2[1]])\n                                }\n                            }\n                        }\n                        }\n                    />\n                    <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={range_mode_slider_value2[1]} style={{ width: 40 }}\n                        onChange={event => {\n                            if (isNaN(parseInt(event.target.value))) {\n                                set_range_mode_slider_value2([range_mode_slider_value2[0], \"\"])\n                            } else {\n                                if (parseInt(event.target.value) > props.slider_max) {\n                                    alert(\"Upper range can not exceed maximum\")\n                                    set_range_mode_slider_value2([range_mode_slider_value2[0], props.slider_max])\n                                }\n                                else {\n                                    set_range_mode_slider_value2([range_mode_slider_value2[0], parseInt(event.target.value)])\n                                }\n                            }\n                        }\n                        }\n                    />\n                </Grid>\n                <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: 0 }}\n                    onClick={() => props.Set_range_mode_range2(range_mode_slider_value2)}\n                >Update range</Button>\n\n            </div> : null}\n            {props.mode == \"Time\" ?\n                <div style={{ marginTop: 10, paddingLeft: 5, marginBottom: 10, width: $('.Sidebar').width() }}>\n                    <div className=\"model\">\n                        <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                        <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                            <Slider\n                                value={time_mode_slider_value}\n                                onChange={(event, newValue) => set_time_mode_slider_value(newValue)}\n                                onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                                valueLabelDisplay=\"auto\"\n                                aria-labelledby=\"range-slider\"\n                                valueLabelDisplay=\"on\"\n                                min={1}\n                                max={props.slider_max}\n                                marks={marks}\n                            />\n                            <Grid style={{ marginBottom: 15 }} container\n                                direction=\"row\"\n                                justify=\"space-around\"\n                                alignItems=\"center\">\n                                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={time_mode_slider_value[0]} style={{ width: 40 }}\n                                    onChange={event => {\n                                        if (isNaN(parseInt(event.target.value))) {\n                                            set_time_mode_slider_value([\"\", time_mode_slider_value[1]])\n                                        } else {\n                                            if (event.target.value > time_mode_slider_value[1]) {\n                                                alert(\"Lower range can not be larger than the upper range\")\n                                            }\n                                            else {\n                                                set_time_mode_slider_value([event.target.value, time_mode_slider_value[1]])\n                                            }\n                                        }\n                                    }\n                                    }\n                                />\n                                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={time_mode_slider_value[1]} style={{ width: 40 }}\n                                    onChange={event => {\n                                        if (isNaN(parseInt(event.target.value))) {\n                                            set_time_mode_slider_value([time_mode_slider_value[0], \"\"])\n                                        } else {\n                                            if (parseInt(event.target.value) > props.slider_max) {\n                                                alert(\"Upper range can not exceed maximum\")\n                                                set_time_mode_slider_value([time_mode_slider_value[0], props.slider_max])\n                                            }\n                                            else {\n                                                set_time_mode_slider_value([time_mode_slider_value[0], parseInt(event.target.value)])\n                                            }\n                                        }\n                                    }\n                                    }\n                                />\n                            </Grid>\n                            <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                                onClick={() => props.Set_time_mode_range(time_mode_slider_value)}\n                            >Update range</Button>\n                        </div>\n                        <div className=\"year\">\n                            <Autocomplete className={{ root: classes.MuiAutocompleteroot }}\n                                defaultValue={props.time_mode_year1.toString()}\n                                id=\"debug\"\n                                debug\n                                options={props.years_for_dropdown.map((option) => option)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Year 1\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                                )}\n                                onChange={(event, value) => {\n                                    props.Set_time_mode_year1(value)\n                                    props.Set_changed(\"year\")\n                                }}\n                            />\n                        </div>\n                        <div className=\"year\">\n                            <Autocomplete className={{ root: classes.MuiAutocompleteroot }}\n                                defaultValue={props.time_mode_year2.toString()}\n                                id=\"debug\"\n                                debug\n                                options={props.years_for_dropdown.map((option) => option)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Year 2\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                                )}\n                                onChange={(event, value) => {\n                                    props.Set_time_mode_year2(value)\n                                    props.Set_changed(\"year\")\n                                }}\n                            />\n                        </div>\n                    </div></div> : null}\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        selected_year: state.selected_year,\n        state_range: state.state_range,\n        mode: state.mode, // Model mode model\n        slider_max: state.slider_max,\n        range_mode_model: state.range_mode_model, // Range mode model\n        range_mode_range1: state.range_mode_range1,\n        range_mode_range2: state.range_mode_range2,\n        time_mode_model: state.time_mode_model, // Time mode model\n        time_mode_range: state.time_mode_range,\n        time_mode_year1: state.time_mode_year1,\n        time_mode_year2: state.time_mode_year2,\n        years_for_dropdown: state.years_for_dropdown,\n        dataset: state.dataset,\n        defualt_models: state.defualt_models,\n        slider_and_feature_value: state.slider_and_feature_value,\n        sort_by: state.sort_by,\n        grouped_by_year_data: state.grouped_by_year_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n        Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n        Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n        Set_range_mode_model: (val) => dispatch({ type: \"range_mode_model\", value: val }),\n        Set_time_mode_model: (val) => dispatch({ type: \"time_mode_model\", value: val }),\n        Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n        Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n        Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n        Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n        Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n        Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n        Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\n        Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n        Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n        Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./Sidebar.scss\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from \"react-redux\";\nimport Modes from \"./Modes\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  listroot: {\n    width: '100%',\n    maxWidth: 360,\n  },\n  paper: {\n\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction Sidebar(props) {\n  const classes = useStyles();\n  //------------For list and chckbox\n  const [checked, setChecked] = React.useState([0]);\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  const inputchanged = (event) => {\n    var val = parseInt(event.target.value)\n    if (val > -1) {\n      setTimeout(function () {\n        props.Set_deviate_by(val)\n      }, 100);\n\n    }\n  }\n  const show_checkboxChanged = (event,val) => {\n    var myfunc = props.appHandleChange\n    myfunc(val, \"show_checkboxChanged\")\n  }\n  return (\n    <div className=\"Sidebar_parent\" style={{height:window.innerHeight}}>\n      <h4 className=\"app_title\">RIEVAL </h4>\n      {props.view_data==1?\n      <div className=\"rangeSlidercontainer\">\n        <Modes appHandleChange={props.appHandleChange} ></Modes>\n        <div className=\"deviation\" style={{marginLeft:5, borderTop:\"0px solid #eaeaea\"}}>\n          <p className=\"title_show\">Margin:</p>\n          <TextField\n            id=\"outlined-size-normal\"\n            defaultValue={props.deviate_by}\n            variant=\"filled\"\n            color=\"primary\"\n            onChange={(event) => inputchanged(event)}\n            fullWidth={false}\n            style={{height:24}}\n          />\n        </div>\n        <div className=\"show\">\n          <p className=\"title_show\">Show:</p>\n          <List className={classes.listroot}>\n            {['Rankings', 'Explanation'].map((value) => {\n              const labelId = `checkbox-list-label-${value}`;\n              return (\n                <ListItem key={value} role={undefined} onClick={handleToggle(value)}>\n                  <Checkbox\n                    checked={props.show.includes(value)}\n                    edge=\"start\"\n                    tabIndex={-1}\n                    value={value}\n                    onChange={(event, value) => {\n                      var temp_show=[...props.show]\n                      if(temp_show.includes(event.target.value) && event.target.value!=\"Rankings\"){\n                        temp_show=temp_show.filter(item=>item!=event.target.value)\n                      }\n                      else{\n                        temp_show.push(event.target.value)\n                      }\n                      props.Set_show(temp_show)\n                    }\n                  }\n                  />\n                  <p className=\"list_item_label\" id={labelId}>{value}</p>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      </div>:null}\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    deviate_by:state.deviate_by,\n    state_range:state.state_range,\n    defualt_models:state.defualt_models,\n    selected_year:state.selected_year,\n    sparkline_data:state.sparkline_data,\n    show:state.show,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_deviate_by:(val) => dispatch({ type: \"deviate_by\", value: val }),\n    Set_show:(val)=>dispatch({type:\"show\",value:val}),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Sidebar);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import React, { Component } from 'react';\n//------------------------------------------------All datasets imports\nimport fiscal from \"./Data/fiscal.csv\";\nimport school from \"./Data/school.csv\";\nimport house from \"./Data/house.csv\";\n\nimport fiscal_rank from \"./Data/data/fiscal/lime/fiscal_rank.csv\";\nimport fiscal_lime from \"./Data/data/fiscal/lime/fiscal_lime.csv\";\n\nimport school_rank from \"./Data/data/school/lime/school_rank.csv\";\nimport school_lime from \"./Data/data/school/lime/school_lime.csv\";\n\nimport house_rank from \"./Data/data/house/lime/house_rank.csv\";\nimport house_lime from \"./Data/data/house/lime/house_lime.csv\";\n\n//------------------------------------------------All datasets imports ends here\nimport \"./App.scss\";\nimport * as d3 from 'd3';\nimport * as algo1 from \"./Algorithms/algo1\";\nimport ModelChart from \"./components/Charts/Model/ModelChart\"\nimport RangeChart from \"./components/Charts/Range/RangeChart\"\nimport YearChart from \"./components/Charts/Time/YearChart\"\nimport TopBar from \"./components/TopBar/TopBar\"\nimport { Row, Col } from 'reactstrap';\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport * as $ from 'jquery';\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport \"./components/Charts/Charts.css\"\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // mydata is original data\n    this.state = {\n      random: 10,\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",\n    };\n  }\n  handleradioChange = (event) => {\n    this.setState({ show: [\"Slope charts\", \"Rankings\", \"Explanation\"] })\n    this.props.Set_slider_and_feature_value({ 'Rank range': 1, 'Feature': 0 })\n    this.props.Set_clicked_items_in_slopechart([])\n    this.props.Set_state_range([1, 25])\n    this.props.Set_histogram_data([])\n    this.props.Set_mode(\"Model\")\n    this.props.Set_range_mode_range1([1, 25])\n    this.props.Set_range_mode_range2([15, 40])\n    this.props.Set_time_mode_range([5, 35])\n    if (event.target.value == 'Fiscal Dataset') {\n      this.setState({ dataset: 'fiscal' })\n      this.props.Set_dataset('fiscal')\n      this.dataprocessor(\"fiscal\")\n    }\n    else if (event.target.value == 'House Dataset') {\n      this.setState({ dataset: 'house' })\n      this.props.Set_dataset('house')\n      this.dataprocessor(\"house\")\n    }\n    else {\n      this.setState({ dataset: 'school' })\n      this.props.Set_dataset('school')\n      this.dataprocessor(\"school\")\n    }\n  };\n\n  task2 = () => {\n    if (this.props.clicked_items_in_slopechart.length > 0) {\n      d3.selectAll('circle,.datapoint').attr('opacity', this.props.config.reduced_opacity)\n    }\n    this.props.clicked_items_in_slopechart.map(idName => d3.selectAll('#' + idName).attr('opacity', 1))\n  }\n\n  textClickHandler_original = (state_name) => { // state_name is set as the id of each element\n    var idName = state_name.replace(/ +/g, \"\")\n\n    //----Whatever properties are changed due to click change back here for the original \n    d3.selectAll('#' + idName).filter(d3.matcher('line')).style('stroke-width', 1)\n    //----Whatever properties are changed due to click change back here for the original\n\n    //-----Store the clicked items\n    var clicked_items_in_slopechart = [...this.props.clicked_items_in_slopechart]\n    if (clicked_items_in_slopechart.includes(idName)) {\n      clicked_items_in_slopechart = clicked_items_in_slopechart.filter(element => element != idName)\n    }\n    else { clicked_items_in_slopechart.push(idName) }\n    this.props.Set_clicked_items_in_slopechart(clicked_items_in_slopechart)\n    //-----Store the clicked items ends here\n\n    if (clicked_items_in_slopechart.length > 0) {\n      d3.selectAll('circle,.datapoint').attr('opacity', this.props.config.reduced_opacity)\n      this.props.clicked_items_in_slopechart.map(idName => {\n        d3.selectAll('#' + idName).attr('opacity', 1)\n        d3.selectAll('#' + idName).filter(d3.matcher('line')).style('stroke-width', 3)\n      })\n    }\n    else {\n      d3.selectAll('circle,.datapoint').attr('opacity', 1)\n    }\n\n    //d3.selectAll('.line1,.line2').attr('opacity',1)\n  }\n\n  //--------- data processor processes data for initial render\n  dataprocessor = (dataset_name) => {\n    if (dataset_name == \"school\") { this.process_data(school, school_rank, school_lime, dataset_name) }\n    if (dataset_name == \"fiscal\") { this.process_data(fiscal, fiscal_rank, fiscal_lime, dataset_name) }\n    if (dataset_name == \"house\") { this.process_data(house, house_rank, house_lime, dataset_name) }\n  }\n  process_data = (slopechart_data_filename, rank_data_filename, lime_data_filename, dataset_name) => {\n    var self = this\n    //-------------\n    d3.csv(slopechart_data_filename).then(original_data => {\n      var grouped_by_year_data = algo1.groupby_year(original_data).years\n      var sparkline_data = algo1.groupby_year(original_data).sparkline_data\n      var years_for_dropdown = Object.keys(grouped_by_year_data)\n      self.props.Set_sparkline_data(sparkline_data)\n      self.props.Set_slider_max(grouped_by_year_data[years_for_dropdown[0]].length)\n      self.setState({ years_for_dropdown: years_for_dropdown })\n      self.props.Set_years_for_dropdown(years_for_dropdown)\n      self.props.Set_time_mode_year1(years_for_dropdown[0])\n      self.props.Set_time_mode_year2(years_for_dropdown[1])\n      self.props.Set_legend_year(years_for_dropdown[0])\n      self.setState({ ref_year: years_for_dropdown[0] })\n      self.props.Set_grouped_by_year_data(grouped_by_year_data)\n      self.setState({ grouped_by_year_data: grouped_by_year_data }, () => {\n        self.appHandleChange(original_data, \"original\");\n      })\n      self.setState({ original_data: original_data })\n      self.props.Set_original_data(original_data)\n      self.props.Set_selected_year(years_for_dropdown[0])\n    })\n    //-------------\n    d3.csv(rank_data_filename).then(data => {\n      var nested_data = {}\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\n        nested_data[item.key] = item.values\n      })\n      self.props.Set_rank_data(nested_data)\n    })\n    //-------------\n    d3.csv(lime_data_filename).then(data => {\n      var nested_data = {}\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\n        nested_data[item.key] = item.values\n      })\n      self.props.Set_lime_data(nested_data)\n    })\n\n  }\n  //---------\n  appHandleChange = (data, type) => { // get the resopnses from Sidebar\n    this.setState({ features_dict: {} })\n    var temp_Models = this.props.defualt_models\n    var temp_show = this.state.show\n    var year = this.props.selected_year\n    if (type == 'year_changed') { this.props.Set_selected_year(data) } // This is called when circles on the sparklines are clicked\n    if (type == 'original') { var original_data = data } else { original_data = this.props.original_data }\n    //-----------------Handle show changes here\n    if (type == \"show_checkboxChanged\") {\n      if (temp_show.includes(data)) { temp_show = temp_show.filter(element => element != data) }\n      else { temp_show.push(data) }\n      this.setState({ show: temp_show })\n    }\n    \n    this.setState({ defualt_models: temp_Models })\n    //--------------------------------------------------------------------------------------------------------------All types are handled here end\n    var prev_year;\n    if (parseInt(year) == this.state.years_for_dropdown[0]) { prev_year = parseInt(year) } else { prev_year = parseInt(year) - 1 }\n\n  }\n\n  buttonclickHandler = (value, type) => {\n    setTimeout(() => { this.setState({ random: Math.random() }) }, 500);\n    type = \"button\" ? this.setState({ view_data: value }) : null\n    type = \"form\" ? this.setState({ view_data: value }) : null\n  }\n  //-----------------Models are generated ends here\n  componentDidMount() {\n    this.dataprocessor(\"fiscal\")\n  }\n  shouldComponentUpdate() {\n    return true;\n  }\n  render() {\n    return (\n      <div key={this.state.random}>\n\n        <Row>\n          <div style={{ width: 207 }} className=\"Sidebar\">\n            {this.props.selected_year != null ?\n              <Sidebar view_data={this.state.view_data} appHandleChange={this.appHandleChange}\n                dataset={this.props.dataset} sort_by={this.props.sort_by} chart_scale_type={this.props.chart_scale_type}>\n              </Sidebar> : null}\n          </div>\n          <Col style={{ width: window.innerWidth - 200, minHeight: window.innerHeight }} className=\"container_header_and_components\">\n            <div className=\"uploader_topbar\">\n              <Grid container spacing={0} className=\"myheader\" style={{ left: $('.Sidebar').width() }}>\n                <Grid item style={{ borderRight: \"1px dashed #eaeaea\", width: 100 }}><Button onClick={() => this.buttonclickHandler(1, \"button\")}>View Data</Button></Grid>\n                <Grid item style={{ borderRight: \"1px dashed #eaeaea\", width: 120 }}><Button onClick={() => this.buttonclickHandler(0, \"button\")}>Load Data</Button></Grid>\n              </Grid>\n              {this.state.view_data == false ?\n                <Row className=\"Topbar_container\">\n                  <div className=\"load\">\n                    <form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\n                      <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\"></FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={this.handleradioChange}>\n                          {['Fiscal Dataset', 'School Dataset', 'House Dataset'].map((value) => {\n                            return <FormControlLabel value={value} control={<Radio />} label={value} />\n                          })}\n                        </RadioGroup>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Load</Button>\n                      </FormControl>\n                    </form>\n                  </div></Row>\n                : null}\n              {this.state.view_data == true ? <Row className=\"Topbar_container\"><TopBar key={this.props.selected_year} appHandleChange={this.appHandleChange} tracking={this.props.tracking}></TopBar></Row> : null}\n            </div>\n            {this.state.view_data == true ?\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\n                <Grid container spacing={0} direction=\"row\" justify=\"space-evenly\" className=\"slopechart_container\" style={{ height: window.innerHeight - $('.uploader_topbar').height() - 5, marginLeft: 5, width: window.innerWidth - ($('.Sidebar_parent').width() + $('.legend').width() + 15) }}>\n                  {this.props.mode == \"Model\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <ModelChart></ModelChart> : null}\n                  {this.props.mode == \"Range\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <RangeChart></RangeChart> : null}\n                  {this.props.mode == \"Time\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <YearChart></YearChart> : null}\n                </Grid>\n              </Grid> : null}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n  makeArr = () => {\n    var startValue = this.props.state_range[0];\n    var stopValue = this.props.state_range[1];\n    var arr = [];\n    for (var i = startValue; i <= stopValue; i++) {\n      arr.push(i);\n    }\n    //hi\n    return arr;\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    tracking: state.tracking,\n    state_range: state.state_range,\n    deviate_by: state.deviate_by,\n    defualt_models: state.defualt_models,\n    sparkline_data: state.sparkline_data,\n    selected_year: state.selected_year,\n    mode: state.mode,\n    range_mode_model: state.range_mode_model,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sort_by: state.sort_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    popup_chart_data: state.popup_chart_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    config: state.config,\n    lime_data: state.lime_data,\n    rank_data: state.rank_data,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_dataset: (val) => dispatch({ type: \"dataset\", value: val }),\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: parseInt(val) }),\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\n    Set_grouped_by_year_data: (val) => dispatch({ type: \"grouped_by_year_data\", value: val }),\n    Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\n\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n    Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n    Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n\n    Set_rank_data: (val) => dispatch({ type: \"rank_data\", value: val }),\n    Set_lime_data: (val) => dispatch({ type: \"lime_data\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","let initialState = {\n   anim_config: {rank_animation:3000,deviation_animation:3000,feature_animation:3000,circle_animation:3000},\n   appHandleChange: null,\n   sparkline_data: null,\n   sort_by: \"Average Precision\",\n   original_data: null,\n   rank_data: null,\n   lime_data: null,\n   grouped_by_year_data: null,\n   slope_chart_ready_to_vis: null,\n   defualt_models: [\"LinearReg\"], // Change the pop_over_models as well\n   state_range: [1, 25], // Change in handleradioChange\n   deviate_by: 0,\n   show: [\n      \"Slope charts\", \"Rankings\", \"Explanation\" // change in app.js\n   ],\n   years_for_dropdown: [\n      \"2006\"\n   ],\n   selected_year: 2006,\n   selected_years: [\"2006\"],\n   slider_min: 1,\n   slider_max: 50,\n   view_data: 1,\n   dataset: \"fiscal\", // change in componentDidmount in app.js too\n   histogram_data: [],\n   chart_scale_type: \"true\",\n   features_with_score: null,\n   ref_year: null,\n   cmodel: \"CordAscent\",\n   clicked_items_in_slopechart: [],\n   tracking: false,\n   dummy: null,\n   features_dict: {},\n   features_voted: null,\n   Legend_ready_to_vis: null,\n   legend_model: \"CordAscent\",\n   legend_show_option: \"Rank\",\n   legend_year: 2012,\n   mode: \"Model\",\n   range_mode_model: \"CordAscent\",\n   range_mode_range1: [1, 25],\n   range_mode_range2: [15, 40],\n   time_mode_model: \"CordAscent\",\n   time_mode_year1: \"Null\",\n   time_mode_year2: \"Null\",\n   time_mode_range: [6, 32],\n   chart_scale_type: \"true\",\n   slider_and_feature_value: { 'Rank range': 1, 'Feature': 0 },\n   prev_prop: {},\n   replay: false,\n   changed: \"year\",\n   popup_chart_data: null,\n   pop_over: true,\n   pop_over_models: [\"MART\", \"LinearReg\"],\n   clicked_features: [],\n   drag_drop_feautre_data: {},\n   dbclicked_features: [],\n   default_model_scores: {},\n   all_models: [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"RankBoost\", \"RankNet\"],\n   average_y: false,\n   average_m: false,\n   clicked_circles:[]\n}\n//---InitialState ends here\nconst reducer = (state = initialState, action) => {\n   if (action.type === \"clicked_circles\") {\n      //console.log(action.value)\n      return { ...state, clicked_circles: action.value }\n   }\n   if (action.type === \"average_y\") {\n      console.log(action.value)\n      return { ...state, average_y: action.value }\n   }\n   if (action.type === \"average_m\") {\n      console.log(action.value)\n      return { ...state, average_m: action.value }\n   } \n   if (action.type === \"selected_years\") {\n      console.log(action.value)\n      return { ...state, selected_years: action.value[action.value.length-1],selected_year:action.value[action.value.length-1] }\n   }\n   if (action.type === \"default_model_scores\") {\n      //console.log(action.value)\n      return { ...state, default_model_scores: action.value }\n   }\n   if (action.type === \"dbclicked_features\") {\n      return { ...state, dbclicked_features: action.value }\n   }\n   if (action.type === \"drag_drop_feautre_data\") {\n      return { ...state, drag_drop_feautre_data: action.value }\n   }\n   if (action.type === \"anim_config\") {\n      return { ...state, config: action.value }\n   }\n   if (action.type === \"show\") {\n      return { ...state, show: action.value }\n   }\n   if (action.type === \"lime_data\") {\n      return { ...state, lime_data: action.value }\n   }\n   if (action.type === \"defualt_models\") {\n      return { ...state, defualt_models: action.value }\n   }\n   if (action.type === \"rank_data\") {\n      return { ...state, rank_data: action.value }\n   }\n   if (action.type === \"original_data\") {\n      return { ...state, original_data: action.value }\n   }\n   if (action.type === \"years_for_dropdown\") {\n      return { ...state, years_for_dropdown: action.value }\n   }\n   if (action.type === \"appHandleChange\") {\n      return { ...state, appHandleChange: action.value }\n   }\n   if (action.type === \"state_range\") {\n      return { ...state, state_range: action.value }\n   }\n   if (action.type === \"selected_year\") {\n      return { ...state, selected_year: action.value,selected_years: [action.value.toString()] }\n   }\n   if (action.type === \"tracking\") {\n      return { ...state, tracking: action.value }\n   }\n   if (action.type === \"grouped_by_year_data\") {\n      return { ...state, grouped_by_year_data: action.value }\n   }\n   if (action.type === \"sort_by\") {\n      return { ...state, sort_by: action.value }\n   }\n   if (action.type === \"deviate_by\") {\n      return { ...state, deviate_by: action.value }\n   }\n   if (action.type === \"mode\") {\n      return { ...state, mode: action.value }\n   }\n   if (action.type === \"slider_max\") {\n      return { ...state, slider_max: action.value }\n   }\n   if (action.type === \"range_mode_model\") {\n      return { ...state, range_mode_model: action.value }\n   }\n   //----\n   if (action.type === \"range_mode_range1\") {\n      return { ...state, range_mode_range1: action.value }\n   }\n   if (action.type === \"range_mode_range2\") {\n      return { ...state, range_mode_range2: action.value }\n   }\n   if (action.type === \"time_mode_range\") {\n      return { ...state, time_mode_range: action.value }\n   }\n   if (action.type === \"time_mode_model\") {\n      return { ...state, time_mode_model: action.value }\n   }\n   if (action.type === \"time_mode_year1\") {\n      return { ...state, time_mode_year1: action.value }\n   }\n   if (action.type === \"time_mode_year2\") {\n      return { ...state, time_mode_year2: action.value }\n   }\n   if (action.type === \"clicked_items_in_slopechart\") {\n      return { ...state, clicked_items_in_slopechart: action.value }\n   }\n   if (action.type === \"features_with_score\") {\n      return { ...state, features_with_score: action.value }\n   }\n   if (action.type === \"sparkline_data\") {\n      return { ...state, sparkline_data: action.value }\n   }\n   if (action.type === \"legend_show_option\") {\n      return { ...state, legend_show_option: action.value }\n   }\n   if (action.type === \"legend_model\") {\n      return { ...state, legend_model: action.value }\n   }\n   if (action.type === \"histogram_data\") {\n      return { ...state, histogram_data: action.value }\n   }\n   if (action.type === \"dataset\") {\n      return { ...state, dataset: action.value }\n   }\n   if (action.type === \"slider_and_feature_value\") {\n      return { ...state, slider_and_feature_value: action.value }\n   }\n   if (action.type === \"legend_year\") {\n      return { ...state, legend_year: action.value }\n   }\n   if (action.type === \"prev_prop\") {\n      return { ...state, prev_prop: action.value }\n   }\n   if (action.type === \"replay\") {\n      return { ...state, replay: action.value }\n   }\n   if (action.type === \"changed\") {\n      return { ...state, changed: action.value }\n   }\n   if (action.type === \"popup_chart_data\") {\n      return { ...state, popup_chart_data: action.value }\n   }\n   if (action.type === \"pop_over\") {\n      return { ...state, pop_over: action.value }\n   }\n   if (action.type === \"pop_over_models\") {\n      var temp = action.value.filter(item => item != \"ListNet\")\n      return { ...state, pop_over_models: temp }\n   }\n   if (action.type === \"clicked_features\") {\n      //console.log(action.value)\n      return { ...state, clicked_features: action.value }\n   }\n   return state;\n}\nexport default reducer;","import { createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({      \n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  }\n});\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './store/reducer';\nimport theme from './Themes'; \nimport { ThemeProvider } from '@material-ui/styles';\nconst store=createStore(reducer);\nReactDOM.render( <ThemeProvider theme={theme}><Provider store={store}><App /></Provider></ThemeProvider>,document.getElementById('root'));\n\n\n","module.exports = __webpack_public_path__ + \"static/media/chart1_data.d3b20544.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.cca71c9e.csv\";"],"sourceRoot":""}