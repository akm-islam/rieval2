{"version":3,"sources":["Data/fiscal.csv","Data/school.csv","Data/house.csv","Data/data/fiscal/lime/fiscal_rank.csv","Data/data/fiscal/lime/fiscal_lime.csv","Data/data/school/lime/school_rank.csv","Data/data/school/lime/school_lime.csv","Data/data/house/lime/house_rank.csv","Data/data/house/lime/house_lime.csv","Data/data/house/lime/chart1_data.csv","Algorithms/algo1.js","components/Charts/explanation_chart.js","components/Charts/misc_algo.js","components/Charts/deviation_chart.js","components/Charts/Model/ModelChart.js","components/Charts/Range/RangeChart.js","components/Charts/Time/YearChart.js","components/TopBar/DefaultModels.js","components/TopBar/Sort.js","components/TopBar/TopBar.js","components/Sidebar/Histogram.js","components/Sidebar/Histograms.js","components/Sidebar/Tracking.js","components/Sidebar/Modes.js","components/Sidebar/Sidebar.js","App.js","store/reducer.js","Themes.js","index.js","Data/data/fiscal/lime/chart1_data.csv","Data/data/school/lime/chart1_data.csv"],"names":["module","exports","groupby_year","original_data","years","sparkline_data","forEach","element","replace","temp_dict","year","parseInt","rank","push","sort","type","state_range","default_models","selected_year","grouped_by_year_data","nDCG_dict","i","Object","keys","key","parseFloat","items","map","substring","first","second","temp_ndcg","length","includes","temp1","myitem","console","log","mydict","model","temp","Math","sqrt","temp_ap","features_with_score","dataset","models","number_of_charts","rank_data","temp_final","temp2","v","top_nine","data","feautures","tempvoted_data_with_score","data2","filter","index","item","feauture","items2","sorted_features","key2","CreatexpChart","parent_id","selected_instances","lime_data","defualt_models","clicked_circles","Set_clicked_circles","diverginColor","anim_config","clicked_features","Set_clicked_features","margin","parent_width","$","width","parent_height","height","item_width","item_height","parent_svg","d3","selectAll","join","attr","d","text","enter","append","svg_index","this","update","transition","duration","feature_animation","delay","rank_animation","deviation_animation","exit","remove","x_transformation","feature_name","feature_contrib_name","circ_data","xScale","domain","range","yScale","circle_animation","on","preventDefault","handle_transparency","class_name","circle_id","draw_lines","lines","two_realRank","points","each","raise","Create_deviation_chart","parent_exp_id","selected_years","average","div","style","temp_scale_data","abs","config","y_distance","circle_radius","data_for_all_years","line_data","model_name","a","temp_max","sclale1","d2","avg","classed","html","pageX","pageY","SlopeChart","props","line_color","state","height_slope_exp_chart","mouseX","mouseY","setState","window","innerHeight","prevProps","prevState","min","interpolate","algo1","entries","b","slice","deviation_chart","average_m","explanation_chart","misc_algo","Grid","container","className","backgroundColor","padding","border","boxShadow","id","marginBottom","Component","connect","deviate_by","clicked_items_in_slopechart","tracking","time_mode_model","chart_scale_type","histogram_data","show","default_model_scores","sort_by","average_y","dispatch","val","value","Set_prev_prop","Set_sparkline_data","Set_clicked_items_in_slopechart","Set_replay","range_mode_range1","range_mode_range2","selected_instances2","features_with_score2","sorted_features2","direction","justifyContent","paddingRight","paddingLeft","fontWeight","borderBottom","overflow","marginRight","marginTop","paddingTop","marginLeft","time_mode_range","time_mode_year1","time_mode_year2","Set_defualt_models","Set_pop_over_models","React","useState","anchorEl","setAnchorEl","open","Boolean","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","splice","borderRight","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","onClose","TransitionComponent","Fade","List","labelId","ListItem","role","undefined","Checkbox","edge","tabIndex","onChange","temp_Models","target","myfunc","appHandleChange","checkboxChanged","Set_sort_by","Set_default_model_scores","set_sort_by","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","label","useStyles","makeStyles","theme","MuiAutocompleteroot","root","listroot","maxWidth","paper","heading","fontSize","typography","pxToRem","fontWeightRegular","all_models","years_for_dropdown","mode","prev_prop","replay","add","Set_selected_years","Set_selected_year","set_tracking","Set_histogram_data","Set_changed","Set_state_range","Set_slider_max","Set_range_mode_range1","Set_range_mode_range2","Set_time_mode_range","Set_average_m","handle_model_click","display","CreateChart","feature","node","feature_height","handleHistogramselection","feature_data","feature_width","svg","isNaN","y","occur","x","sum_x","cScale","interpolator","svg1","statelist","country","cat_states","temp_x","tick_values","nice","ticks","hist_height","bins","thresholds","histogram","y_hist","svg0","x0","x1","call","tickValues","tickFormat","selectionRect","previousElement","currentY","currentX","originX","originY","setElement","ele","getNewAttributes","getCurrentAttributes","y1","x2","y2","getCurrentAttributesAsText","attrs","init","newX","newY","rectElement","NewAttr","focus","removePrevious","dragBehavior","p","finalAttributes","myx1","myx2","temp_range","invert","toFixed","states","sourceEvent","Chart","selected_states","update_histogram_data","alert","filtered_states","slider_and_feature_value","makeArr","startValue","stopValue","arr","myRef","createRef","feaures_dict","features_voted","filename","self","exp_fiscal_CordAscent","exp_school_CordAscent","exp_house_CordAscent","then","legend_data","height_between","number_of_elements","exp_chart_height","floor","features_dict","feature_index","feature_id","setTimeout","justify","alignItems","labelPlacement","color","flexBasis","flexShrink","secondaryHeading","palette","secondary","tRoot","rang_input","slider_max","range_mode_model","Set_years_for_dropdown","Set_mode","Set_range_mode_model","Set_time_mode_model","Set_time_mode_year1","Set_time_mode_year2","Set_slider_and_feature_value","classes","sliderRange","set_sliderRange","range_mode_slider_value1","set_range_mode_slider_value1","range_mode_slider_value2","set_range_mode_slider_value2","time_mode_slider_value","set_time_mode_slider_value","set_dummy","temp_marks","step","marks","borderTop","Autocomplete","borderRadius","paddingBottom","defaultValue","debug","options","renderInput","params","TextField","fullWidth","InputProps","disableUnderline","temp_val","JSON","stringify","Slider","newValue","onChangeCommitted","valueLabelDisplay","aria-labelledby","input","Histograms","toString","Sidebar_width","Typography","option","Set_ref_year","Set_original_data","Set_deviate_by","Set_show","view_data","variant","inputchanged","temp_show","App","handleradioChange","Set_dataset","dataprocessor","task2","reduced_opacity","idName","textClickHandler_original","state_name","dataset_name","process_data","school","school_rank","school_lime","fiscal","fiscal_rank","fiscal_lime","house","house_rank","house_lime","slopechart_data_filename","rank_data_filename","lime_data_filename","Set_legend_year","ref_year","Set_grouped_by_year_data","nested_data","values","Set_rank_data","Set_lime_data","buttonclickHandler","random","Legend_ready_to_vis","legend_model","Row","Col","innerWidth","minHeight","spacing","left","onSubmit","ModelChart","RangeChart","YearChart","popup_chart_data","initialState","slope_chart_ready_to_vis","slider_min","cmodel","dummy","legend_show_option","legend_year","reducer","action","dbclicked_features","drag_drop_feautre_data","changed","pop_over","pop_over_models","createMuiTheme","button","textTransform","store","createStore","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.7fef82bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fiscal.977bae2d.csv\";","module.exports = __webpack_public_path__ + \"static/media/school.2d2c77ef.csv\";","module.exports = __webpack_public_path__ + \"static/media/house.88979d03.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_rank.6e0a824e.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_lime.7992abf1.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_rank.edf0b9e3.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_lime.644683c6.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_rank.f85c2352.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_lime.b31dfb61.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.45acbae8.csv\";","export function groupby_year(original_data) {\n  var years = {}\n  var sparkline_data = {}\n  original_data.forEach(element => {\n    years[element['1-qid']] = []\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')] = []\n  });\n\n  original_data.forEach(element => {\n    var temp_dict = { year: parseInt(element['1-qid']), rank: parseInt(element['two_realRank']) }\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')].push(temp_dict)\n    years[element['1-qid']].push(element)\n  });\n  return { years: years, sparkline_data: sparkline_data };\n}\n//------------------------------------------------------------------------------------------------- Sort Models\nexport function sort(type, state_range, default_models, selected_year, grouped_by_year_data) {\n  //------------Handle ndgc sorting\n  if (type == 'Discounted Cumulative Gain') {\n    var nDCG_dict = { \"ndcg_term_CordAscent\": 0, \"ndcg_term_LambdaMART\": 0, \"ndcg_term_LambdaRank\": 0, \"ndcg_term_LinearReg\": 0, \"ndcg_term_ListNet\": 0, \"ndcg_term_MART\": 0, \"ndcg_term_RandomFor\": 0, \"ndcg_term_RankBoost\": 0, \"ndcg_term_RankNet\": 0 }\n    for (var i = state_range[0]; i < state_range[1]; i++) {\n      Object.keys(nDCG_dict).forEach(key => {\n          nDCG_dict[key] = nDCG_dict[key] + parseFloat(grouped_by_year_data[selected_year][i][key])\n      })\n    }\n    //---- sort\n    var items = Object.keys(nDCG_dict).map(function (key) {\n      return [key.substring(10), nDCG_dict[key]];\n    });\n    items.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    var temp_ndcg = []\n    for (var i = 0; i < items.length; i++) {\n      if (default_models.includes(items[i][0])) {\n        temp_ndcg.push(items[i][0])\n      }\n    }\n    var temp1={}\n    items.map(myitem=>{temp1[myitem[0]]=myitem[1]})\n    console.log(items)\n    return [temp_ndcg,temp1]\n  }\n  //----\n\n  //------------Handle AP sorting\n  if (type == 'Average Precision') {\n    var mydict = {}\n    default_models.forEach((model) => {\n      var temp = 1\n      for (var i = state_range[0]; i < state_range[1]; i++) {\n        temp = temp + (grouped_by_year_data[selected_year][i][\"two_realRank\"] - grouped_by_year_data[selected_year][i][model]) ** 2\n      }\n      mydict[model] = ((state_range[1] - state_range[0]) + 1) / (Math.sqrt(temp))\n    })\n    //---- sort\n    var items = Object.keys(mydict).map(function (key) {\n      return [key, mydict[key]];\n    });\n    items.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    var temp_ap = []\n    for (var i = 0; i < items.length; i++) {\n      if (default_models.includes(items[i][0])) {\n        temp_ap.push(items[i][0])\n      }\n    }\n    return [temp_ap,mydict]\n  }\n  //------------Handle Alphabatic sorting\n  if (type == 'Alphabetically') {\n    var temp=default_models.sort()\n    return [temp,[0]]\n  }\n}\n\n\nexport function features_with_score(dataset, models, state_range, selected_year, number_of_charts, rank_data) {\n  var temp1 = {}\n  var temp_final = {}\n  models.map(model => {\n    var temp2 = {}\n    var v = number_of_charts;\n    var top_nine = sorted_features(dataset, model, state_range, selected_year,rank_data)\n    if (top_nine.length < number_of_charts) { v = top_nine.length;; number_of_charts = top_nine.length } // This is because number of charts is calculated based on space but there are cases when we don't have that many features\n    for (var i = 0; i < number_of_charts; i++) {\n      temp2[top_nine[i]] = v;\n      v = v - 1\n    }\n    temp1[model] = temp2\n  });\n\n  for (var key in temp1) {\n    for (var key2 in temp1[key]) {\n      if (temp_final[key2] > 0) {\n\n        temp_final[key2] = temp_final[key2] + temp1[key][key2]\n      }\n      else {\n        temp_final[key2] = temp1[key][key2]\n      }\n    }\n  }\n  return temp_final;\n}\n\n\nexport function sorted_features(dataset, model, state_range, selected_year,rank_data) { // Uses feature rank to rank and return features name by removing the feature_rank string\n  if (!state_range.length > 0) { return [] }\n  state_range = state_range.map(element => element - 1)\n  var tempvoted_data_with_score = {},items,data,feautures;\n\n  if (model == \"ListNet\") { return [] }\n  var data2 = rank_data[model].filter(element => { if (parseInt(element['1-qid']) == parseInt(selected_year)) { return element } })\n  data = state_range.map(index => data2[index])\n  feautures = Object.keys(data[0])\n\n  data.map(item => {\n    feautures.forEach(feauture => {\n      if (tempvoted_data_with_score[feauture] >= 0 || tempvoted_data_with_score[feauture] < 0) {\n        tempvoted_data_with_score[feauture] = tempvoted_data_with_score[feauture] + (parseFloat(item[feauture]))\n      }\n      else { tempvoted_data_with_score[feauture] = parseFloat(item[feauture]) }\n    })\n  })\n  //-----------------------------------------------------------------\n  // Create items array\n  items = Object.keys(tempvoted_data_with_score).map(function (key) {\n    return [key, tempvoted_data_with_score[key]];\n  });\n  // Sort the array based on the second element\n  items.sort(function (first, second) {\n    return first[1] - second[1];\n  });\n  var items2 = items.map((element) => element[0].replace(\"_feature_rank\", \"\"))\n  items2 = items2.filter(item => item != \"1-qid\" && item!=\"model\")\n  return items2;\n  //-----------------------------------------------------------------\n}\n","\nimport * as d3 from 'd3';\nimport * as $ from 'jquery';\nexport function CreatexpChart(parent_id, selected_instances, sorted_features, lime_data, selected_year, defualt_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, clicked_features, Set_clicked_features) {\n  //var lime_data=lime_data.filter(item=>parseInt(item['1-qid'])==selected_year)\n  var margin = { item_top_margin: 15, right: 14, bottom: 0, left: 20, circ_radius: 5, item_left_margin: 25, item_right_margin: 3 }\n  var parent_width = $(\"#\" + parent_id).width() - margin.item_left_margin\n  var parent_height = $(\"#\" + parent_id).height() - margin.item_top_margin * 2\n  var item_width = parent_width / sorted_features.length - margin.item_right_margin\n  var item_height = parent_height\n  var parent_svg = d3.select(\"#\" + parent_id)\n  // Draw ++ --\n  parent_svg.selectAll(\".ylabels\").data([[.125, \"++\"], [.375, \"+\"], [.5, \"0\"], [.625, \"-\"], [.875, \"--\"]]).join('text').attr('class', 'ylabels').attr(\"y\", d => d[0] * item_height).attr(\"x\", margin.item_left_margin - 5).attr('text-anchor', 'end').attr('dominant-baseline', 'hanging').text(d => d[1]).attr(\"font-size\", 14).attr('fill', \"#636363\")\n  // Add title rectangle, title text and rectangles around each feature\n  var feature_g = parent_svg.selectAll('.feature_g').data(sorted_features, d => d[0]).join(\n    enter => enter.append('g').attr('class', 'feature_g').attr('transform', (d, svg_index) => \"translate(\" + (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)) + \",0)\").attr('x_transformation', (d, svg_index) => (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)))\n      .attr(\"id\", d => d[0].replace(/[^\\w\\s]/gi, ''))\n      .attr('add_title_rect', function (d) { d3.select(this).selectAll('.title_rect').data([0]).join('rect').attr('class', 'title_rect').attr('width', item_width + 2).attr('x', -1).attr('height', margin.item_top_margin).attr('fill', '#d1d1d1') })\n      .attr('add_title_text', function (d, svg_index) { d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr('class', 'title_text').text(d[0]).attr('y', 0).attr('dominant-baseline', 'hanging').attr(\"font-size\", 12).attr('x', 10).attr('text-anchor', 'start') })\n      .attr('add_item_rect', function (d, svg_index) { d3.select(this).selectAll('.item_rect').data([0]).join('rect').attr('class', 'item_rect').attr('width', item_width).attr('height', item_height).attr('y', margin.item_top_margin).attr('fill', clicked_features.includes(d[0]) ? \"#F8FDB8\" : '#f2f2f2').attr('fill-opacity', 1).attr('stroke', '#b2b0b0') })\n      .attr('svg_index', (d, svg_index) => svg_index)\n      .attr('add_contrib_lines', function (d, svg_index) {\n        d3.select(this).selectAll(\".mylines\").data([[.25], [.5], [.75]]).join('line').attr('class', 'mylines')\n          .attr('x1', 0).attr('x2', item_width)\n          .attr('y1', d => d * (item_height + margin.item_top_margin)).attr('y2', d => d * (item_height + margin.item_top_margin)).attr('stroke-width', 1).attr(\"stroke\", \"#bababa\")\n      })\n    , update => {\n      //parent_svg.selectAll('.feature_g').attr('opacity',0.5)\n      //update.attr('opacity',1)\n      return update.transition().duration(anim_config.feature_animation).delay(anim_config.rank_animation + anim_config.deviation_animation).attr('transform', (d, svg_index) => \"translate(\" + (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)) + \",0)\").attr('x_transformation', (d, svg_index) => (margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)))\n        .attr(\"id\", d => d[0].replace(/[^\\w\\s]/gi, ''))\n        .attr('svg_index', (d, svg_index) => svg_index)\n        .attr('add_title_rect', function (d) { d3.select(this).selectAll('.title_rect').data([0]).join('rect').attr('class', 'title_rect').attr('width', item_width + 2).attr('x', -1).attr('height', margin.item_top_margin).attr('fill', '#d1d1d1') })\n        .attr('add_title_text', function (d, svg_index) { d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr('class', 'title_text').text(d[0]).attr('y', 0).attr('dominant-baseline', 'hanging').attr(\"font-size\", 12).attr('x', 10).attr('text-anchor', 'start') })\n        .attr('add_item_rect', function (d, svg_index) { d3.select(this).selectAll('.item_rect').data([0]).join('rect').attr('class', 'item_rect').attr('width', item_width).attr('height', item_height).attr('y', margin.item_top_margin).attr('fill', clicked_features.includes(d[0]) ? \"#F8FDB8\" : '#f2f2f2').attr('fill-opacity', 1).attr('stroke', '#b2b0b0') })\n        //Add circles and lines to divide the rectangle\n        .attr('add_contrib_lines', function (d, svg_index) {\n          d3.select(this).selectAll(\".mylines\").data([[.25], [.5], [.75]]).join('line').attr('class', 'mylines')\n            .attr('x1', 0).attr('x2', item_width)\n            .attr('y1', d => d * (item_height + margin.item_top_margin)).attr('y2', d => d * (item_height + margin.item_top_margin)).attr('stroke-width', 1).attr(\"stroke\", \"#bababa\")\n        })\n    }\n    , exit => exit.remove())\n  //---------------------------------------------------------------------------------------------------------------------------------------------------\n  feature_g.attr('add_circle', function (d, i) {\n    var svg_index = parseInt(d3.select(this).attr('svg_index'))\n    d3.select(this).selectAll(\"circle\").remove()\n    var x_transformation = margin.item_left_margin + item_width * svg_index + (margin.item_right_margin * svg_index)\n    var feature_name = d[0]\n    var feature_contrib_name = d[0] + \"_contribution\"\n    defualt_models.map(model => {\n      var circ_data = []\n      lime_data[model].map(item => {\n        if (item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n          item['id'] = parent_id+item['State'].replace(/\\s/g, '') + model.replace(/\\s/g, '')\n          item[\"x_transformation\"] = x_transformation\n          circ_data.push(item)\n        }\n      })\n      // Draw circle starts here\n      var xScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[d[0]]))), d3.max(circ_data.map(item => parseFloat(item[d[0]])))])\n        .range([2 * margin.circ_radius, item_width - 2 * margin.circ_radius])\n      var yScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[feature_contrib_name]))), d3.max(circ_data.map(item => parseFloat(item[feature_contrib_name])))]).range([margin.item_top_margin + margin.circ_radius, item_height - margin.circ_radius])\n      var mycircles = d3.select(this).selectAll(\".my_circles\" + model).data(circ_data, d => d['id']).join(\n        enter => enter.append('circle')\n          .attr('id', d => d['id'])\n          .attr('class', 'circle2 my_circles' + model)\n          .attr('r', margin.circ_radius)\n          .attr('cy', d => margin.circ_radius / 2 + yScale(parseFloat(d[feature_contrib_name])))\n          .attr('cx', (d, i) => xScale(parseFloat(d[feature_name])))\n          .attr('fill', d => diverginColor(d['two_realRank']))\n          .attr('cx2', (d, i) => d['x_transformation'] + xScale(parseFloat(d[feature_name])))\n          .attr('two_realRank', d => d['two_realRank'])\n        // Update\n        , update => update.attr('class', 'circle2 my_circles' + model)\n          .transition().duration(anim_config.circle_animation).delay(anim_config.rank_animation + anim_config.deviation_animation + anim_config.feature_animation)\n          .attr('id', d => d['id'])\n          .attr('class', 'circle2 my_circles' + model)\n          .attr('r', margin.circ_radius)\n          .attr('cy', d => margin.circ_radius / 2 + yScale(parseFloat(d[feature_contrib_name])))\n          .attr('cx', (d, i) => xScale(parseFloat(d[feature_name])))\n          .attr('fill', d => diverginColor(d['two_realRank']))\n          .attr('cx2', (d, i) => d['x_transformation'] + xScale(parseFloat(d[feature_name])))\n          .attr('two_realRank', d => d['two_realRank'])\n        , exit => exit.remove())\n      mycircles.on('click', d => Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']]))\n      // Draw circle ends here\n    })\n  }).on('dblclick', function (d) {\n    d3.event.preventDefault()\n    //d3.select(this).select('.item_rect').attr('fill','#F8FDB8')\n    var temp = []\n    if (clicked_features.includes(d[0])) {\n      temp = clicked_features.filter(item => item != d[0])\n    }\n    else {\n      temp = [...clicked_features, d[0]]\n    }\n    Set_clicked_features(temp)\n  })\n}\n","import * as d3 from 'd3';\nexport function handle_transparency(class_name, clicked_circles, anim_config) {\n    if (clicked_circles.length != 0) { // If there are no clicked circles make all opacity 1\n        d3.selectAll(\".items\").attr('opacity', 0.6) // Groups\n        d3.selectAll(\".\" + \"circle2\").attr('opacity', 0.3) // Circles\n        clicked_circles.map(circle_id => {\n            d3.selectAll(\".\" + circle_id).attr('opacity', 1) // Groups\n            d3.selectAll(\"#\" + circle_id).attr('opacity', 1) // Circles\n        })\n    }\n    else {\n        d3.selectAll(\".items\").attr('opacity', 1); // Groups\n        d3.selectAll(\".\" + \"circle2\").attr('opacity', 1) // Circles \n    }\n}\nexport function draw_lines(clicked_circles, diverginColor, anim_config) {\n    d3.selectAll(\"#mylines\").remove()\n    clicked_circles.map(d => {\n        var lines = []\n        var two_realRank = 0\n        var parent_id = d3.select(\"#\" + d).attr('id').substring(0,3)\n        var points = []\n        d3.select(\"#\" + parent_id).selectAll(\"#\" + d).each(function (d) {\n            two_realRank = d3.select(this).attr('two_realRank')\n            points.push([d3.select(this).attr('cx2'), d3.select(this).attr('cy')])\n        })\n        lines.push([d, d3.line()(points), two_realRank])\n        d3.select(\"#\" + parent_id).selectAll('.' + d).raise().data(lines, d => d[0]).join('path').attr(\"stroke\", d => diverginColor(d[2])).attr(\"stroke-width\", 2)\n            .attr('id', 'mylines').attr('State', d => d[2]).attr('class', d).transition().duration(5000).attr('d', d => d[1]).attr(\"fill\", \"none\")\n    })\n}","import * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport { update } from 'lodash';\nimport * as misc_algo from './misc_algo'\nexport function Create_deviation_chart(parent_id,parent_exp_id, selected_instances, original_data, defualt_models, anim_config, selected_years, average, clicked_circles, Set_clicked_circles, diverginColor) {\n  var div = d3.select(\"body\").selectAll('.tooltip').data([0]).join(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n  var parent_width = $(\"#\" + parent_id).width() - 5\n  var data = original_data.filter(item => selected_years.includes(item['1-qid']) && selected_instances.includes(parseInt(item['two_realRank'])))\n  var temp_scale_data = []\n  data.map(item => { defualt_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n  var config = { fontSize: 12, font_dy: -6, font_line_gap: 4, line_stroke_width: 10, animation_duration: 0, container_height: 100, my_svg_top_margin: 10, myg_top_margin: 10, left_margin: 100 }\n  var y_distance = config.line_stroke_width + 2\n  var circle_radius = config.line_stroke_width / 2\n  var parent_g = d3.select(\"#\" + parent_id).attr('height', y_distance + data.length * y_distance)\n    .selectAll(\".parent_g\").data([0]).join('g').attr('class', 'parent_g').attr('transform', \"translate(\" + 0 + \",13)\")\n  var items_g = parent_g.selectAll(\".items\").data(data, d => d['State']).join(enter => enter.append(\"g\").attr(\"class\", \"items\")\n    .attr('transform', (d, i) => \"translate(\" + config.left_margin + \",\" + i * y_distance + \")\")\n    , update => update.transition().duration(anim_config.rank_animation).attr('transform', (d, i) => \"translate(\" + config.left_margin + \",\" + i * y_distance + \")\")\n    , exit => exit.remove()\n  )\n  items_g.attr(\"add_state\", function (d) {\n    d3.select(this).selectAll(\"text\").data([d]).join('text').text(d['State'] + \" \" + d['two_realRank']).attr('fill', d => diverginColor(d['two_realRank'])).attr(\"dominant-baseline\", \"hanging\").attr(\"font-size\", config.fontSize)\n      .attr(\"x\", 0).attr('text-anchor', 'end').attr(\"dy\", config.font_dy)\n  })\n    .attr(\"add_lines_and_circles\", function (d) {\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n      var line_data = []\n      defualt_models.map(model_name => {\n        data_for_all_years.map(item => {\n          var a = {}\n          a['two_realRank'] = parseInt(item['two_realRank'])\n          a['predicted_rank'] = parseInt(item[model_name])\n          a[\"model\"] = model_name\n          a['year'] = item['1-qid']\n          line_data.push(a)\n        })\n      })\n      // This is only for scaling starts here\n      var temp_scale_data = []\n      data.map(item => { defualt_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n      var temp_max = d3.max(temp_scale_data)\n      var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, parent_width - (config.left_margin + circle_radius)])\n      if (temp_max == 0) { var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, 0]) }\n      // This is only for scaling ends here\n      d3.select(this).selectAll(\"line\").data([d]).join(enter => enter.append('line')\n        .attr(\"x1\", config.font_line_gap).attr(\"y1\", (d, i) => y_distance * i).attr(\"y2\", (d, i) => y_distance * i).attr(\"stroke-width\", config.line_stroke_width).attr(\"stroke\", \"#cecece\").attr(\"x2\", (d2) => {\n          var temp = []\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n          return sclale1(d3.max(temp))\n        })\n        // Update\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"x2\", (d2) => {\n          var temp = []\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n          return sclale1(d3.max(temp))\n        }))\n      // ------------ Circles start here\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n      var circ_data = []\n      defualt_models.map(model_name => {\n        data_for_all_years.map(item => {\n          var a = {}\n          a['two_realRank'] = parseInt(item['two_realRank'])\n          a['predicted_rank'] = parseInt(item[model_name])\n          a[\"model\"] = model_name\n          a['year'] = item['1-qid']\n          a['id'] =parent_exp_id+item['State'].replace(/\\s/g, '') + model_name.replace(/\\s/g, '')\n          circ_data.push(a)\n        })\n      })\n      if (average) {\n        var avg = d3.mean(circ_data.map(item => item['predicted_rank']))\n        circ_data = circ_data.map(item => {\n          item['predicted_rank'] = avg\n          item['model'] = \"Average\"\n          item['year'] = \"Average\"\n          return item;\n        })\n      }\n      var my_circs = d3.select(this).selectAll(\"circle\").data(circ_data, d => d['id']).join(\n        enter => enter.append(\"circle\").attr('id', d => d['id']).attr('class', 'circle2').attr(\"cx\", (d2, i) => {\n          d3.select(this).classed(d2['id'], true)\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n        })\n        // Update\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"cx\", (d2, i) => {\n          d3.select(this).classed(d2['id'], true)\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n        })\n      )\n      my_circs.attr(\"r\", circle_radius).attr('fill', d => diverginColor(d['two_realRank'])).attr(\"parent_id\", parent_exp_id)\n        .on('click', d => Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']]))\n        .on(\"mouseover\", function (d2) {\n          div.transition().duration(200).style(\"opacity\", .9);\n          div.html(\"Year : \" + d2[\"year\"] + \"<br></br>\" + \"Model: \" + d2[\"model\"] + \"<br></br>\" + \"Deviation: \" + Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])).style(\"left\", (d3.event.pageX - 140) + \"px\").style(\"top\", (d3.event.pageY - 98) + \"px\");\n        }).on(\"mouseout\", function (d2) {\n          //d3.select(this).classed(d2['id'],true)\n          div.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n        })\n\n    })\n\n}","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n   // var diverginColor = d3.scaleLinear().domain([this.props.state_range[0], this.props.state_range[1]]).range(['#93003a','#00429d'])\n      var min=this.props.state_range[0],max=this.props.state_range[1];\n      var d = (max - min) / 8;\n      var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.state_range, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, 18)\n    \n    deviation_chart.Create_deviation_chart('dev_plot_container','exp',selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_years, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles,diverginColor)\n    explanation_chart.CreatexpChart(\"exp\",selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles,diverginColor,this.props.anim_config,this.props.clicked_features,this.props.Set_clicked_features)\n    misc_algo.draw_lines(this.props.clicked_circles,diverginColor,this.props.anim_config,sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles,this.props.anim_config)\n  }\n  render() {\n    return (\n      <Grid container className=\"slope_chart_exp\" style={{ backgroundColor:'white',padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"99%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <svg id=\"dev_plot_container\" style={{ width: \"100%\", height: \"50%\", marginBottom: 10 }}></svg>\n        <svg id=\"exp\" style={{ width: \"100%\", height: \"50%\" }}></svg>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n    selected_year: state.selected_year,\n    selected_years: state.selected_years,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    sort_by: state.sort_by,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features:state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Range1\n    var min = d3.min([this.props.range_mode_range1[0],this.props.range_mode_range2[0]]), max = d3.max([this.props.range_mode_range1[1],this.props.range_mode_range2[1]]);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    \n    var selected_instances = d3.range(this.props.range_mode_range1[0], this.props.range_mode_range1[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.range_mode_range1, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('r1d','r1e', selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_years, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('r1e', selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n\n    // Range2\n    var selected_instances2 = d3.range(this.props.range_mode_range2[0], this.props.range_mode_range2[1] + 1)\n    var features_with_score2 = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.range_mode_range2, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features2 = Object.entries(features_with_score2).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('r2d','r2e', selected_instances2, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_years, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('r2e', selected_instances2, sorted_features2, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    //---------------------------------\n    misc_algo.draw_lines(this.props.clicked_circles, diverginColor, this.props.anim_config, sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    return (\n      <Grid container direction=\"row\" justifyContent=\"space-between\" className=\"slope_chart_exp\" style={{ backgroundColor: 'white', padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"100%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ paddingRight: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 1</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"r1d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"r1e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ marginLeft: \"1%\", padding: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 2</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"r2d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"r2e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    selected_year: state.selected_year,\n    selected_years: state.selected_years,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    sort_by: state.sort_by,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Range1\n    var min = this.props.time_mode_range[0], max = this.props.time_mode_range[1];\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    \n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.time_mode_range, this.props.time_mode_year1, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('y1d','y1e', selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.time_mode_year1, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('y1e', selected_instances, sorted_features, this.props.lime_data, this.props.time_mode_year1, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n\n    // Range2\n    var selected_instances2 = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var features_with_score2 = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.time_mode_range, this.props.time_mode_year2, number_of_charts, this.props.rank_data)\n    var sorted_features2 = Object.entries(features_with_score2).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('y2d','y2e', selected_instances2, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.time_mode_year2, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('y2e', selected_instances2, sorted_features2, this.props.lime_data, this.props.time_mode_year2, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    //---------------------------------\n    misc_algo.draw_lines(this.props.clicked_circles, diverginColor, this.props.anim_config, sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    return (\n      <Grid container direction=\"row\" justifyContent=\"space-between\" className=\"slope_chart_exp\" style={{ backgroundColor: 'white', padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"100%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ paddingRight: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>{\"Year : \"+this.props.time_mode_year1}</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"y1d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"y1e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ marginLeft: \"1%\", padding: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>{\"Year : \"+this.props.time_mode_year2}</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"y2d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"y2e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    time_mode_model: state.time_mode_model,\n    time_mode_range: state.time_mode_range,\n    deviate_by: state.deviate_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    sort_by: state.sort_by,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Fade from '@material-ui/core/Fade';\nimport { connect } from \"react-redux\";\nimport * as algo1 from \"../../Algorithms/algo1\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nfunction FadeMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  //------------For list and chckbox\n  const [checked, setChecked] = React.useState([0]);\n  const [selected_states, setSelected_states] = React.useState([]);\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  //----------------\n  const show_checkboxChanged = (event) => {\n    var myfunc = props.appHandleChange\n    myfunc(event.target.value, \"show_checkboxChanged\")\n  }\n  const checkboxChanged = (event) => {\n    var temp_Models;\n    if (props.defualt_models.includes(event.target.value)) {\n      temp_Models = props.defualt_models.filter(item => {\n        if (item != event.target.value)\n          return item\n      })\n      temp_Models = algo1.sort(props.sort_by, props.state_range, temp_Models, props.selected_year, props.grouped_by_year_data)[0];\n      props.Set_defualt_models(temp_Models)\n      props.Set_pop_over_models(temp_Models)\n    }\n    else {\n      temp_Models = props.defualt_models\n      temp_Models.push(event.target.value)\n      temp_Models = algo1.sort(props.sort_by, props.state_range, temp_Models, props.selected_year, props.grouped_by_year_data)[0];\n      props.Set_defualt_models(temp_Models)\n      props.Set_pop_over_models(temp_Models)\n    }\n    var myfunc = props.appHandleChange\n    myfunc(event.target.value, \"clicked_model\")\n  }\n  return (\n    <div style={{ borderRight: \"1px dashed #eaeaea\" }}>\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Select Model\n        <ArrowDropDownIcon></ArrowDropDownIcon>\n      </Button>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Fade}\n      >\n        <div className=\"CheckboxContainer\">\n          <List>\n            {[ \"MART\",\"RandomFor\",\"LinearReg\",\"CordAscent\", \"LambdaMART\", \"LambdaRank\",\"RankBoost\", \"RankNet\"].map((value) => {\n              const labelId = `checkbox-list-label-${value}`;\n              return (\n                <ListItem key={value} role={undefined} onClick={handleToggle(value)}>\n                  <Checkbox\n                    checked={props.defualt_models.includes(value)}\n                    edge=\"start\"\n                    tabIndex={-1}\n                    value={value}\n                    onChange={(event, value) => {\n                      checkboxChanged(event, value)\n                    }\n                    }\n                  />\n                  <p className=\"list_item_label\" id={labelId}>{value}</p>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      </Menu>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    defualt_models: state.defualt_models,\n    sort_by: state.sort_by,\n    state_range: state.state_range,\n    selected_year: state.selected_year,\n    grouped_by_year_data: state.grouped_by_year_data,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);\n//https://material-ui.com/components/menus/\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Menu from '@material-ui/core/Menu';\nimport Fade from '@material-ui/core/Fade';\nimport * as algo1 from \"../../Algorithms/algo1\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nfunction Sort(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [sort_by, set_sort_by] = React.useState(props.sort_by);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const handleradioChange = (event) => {\n        set_sort_by(event.target.value)\n        if(event.target.value==\"None\"){var val=\"Alphabetically\"}\n        else{var val=event.target.value}\n        props.Set_sort_by(val)\n        var temp_Models = algo1.sort(val, props.state_range, props.defualt_models, props.selected_year,props.grouped_by_year_data)[0];\n        var default_model_scores = algo1.sort(val, props.state_range, props.defualt_models, props.selected_year,props.grouped_by_year_data)[1];\n        props.Set_default_model_scores(default_model_scores)\n        props.Set_defualt_models(temp_Models)\n      };\n    return (\n        <div className=\"sort\" style={{borderRight:\"1px dashed #eaeaea\"}}>\n            <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Metrics <ArrowDropDownIcon></ArrowDropDownIcon></Button>\n            <Menu\n                id=\"fade-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\"></FormLabel>\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={sort_by} onChange={handleradioChange}>\n                    {['Discounted Cumulative Gain', 'Average Precision', 'None'].map((value) => {\n                        return <FormControlLabel value={value} control={<Radio />} label={value} />\n                    })}\n                </RadioGroup>\n            </FormControl>\n            </Menu>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        defualt_models: state.defualt_models,\n        sort_by:state.sort_by,\n        state_range: state.state_range,\n        selected_year: state.selected_year,\n        grouped_by_year_data:state.grouped_by_year_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_sort_by: (val) => dispatch({ type: \"sort_by\", value: val }),\n        Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Sort);\n//https://material-ui.com/components/menus/\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./TopBar.scss\";\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport * as d3 from 'd3';\nimport DefaultModels from './DefaultModels'\nimport Sort from './Sort'\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport * as algo1 from \"../../Algorithms/algo1\"\nconst useStyles = makeStyles((theme) => ({\n  MuiAutocompleteroot: {\n    marginTop: 0,\n  },\n  root: {\n    width: '100%',\n  },\n  listroot: {\n    width: '100%',\n    maxWidth: 360,\n  },\n  paper: {\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\nfunction TopBar(props) {\n  const classes = useStyles();\n  const handleyearChange = (event, value, reason) => {\n    if (reason == 'select-option') {\n      props.Set_selected_year(value)\n      var myfunc = props.appHandleChange\n      myfunc(value, \"year_changed\")\n    }\n  };\n  var handle_year_click = (year) => {\n    if(year==\"All\"){props.Set_selected_years([...props.years_for_dropdown])}\n    else{\n      if (props.selected_years.includes(year)) {\n        props.Set_selected_years(props.selected_years.filter(item=>item!=year))\n      }\n      else {\n        props.Set_selected_years([...props.selected_years,year])\n      }  \n    }\n  }\n  var handle_model_click=(model)=>{\n    if(model==\"All\"){props.Set_defualt_models([...props.all_models])}\n    else if(model==\"Average\"){props.Set_average_m(!props.average_m)}\n    else{\n      if (props.defualt_models.includes(model)) {\n        props.Set_defualt_models(props.defualt_models.filter(item=>item!=model))\n      }\n      else {\n        props.Set_defualt_models([...props.defualt_models,model])\n      }  \n    }\n  }\n  return (\n    <div>\n    <div><h5 style={{ display: \"inline-block\", marginLeft: 30 }}>Years:</h5>{props.years_for_dropdown.map(item => <p className={props.selected_years.includes(item) ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_year_click(item)}>{item}</p>)}</div>\n    <div><h5 style={{ display: \"inline-block\", marginLeft: 30 }}>Models:</h5>{props.all_models.map(item => <p className={props.defualt_models.includes(item) ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}<p className=\"years_p\" style={{ display: \"inline-block\"}} onClick={() => handle_model_click(\"All\")}>All</p> <p className={props.average_m ? \"years_p_selected years_p\" : \"years_p\"} style={{ display: \"inline-block\"}} onClick={() => handle_model_click(\"Average\")}>Average</p></div>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    all_models:state.all_models,\n    selected_years: state.selected_years,\n    tracking: state.tracking,\n    selected_year: state.selected_year,\n    years_for_dropdown: state.years_for_dropdown,\n    defualt_models: state.defualt_models,\n    mode: state.mode,\n    prev_prop: state.prev_prop,\n    state_range: state.state_range,\n    replay: state.replay,\n    grouped_by_year_data: state.grouped_by_year_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    time_mode_range: state.time_mode_range,\n    mode: state.mode, // Model mode model\n    sort_by: state.sort_by,\n    average_m:state.average_m\n\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    add: (val) => dispatch({ type: \"add\", value: val }),\n    Set_selected_years: (val) => dispatch({ type: \"selected_years\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    set_tracking: (val) => dispatch({ type: \"tracking\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    Set_average_m: (val) => dispatch({ type: \"average_m\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(TopBar);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import * as d3 from 'd3';\nimport * as $ from \"jquery\"\nexport default function CreateChart(feature, data, node, feature_height, selected_year, handleHistogramselection, feature_data) {\n  var feature_width = $(\".Sidebar_parent\").width()\n  var svg = d3.select(node),\n    margin = { top: 30, right: 15, bottom: 20, left: 7 },\n    width = feature_width - margin.left - margin.right,\n    height = feature_height - margin.top - margin.bottom;\n  if (isNaN(data[0].y)) {\n    //-----------------------------------------------------------(handle the categorical features here)\n    var occur = {}\n    data.map(item => {\n      if (item.y in occur) {\n        occur[item.y] = occur[item.y] + 1\n      }\n      else {\n        occur[item.y] = 1\n      }\n    })\n    // Create items array\n    var items = Object.keys(occur).map(function (key) {\n      return [key, occur[key]];\n    });\n\n    // Sort the array based on the second element\n    items.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    //-----\n    var y = items.map(element => element[0]);\n    var x = items.map(element => element[1]);\n    var sum_x = d3.sum(x)\n    var cScale = d3.scaleSequential()\n      .interpolator(d3.interpolate(\"#999999b3\", \"#999999b3\"))\n      .domain([0, x.length]);\n    svg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", 15).attr(\"x\", width / 2).attr(\"text-anchor\", \"middle\").text(feature);\n    var g = svg.selectAll(\".g1\").data([0]).join(\"g\").attr(\"class\", \"g1\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    var svg1 = g.selectAll(\".svg1\").data([0]).join('svg').attr(\"class\", \"svg1\").attr('width', width).attr('height', height)\n    svg1.selectAll('rect').data(x).join(\"rect\")\n      .style('fill', (d, i) => cScale(i)).attr(\"height\", height)\n      .attr('width', (d, i) => {\n        return (((d / sum_x) * width) - .2)\n      })\n      .attr(\"x\", (d, i) => {\n        var temp_sum = d3.sum(x.slice(0, i))\n        return ((temp_sum / sum_x) * width)\n      })\n      .attr(\"id\", (d, i) => y[i])\n      .on(\"click\", (d, i) => {\n        d3.select(\"#\" + y[i]).classed(\"cat_item_clicked\", () => {\n          if (d3.select(\"#\" + y[i]).classed(\"cat_item_clicked\")) {\n\n            return false\n          }\n          else {\n            var statelist = cat_states(feature_data, selected_year, y[i])\n            handleHistogramselection(statelist, \"histogram_data\")\n            return true\n          }\n        })\n\n      }\n      )\n    //---\n    svg1.selectAll(\"text\").data(y, d => d).join(\"text\")\n      .text((d, i) => {\n        if (((x[i] / sum_x) * width) > 12) { return d }\n        else { return \"\" }\n      })\n      .attr(\"x\", (d, i) => {\n        var temp_sum = d3.sum(x.slice(0, i))\n        return ((temp_sum / sum_x) * width) + 8\n      })\n      .attr(\"y\", height / 2)\n      .style(\"font-size\", 9)\n      .style(\"writing-mode\", \"tb\")\n      .style(\"text-anchor\", \"middle\")\n    //-----------------------------------------------------------Barchart ends here\n  }\n  else {\n    //----------------------------------------------------------- Handle the Numeric features here)\n    svg.selectAll(\".hist_title\").data([feature], d => d).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", 15).attr(\"x\", width / 2).attr(\"text-anchor\", \"middle\").text(feature.replace(/_/g, ' '));\n\n    var temp_x = data.map(item => parseFloat(item['y'])),\n      x = d3.scaleLinear().domain([d3.min(temp_x), d3.max(temp_x)]).range([0, width]).nice(),\n      tick_values = x.ticks(4),\n      hist_height = height,\n      histogram = d3.histogram()\n        .value(d => d)   // I need to give the vector of value\n        .domain(x.domain())  // then the domain of the graphic\n        .thresholds(4); // then the numbers of bins\n    var bins = histogram(temp_x),\n      y_hist = d3.scaleLinear()\n        .range([hist_height, 0]);\n    y_hist.domain([0, d3.max(bins, function (d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\n    var svg0 = svg.selectAll('.svg0').data([0]).join('svg').attr(\"class\", \"svg0\").selectAll(\".myg0\").data([0]).join('g').attr(\"class\", \"myg0\").attr(\"transform\",\n      \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n    svg0.selectAll(\"rect\").data(bins).join('rect')\n      .attr(\"x\", 1)\n      .attr(\"fill\", \"#999999b3\")\n      .attr(\"transform\", function (d) {\n        if(d.x0==d.x1){return \"translate(\" + 0 + \",\" + y_hist(d.length) + \")\"}\n        return \"translate(\" + x(d.x0) + \",\" + y_hist(d.length) + \")\";\n      })\n      .attr(\"width\", function (d) { \n        if(d.x0==d.x1){return width}\n        return x(d.x1) - x(d.x0) - 0.2; })\n      .attr(\"height\", function (d) { return hist_height - y_hist(d.length); });\n    //-------Add text of bars\n    \n    svg0.selectAll(\".mylabel\").data(bins).join('text').attr(\"class\",\"mylabel\")\n      .attr(\"x\", d=>x(d.x0)+((x(d.x1)-x(d.x0))/3))\n      .text(d=>d.length)\n      .attr('y',d=> y_hist(d.length)-2)\n      .attr('font-size',10)\n  \n    //------------- Add X axis\n    if(d3.max(tick_values)>1000){\n      svg0.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n      .attr(\"transform\", \"translate(0,\" + hist_height + \")\")\n      .call(d3.axisBottom(x).tickValues(tick_values).tickFormat(d3.format(\".2s\")))\n    }\n    else{\n      svg0.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n      .attr(\"transform\", \"translate(0,\" + hist_height + \")\")\n      .call(d3.axisBottom(x).tickValues(tick_values))\n    }\n\n    svg0.selectAll(\".tick line,.domain\").attr(\"stroke\", \"#adadad\")\n\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here    \n    //---drag starts here\n    var selectionRect = {\n      element: null,\n      previousElement: null,\n      currentY: 0,\n      currentX: 0,\n      originX: 0,\n      originY: 0,\n      setElement: function (ele) {\n        this.previousElement = this.element;\n        this.element = ele;\n      },\n      getNewAttributes: function () {\n        var x = this.currentX < this.originX ? this.currentX : this.originX;\n        var y = this.currentY < this.originY ? this.currentY : this.originY;\n        var width = Math.abs(this.currentX - this.originX);\n        var height = Math.abs(this.currentY - this.originY);\n        return { x: x, y: y, width: width, height: height }; // returning the javascript object\n      },\n      getCurrentAttributes: function () {\n        // use plus sign to convert string into number\n        var x = +this.element.attr(\"x\");\n        var y = +this.element.attr(\"y\");\n        var width = +this.element.attr(\"width\");\n        var height = +this.element.attr(\"height\");\n        return { x1: x, y1: y, x2: x + width, y2: y + height }; // returning the javascript object\n      },\n      getCurrentAttributesAsText: function () {\n        var attrs = this.getCurrentAttributes();\n        return \"x1: \" + attrs.x1 + \" x2: \" + attrs.x2 + \" y1: \" + attrs.y1 + \" y2: \" + attrs.y2;\n      },\n      init: function (newX, newY) {\n        var rectElement = svg.append(\"rect\")\n          .attr('rx', 1).attr('ry', 1).attr(\"x\", 0).attr(\"y\", 0)\n          .attr('width', 0).attr('height', 0).classed(\"selection\", true);\n        this.setElement(rectElement);\n        this.originX = newX;\n        this.originY = newY;\n        this.update(newX, newY);\n      },\n      update: function (newX, newY) {\n        this.currentX = newX;\n        this.currentY = newY;\n        var NewAttr = this.getNewAttributes()\n        this.element.attr(\"x\", NewAttr.x).attr(\"y\", NewAttr.y)\n          .attr('width', NewAttr.width).attr('height', NewAttr.height)\n      },\n      focus: function () {\n        this.element\n          .style(\"stroke\", \"\")\n          .style(\"stroke-width\", \"1\");\n      },\n      remove: function () {\n        this.element.remove();\n        this.element = null;\n      },\n      removePrevious: function () {\n        if (this.previousElement) {\n          this.previousElement.remove();\n        }\n      }\n    };\n\n    //-----------------\n    function dragStart() {\n      var p = d3.mouse(this);\n      selectionRect.init(p[0], p[1]);\n      selectionRect.removePrevious();\n    }\n    function dragMove() {\n      var p = d3.mouse(this);\n      selectionRect.update(p[0], p[1]);\n    }\n    function dragEnd() {\n      var finalAttributes = selectionRect.getCurrentAttributes();\n      if (finalAttributes.x1 != finalAttributes.x2) {\n        var myx1 = finalAttributes.x1 - margin.left\n        var myx2 = finalAttributes.x2 - margin.left\n        var temp_range = [x.invert(myx1).toFixed(4), x.invert(myx2).toFixed(4)]\n        var statelist = states(feature_data, temp_range, selected_year, feature)\n        handleHistogramselection(statelist, \"histogram_data\")\n      }\n      if (finalAttributes.x2 - finalAttributes.x1 > 1 && finalAttributes.y2 - finalAttributes.y1 > 1) {\n        // range selected\n        d3.event.sourceEvent.preventDefault();\n        selectionRect.focus();\n      } else {\n        selectionRect.remove();\n      }\n    }\n    var dragBehavior = d3.drag()\n      .on(\"start\", dragStart)\n      .on(\"drag\", dragMove)\n      .on(\"end\", dragEnd);\n    svg.call(dragBehavior);\n    //---drag ends here\n  }\n  function states(original_data,range,year,feature){\n    var temp=[]\n    original_data.forEach(element => {\n      if(element[\"1-qid\"]==year && parseFloat(element[feature])>=range[0] && parseFloat(element[feature])<=range[1]){\n       temp.push(parseInt(element['two_realRank']))\n      }\n    });\n    return temp;\n  }\n  function cat_states(original_data,year,country){\n    var temp=[]\n    original_data.forEach(element => {\n      if(element[\"1-qid\"]==year && element[\"country\"]==country){\n       temp.push(parseInt(element['two_realRank']))\n      }\n    });\n    return temp;\n  }\n  //----------------------------------------------------------- Histogram creation ends here\n}\n\n//https://www.youtube.com/watch?v=N9nHQzboCUI","import React, { Component, PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport './Histogram.css';\nimport * as algo1 from \"../../Algorithms/algo1\";\nimport CreateChart from \"./Histogram\"\nimport exp_fiscal_CordAscent from \"../../Data/data/fiscal/lime/chart1_data.csv\";\nimport exp_school_CordAscent from \"../../Data/data/school/lime/chart1_data.csv\";\nimport exp_house_CordAscent from \"../../Data/data/house/lime/chart1_data.csv\";\nimport { connect } from 'react-redux'\nimport { Button } from '@material-ui/core';\nimport * as $ from \"jquery\"\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = { feaures_dict: {}, features_voted: null, feature_data: null, selected_states: [] } // This is the default height\n  }\n  componentDidMount() {\n    var self = this\n    var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent } else if (this.props.dataset == \"house\") { filename = exp_house_CordAscent }\n    d3.csv(filename).then(function (feature_data) {\n      self.setState({ feature_data: feature_data })\n    })\n  }\n  shouldComponentUpdate() {\n    return true;\n  }\n  componentDidUpdate() {\n    var self = this\n    var legend_data = this.makeArr(this.props.state_range);\n    //------\n    var height_between = 20\n    var feature_height = 260\n    var number_of_elements = (this.props.state_range[1] - this.props.state_range[0]) + (2 * this.props.deviate_by);\n    if (number_of_elements * height_between < 700) { height_between = 700 / number_of_elements }\n    var exp_chart_height = (number_of_elements * height_between);\n    var number_of_charts = Math.floor(exp_chart_height / feature_height) * 3\n    if(number_of_charts<9){number_of_charts=9}\n    //------\n    var features_dict = algo1.features_with_score(this.props.dataset, this.props.defualt_models, legend_data, this.props.selected_year,number_of_charts,this.props.rank_data)\n    var items = Object.keys(features_dict).map(function (key) {\n      return [key, features_dict[key]];\n    });\n    items.sort(function (first, second) { // Sort the array based on the second element\n      return second[1] - first[1];\n    });\n    items = items.map((element) => element[0])\n    //--------\n    var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent }\n    //--------------------------------Iterate through each features\n    if (this.state.feature_data != null) {\n      var feature_width=$(\".Sidebar_parent\").width()\n      var feature_height = 150; // Feature height for individual feature\n //--------------------------------------------- Iterate trough eact item and create histograms\n    items.forEach((feature, feature_index) => {\n        var feature_id = \"feature\"+feature.replace(/[^\\w\\s]/gi, '')\n        var temp = []\n        this.state.feature_data.forEach(element => {\n          if (element[\"1-qid\"] == self.props.selected_year) {\n            var temp_dict = {}\n            temp_dict[\"x\"] = parseInt(element['two_realRank'])\n            temp_dict[\"y\"] = element[feature]\n            temp.push(temp_dict)\n          }\n        });\n        d3.select(\"#histogram_container\").attr(\"height\", items.length * feature_height).selectAll(\"#\" + feature_id).data([feature_id], d => d).join(\"svg\").attr(\"id\", feature_id).attr(\"width\", feature_width)\n          .attr(\"x\", d => {\n            //--------------------------------------------- Create chart is imported from the Histogram.js and this is the function that creates all the histograms\n            CreateChart(feature, temp, \"#\" + feature_id, feature_height, self.props.selected_year, self.handleHistogramselection, self.state.feature_data)\n            return 0;\n          })\n          .attr(\"y\", (d, i) => feature_height * feature_index)\n      })\n    }\n  }\n  handleHistogramselection = (data, type) => {\n    \n    var temp = this.state.selected_states\n    data.forEach(element => {\n      if (!temp.includes(element)) { temp.push(element) }\n    });\n    this.setState({ selected_states: temp })\n  }\n  update_histogram_data = () => {\n    d3.selectAll(\".cat_item_clicked\").classed(\"cat_item_clicked\",false)\n    d3.selectAll(\".selection\").remove()\n    if(this.state.selected_states.length<1){alert(\"Empty selection!\");return}\n    var myfunc = this.props.appHandleChange\n    var filtered_states = this.state.selected_states.filter((item) => {\n      if (item >= this.props.state_range[0] && item <= this.props.state_range[1]) {\n        return item\n      }\n    })\n    if(filtered_states.length<1){alert(\"Empty Selection\")}\n    if (this.props.slider_and_feature_value[\"Feature\"] == 1 && this.props.slider_and_feature_value[\"Rank range\"] == 1) { // If rank range is selected then filter states within the range\n      this.props.Set_histogram_data(filtered_states)\n      myfunc(filtered_states, \"histogram_data\")\n    }\n    else {\n      this.props.Set_histogram_data(this.state.selected_states) // else set states as selected\n      myfunc(this.state.selected_states, \"histogram_data\")\n    }\n    this.setState({ selected_states: [] })\n  }\n  //-----------------------------------------------------------------\n  render() {\n    return (\n      <div>\n        <Button className=\"update\" style={{marginLeft:0,padding:0,width:197}} onClick={() => {\n          var self=this\n              if(!this.props.slider_and_feature_value[\"Rank range\"]){\n                if(d3.min(this.state.selected_states)<this.props.state_range[0]){\n                  this.props.Set_state_range([d3.min(this.state.selected_states),this.props.state_range[1]])\n                }\n                if(d3.max(this.state.selected_states)>this.props.state_range[1]){\n                  this.props.Set_state_range([this.props.state_range[0],d3.max(this.state.selected_states)])\n                }\n              }\n              setTimeout(function(){ self.update_histogram_data(); }, 500);\n          }}\n          >Update</Button>\n        <div className=\"hitograms_container\">\n        <svg id=\"histogram_container\" style={{ width: this.props.width }}></svg>\n        </div>\n      </div>\n    );\n  }\n  makeArr = (state_range) => {\n    var startValue = state_range[0];\n    var stopValue = state_range[1];\n    var arr = [];\n    for (var i = startValue; i <= stopValue; i++) {\n      arr.push(i);\n    }\n    return arr;\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n    defualt_models: state.defualt_models,\n    dataset: state.dataset,\n    selected_year: state.selected_year,\n    slider_and_feature_value: state.slider_and_feature_value,\n    deviate_by:state.deviate_by,\n    rank_data:state.rank_data\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\nimport { connect } from 'react-redux'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nfunction Tracking(props) {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"baseline\"\n    >\n      <FormControlLabel\n        labelPlacement=\"start\"\n        control={\n          <Checkbox\n            checked={props.tracking}\n            onChange={(event) => props.set_tracking(event.target.checked)}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Tracking\"\n      />\n    </Grid>\n  );\n}\n\nconst maptstateToprop = (state) => {\n  return {\n    tracking: state.tracking,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    set_tracking: (val) => dispatch({ type: \"tracking\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Tracking);\n//https://material-ui.com/components/menus/\n","import React from 'react';\nimport \"./Sidebar.scss\";\nimport * as $ from 'jquery';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport Histograms from \"./Histograms\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport Tracking from \"./Tracking\"\nimport * as algo1 from \"../../Algorithms/algo1\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.state_range);\n    const [range_mode_slider_value1, set_range_mode_slider_value1] = React.useState(props.range_mode_range1);\n    const [range_mode_slider_value2, set_range_mode_slider_value2] = React.useState(props.range_mode_range2);\n    const [time_mode_slider_value, set_time_mode_slider_value] = React.useState(props.time_mode_range);\n    const [dummy, set_dummy] = React.useState(0);\n\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div style={{ borderTop: \"1px solid #eaeaea\" }}>\n            <p className=\"title_show\" style={{ marginBottom: 8 }}>Compare:</p>\n            <Autocomplete className=\"autocomplete_mode\" style={{ border: \"1px solid grey\", borderRadius: 0, paddingTop: 0, paddingBottom: 0, marginLeft: 5, marginRight: 30, width: $('.Sidebar').width() - 10 }}\n                defaultValue={\"Models\"}\n                id=\"debug\"\n                debug\n                options={[\"Models\", \"Ranges\", \"Time\"]}\n                renderInput={(params) => (\n                    <TextField {...params} label=\"\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                )}\n                onChange={(event, val) => {\n                    var value = val.replace('s', \"\")\n                    props.Set_mode(value)\n                    props.Set_clicked_items_in_slopechart([])\n                }\n                }\n            />\n            {props.mode == \"Model\" ? <div style={{ marginTop: 10, paddingLeft: 5, width: $('.Sidebar').width() }}>\n                <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                <div key={props.slider_and_feature_value} className=\"slider_feature_container\">\n                    <List className={classes.listroot}>\n                        {['Rank range', 'Feature'].map((value) => {\n                            const labelId = `checkbox-list-label-${value}`;\n                            return (\n                                <div className=\"listItem\"><ListItem key={value} role={undefined} >\n                                    <Checkbox\n                                        checked={props.slider_and_feature_value[value]}\n                                        edge=\"start\"\n                                        tabIndex={-1}\n                                        value={value}\n                                        onChange={(event) => {\n                                            var temp_val = props.slider_and_feature_value\n                                            if (props.slider_and_feature_value[event.target.value]) { temp_val[event.target.value] = 0 }\n                                            else { temp_val[event.target.value] = 1 }\n                                            set_dummy(JSON.stringify(temp_val)) // This is to change the state so that the component is updated\n                                            //console.log(\"dummy\",dummy)\n                                            props.Set_slider_and_feature_value(temp_val)\n                                        }}\n                                    />\n                                    <p className=\"list_item_label\" id={labelId}>{value}</p>\n                                </ListItem>\n                                </div>\n                            );\n                        })}\n                    </List>\n                </div>\n                {props.slider_and_feature_value[\"Rank range\"] == 1 ?\n                    <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                        <Slider\n                            value={sliderRange}\n                            onChange={(event, newValue) => set_sliderRange(newValue)}\n                            onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                            valueLabelDisplay=\"auto\"\n                            aria-labelledby=\"range-slider\"\n                            valueLabelDisplay=\"on\"\n                            min={1}\n                            max={props.slider_max}\n                            marks={marks}\n                        />\n                        <Grid style={{ marginBottom: 15 }} container\n                            direction=\"row\"\n                            justify=\"space-around\"\n                            alignItems=\"center\">\n                            <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: 40 }}\n                                onChange={event => {\n                                    if (isNaN(parseInt(event.target.value))) {\n                                        set_sliderRange([\"\", sliderRange[1]])\n                                    } else {\n                                        if (event.target.value > sliderRange[1]) {\n                                            alert(\"Lower range can not be larger than the upper range\")\n                                        }\n                                        else {\n                                            set_sliderRange([event.target.value, sliderRange[1]])\n                                        }\n                                    }\n                                }\n                                }\n                            />\n                            <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: 40 }}\n                                onChange={event => {\n                                    if (isNaN(parseInt(event.target.value))) {\n                                        set_sliderRange([sliderRange[0], \"\"])\n                                    } else {\n                                        if (parseInt(event.target.value) > props.slider_max) {\n                                            alert(\"Upper range can not exceed maximum\")\n                                            set_sliderRange([sliderRange[0], props.slider_max])\n                                        }\n                                        else {\n                                            set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                                        }\n                                    }\n                                }\n                                }\n                            />\n                        </Grid>\n                        <Tracking></Tracking>\n                        <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                            onClick={() =>{\n                                props.Set_state_range(sliderRange)\n                                var temp_Models = algo1.sort(props.sort_by, sliderRange, props.defualt_models,props.selected_year, props.grouped_by_year_data)[0];\n                                var default_model_scores = algo1.sort(props.sort_by, sliderRange, props.defualt_models,props.selected_year, props.grouped_by_year_data)[1];\n                                props.Set_default_model_scores(default_model_scores)\n                                props.Set_defualt_models([...temp_Models])\n                                \n                            }}\n                        >Update range</Button>\n                    </div> : null}\n                {props.slider_and_feature_value[\"Feature\"] == 1 ?\n                    <div>\n                        <div>\n                            <Histograms\n                                year={props.selected_year.toString()} state_range={props.state_range}\n                                Sidebar_width={$('.Sidebar').width()} appHandleChange={props.appHandleChange}>\n                            </Histograms>\n                        </div>\n                    </div> : null\n                }\n            </div> : null}\n            {props.mode == \"Range\" ? <div style={{ marginTop: 10, paddingLeft: 5, width: $('.Sidebar').width() }}>\n                <div className=\"range_model\">\n\n                    <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                </div>\n                <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                    <Typography classes={{ root: classes.tRoot }}>\n                        Group 1\n                        </Typography>\n                    <Slider\n                        value={range_mode_slider_value1}\n                        onChange={(event, newValue) => set_range_mode_slider_value1(newValue)}\n                        onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"on\"\n                        min={1}\n                        max={props.slider_max}\n                        marks={marks}\n                    />\n                    <Grid style={{ marginBottom: 15 }} container\n                        direction=\"row\"\n                        justify=\"space-around\"\n                        alignItems=\"center\">\n                        <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={range_mode_slider_value1[0]} style={{ width: 40 }}\n                            onChange={event => {\n                                if (isNaN(parseInt(event.target.value))) {\n                                    set_range_mode_slider_value1([\"\", range_mode_slider_value1[1]])\n                                } else {\n                                    if (event.target.value > range_mode_slider_value1[1]) {\n                                        alert(\"Lower range can not be larger than the upper range\")\n                                    }\n                                    else {\n                                        set_range_mode_slider_value1([event.target.value, range_mode_slider_value1[1]])\n                                    }\n                                }\n                            }\n                            }\n                        />\n                        <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={range_mode_slider_value1[1]} style={{ width: 40 }}\n                            onChange={event => {\n                                if (isNaN(parseInt(event.target.value))) {\n                                    set_range_mode_slider_value1([range_mode_slider_value1[0], \"\"])\n                                } else {\n                                    if (parseInt(event.target.value) > props.slider_max) {\n                                        alert(\"Upper range can not exceed maximum\")\n                                        set_range_mode_slider_value1([range_mode_slider_value1[0], props.slider_max])\n                                    }\n                                    else {\n                                        set_range_mode_slider_value1([range_mode_slider_value1[0], parseInt(event.target.value)])\n                                    }\n                                }\n                            }\n                            }\n                        />\n                    </Grid>\n                    <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                        onClick={() => props.Set_range_mode_range1(range_mode_slider_value1)}\n                    >Update range</Button>\n                </div>\n                <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                    <Typography classes={{ root: classes.tRoot }}>\n                        Group 2\n                        </Typography>\n                    <Slider\n                        value={range_mode_slider_value2}\n                        onChange={(event, newValue) => set_range_mode_slider_value2(newValue)}\n                        onChangeCommitted={(event, newValue) => { props.Set_changed(\"range\") }}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"on\"\n                        min={1}\n                        max={props.slider_max}\n                        marks={marks}\n                    />\n                </div>\n                <Grid style={{ marginBottom: 15 }} container\n                    direction=\"row\"\n                    justify=\"space-around\"\n                    alignItems=\"center\">\n                    <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={range_mode_slider_value2[0]} style={{ width: 40 }}\n                        onChange={event => {\n                            if (isNaN(parseInt(event.target.value))) {\n                                set_range_mode_slider_value2([\"\", range_mode_slider_value2[1]])\n                            } else {\n                                if (event.target.value > range_mode_slider_value2[1]) {\n                                    alert(\"Lower range can not be larger than the upper range\")\n                                }\n                                else {\n                                    set_range_mode_slider_value2([event.target.value, range_mode_slider_value2[1]])\n                                }\n                            }\n                        }\n                        }\n                    />\n                    <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={range_mode_slider_value2[1]} style={{ width: 40 }}\n                        onChange={event => {\n                            if (isNaN(parseInt(event.target.value))) {\n                                set_range_mode_slider_value2([range_mode_slider_value2[0], \"\"])\n                            } else {\n                                if (parseInt(event.target.value) > props.slider_max) {\n                                    alert(\"Upper range can not exceed maximum\")\n                                    set_range_mode_slider_value2([range_mode_slider_value2[0], props.slider_max])\n                                }\n                                else {\n                                    set_range_mode_slider_value2([range_mode_slider_value2[0], parseInt(event.target.value)])\n                                }\n                            }\n                        }\n                        }\n                    />\n                </Grid>\n                <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: 0 }}\n                    onClick={() => props.Set_range_mode_range2(range_mode_slider_value2)}\n                >Update range</Button>\n\n            </div> : null}\n            {props.mode == \"Time\" ?\n                <div style={{ marginTop: 10, paddingLeft: 5, marginBottom: 10, width: $('.Sidebar').width() }}>\n                    <div className=\"model\">\n                        <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                        <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                            <Slider\n                                value={time_mode_slider_value}\n                                onChange={(event, newValue) => set_time_mode_slider_value(newValue)}\n                                onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                                valueLabelDisplay=\"auto\"\n                                aria-labelledby=\"range-slider\"\n                                valueLabelDisplay=\"on\"\n                                min={1}\n                                max={props.slider_max}\n                                marks={marks}\n                            />\n                            <Grid style={{ marginBottom: 15 }} container\n                                direction=\"row\"\n                                justify=\"space-around\"\n                                alignItems=\"center\">\n                                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={time_mode_slider_value[0]} style={{ width: 40 }}\n                                    onChange={event => {\n                                        if (isNaN(parseInt(event.target.value))) {\n                                            set_time_mode_slider_value([\"\", time_mode_slider_value[1]])\n                                        } else {\n                                            if (event.target.value > time_mode_slider_value[1]) {\n                                                alert(\"Lower range can not be larger than the upper range\")\n                                            }\n                                            else {\n                                                set_time_mode_slider_value([event.target.value, time_mode_slider_value[1]])\n                                            }\n                                        }\n                                    }\n                                    }\n                                />\n                                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={time_mode_slider_value[1]} style={{ width: 40 }}\n                                    onChange={event => {\n                                        if (isNaN(parseInt(event.target.value))) {\n                                            set_time_mode_slider_value([time_mode_slider_value[0], \"\"])\n                                        } else {\n                                            if (parseInt(event.target.value) > props.slider_max) {\n                                                alert(\"Upper range can not exceed maximum\")\n                                                set_time_mode_slider_value([time_mode_slider_value[0], props.slider_max])\n                                            }\n                                            else {\n                                                set_time_mode_slider_value([time_mode_slider_value[0], parseInt(event.target.value)])\n                                            }\n                                        }\n                                    }\n                                    }\n                                />\n                            </Grid>\n                            <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                                onClick={() => props.Set_time_mode_range(time_mode_slider_value)}\n                            >Update range</Button>\n                        </div>\n                        <div className=\"year\">\n                            <Autocomplete className={{ root: classes.MuiAutocompleteroot }}\n                                defaultValue={props.time_mode_year1.toString()}\n                                id=\"debug\"\n                                debug\n                                options={props.years_for_dropdown.map((option) => option)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Year 1\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                                )}\n                                onChange={(event, value) => {\n                                    props.Set_time_mode_year1(value)\n                                    props.Set_changed(\"year\")\n                                }}\n                            />\n                        </div>\n                        <div className=\"year\">\n                            <Autocomplete className={{ root: classes.MuiAutocompleteroot }}\n                                defaultValue={props.time_mode_year2.toString()}\n                                id=\"debug\"\n                                debug\n                                options={props.years_for_dropdown.map((option) => option)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Year 2\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                                )}\n                                onChange={(event, value) => {\n                                    props.Set_time_mode_year2(value)\n                                    props.Set_changed(\"year\")\n                                }}\n                            />\n                        </div>\n                    </div></div> : null}\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        selected_year: state.selected_year,\n        state_range: state.state_range,\n        mode: state.mode, // Model mode model\n        slider_max: state.slider_max,\n        range_mode_model: state.range_mode_model, // Range mode model\n        range_mode_range1: state.range_mode_range1,\n        range_mode_range2: state.range_mode_range2,\n        time_mode_model: state.time_mode_model, // Time mode model\n        time_mode_range: state.time_mode_range,\n        time_mode_year1: state.time_mode_year1,\n        time_mode_year2: state.time_mode_year2,\n        years_for_dropdown: state.years_for_dropdown,\n        dataset: state.dataset,\n        defualt_models: state.defualt_models,\n        slider_and_feature_value: state.slider_and_feature_value,\n        sort_by: state.sort_by,\n        grouped_by_year_data: state.grouped_by_year_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n        Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n        Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n        Set_range_mode_model: (val) => dispatch({ type: \"range_mode_model\", value: val }),\n        Set_time_mode_model: (val) => dispatch({ type: \"time_mode_model\", value: val }),\n        Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n        Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n        Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n        Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n        Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n        Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n        Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\n        Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n        Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n        Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./Sidebar.scss\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from \"react-redux\";\nimport Modes from \"./Modes\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  listroot: {\n    width: '100%',\n    maxWidth: 360,\n  },\n  paper: {\n\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction Sidebar(props) {\n  const classes = useStyles();\n  //------------For list and chckbox\n  const [checked, setChecked] = React.useState([0]);\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  const inputchanged = (event) => {\n    var val = parseInt(event.target.value)\n    if (val > -1) {\n      setTimeout(function () {\n        props.Set_deviate_by(val)\n      }, 100);\n\n    }\n  }\n  const show_checkboxChanged = (event,val) => {\n    var myfunc = props.appHandleChange\n    myfunc(val, \"show_checkboxChanged\")\n  }\n  return (\n    <div className=\"Sidebar_parent\" style={{height:window.innerHeight}}>\n      <h4 className=\"app_title\">RIEVAL </h4>\n      {props.view_data==1?\n      <div className=\"rangeSlidercontainer\">\n        <Modes appHandleChange={props.appHandleChange} ></Modes>\n        <div className=\"deviation\" style={{marginLeft:5, borderTop:\"0px solid #eaeaea\"}}>\n          <p className=\"title_show\">Margin:</p>\n          <TextField\n            id=\"outlined-size-normal\"\n            defaultValue={props.deviate_by}\n            variant=\"filled\"\n            color=\"primary\"\n            onChange={(event) => inputchanged(event)}\n            fullWidth={false}\n            style={{height:24}}\n          />\n        </div>\n        <div className=\"show\">\n          <p className=\"title_show\">Show:</p>\n          <List className={classes.listroot}>\n            {['Rankings', 'Explanation'].map((value) => {\n              const labelId = `checkbox-list-label-${value}`;\n              return (\n                <ListItem key={value} role={undefined} onClick={handleToggle(value)}>\n                  <Checkbox\n                    checked={props.show.includes(value)}\n                    edge=\"start\"\n                    tabIndex={-1}\n                    value={value}\n                    onChange={(event, value) => {\n                      var temp_show=[...props.show]\n                      if(temp_show.includes(event.target.value) && event.target.value!=\"Rankings\"){\n                        temp_show=temp_show.filter(item=>item!=event.target.value)\n                      }\n                      else{\n                        temp_show.push(event.target.value)\n                      }\n                      props.Set_show(temp_show)\n                    }\n                  }\n                  />\n                  <p className=\"list_item_label\" id={labelId}>{value}</p>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      </div>:null}\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    deviate_by:state.deviate_by,\n    state_range:state.state_range,\n    defualt_models:state.defualt_models,\n    selected_year:state.selected_year,\n    sparkline_data:state.sparkline_data,\n    show:state.show,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_deviate_by:(val) => dispatch({ type: \"deviate_by\", value: val }),\n    Set_show:(val)=>dispatch({type:\"show\",value:val}),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Sidebar);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import React, { Component } from 'react';\n//------------------------------------------------All datasets imports\nimport fiscal from \"./Data/fiscal.csv\";\nimport school from \"./Data/school.csv\";\nimport house from \"./Data/house.csv\";\n\nimport fiscal_rank from \"./Data/data/fiscal/lime/fiscal_rank.csv\";\nimport fiscal_lime from \"./Data/data/fiscal/lime/fiscal_lime.csv\";\n\nimport school_rank from \"./Data/data/school/lime/school_rank.csv\";\nimport school_lime from \"./Data/data/school/lime/school_lime.csv\";\n\nimport house_rank from \"./Data/data/house/lime/house_rank.csv\";\nimport house_lime from \"./Data/data/house/lime/house_lime.csv\";\n//import fiscal from \"./Data/data/fiscal/lime/fiscal.json\";\n//import house from \"../Data/data/house/lime/house.json\";\n//------------------------------------------------All datasets imports ends here\nimport \"./App.scss\";\nimport * as d3 from 'd3';\nimport * as algo1 from \"./Algorithms/algo1\";\nimport ModelChart from \"./components/Charts/Model/ModelChart\"\nimport RangeChart from \"./components/Charts/Range/RangeChart\"\nimport YearChart from \"./components/Charts/Time/YearChart\"\nimport TopBar from \"./components/TopBar/TopBar\"\nimport { Row, Col } from 'reactstrap';\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport * as $ from 'jquery';\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport \"./components/Charts/Charts.css\"\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // mydata is original data\n    this.state = {\n      random: 10,\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",\n    };\n  }\n  handleradioChange = (event) => {\n    this.setState({ show: [\"Slope charts\", \"Rankings\", \"Explanation\"] })\n    this.props.Set_slider_and_feature_value({ 'Rank range': 1, 'Feature': 0 })\n    this.props.Set_clicked_items_in_slopechart([])\n    this.props.Set_state_range([1, 15])\n    this.props.Set_histogram_data([])\n    this.props.Set_mode(\"Model\")\n    this.props.Set_range_mode_range1([5, 35])\n    this.props.Set_range_mode_range2([15, 35])\n    this.props.Set_time_mode_range([5, 35])\n    if (event.target.value == 'Fiscal Dataset') {\n      this.setState({ dataset: 'fiscal' })\n      this.props.Set_dataset('fiscal')\n      this.dataprocessor(\"fiscal\")\n    }\n    else if (event.target.value == 'House Dataset') {\n      this.setState({ dataset: 'house' })\n      this.props.Set_dataset('house')\n      this.dataprocessor(\"house\")\n    }\n    else {\n      this.setState({ dataset: 'school' })\n      this.props.Set_dataset('school')\n      this.dataprocessor(\"school\")\n    }\n  };\n\n  task2 = () => {\n    if (this.props.clicked_items_in_slopechart.length > 0) {\n      d3.selectAll('circle,.datapoint').attr('opacity', this.props.config.reduced_opacity)\n    }\n    this.props.clicked_items_in_slopechart.map(idName => d3.selectAll('#' + idName).attr('opacity', 1))\n  }\n\n  textClickHandler_original = (state_name) => { // state_name is set as the id of each element\n    var idName = state_name.replace(/ +/g, \"\")\n\n    //----Whatever properties are changed due to click change back here for the original \n    d3.selectAll('#' + idName).filter(d3.matcher('line')).style('stroke-width', 1)\n    //----Whatever properties are changed due to click change back here for the original\n\n    //-----Store the clicked items\n    var clicked_items_in_slopechart = [...this.props.clicked_items_in_slopechart]\n    if (clicked_items_in_slopechart.includes(idName)) {\n      clicked_items_in_slopechart = clicked_items_in_slopechart.filter(element => element != idName)\n    }\n    else { clicked_items_in_slopechart.push(idName) }\n    this.props.Set_clicked_items_in_slopechart(clicked_items_in_slopechart)\n    //-----Store the clicked items ends here\n\n    if (clicked_items_in_slopechart.length > 0) {\n      d3.selectAll('circle,.datapoint').attr('opacity', this.props.config.reduced_opacity)\n      this.props.clicked_items_in_slopechart.map(idName => {\n        d3.selectAll('#' + idName).attr('opacity', 1)\n        d3.selectAll('#' + idName).filter(d3.matcher('line')).style('stroke-width', 3)\n      })\n    }\n    else {\n      d3.selectAll('circle,.datapoint').attr('opacity', 1)\n    }\n\n    //d3.selectAll('.line1,.line2').attr('opacity',1)\n  }\n\n  //--------- data processor processes data for initial render\n  dataprocessor = (dataset_name) => {\n    if (dataset_name == \"school\") { this.process_data(school, school_rank, school_lime, dataset_name) }\n    if (dataset_name == \"fiscal\") { this.process_data(fiscal, fiscal_rank, fiscal_lime, dataset_name) }\n    if (dataset_name == \"house\") { this.process_data(house, house_rank, house_lime, dataset_name) }\n  }\n  process_data = (slopechart_data_filename, rank_data_filename, lime_data_filename, dataset_name) => {\n    var self = this\n    //-------------\n    d3.csv(slopechart_data_filename).then(original_data => {\n\n      var grouped_by_year_data = algo1.groupby_year(original_data).years\n      var sparkline_data = algo1.groupby_year(original_data).sparkline_data\n      var years_for_dropdown = Object.keys(grouped_by_year_data)\n      self.props.Set_sparkline_data(sparkline_data)\n      self.props.Set_slider_max(grouped_by_year_data[years_for_dropdown[0]].length)\n      self.setState({ years_for_dropdown: years_for_dropdown })\n      self.props.Set_years_for_dropdown(years_for_dropdown)\n      self.props.Set_time_mode_year1(years_for_dropdown[0])\n      self.props.Set_time_mode_year2(years_for_dropdown[1])\n      self.props.Set_legend_year(years_for_dropdown[0])\n      self.setState({ ref_year: years_for_dropdown[0] })\n      self.props.Set_grouped_by_year_data(grouped_by_year_data)\n      self.setState({ grouped_by_year_data: grouped_by_year_data }, () => {\n        self.appHandleChange(original_data, \"original\");\n      })\n      self.setState({ original_data: original_data })\n      self.props.Set_original_data(original_data)\n      if (dataset_name == 'fiscal') {\n        self.props.Set_selected_year(\"2011\")\n        var all_models = [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"ListNet\", \"RankBoost\", \"RankNet\"]\n        var temp_Models = algo1.sort(this.props.sort_by, this.props.state_range, all_models, \"2011\", grouped_by_year_data)[0];\n        var default_model_scores = algo1.sort(this.props.sort_by, this.props.state_range, all_models, \"2011\", grouped_by_year_data)[1];\n      }\n      else {\n        self.props.Set_selected_year(\"2016\")\n        var all_models = [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"ListNet\", \"RankBoost\", \"RankNet\"]\n        var temp_Models = algo1.sort(this.props.sort_by, this.props.state_range, all_models, \"2016\", grouped_by_year_data)[0];\n        var default_model_scores = algo1.sort(this.props.sort_by, this.props.state_range, all_models, \"2016\", grouped_by_year_data)[1];\n      }\n      this.props.Set_default_model_scores(default_model_scores)\n      this.props.Set_defualt_models(temp_Models.slice(1, 3))\n      this.props.Set_pop_over_models(temp_Models.slice(1, 3))\n\n    })\n    //-------------\n    d3.csv(rank_data_filename).then(data => {\n      var nested_data = {}\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\n        nested_data[item.key] = item.values\n      })\n      self.props.Set_rank_data(nested_data)\n    })\n    //-------------\n    d3.csv(lime_data_filename).then(data => {\n      var nested_data = {}\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\n        nested_data[item.key] = item.values\n      })\n      self.props.Set_lime_data(nested_data)\n    })\n\n  }\n  //---------\n  appHandleChange = (data, type) => { // get the resopnses from Sidebar\n    this.setState({ features_dict: {} })\n    var temp_Models = this.props.defualt_models\n    var temp_show = this.state.show\n    var year = this.props.selected_year\n    if (type == 'year_changed') { this.props.Set_selected_year(data) } // This is called when circles on the sparklines are clicked\n    if (type == 'original') { var original_data = data } else { original_data = this.props.original_data }\n    //-----------------Handle show changes here\n    if (type == \"show_checkboxChanged\") {\n      if (temp_show.includes(data)) { temp_show = temp_show.filter(element => element != data) }\n      else { temp_show.push(data) }\n      this.setState({ show: temp_show })\n    }\n    temp_Models = algo1.sort(this.props.sort_by, this.props.state_range, temp_Models, this.props.selected_year, this.state.grouped_by_year_data)[0];\n    this.setState({ defualt_models: temp_Models })\n    //--------------------------------------------------------------------------------------------------------------All types are handled here end\n    var prev_year;\n    if (parseInt(year) == this.state.years_for_dropdown[0]) { prev_year = parseInt(year) } else { prev_year = parseInt(year) - 1 }\n\n  }\n\n  buttonclickHandler = (value, type) => {\n    setTimeout(() => { this.setState({ random: Math.random() }) }, 500);\n    type = \"button\" ? this.setState({ view_data: value }) : null\n    type = \"form\" ? this.setState({ view_data: value }) : null\n  }\n  //-----------------Models are generated ends here\n  componentDidMount() {\n    this.dataprocessor(\"fiscal\")\n  }\n  shouldComponentUpdate() {\n    return true;\n  }\n  render() {\n    return (\n      <div key={this.state.random}>\n\n        <Row>\n          <div style={{ width: 207 }} className=\"Sidebar\">\n            {this.props.selected_year != null ?\n              <Sidebar view_data={this.state.view_data} appHandleChange={this.appHandleChange}\n                dataset={this.props.dataset} sort_by={this.props.sort_by} chart_scale_type={this.props.chart_scale_type}>\n              </Sidebar> : null}\n          </div>\n          <Col style={{ width: window.innerWidth - 200, minHeight: window.innerHeight }} className=\"container_header_and_components\">\n            <div className=\"uploader_topbar\">\n              <Grid container spacing={0} className=\"myheader\" style={{ left: $('.Sidebar').width() }}>\n                <Grid item style={{ borderRight: \"1px dashed #eaeaea\", width: 100 }}><Button onClick={() => this.buttonclickHandler(1, \"button\")}>View Data</Button></Grid>\n                <Grid item style={{ borderRight: \"1px dashed #eaeaea\", width: 120 }}><Button onClick={() => this.buttonclickHandler(0, \"button\")}>Load Data</Button></Grid>\n              </Grid>\n              {this.state.view_data == false ?\n                <Row className=\"Topbar_container\">\n                  <div className=\"load\">\n                    <form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\n                      <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\"></FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={this.handleradioChange}>\n                          {['Fiscal Dataset', 'School Dataset'].map((value) => {\n                            return <FormControlLabel value={value} control={<Radio />} label={value} />\n                          })}\n                        </RadioGroup>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Load</Button>\n                      </FormControl>\n                    </form>\n                  </div></Row>\n                : null}\n              {this.state.view_data == true ? <Row className=\"Topbar_container\"><TopBar key={this.props.selected_year} appHandleChange={this.appHandleChange} tracking={this.props.tracking}></TopBar></Row> : null}\n            </div>\n            {this.state.view_data == true ?\n              <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\n                <Grid container spacing={0} direction=\"row\" justify=\"space-evenly\" className=\"slopechart_container\" style={{ height: this.props.mode == \"Time\" ? window.innerHeight - $('.myheader').height() - 5 : window.innerHeight - $('.uploader_topbar').height() - 5, marginLeft: 5, width: window.innerWidth - ($('.Sidebar_parent').width() + $('.legend').width() + 15) }}>\n                  {this.props.mode == \"Model\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <ModelChart></ModelChart> : null}\n                  {this.props.mode == \"Range\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <RangeChart></RangeChart> : null}\n                  {this.props.mode == \"Time\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <YearChart></YearChart> : null}\n                </Grid>\n              </Grid> : null}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n  makeArr = () => {\n    var startValue = this.props.state_range[0];\n    var stopValue = this.props.state_range[1];\n    var arr = [];\n    for (var i = startValue; i <= stopValue; i++) {\n      arr.push(i);\n    }\n    //hi\n    return arr;\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    tracking: state.tracking,\n    state_range: state.state_range,\n    deviate_by: state.deviate_by,\n    defualt_models: state.defualt_models,\n    sparkline_data: state.sparkline_data,\n    selected_year: state.selected_year,\n    mode: state.mode,\n    range_mode_model: state.range_mode_model,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sort_by: state.sort_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    popup_chart_data: state.popup_chart_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    config: state.config,\n    lime_data: state.lime_data,\n    rank_data: state.rank_data,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_dataset: (val) => dispatch({ type: \"dataset\", value: val }),\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: parseInt(val) }),\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\n    Set_grouped_by_year_data: (val) => dispatch({ type: \"grouped_by_year_data\", value: val }),\n    Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\n\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n    Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n    Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n\n    Set_rank_data: (val) => dispatch({ type: \"rank_data\", value: val }),\n    Set_lime_data: (val) => dispatch({ type: \"lime_data\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","let initialState = {\n   anim_config: {rank_animation:3000,deviation_animation:3000,feature_animation:3000,circle_animation:3000},\n   appHandleChange: null,\n   sparkline_data: null,\n   sort_by: \"Average Precision\",\n   original_data: null,\n   rank_data: null,\n   lime_data: null,\n   grouped_by_year_data: null,\n   slope_chart_ready_to_vis: null,\n   defualt_models: [\"MART\", \"LinearReg\"], // Change the pop_over_models as well\n   state_range: [1, 25], // Change in handleradioChange\n   deviate_by: 0,\n   show: [\n      \"Slope charts\", \"Rankings\", \"Explanation\" // change in app.js\n   ],\n   years_for_dropdown: [\n      \"2006\"\n   ],\n   selected_year: 2006,\n   selected_years: [\"2006\"],\n   slider_min: 1,\n   slider_max: 50,\n   view_data: 1,\n   dataset: \"fiscal\", // change in componentDidmount in app.js too\n   histogram_data: [],\n   chart_scale_type: \"true\",\n   features_with_score: null,\n   ref_year: null,\n   cmodel: \"CordAscent\",\n   clicked_items_in_slopechart: [],\n   tracking: false,\n   dummy: null,\n   features_dict: {},\n   features_voted: null,\n   Legend_ready_to_vis: null,\n   legend_model: \"CordAscent\",\n   legend_show_option: \"Rank\",\n   legend_year: 2012,\n   mode: \"Model\",\n   range_mode_model: \"CordAscent\",\n   range_mode_range1: [1, 25],\n   range_mode_range2: [15, 40],\n   time_mode_model: \"CordAscent\",\n   time_mode_year1: \"Null\",\n   time_mode_year2: \"Null\",\n   time_mode_range: [6, 32],\n   chart_scale_type: \"true\",\n   slider_and_feature_value: { 'Rank range': 1, 'Feature': 0 },\n   prev_prop: {},\n   replay: false,\n   changed: \"year\",\n   popup_chart_data: null,\n   pop_over: true,\n   pop_over_models: [\"MART\", \"LinearReg\"],\n   clicked_features: [],\n   drag_drop_feautre_data: {},\n   dbclicked_features: [],\n   default_model_scores: {},\n   all_models: [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"RankBoost\", \"RankNet\"],\n   average_y: false,\n   average_m: false,\n   clicked_circles:[]\n}\n//---InitialState ends here\nconst reducer = (state = initialState, action) => {\n   if (action.type === \"clicked_circles\") {\n      //console.log(action.value)\n      return { ...state, clicked_circles: action.value }\n   }\n   if (action.type === \"average_y\") {\n      console.log(action.value)\n      return { ...state, average_y: action.value }\n   }\n   if (action.type === \"average_m\") {\n      console.log(action.value)\n      return { ...state, average_m: action.value }\n   } \n   if (action.type === \"selected_years\") {\n      console.log(action.value)\n      return { ...state, selected_years: action.value[action.value.length-1],selected_year:action.value[action.value.length-1] }\n   }\n   if (action.type === \"default_model_scores\") {\n      //console.log(action.value)\n      return { ...state, default_model_scores: action.value }\n   }\n   if (action.type === \"dbclicked_features\") {\n      return { ...state, dbclicked_features: action.value }\n   }\n   if (action.type === \"drag_drop_feautre_data\") {\n      return { ...state, drag_drop_feautre_data: action.value }\n   }\n   if (action.type === \"anim_config\") {\n      return { ...state, config: action.value }\n   }\n   if (action.type === \"show\") {\n      return { ...state, show: action.value }\n   }\n   if (action.type === \"lime_data\") {\n      return { ...state, lime_data: action.value }\n   }\n   if (action.type === \"defualt_models\") {\n      return { ...state, defualt_models: action.value }\n   }\n   if (action.type === \"rank_data\") {\n      return { ...state, rank_data: action.value }\n   }\n   if (action.type === \"original_data\") {\n      return { ...state, original_data: action.value }\n   }\n   if (action.type === \"years_for_dropdown\") {\n      return { ...state, years_for_dropdown: action.value }\n   }\n   if (action.type === \"appHandleChange\") {\n      return { ...state, appHandleChange: action.value }\n   }\n   if (action.type === \"state_range\") {\n      return { ...state, state_range: action.value }\n   }\n   if (action.type === \"selected_year\") {\n      return { ...state, selected_year: action.value,selected_years: [action.value.toString()] }\n   }\n   if (action.type === \"tracking\") {\n      return { ...state, tracking: action.value }\n   }\n   if (action.type === \"grouped_by_year_data\") {\n      return { ...state, grouped_by_year_data: action.value }\n   }\n   if (action.type === \"sort_by\") {\n      return { ...state, sort_by: action.value }\n   }\n   if (action.type === \"deviate_by\") {\n      return { ...state, deviate_by: action.value }\n   }\n   if (action.type === \"mode\") {\n      return { ...state, mode: action.value }\n   }\n   if (action.type === \"slider_max\") {\n      return { ...state, slider_max: action.value }\n   }\n   if (action.type === \"range_mode_model\") {\n      return { ...state, range_mode_model: action.value }\n   }\n   //----\n   if (action.type === \"range_mode_range1\") {\n      return { ...state, range_mode_range1: action.value }\n   }\n   if (action.type === \"range_mode_range2\") {\n      return { ...state, range_mode_range2: action.value }\n   }\n   if (action.type === \"time_mode_range\") {\n      return { ...state, time_mode_range: action.value }\n   }\n   if (action.type === \"time_mode_model\") {\n      return { ...state, time_mode_model: action.value }\n   }\n   if (action.type === \"time_mode_year1\") {\n      return { ...state, time_mode_year1: action.value }\n   }\n   if (action.type === \"time_mode_year2\") {\n      return { ...state, time_mode_year2: action.value }\n   }\n   if (action.type === \"clicked_items_in_slopechart\") {\n      return { ...state, clicked_items_in_slopechart: action.value }\n   }\n   if (action.type === \"features_with_score\") {\n      return { ...state, features_with_score: action.value }\n   }\n   if (action.type === \"sparkline_data\") {\n      return { ...state, sparkline_data: action.value }\n   }\n   if (action.type === \"legend_show_option\") {\n      return { ...state, legend_show_option: action.value }\n   }\n   if (action.type === \"legend_model\") {\n      return { ...state, legend_model: action.value }\n   }\n   if (action.type === \"histogram_data\") {\n      return { ...state, histogram_data: action.value }\n   }\n   if (action.type === \"dataset\") {\n      return { ...state, dataset: action.value }\n   }\n   if (action.type === \"slider_and_feature_value\") {\n      return { ...state, slider_and_feature_value: action.value }\n   }\n   if (action.type === \"legend_year\") {\n      return { ...state, legend_year: action.value }\n   }\n   if (action.type === \"prev_prop\") {\n      return { ...state, prev_prop: action.value }\n   }\n   if (action.type === \"replay\") {\n      return { ...state, replay: action.value }\n   }\n   if (action.type === \"changed\") {\n      return { ...state, changed: action.value }\n   }\n   if (action.type === \"popup_chart_data\") {\n      return { ...state, popup_chart_data: action.value }\n   }\n   if (action.type === \"pop_over\") {\n      return { ...state, pop_over: action.value }\n   }\n   if (action.type === \"pop_over_models\") {\n      var temp = action.value.filter(item => item != \"ListNet\")\n      return { ...state, pop_over_models: temp }\n   }\n   if (action.type === \"clicked_features\") {\n      //console.log(action.value)\n      return { ...state, clicked_features: action.value }\n   }\n   return state;\n}\nexport default reducer;","import { createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({      \n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  }\n});\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './store/reducer';\nimport theme from './Themes'; \nimport { ThemeProvider } from '@material-ui/styles';\nconst store=createStore(reducer);\nReactDOM.render( <ThemeProvider theme={theme}><Provider store={store}><App /></Provider></ThemeProvider>,document.getElementById('root'));\n\n\n","module.exports = __webpack_public_path__ + \"static/media/chart1_data.d3b20544.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.cca71c9e.csv\";"],"sourceRoot":""}