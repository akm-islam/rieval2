{"version":3,"sources":["Algorithms/algo1.js","components/Charts/misc_algo.js","components/Charts/05_00_top_explanation_plot.js","components/Charts/05_01_Create_exp_circles.js","components/Charts/05_02_Create_exp_histogram.js","components/Charts/04_explanation_chart.js","components/Charts/01_deviation_chart.js","components/Charts/02_Sparkline.js","components/Charts/03_deviation_chart_line_symbol.js","components/Charts/Model/ModelSlider.js","components/Charts/Model/ModelChart.js","components/Charts/Range/SliderGroup1.js","components/Charts/Range/SliderGroup2.js","components/Charts/Range/RangeChart.js","components/Charts/Time/YearChart.js","components/TopBar/TopBar.js","components/Sidebar/Histogram.js","components/Sidebar/Histograms.js","components/Sidebar/Tracking.js","components/Sidebar/Modes.js","components/Sidebar/Sidebar.js","components/Sidebar/Create_model_symbols.js","App.js","store/reducer.js","Themes.js","index.js","Data/data/fiscal/lime/chart1_data.csv","Data/data/school/lime/chart1_data.csv","Data/fiscal.csv","Data/school.csv","Data/house.csv","Data/data/fiscal/lime/fiscal_rank.csv","Data/data/fiscal/lime/fiscal_lime.csv","Data/data/school/lime/school_rank.csv","Data/data/school/lime/school_lime.csv","Data/data/house/lime/house_rank.csv","Data/data/house/lime/house_lime.csv","Data/data/house/lime/chart1_data.csv"],"names":["groupby_year","original_data","years","sparkline_data","forEach","element","replace","temp_dict","year","parseInt","rank","push","features_with_score","dataset","models","state_range","selected_year","number_of_charts","rank_data","temp1","temp_final","key","map","model","temp2","v","top_nine","length","items","data","feautures","tempvoted_data_with_score","data2","filter","index","Object","keys","item","feauture","parseFloat","sort","first","second","items2","sorted_features","i","key2","handle_transparency","class_name","clicked_circles","anim_config","d3","attr","circle_class","draw_lines","diverginColor","remove","d","lines","two_realRank","parent_id","substring","points","selectAll","each","this","join","transition","duration","create_top_explanation_plot","selected_instances","lime_data","defualt_models","Set_clicked_circles","clicked_features","Set_clicked_features","feature_total_width","feature_width","top_histogram_width","symbolTypes","top_parent_height","$","height","text","slice","selection","margin","item_width","item_height","feature_name","feature_contrib_name","symbolGenerator","size","circ_data","includes","yScale","domain","range","xScale","enter","append","type","update","circle_animation","delay","rank_animation","deviation_animation","feature_animation","exit","on","CreatexpCircle","y_axis_x_transform","hist_data","y","bins","value","thresholds","ticks","histogram","x","x0","x1","style","parentNode","call","tickFormat","CreatexpHistogram","CreatexpChart","bottom_parent_width","width","bottom_parent_height","feature_data","config","current_two_realRank","current_item","model_name","model_index","x_transform","classed","svg_index","x_transformation","select","misc_algo","Create_deviation_chart","parent_exp_id","average","Set_selected_year","parent_width","temp_scale_data","Math","abs","fontSize","font_dy","sparkline_width","font_line_gap","line_stroke_width","animation_duration","container_height","my_svg_top_margin","myg_top_margin","left_margin","y_distance","circle_radius","items_g","parent","s_margin","s_width","s_height","s_svg","datum","y0","y1","raise","preventDefault","Create_sparkline","data_for_all_years","line_data","a","temp_max","sclale1","d2","temp","add_lines_and_circles","makeStyles","theme","root","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","secondary","tRoot","marginBottom","rang_input","marginLeft","connect","state","mode","slider_max","range_mode_model","range_mode_range1","range_mode_range2","time_mode_model","time_mode_range","time_mode_year1","time_mode_year2","years_for_dropdown","slider_and_feature_value","sort_by","grouped_by_year_data","dispatch","Set_state_range","val","Set_changed","props","React","useState","sliderRange","set_sliderRange","temp_marks","step","marks","myitem","label","className","padding","display","Slider","onChange","event","newValue","onChangeCommitted","valueLabelDisplay","aria-labelledby","Button","backgroundColor","onClick","SlopeChart","line_color","height_slope_exp_chart","mouseX","mouseY","setState","window","innerHeight","prevProps","prevState","min","interpolate","algo1","entries","b","deviation_chart","average_m","explanation_chart","id","Component","deviate_by","clicked_items_in_slopechart","tracking","chart_scale_type","histogram_data","show","default_model_scores","average_y","Set_prev_prop","Set_sparkline_data","Set_clicked_items_in_slopechart","Set_replay","useStyles","Set_range_mode_range1","range_mode_slider_value1","set_range_mode_slider_value1","marginTop","Grid","container","direction","justify","alignItems","Set_range_mode_range2","range_mode_slider_value2","set_range_mode_slider_value2","selected_years","selected_instances2","features_with_score2","sorted_features2","justifyContent","border","boxShadow","paddingRight","paddingLeft","fontWeight","borderBottom","SliderGroup1","overflow","marginRight","paddingTop","SliderGroup2","MuiAutocompleteroot","listroot","paper","fontWeightRegular","all_models","prev_prop","replay","add","set_tracking","Set_histogram_data","Set_slider_max","Set_time_mode_range","Set_pop_over_models","Set_defualt_models","Set_default_model_scores","Set_average_m","handle_model_click","CreateChart","feature","node","feature_height","handleHistogramselection","svg","isNaN","occur","sum_x","cScale","interpolator","svg1","statelist","country","cat_states","temp_x","tick_values","nice","hist_height","y_hist","svg0","tickValues","selectionRect","previousElement","currentY","currentX","originX","originY","setElement","ele","getNewAttributes","getCurrentAttributes","x2","y2","getCurrentAttributesAsText","attrs","init","newX","newY","rectElement","NewAttr","focus","removePrevious","dragBehavior","p","finalAttributes","myx1","myx2","temp_range","invert","toFixed","states","Chart","selected_states","update_histogram_data","alert","myfunc","appHandleChange","filtered_states","makeArr","startValue","stopValue","arr","myRef","createRef","feaures_dict","features_voted","filename","self","exp_fiscal_CordAscent","exp_school_CordAscent","exp_house_CordAscent","then","legend_data","height_between","number_of_elements","exp_chart_height","floor","features_dict","feature_index","feature_id","setTimeout","FormControlLabel","labelPlacement","control","Checkbox","checked","target","name","Set_years_for_dropdown","Set_mode","Set_range_mode_model","Set_time_mode_model","Set_time_mode_year1","Set_time_mode_year2","Set_slider_and_feature_value","classes","time_mode_slider_value","set_time_mode_slider_value","set_dummy","borderTop","Autocomplete","borderRadius","paddingBottom","defaultValue","debug","options","renderInput","params","TextField","fullWidth","InputProps","disableUnderline","List","labelId","ListItem","role","undefined","edge","tabIndex","temp_val","JSON","stringify","input","Histograms","toString","Sidebar_width","option","Typography","maxWidth","view_data","Set_ref_year","Set_original_data","Set_deviate_by","Set_show","setChecked","handleToggle","currentIndex","indexOf","newChecked","splice","variant","inputchanged","temp_show","App","handleradioChange","Feature","Set_dataset","dataprocessor","dataset_name","process_data","school","school_rank","school_lime","fiscal","fiscal_rank","fiscal_lime","house","house_rank","house_lime","slopechart_data_filename","rank_data_filename","lime_data_filename","Set_legend_year","ref_year","Set_grouped_by_year_data","nested_data","values","Set_rank_data","Set_lime_data","buttonclickHandler","random","spacing","left","borderRight","Row","onSubmit","FormControl","component","FormLabel","RadioGroup","aria-label","Radio","ModelChart","popup_chart_data","initialState","slope_chart_ready_to_vis","slider_min","cmodel","dummy","Legend_ready_to_vis","legend_model","legend_show_option","legend_year","reducer","action","console","log","dbclicked_features","drag_drop_feautre_data","all_symbols","changed","pop_over","pop_over_models","createMuiTheme","button","textTransform","store","createStore","ReactDOM","render","ThemeProvider","document","getElementById","module","exports"],"mappings":"6dAAO,SAASA,EAAaC,GAC3B,IAAIC,EAAQ,GACRC,EAAiB,GAWrB,OAVAF,EAAcG,SAAQ,SAAAC,GACpBH,EAAMG,EAAQ,UAAY,GAC1BF,EAAeE,EAAO,MAAUC,QAAQ,KAAM,IAAIA,QAAQ,YAAa,KAAO,MAGhFL,EAAcG,SAAQ,SAAAC,GACpB,IAAIE,EAAY,CAAEC,KAAMC,SAASJ,EAAQ,UAAWK,KAAMD,SAASJ,EAAO,eAC1EF,EAAeE,EAAO,MAAUC,QAAQ,KAAM,IAAIA,QAAQ,YAAa,KAAKK,KAAKJ,GACjFL,EAAMG,EAAQ,UAAUM,KAAKN,MAExB,CAAEH,MAAOA,EAAOC,eAAgBA,GAElC,SAASS,EAAoBC,EAASC,EAAQC,EAAaC,EAAeC,EAAkBC,GACjG,IAAIC,EAAQ,GACRC,EAAa,GAajB,IAAK,IAAIC,KAZTP,EAAOQ,KAAI,SAAAC,GACT,IAAIC,EAAQ,GACRC,EAAIR,EACJS,EAwBD,SAAyBb,EAASU,EAAOR,EAAaC,EAAcE,GACzE,IAAKH,EAAYY,OAAS,EAAK,MAAO,GACtCZ,EAAcA,EAAYO,KAAI,SAAAjB,GAAO,OAAIA,EAAU,KACnD,IAAmCuB,EAAMC,EAAKC,EAA1CC,EAA4B,GAEhC,GAAa,WAATR,EAAsB,MAAO,GACjC,IAAIS,EAAQd,EAAUK,GAAOU,QAAO,SAAA5B,GAAa,GAAII,SAASJ,EAAQ,WAAaI,SAASO,GAAkB,OAAOX,KACrHwB,EAAOd,EAAYO,KAAI,SAAAY,GAAK,OAAIF,EAAME,MACtCJ,EAAYK,OAAOC,KAAKP,EAAK,IAE7BA,EAAKP,KAAI,SAAAe,GACPP,EAAU1B,SAAQ,SAAAkC,GACZP,EAA0BO,IAAa,GAAKP,EAA0BO,GAAY,EACpFP,EAA0BO,GAAYP,EAA0BO,GAAaC,WAAWF,EAAKC,IAExFP,EAA0BO,GAAYC,WAAWF,EAAKC,WAKjEV,EAAQO,OAAOC,KAAKL,GAA2BT,KAAI,SAAUD,GAC3D,MAAO,CAACA,EAAKU,EAA0BV,QAGnCmB,MAAK,SAAUC,EAAOC,GAC1B,OAAOD,EAAM,GAAKC,EAAO,MAE3B,IAAIC,EAASf,EAAMN,KAAI,SAACjB,GAAD,OAAaA,EAAQ,GAAGC,QAAQ,gBAAiB,OAExE,OADAqC,EAASA,EAAOV,QAAO,SAAAI,GAAI,MAAY,SAARA,GAAyB,SAANA,KApDjCO,CAAgB/B,EAASU,EAAOR,EAAaC,EAAcE,GACtEQ,EAASC,OAASV,IAAoBQ,EAAIC,EAASC,OAASV,EAAmBS,EAASC,QAC5F,IAAK,IAAIkB,EAAI,EAAGA,EAAI5B,EAAkB4B,IACpCrB,EAAME,EAASmB,IAAMpB,EACrBA,GAAQ,EAEVN,EAAMI,GAASC,KAGDL,EACd,IAAK,IAAI2B,KAAQ3B,EAAME,GACjBD,EAAW0B,GAAQ,EAErB1B,EAAW0B,GAAQ1B,EAAW0B,GAAQ3B,EAAME,GAAKyB,GAGjD1B,EAAW0B,GAAQ3B,EAAME,GAAKyB,GAIpC,OAAO1B,E,0BCxCF,SAAS2B,EAAoBC,EAAYC,EAAiBC,GAC/B,GAA1BD,EAAgBtB,QAChBwB,YAAa,UAAeC,KAAK,UAAW,IAC5CH,EAAgB3B,KAAI,SAAA+B,GAChBF,YAAa,IAAME,GAAcD,KAAK,UAAW,OAIrDD,YAAa,UAAUC,KAAK,UAAW,GAGxC,SAASE,EAAWL,EAAiBM,GACxCJ,YAAa,YAAYK,SACzBP,EAAgB3B,KAAI,SAAAmC,GAChB,IAAIC,EAAQ,GACRC,EAAe,EACfC,EAAYT,SAAU,IAAMM,GAAGL,KAAK,MAAMS,UAAU,EAAE,GACtDC,EAAS,GACbX,SAAU,IAAMS,GAAWG,UAAU,IAAMN,GAAGO,MAAK,SAAUP,GACzDE,EAAeR,SAAUc,MAAMb,KAAK,gBACpCU,EAAOnD,KAAK,CAACwC,SAAUc,MAAMb,KAAK,OAAQD,SAAUc,MAAMb,KAAK,WAEnEM,EAAM/C,KAAK,CAAC8C,EAAGN,SAAUW,GAASH,IAClCR,SAAU,IAAMS,GAAWG,UAAU,IAAMN,GAAG5B,KAAK6B,GAAO,SAAAD,GAAC,OAAIA,EAAE,MAAIS,KAAK,QAAQd,KAAK,UAAU,SAAAK,GAAC,OAAIF,EAAcE,EAAE,OAAKL,KAAK,eAAgB,GAC3IA,KAAK,KAAM,WAAWA,KAAK,SAAS,SAAAK,GAAC,OAAIA,EAAE,MAAIL,KAAK,QAASK,GAAGU,aAAaC,SAAS,GAAGhB,KAAK,KAAK,SAAAK,GAAC,OAAIA,EAAE,MAAIL,KAAK,OAAQ,WCrBzH,SAASiB,EAA4BT,EAAWU,EAAoB1B,EAAiB2B,EAAWvD,EAAewD,EAC1HvB,EAAiBwB,EAAqBlB,EAAeL,EAAawB,EAAkBC,EAAsBC,EAC1GC,EAAcC,EAAoBC,GAClC,IAAIC,EAAoBC,EAAE,IAAMrB,GAAWsB,SAE3C/B,SAAU,IAAMS,GAAWG,UAAU,aAAalC,KAAKe,GAAiBsB,KAAK,OAAOd,KAAK,QAAS,YAC7FA,KAAK,KAAK,SAACK,EAAGZ,GAAJ,OAAU+B,EAAsB/B,KAAGO,KAAK,QAASwB,GAAqBxB,KAAK,IAF5E,IAE2FA,KAAK,SAAU4B,EAF1G,IAGT5B,KAAK,oBAAmB,SAASK,EAAEZ,GAChCM,SAAU,IAAMS,GAAWG,UAAU,gBAAgBlB,GAAGhB,KAAK,CAAC,IAAIqC,KAAK,QAAQd,KAAK,QAAQ,eAAeP,GAAGO,KAAK,KAAK,SAACK,GAAD,OAAO,GAAGmB,EAAsB/B,KAAGO,KAAK,oBAAoB,WAAWA,KAAK,YAAY,IAAI+B,KAAK1B,EAAE,GAAG9B,OAAO,GAAG8B,EAAE,GAAG2B,MAAM,EAAE,IAAI,KAAK3B,EAAE,OAEnQL,KAAK,QAAO,SAASK,GAClBN,SAAUc,MAAMF,UAAU,SAASlC,KAAK,CAAC,IAAIqC,KAAK,OAAOd,KAAK,KAAK,QAAQA,KAAK,IAAK0B,GAAqB1B,KAAK,QAASyB,GAAezB,KAAK,SAAU4B,GACrJ5B,KAAK,mBAAkB,YCfrB,SAAwBK,EAAG4B,EAAWf,EAAoB1B,EAAiB2B,EAAWvD,EAAewD,EAAgBvB,EAAiBwB,EAAqBlB,EAAeL,EAAawB,EAAkBC,EAAqBI,GACzO,IAAIO,EAA4B,EAA5BA,EAAiD,EAAjDA,EAAsF,EAAtFA,EAA4G,EAC5GC,EAAapC,SAAU,SAASC,KAAK,SACrCoC,EAAcrC,SAAU,SAASC,KAAK,UACtCqC,EAAehC,EAAE,GACjBiC,EAAuBjC,EAAE,GAAK,gBAC9BkC,EAAkBxC,WAAYyC,KAAK,IACnCC,EAAY,GAChBrB,EAAelD,KAAI,SAAAC,GACfgD,EAAUhD,GAAOD,KAAI,SAAAe,GACbA,EAAK,UAAYrB,GAAiBsD,EAAmBwB,SAASrF,SAAS4B,EAAI,iBAC3EA,EAAI,GAASA,EAAI,MAAU/B,QAAQ,KAAM,IAAIA,QAAQ,cAAe,IAAMiB,EAAMjB,QAAQ,KAAM,IAAIA,QAAQ,cAAe,IACzHuF,EAAUlF,KAAK0B,UAIvB,IAAI0D,EAAS5C,gBAAiB6C,OAAO,CAAC7C,MAAO0C,EAAUvE,KAAI,SAAAe,GAAI,OAAIE,WAAWF,EAAKoB,EAAE,SAAQN,MAAO0C,EAAUvE,KAAI,SAAAe,GAAI,OAAIE,WAAWF,EAAKoB,EAAE,WACvIwC,MAAM,CAACX,EAAwBE,EAAYF,IAC5CY,EAAS/C,gBAAiB6C,OAAO,CAAC7C,MAAO0C,EAAUvE,KAAI,SAAAe,GAAI,OAAIE,WAAWF,EAAKqD,QAA0BvC,MAAO0C,EAAUvE,KAAI,SAAAe,GAAI,OAAIE,WAAWF,EAAKqD,UACrJO,MAAM,CAACX,EAAyBC,EAAaD,IAElCD,EAAUtB,UAAU,eAAelC,KAAKgE,GAAW,SAAApC,GAAC,OAAIA,EAAC,MAAQS,MAC7E,SAAAiC,GAAK,OAAIA,EAAMC,OAAO,KACjBhD,KAAK,MAAM,SAAAK,GAAC,OAAIA,EAAC,MACjBL,KAAK,SAAS,SAAAK,GAAC,OAAEA,EAAC,GAAO,+BACzBL,KAAK,QAAQ,SAAAK,GAAC,OAAIF,EAAcE,EAAC,iBACjCL,KAAK,aAAa,SAAUK,EAAGZ,GAG5B,MAAO,aAFWqD,EAAO3D,WAAWkB,EAAEiC,KAEF,IADlBK,EAAOxD,WAAWkB,EAAEgC,KACkB,OAEzDrC,KAAK,cAAc,SAAUK,EAAGZ,GAC/BM,SAAUc,MAAMF,UAAU,QAAQlC,KAAK,CAAC,IAAIqC,KAAK,QAAQd,KAAK,KAAK,WAAiE,OAAnDuC,EAAgBU,KAAKlD,EAAG4B,EAAYtB,EAAC,SAAqBkC,OACxIvC,KAAK,OAAQG,EAAcE,EAAC,qBAGrC,SAAA6C,GAAM,OAAIA,EAAOlD,KAAK,SAAS,SAAAK,GAAC,OAAEA,EAAC,GAAO,+BACvCU,aAAaC,SAASlB,EAAYqD,kBAAkBC,MAAMtD,EAAYuD,eAAiBvD,EAAYwD,oBAAsBxD,EAAYyD,mBACrIvD,KAAK,aAAa,SAAUK,EAAGZ,GAG5B,MAAO,aAFWqD,EAAO3D,WAAWkB,EAAEiC,KAEF,IADlBK,EAAOxD,WAAWkB,EAAEgC,KACkB,OAE3DrC,KAAK,MAAM,SAAAK,GAAC,OAAIA,EAAC,MACjBL,KAAK,cAAc,SAAUK,EAAGZ,GAC7BM,SAAUc,MAAMF,UAAU,QAAQlC,KAAK,CAAC,IAAIqC,KAAK,QAAQd,KAAK,KAAK,WAAiE,OAAnDuC,EAAgBU,KAAKlD,EAAG4B,EAAYtB,EAAC,SAAqBkC,OACxIvC,KAAK,OAAQG,EAAcE,EAAC,qBAErC,SAAAmD,GAAI,OAAIA,EAAKpD,YACTqD,GAAG,SAAS,SAAApD,GAClBgB,EAAoBxB,EAAgB6C,SAASrC,EAAC,IAAUR,EAAgBhB,QAAO,SAAAI,GAAI,OAAIA,GAAQoB,EAAC,MAA5E,sBAA0FR,GAA1F,CAA2GQ,EAAC,SDlC5HqD,CAAerD,EAAEN,SAAUc,MAAOK,EAAoB1B,EAAiB2B,EAAWvD,EAAewD,EAAgBvB,EAAiBwB,EAAqBlB,EAAeL,EAAawB,EAAkBC,EAAqBI,SAGjO3B,KAAK,QAAO,SAASK,GAClBN,SAAUc,MAAMF,UAAU,SAASlC,KAAK,CAAC,IAAIqC,KAAK,KAAKd,KAAK,KAAK,QAAQA,KAAK,YAAY,kBAA0BA,KAAK,QAAS0B,GAAqB1B,KAAK,SAAU4B,GACrK5B,KAAK,mBAAkB,YErBrB,SAA2BK,EAAG4B,EAAWf,EAAoB1B,EAAiB2B,EAAWvD,EAAewD,EAAgBvB,EAAiBwB,EAAqBlB,EAAeL,EAAawB,EAAkBC,EAAqBG,EAAoBD,GAChQ,IAAIS,EAAmD,EACnDC,EAAapC,SAAU,SAASC,KAAK,SACrCoC,EAAcrC,SAAU,SAASC,KAAK,UACtC2D,EAAmBlC,EAAc,EACjCY,EAAehC,EAAE,GACrBe,EAAelD,KAAI,SAAAC,GACf,IAAIyF,EAAY,GAChBzC,EAAUhD,GAAOD,KAAI,SAAAe,GACbA,EAAK,UAAYrB,GAAiBsD,EAAmBwB,SAASrF,SAAS4B,EAAI,iBAC3EA,EAAKoD,GAAgBlD,WAAWF,EAAKoD,IACrCuB,EAAUrG,KAAK0B,OAIvB,IAAI4E,EAAI9D,gBAAiB6C,OAAO,CAAC7C,MAAO6D,EAAU1F,KAAI,SAAAe,GAAI,OAAIE,WAAWF,EAAKoD,QAAkBtC,MAAO6D,EAAU1F,KAAI,SAAAe,GAAI,OAAIE,WAAWF,EAAKoD,UACxIQ,MAAM,CAAC,EAAGT,EAAYF,IAOvB4B,EALY/D,cACXgE,OAAM,SAAA1D,GAAC,OAAIA,EAAEgC,MACbO,OAAOiB,EAAEjB,UACToB,WAAWH,EAAEI,MAAM,GAEbC,CAAUN,GACjBO,EAAIpE,gBAAiB6C,OAAO,CAAC,EAAG7C,MAAO+D,EAAK5F,KAAI,SAAAe,GAAI,OAAIA,EAAKV,aAChEsE,MAAM,CAAC,EAAGV,IAEXF,EAAUtB,UAAU,QACflC,KAAKqF,GACLhD,KAAK,QACLd,KAAK,KAAK,SAAAK,GAAC,OAAGqB,EAAoByC,EAAE9D,EAAE9B,WACtCyB,KAAK,KAAK,SAAAK,GAAC,OAAEwD,EAAExD,EAAE+D,OACjBpE,KAAK,UAAU,SAAUK,GAAK,OAAQwD,EAAExD,EAAEgE,IAAMR,EAAExD,EAAE+D,IAAM,MAC1DpE,KAAK,SAAS,SAAUK,GAAK,OAAO8D,EAAE9D,EAAE9B,WACxC+F,MAAM,OAAQ,WACdtE,KAAK,UAAS,SAAAK,GAAC,OAAEA,EAAE9B,UACnByB,KAAK,wBAAuB,SAASK,EAAEZ,GACpCM,SAAUc,KAAK0D,YAAY5D,UAAU,uBAAuBlC,KAAKqF,GAAMhD,KAAK,QAAQd,KAAK,QAAQ,sBAChGA,KAAK,MAAK,SAAAK,GAAC,OAAEwD,EAAExD,EAAE+D,OAAKpE,KAAK,MAAK,SAAAK,GAAC,OAAEwD,EAAExD,EAAE+D,OAAKpE,KAAK,KAAK0B,GAAqB1B,KAAK,KAAKyB,EAAcC,EAAqB,GAAG1B,KAAK,eAAgB,IAAKA,KAAK,SAAU,cAExKA,KAAK,qBAAoB,SAASK,EAAEZ,GACjCM,SAAUc,KAAK0D,YAAY5D,UAAU,sBAAsBlC,KAAK,CAAC,IAAIqC,KAAK,QAAQd,KAAK,QAAQ,qBAAqBA,KAAK,YAAY,aAAa0B,EAAoB,OACrK1B,KAAK,KAAK,GAAGA,KAAK,KAAKoC,GAAapC,KAAK,KAAKyB,EAAc,GAAGzB,KAAK,KAAKyB,EAAc,GAAGzB,KAAK,eAAgB,IAAKA,KAAK,SAAU,cAGxIiC,EAAUtB,UAAU,cAAclC,KAAK,CAAC,IAAIqC,KAAK,KAAKd,KAAK,QAAQ,aAAaA,KAAK,YAAY,aAAa2D,EAAmB,OAAOa,KAAKzE,YAAa8D,GAAGI,MAAM,GAAGQ,WAAW1E,SAAU,SAC9LC,KAAK,UAAS,WAAWD,SAAUc,MAAMF,UAAU,WAAWP,SAASL,SAAUc,MAAMF,UAAU,QAAQP,SAASL,SAAUc,MAAMF,UAAU,QAAQX,KAAK,YAAY,SFxB9J0E,CAAkBrE,EAAEN,SAAUc,MAAOK,EAAoB1B,EAAiB2B,EAAWvD,EAAewD,EAAgBvB,EAAiBwB,EAAqBlB,EAAeL,EAAawB,EAAkBC,EAAqBG,EAAoBD,SGnB1P,SAASkD,EACdnE,EAAWU,EAAoB1B,EAAiB2B,EAAWvD,EAAewD,EAAgBvB,EAAiBwB,EAC3GlB,EAAeL,EAAawB,EAAkBC,EAAsBI,GACpE,IAAIiD,EAAsB/C,EAAE,IAAMrB,GAAWqE,QAAU,EACnDC,EAAuBjD,EAAE,IAAMrB,GAAWsB,SAI1CN,EAAsBoD,EAAsBpF,EAAgBjB,OAC5DkD,EAAiBmD,EAAsBpF,EAAgBjB,OAAvC,GACpBwB,SAAU,IAAMS,GAAWG,UAAU,aAAalC,KAAKe,GAAiBsB,KAAK,OAAOd,KAAK,QAAS,YAC/FA,KAAK,KAAK,SAACK,EAAGZ,GAAJ,OAJa,GAImB+B,EAAsB/B,KAAGO,KAAK,QAASyB,GAAezB,KAAK,SAAU8E,GAC/G9E,KAAK,aAAa,SAAU+E,EAActF,GAIzCM,SAAUc,MAAMF,UAAU,UAAUlC,KAAKyC,GAAoBJ,KAAK,KAAKd,KAAK,QAAS,SAASA,KAAK,aAAa,SAACK,EAAGZ,GAAJ,MAAU,gBAA0B,EADnIuF,GACuIvF,GAAkB,OAEvKO,KAAK,yBAAyB,SAAUiF,EAAsBxF,GAC7D,IAAI6C,EAAuByC,EAAa,GAAK,gBAC7ChF,SAAUc,MAAMF,UAAU,QAAQlC,KAAK,CAACwG,IAAuBnE,KAAK,QACjEd,KAAK,KAAM,GAAGA,KAAK,KAAMyB,EAAgB,GAAGzB,KAAK,KAAM,GAAGA,KAAK,MAAM,SAACK,GAAD,OAAO,KAAGL,KAAK,eAAgB,GAAGA,KAAK,SAAU,WAEzH,IAAIkF,EAAe,GAEfzC,EAAY,GAChBrB,EAAelD,KAAI,SAACiH,EAAYC,GAC9BjE,EAAUgE,GAAYjH,KAAI,SAACe,GACrBA,EAAK,UAAYrB,GAAiBsD,EAAmBwB,SAASrF,SAAS4B,EAAI,iBAC7EA,EAAI,GAASA,EAAI,MAAU/B,QAAQ,KAAM,IAAIA,QAAQ,cAAe,IAAMiI,EAAWjI,QAAQ,KAAM,IAAIA,QAAQ,cAAe,IAC9HuF,EAAUlF,KAAK0B,GACXgG,GAAwB5H,SAAS4B,EAAI,eAAqBiG,EAAa3H,KAAK0B,UAKtF,IAAI6D,EAAS/C,gBAAiB6C,OAAO,CAAC,EAAG7C,MAAO0C,EAAUvE,KAAI,SAACe,GAAD,OAAUE,WAAWF,EAAKqD,UAA2BO,MAAM,CAAC,EAAGpB,EAAgB,IAEzIc,EAAkBxC,WAAYyC,KAAK,IACvCzC,SAAUc,MAAMF,UAAU,YAAiBlC,KAAKyG,GAAcpE,KAAK,KAChEd,KAAK,SAAS,SAAAK,GAAC,MAAI,mBAAqBA,EAAC,MAAUnD,QAAQ,KAAM,IAAIA,QAAQ,cAAe,OAC5F8C,KAAK,aAAa,SAAUK,EAAGZ,GAE9B,IAAI4F,EAAc,EAIlB,OAHIlG,WAAWkB,EAAEiC,IAAyB,IACxC+C,EAAcvC,EAAO3D,WAAWkB,EAAEiC,MAE7B,aAAe+C,EAAc,SAErCrF,KAAK,cAAc,SAAUK,EAAGZ,GAC/BM,SAAUc,KAAK0D,YAAYe,QAAQjF,EAAC,IAAO,GAC3CN,SAAUc,MAAMF,UAAU,QAAQlC,KAAK,CAAC,IAAIqC,KAAK,QAAQd,KAAK,KAAK,WAAiE,OAAnDuC,EAAgBU,KAAKlD,EAAG4B,EAAYtB,EAAC,SAAqBkC,OACxIvC,KAAK,QAAQ,SAAAK,GAAC,OAAIF,EAAc8E,SAEpCxB,GAAG,SAAS,SAAApD,GACXgB,EAAoBxB,EAAgB6C,SAASrC,EAAC,IAAUR,EAAgBhB,QAAO,SAAAI,GAAI,OAAIA,GAAQoB,EAAC,MAA5E,sBAA0FR,GAA1F,CAA2GQ,EAAC,eAM5IY,EAA4B,UAAWC,EAAoB1B,EAAiB2B,EAAWvD,EAAewD,EACpGvB,EAAiBwB,EAAqBlB,EAAeL,EAAawB,EAAkBC,EAAsBC,EAC1GC,EAxDwB,GAwDUE,GAmC/B,SAAS+B,EACdlD,EACAU,EACA1B,EACA2B,EACAvD,EACAwD,EACAvB,EACAwB,EACAlB,EACAL,EACAwB,EACAC,GAEA,IAAIW,EACe,GADfA,EAKW,EALXA,EAMgB,GANhBA,EAOiB,EAEjB0C,EAAsB/C,EAAE,IAAMrB,GAAWqE,QAAU3C,EACnD4C,EAAuBjD,EAAE,IAAMrB,GAAWsB,SAAoC,EAAzBI,EACrDC,EACFyC,EAAsBpF,EAAgBjB,OAAS2D,EAC7CE,EAAc0C,EAClBtF,EAAgBtB,KAAI,SAACmC,EAAGkF,GACtB,IAAIC,EACFtD,EACAC,EAAaoD,EACbrD,EAA2BqD,EACzBlD,EAAehC,EAAE,GACjBiC,EAAuBjC,EAAE,GAAK,gBAClCe,EAAelD,KAAI,SAACC,GAClB,IAAIsE,EAAY,GAChBtB,EAAUhD,GAAOD,KAAI,SAACe,GAElBA,EAAK,UAAYrB,GACjBsD,EAAmBwB,SAASrF,SAAS4B,EAAI,iBAEzCA,EAAI,GACFuB,EACAvB,EAAI,MAAU/B,QAAQ,KAAM,IAAIA,QAAQ,cAAe,IACvDiB,EAAMjB,QAAQ,KAAM,IAAIA,QAAQ,cAAe,IACjDuF,EAAUlF,KAAK0B,OAInB,IAAI6D,EAAS/C,gBAEV6C,OAAO,CACN7C,MAAO0C,EAAUvE,KAAI,SAACe,GAAD,OAAUE,WAAWF,EAAKoB,EAAE,SACjDN,MAAO0C,EAAUvE,KAAI,SAACe,GAAD,OAAUE,WAAWF,EAAKoB,EAAE,WAElDwC,MAAM,CAAC,EAAIX,EAAoBC,EAAa,EAAID,IAC/CS,EAAS5C,gBAEV6C,OAAO,CACN7C,MACE0C,EAAUvE,KAAI,SAACe,GAAD,OAAUE,WAAWF,EAAKqD,QAE1CvC,MACE0C,EAAUvE,KAAI,SAACe,GAAD,OAAUE,WAAWF,EAAKqD,UAG3CO,MAAM,CACLX,EAAyBA,EACzBE,EAAcF,IAEFnC,SACN,IAAMS,GACbiF,OAAO,IAAMpF,EAAE,GAAGnD,QAAQ,YAAa,KACvCyD,UAAU,cAAgBxC,GAC1BM,KAAKgE,GAAW,SAACpC,GAAD,OAAOA,EAAC,MACxBS,MACC,SAACiC,GAAD,OACEA,EACGC,OAAO,UACPhD,KAAK,MAAM,SAACK,GAAD,OAAOA,EAAC,MACnBL,KAAK,QAAS,qBAAuB7B,GACrC6B,KAAK,IAAKkC,GACVlC,KACC,MACA,SAACK,GAAD,OACE6B,EAAqB,EACrBS,EAAOxD,WAAWkB,EAAEiC,QAEvBtC,KAAK,MAAM,SAACK,EAAGZ,GAAJ,OAAUqD,EAAO3D,WAAWkB,EAAEgC,QACzCrC,KAAK,QAAQ,SAACK,GAAD,OAAOF,EAAcE,EAAC,iBACnCL,KACC,OACA,SAACK,EAAGZ,GAAJ,OAAU+F,EAAmB1C,EAAO3D,WAAWkB,EAAEgC,QAElDrC,KAAK,gBAAgB,SAACK,GAAD,OAAOA,EAAC,mBAElC,SAAC6C,GAAD,OACEA,EACGlD,KAAK,QAAS,qBAAuB7B,GACrC4C,aACAC,SAASlB,EAAYqD,kBACrBC,MACCtD,EAAYuD,eACZvD,EAAYwD,oBACZxD,EAAYyD,mBAEbE,GAAG,OAAO,kBACTiC,EAAqB7F,EAAiBM,MAEvCH,KAAK,MAAM,SAACK,GAAD,OAAOA,EAAC,MACnBL,KAAK,QAAS,qBAAuB7B,GACrC6B,KAAK,IAAKkC,GACVlC,KACC,MACA,SAACK,GAAD,OACE6B,EAAqB,EACrBS,EAAOxD,WAAWkB,EAAEiC,QAEvBtC,KAAK,MAAM,SAACK,EAAGZ,GAAJ,OAAUqD,EAAO3D,WAAWkB,EAAEgC,QACzCrC,KAAK,QAAQ,SAACK,GAAD,OAAOF,EAAcE,EAAC,iBACnCL,KACC,OACA,SAACK,EAAGZ,GAAJ,OAAU+F,EAAmB1C,EAAO3D,WAAWkB,EAAEgC,QAElDrC,KAAK,gBAAgB,SAACK,GAAD,OAAOA,EAAC,mBAClC,SAACmD,GAAD,OAAUA,EAAKpD,YAGhBJ,KACC,OACA,SAACK,EAAGZ,GAAJ,OAAU+F,EAAmB1C,EAAO3D,WAAWkB,EAAEgC,QAElDoB,GAAG,SAAS,SAACpD,GACZgB,EACExB,EAAgB6C,SAASrC,EAAC,IACtBR,EAAgBhB,QAAO,SAACI,GAAD,OAAUA,GAAQoB,EAAC,MAD9C,sBAEQR,GAFR,CAEyBQ,EAAC,e,YC1O/B,SAASsF,EAAuBnF,EAAUoF,EAAe1E,EAAoBrE,EAAeuE,EAAgBtB,EAAalC,EAAeiI,EAAShG,EAAiBwB,EAAqBlB,EAAcpD,EAAe+I,EAAkBrI,EAAQkE,GACnP,IAAIoE,EAAelE,EAAE,IAAMrB,GAAWqE,QAAU,EAC5CpG,EAAO5B,EAAcgC,QAAO,SAAAI,GAAI,OAAIrB,GAAeqB,EAAK,UAAYiC,EAAmBwB,SAASrF,SAAS4B,EAAI,kBAC7G+G,EAAkB,GACtBvH,EAAKP,KAAI,SAAAe,GAAUmC,EAAelD,KAAI,SAAAC,GAAK,OAAI6H,EAAgBzI,KAAK0I,KAAKC,IAAI7I,SAAS4B,EAAKd,IAAUd,SAAS4B,EAAI,sBAElH,IAAI+F,EAAS,CAAEmB,SAAU,GAAIC,SAAU,EAAGC,gBAAgB,GAAGC,cAAe,GAAIC,kBAAmB,GAAIC,mBAAoB,EAAGC,iBAAkB,IAAKC,kBAAmB,GAAIC,eAAgB,GAAIC,YAAa,KACzMC,EAAa7B,EAAOuB,kBAAoB,EACxCO,EAAgB9B,EAAOuB,kBAAoB,EAK3CQ,EAJWhH,SAAU,IAAMS,GAAWR,KAAK,SAAU6G,EAAapI,EAAKF,OAASsI,GACjFlG,UAAU,aAAalC,KAAK,CAAC,IAAIqC,KAAK,KAAKd,KAAK,QAAS,YAAYA,KAAK,YAAa,kBAGnEW,UAAU,UAAUlC,KAAKA,GAAM,SAAA4B,GAAC,OAAIA,EAAC,SAAWS,MAAK,SAAAiC,GAAK,OAAIA,EAAMC,OAAO,KAAKhD,KAAK,QAAS,SAClHA,KAAK,aAAa,SAACK,EAAGZ,GAAJ,MAAU,aAAeuF,EAAO4B,YAAc,IAAMnH,EAAIoH,EAAa,UACtF,SAAA3D,GAAM,OAAIA,EAAOnC,aAAaC,SAASlB,EAAYuD,gBAAgBrD,KAAK,aAAa,SAACK,EAAGZ,GAAJ,MAAU,aAAeuF,EAAO4B,YAAc,IAAMnH,EAAIoH,EAAa,UAC1J,SAAArD,GAAI,OAAIA,EAAKpD,YAIjB2G,EAAQ/G,KAAK,aAAa,SAAUK,GAClCN,SAAUc,MAAMF,UAAU,QAAQlC,KAAK,CAAC4B,IAAIS,KAAK,QAAQiB,KAAK1B,EAAC,MAAY,IAAMA,EAAC,cAAkBL,KAAK,QAAQ,SAAAK,GAAC,OAAIF,EAAcE,EAAC,iBAAmBL,KAAK,oBAAqB,WAAWA,KAAK,YAAagF,EAAOmB,UACnNnG,KAAK,IAAK,GAAGA,KAAK,cAAe,OAAOA,KAAK,KAAMgF,EAAOoB,YAI/DW,EAAQ/G,KAAK,iBAAiB,SAAUK,GAE1B,SAAT5C,GChCQ,SAA0BuJ,EAAQhC,EAAQ6B,EAAY9J,EAAgBsD,EAAGF,EAAevC,EAAekI,GAClH,IAAI1I,EAAOQ,EACPqJ,EAAkB,EAAlBA,EAA4B,EAA5BA,EAAuC,EAAvCA,EAAgD,EAChDC,EAAUlC,EAAOqB,gBAAkB,EACnCc,EAAWN,EAAa,EACxBO,EAAQJ,EAAOrG,UAAU,kBAAkBlC,KAAK,CAAC,IAAIqC,KAAK,OAAOd,KAAK,QAAS,iBAAiBA,KAAK,IAAK,GAAGA,KAAK,KAAM,GACvHA,KAAK,QAASkH,EAAUD,EAAgBA,GACxCjH,KAAK,SAAUmH,EAAWF,EAAeA,GAE1CxI,EAAO1B,EAAesD,EAAC,MAAUnD,QAAQ,KAAM,IAAIA,QAAQ,cAAe,KAE1EiH,EAAIpE,gBAAiB6C,OAAO7C,SAAUtB,GAAM,SAAU4B,GAAK,OAAOA,EAAEjD,SAAUyF,MAAM,CAAC,EAAGqE,IAE5FE,EAAMzG,UAAU,QAAQP,SACxBgH,EAAMpE,OAAO,QACRqE,MAAM5I,GAAM,SAAA4B,GAAC,OAAIA,KACjBL,KAAK,KAAM,KACXA,KAAK,UAAW,GAChBA,KAAK,OAAQG,EAAcE,EAAC,eAC5BL,KAAK,SAAUG,EAAcE,EAAC,eAC9BL,KAAK,gBAAgB,SAACK,GACnB,OAAO,OAEVL,KAAK,IAAKD,SACNoE,GAAE,SAAU9D,GAAK,OAAO8D,EAAE9D,EAAEjD,SAC5BkK,IAAG,WAEA,OADQvH,gBAAiB6C,OAAO,CAAC,EAAG7C,MAAOtB,GAAM,SAAU4B,GAAK,OAAQA,EAAE/C,UAAWuF,MAAM,CAACsE,EAAU,GAC/FtD,CAAE,MAEZ0D,IAAG,SAAUlH,GAEV,OADQN,gBAAiB6C,OAAO,CAAC,EAAG7C,MAAOtB,GAAM,SAAU4B,GAAK,OAAQA,EAAE/C,UAAWuF,MAAM,CAAC,EAAGsE,GACxFtD,CAAExD,EAAE/C,UAIvB8J,EAAMzG,UAAU,UAAU6G,QAAQ/I,KAAKA,GAAMqC,KAAK,UAC7Cd,KAAK,MAAM,SAAUK,EAAGZ,GAAK,OAAO0E,EAAE9D,EAAEjD,SACxC4C,KAAK,KAAMmH,EAAW,GACtBnH,KAAK,QAAS,QACdyD,GAAG,aAAa,SAAUpD,GACvBN,SAAUc,MAAMyD,MAAM,OAAQ,SAC9BvE,SAAUc,MAAMb,KAAK,IAAK,MAE7BsE,MAAM,QAAQ,SAACjE,GAAD,OAAOA,EAAEjD,MAAQA,EAAO,cAAgB,WACtD4C,KAAK,SAAS,SAACK,GAAD,OAAOA,EAAEjD,MAAQA,EAAO,oBAAsB,eAC5D4C,KAAK,IAAK,GACVyD,GAAG,YAAY,SAACpD,EAAGZ,GAChBM,QAAS0H,iBACT3B,EAAkBzF,EAAEjD,SAEvBqG,GAAG,YAAY,SAAUpD,GACtBN,SAAUc,MAAMyD,MAAM,OAAQ,eAC9BvE,SAAUc,MAAMyD,MAAM,OAAQjE,EAAEjD,MAAQA,EAAO,cAAgB,SAC/D2C,SAAUc,MAAMb,KAAK,IAAK,MDrBb0H,CAAiB3H,SAAUc,MAAMmE,EAAO6B,EAAW9J,EAAesD,EAAEF,EAAcvC,EAAckI,MAGzHiB,EAAQ/G,KAAK,yBAAyB,SAAUK,IEnCjC,SAA+B4B,EAAUxD,EAAK2C,EAAe4D,EAAOrD,EAAY9B,EAAgBwB,EAAoBuE,EAAczF,EAAc2G,EAAczG,EAAEP,EAAY+G,EAAWd,GACpM,IAAI4B,EAAqBlJ,EAAKI,QAAO,SAAAI,GAAI,OAAIoB,EAAC,cAAoBhD,SAAS4B,EAAI,iBAC3E2I,EAAY,GAChBxG,EAAelD,KAAI,SAAAiH,GACjBwC,EAAmBzJ,KAAI,SAAAe,GACrB,IAAI4I,EAAI,GACRA,EAAC,aAAmBxK,SAAS4B,EAAI,cACjC4I,EAAC,eAAqBxK,SAAS4B,EAAKkG,IACpC0C,EAAC,MAAY1C,EACb0C,EAAC,KAAW5I,EAAK,SACjB2I,EAAUrK,KAAKsK,SAInB,IAAI7B,EAAkB,GACtBvH,EAAKP,KAAI,SAAAe,GAAUmC,EAAelD,KAAI,SAAAC,GAAK,OAAI6H,EAAgBzI,KAAK0I,KAAKC,IAAI7I,SAAS4B,EAAKd,IAAUd,SAAS4B,EAAI,sBAClH,IAAI6I,EAAW/H,MAAOiG,GAClB+B,EAAUhI,gBAAiB6C,OAAO,CAAC,EAAGkF,IAAWjF,MAAM,CAACmC,EAAOsB,cAAeP,GAAgBf,EAAO4B,YAAcE,KACvH,GAAgB,GAAZgB,EAAqBC,EAAUhI,gBAAiB6C,OAAO,CAAC,EAAGkF,IAAWjF,MAAM,CAACmC,EAAOsB,cAAe,IAEvGrE,EAAUtB,UAAU,QAAQlC,KAAK,CAAC4B,IAAIS,MAAK,SAAAiC,GAAK,OAAIA,EAAMC,OAAO,QAC9DhD,KAAK,KAAMgF,EAAOsB,eAAetG,KAAK,MAAM,SAACK,EAAGZ,GAAJ,OAAUoH,EAAapH,KAAGO,KAAK,MAAM,SAACK,EAAGZ,GAAJ,OAAUoH,EAAapH,KAAGO,KAAK,eAAgBgF,EAAOuB,mBAAmBvG,KAAK,SAAU,WAAWA,KAAK,MAAM,SAACgI,GAC/L,IAAIC,EAAO,GAEX,OADAL,EAAU1J,KAAI,SAAAe,GAAI,OAAIgJ,EAAK1K,KAAK0I,KAAKC,IAAIjH,EAAI,eAAqBA,EAAI,kBAC/D8I,EAAQhI,MAAOkI,UAGtB,SAAA/E,GAAM,OAAIA,EAAOnC,aAAaC,SAASlB,EAAYwD,qBAAqBF,MAAMtD,EAAYuD,gBAAgBrD,KAAK,MAAM,SAACgI,GACtH,IAAIC,EAAO,GAEX,OADAL,EAAU1J,KAAI,SAAAe,GAAI,OAAIgJ,EAAK1K,KAAK0I,KAAKC,IAAIjH,EAAI,eAAqBA,EAAI,kBAC/D8I,EAAQhI,MAAOkI,UAItBN,EAAqBlJ,EAAKI,QAAO,SAAAI,GAAI,OAAIoB,EAAC,cAAoBhD,SAAS4B,EAAI,iBAA/E,IACIwD,EAAY,GAChBrB,EAAelD,KAAI,SAAAiH,GACjBwC,EAAmBzJ,KAAI,SAAAe,GACrB,IAAI4I,EAAI,GACRA,EAAC,aAAmBxK,SAAS4B,EAAI,cACjC4I,EAAC,eAAqBxK,SAAS4B,EAAKkG,IACpC0C,EAAC,MAAY1C,EACb0C,EAAC,KAAW5I,EAAK,SACjB4I,EAAC,GAAQ5I,EAAI,MAAU/B,QAAQ,KAAM,IAAIA,QAAQ,cAAe,IAAMiI,EAAWjI,QAAQ,KAAM,IAAIA,QAAQ,cAAe,IAC1HuF,EAAUlF,KAAKsK,SAInB,IAAItF,EAAkBxC,WAAYyC,KAAK,IAC3BP,EAAUtB,UAAU,YAAelC,KAAKgE,GAAW3B,KAAK,KACnEd,KAAK,SAAQ,SAAAK,GAAC,OAAEA,EAAC,GAAO,sBACtBL,KAAK,aAAa,SAAUgI,EAAIvI,GAK/B,OAFIuI,EAAE,eAAqBA,EAAE,cAAoB,GAAmBD,EAAQ9B,KAAKC,IAAI8B,EAAE,eAAqBA,EAAE,eAAqBlB,EAE5H,aADMiB,EAAQ9B,KAAKC,IAAI8B,EAAE,eAAqBA,EAAE,eACnB,SAErChI,KAAK,cAAc,SAAUK,EAAGZ,GAC/BM,SAAUc,MAAMF,UAAU,QAAQlC,KAAK,CAAC,IAAIqC,KAAK,QAAQd,KAAK,KAAK,WAA+D,OAAlDuC,EAAgBU,KAAKlD,EAAG4B,EAAYtB,EAAC,SAAoBkC,OACtIvC,KAAK,QAAQ,kBAAMG,EAAcE,EAAC,oBAEtCL,KAAK,iBAAgB,SAASK,GAC7BN,SAAUc,KAAK0D,YAAYe,QAAQjF,EAAC,IAAO,MAGxCL,KAAK,YAAa4F,GACtBnC,GAAG,SAAS,SAAApD,GAAC,OAAIgB,EAAoBxB,EAAgB6C,SAASrC,EAAC,IAAUR,EAAgBhB,QAAO,SAAAI,GAAI,OAAIA,GAAQoB,EAAC,MAA5E,sBAA0FR,GAA1F,CAA2GQ,EAAC,SF/BpJ6H,CAAsBnI,SAAUc,MAAMpC,EAAK2C,EAAe4D,EAAOrD,EAAY9B,EAAgBwB,EAAoBuE,EAAczF,EAAc2G,EAAczG,EAAEP,EAAY+G,EAAWd,M,+CG5BpKoC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFxD,MAAO,QAEXyD,QAAS,CACLnC,SAAUiC,EAAMG,WAAWC,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEhBC,iBAAkB,CACdxC,SAAUiC,EAAMG,WAAWC,QAAQ,IACnCI,MAAOR,EAAMS,QAAQ9G,KAAK+G,WAE9BC,MAAO,CACHC,aAAc,IAElBC,WAAY,CACRC,WAAY,QAqGLC,aA3BS,SAACC,GACrB,MAAO,CACHxL,cAAewL,EAAMxL,cACrBD,YAAayL,EAAMzL,YACnB0L,KAAMD,EAAMC,KACZC,WAAYF,EAAME,WAClBC,iBAAkBH,EAAMG,iBACxBC,kBAAmBJ,EAAMI,kBACzBC,kBAAmBL,EAAMK,kBACzBC,gBAAiBN,EAAMM,gBACvBC,gBAAiBP,EAAMO,gBACvBC,gBAAiBR,EAAMQ,gBACvBC,gBAAiBT,EAAMS,gBACvBC,mBAAoBV,EAAMU,mBAC1BrM,QAAS2L,EAAM3L,QACf2D,eAAgBgI,EAAMhI,eACtB2I,yBAA0BX,EAAMW,yBAChCC,QAASZ,EAAMY,QACfC,qBAAsBb,EAAMa,yBAGV,SAACC,GACvB,MAAO,CACHC,gBAAiB,SAACC,GAAD,OAASF,EAAS,CAAEjH,KAAM,cAAec,MAAOqG,KACjEC,YAAa,SAACD,GAAD,OAASF,EAAS,CAAEjH,KAAM,UAAWc,MAAOqG,QAGlDjB,EAlGf,SAAemB,GAMX,IANmB,IAAD,IAEqBC,IAAMC,SAASF,EAAM3M,aAF1C,mBAEX8M,EAFW,KAEEC,EAFF,KAIdC,EAAa,GACbC,GAAQN,EAAMhB,WAAa,GAApB,EACF7J,EAAI,EAAGA,EAAI,EAAGA,IACnBkL,EAAWpN,KAAK,EAAKqN,EAAOnL,GAEhC,IAAIoL,EAAQF,EAAWzM,KAAI,SAAAe,GACvB,IAAI6L,EAASzN,SAAS4B,GACtB,MAAO,CAAE8E,MAAO+G,EAAQC,MAAOD,MAInC,OACI,yBAAKE,UAAU,cAAc1G,MAAO,CAAEO,MAAO,OAAQoG,QAAS,GAAGC,QAAQ,iBAoBjE,yBAAK5G,MAAO,CAACO,MAAO,QAChB,kBAACsG,EAAA,GAAD,GAAQpH,MAAO0G,EAAaW,SAAU,SAACC,EAAOC,GAAR,OAAqBZ,EAAgBY,IAAWC,kBAAmB,SAACF,EAAOC,GAAR,OAAqBhB,EAAMD,YAAY,UAC5ImB,kBAAkB,OAAOC,kBAAgB,gBAD7C,kCAC8E,MAD9E,oBACwF,GADxF,oBACgGnB,EAAMhB,YADtG,sBACyHuB,GADzH,KAwBJ,yBAAKvG,MAAO,CAACO,MAAO,QACpB,kBAAC6G,EAAA,EAAD,CAAQV,UAAU,eAAe1G,MAAO,CAAEqH,gBAAiB,UAAW7J,OAAQ,GAAIkH,aAAc,EAAGE,YAAa,GAC5G0C,QAAS,WACLtB,EAAMH,gBAAgBM,KAF9B,qBAShB,IC1FMoB,E,kDACJ,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,WAAa,KAClB,EAAK1C,MAAQ,CAAE2C,uBAAwB,IAAKC,OAAQ,EAAGC,OAAQ,GAH9C,E,gEAMjBpL,KAAKqL,SAAS,CAAErH,MAAOsH,OAAOC,gB,4CAEVC,EAAWC,GAC/B,OAAO,I,yCAEUD,EAAWC,GAE5B,IAAIC,EAAM1L,KAAKyJ,MAAM3M,YAAY,GAE7B0C,GADIQ,KAAKyJ,MAAM3M,YAAY,GAChB4O,GAAO,EAClBpM,EAAgBJ,gBAEjB6C,OAAO,CACN2J,EAAU,EAAJlM,EACNkM,EAAU,EAAJlM,EACNkM,EAAU,EAAJlM,EACNkM,EAAU,EAAJlM,EACNkM,EAAU,EAAJlM,EACNkM,EAAU,EAAJlM,EACNkM,IAEDC,YAAYzM,kBACZ8C,MAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,YACnF3B,EAAqBnB,QAASc,KAAKyJ,MAAM3M,YAAY,GAAGkD,KAAKyJ,MAAM3M,YAAY,GAAK,GAEpFH,EAAsBiP,EACxB5L,KAAKyJ,MAAM7M,QACXoD,KAAKyJ,MAAMlJ,eACXP,KAAKyJ,MAAM3M,YACXkD,KAAKyJ,MAAM1M,cALU,EAOrBiD,KAAKyJ,MAAMxM,WAET0B,EAAkBT,OAAO2N,QAAQlP,GAAqB4B,MAAK,SAACyI,EAAG8E,GAAJ,OAAU9E,EAAE,GAAK8E,EAAE,MAAI3K,MAAM,EATrE,GAWvB4K,EACE,qBACA,MACA1L,EACAL,KAAKyJ,MAAMzN,cACXgE,KAAKyJ,MAAMlJ,eACXP,KAAKyJ,MAAMxK,YACXe,KAAKyJ,MAAM1M,cACXiD,KAAKyJ,MAAMuC,UACXhM,KAAKyJ,MAAMzK,gBACXgB,KAAKyJ,MAAMjJ,oBACXlB,EACAU,KAAKyJ,MAAMvN,eACX8D,KAAKyJ,MAAMxE,kBACXjF,KAAKyJ,MAAM7M,QACXoD,KAAKyJ,MAAM3I,aAEbmL,EAAgC,MAAO5L,EAAoB1B,EAAiBqB,KAAKyJ,MAAMnJ,UAAWN,KAAKyJ,MAAM1M,cAAeiD,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,EAAeU,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMhJ,iBAAkBT,KAAKyJ,MAAM/I,qBAAsBV,KAAKyJ,MAAM3I,aACnU+D,EAA8B,EAAW7E,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMxK,e,+BAGhF,OACA,yBAAKiN,GAAG,qBAAqBzI,MAAO,CAAEO,MAAO,OAAQmE,aAAc,U,GAhE9CgE,aAgHV7D,eA5CS,SAACC,GAAW,IAAD,EACjC,OAAO,EAAP,CACEzL,YAAayL,EAAMzL,YACnBC,cAAewL,EAAMxL,cACrBqP,WAAY7D,EAAM6D,WAClBC,4BAA6B9D,EAAM8D,4BACnCC,SAAU/D,EAAM+D,SAChB/L,eAAgBgI,EAAMhI,eACtBvE,cAAeuM,EAAMvM,cACrB6M,gBAAiBN,EAAMM,gBACvB0D,iBAAkBhE,EAAMgE,iBACxB5P,oBAAqB4L,EAAM5L,oBAC3BC,QAAS2L,EAAM3L,QACf4P,eAAgBjE,EAAMiE,eACtBtQ,eAAgBqM,EAAMrM,gBAbxB,wBAcWqM,EAAM3L,SAdjB,4BAee2L,EAAMtJ,aAfrB,qBAgBQsJ,EAAMkE,MAhBd,qCAiBwBlE,EAAMmE,sBAjB9B,0BAkBanE,EAAMyD,WAlBnB,0BAmBazD,EAAMoE,WAnBnB,0BAoBapE,EAAMjI,WApBnB,oCAqBuBiI,EAAM5L,qBArB7B,0BAsBa4L,EAAMtL,WAtBnB,gCAuBmBsL,EAAMvJ,iBAvBzB,iCAwBoBuJ,EAAM9H,kBAxB1B,4BAyBe8H,EAAMzH,aAzBrB,KA4BwB,SAACuI,GACzB,MAAO,CACL7I,oBAAqB,SAAC+I,GAAD,OACnBF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KAC7CqD,cAAe,SAACrD,GAAD,OAASF,EAAS,CAAEjH,KAAM,YAAac,MAAOqG,KAC7DsD,mBAAoB,SAACtD,GAAD,OAClBF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KAC5CuD,gCAAiC,SAACvD,GAAD,OAC/BF,EAAS,CAAEjH,KAAM,8BAA+Bc,MAAOqG,KACzDwD,WAAY,SAACxD,GAAD,OAASF,EAAS,CAAEjH,KAAM,SAAUc,MAAOqG,KACvD7I,qBAAsB,SAAC6I,GAAD,OACpBF,EAAS,CAAEjH,KAAM,mBAAoBc,MAAOqG,KAC9CtE,kBAAmB,SAACsE,GAAD,OAASF,EAAS,CAAEjH,KAAM,gBAAiBc,MAAOqG,QAG1DjB,CAA4C0C,G,SC/GrDgC,EAAY1F,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFxD,MAAO,QAEXyD,QAAS,CACLnC,SAAUiC,EAAMG,WAAWC,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEhBC,iBAAkB,CACdxC,SAAUiC,EAAMG,WAAWC,QAAQ,IACnCI,MAAOR,EAAMS,QAAQ9G,KAAK+G,WAE9BC,MAAO,CACHC,aAAc,IAElBC,WAAY,CACRC,WAAY,QA+EpB,IAaeC,eAbS,SAACC,GACrB,MAAO,CACHC,KAAMD,EAAMC,KACZC,WAAYF,EAAME,WAClBE,kBAAmBJ,EAAMI,sBAGP,SAACU,GACvB,MAAO,CACH4D,sBAAuB,SAAC1D,GAAD,OAASF,EAAS,CAAEjH,KAAM,oBAAqBc,MAAOqG,KAC7EC,YAAa,SAACD,GAAD,OAASF,EAAS,CAAEjH,KAAM,UAAWc,MAAOqG,QAGlDjB,EAzFf,SAAemB,GACKuD,IAMhB,IAPmB,IAAD,IAG+CtD,IAAMC,SAASF,EAAMd,mBAHpE,mBAGXuE,EAHW,KAGeC,EAHf,KAKdrD,EAAa,GACbC,GAAQN,EAAMhB,WAAa,GAApB,EACF7J,EAAI,EAAGA,EAAI,EAAGA,IACnBkL,EAAWpN,KAAK,EAAKqN,EAAOnL,GAEhC,IAAIoL,EAAQF,EAAWzM,KAAI,SAAAe,GACvB,IAAI6L,EAASzN,SAAS4B,GACtB,MAAO,CAAE8E,MAAO+G,EAAQC,MAAOD,MAInC,OACI,yBAAKE,UAAU,cAAc1G,MAAO,CAAEO,MAAM,MAAMoJ,UAAU,KAChD,kBAAC9C,EAAA,GAAD,GACIpH,MAAOgK,EACP3C,SAAU,SAACC,EAAOC,GAAR,OAAqB0C,EAA6B1C,IAC5DC,kBAAmB,SAACF,EAAOC,GAAR,OAAqBhB,EAAMD,YAAY,UAC1DmB,kBAAkB,OAClBC,kBAAgB,gBALpB,kCAMsB,MANtB,oBAOS,GAPT,oBAQSnB,EAAMhB,YARf,sBASWuB,GATX,IAWA,kBAACqD,EAAA,EAAD,CAAM5J,MAAO,CAAE0E,aAAc,IAAMmF,WAAS,EACxCC,UAAU,MACVC,QAAQ,eACRC,WAAW,WAsCf,kBAAC5C,EAAA,EAAD,CAAQV,UAAU,eAAe1G,MAAO,CAAEO,MAAOhD,EAAE,YAAYgD,QAAU,GAAI8G,gBAAiB,UAAW7J,OAAQ,GAAIkH,aAAc,EAAGE,YAAa,GAC/I0C,QAAS,kBAAMtB,EAAMwD,sBAAsBC,KAD/C,oBC1FdF,EAAY1F,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFxD,MAAO,QAEXyD,QAAS,CACLnC,SAAUiC,EAAMG,WAAWC,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEhBC,iBAAkB,CACdxC,SAAUiC,EAAMG,WAAWC,QAAQ,IACnCI,MAAOR,EAAMS,QAAQ9G,KAAK+G,WAE9BC,MAAO,CACHC,aAAc,IAElBC,WAAY,CACRC,WAAY,QA+EpB,IA2BeC,eA3BS,SAACC,GACrB,MAAO,CACHxL,cAAewL,EAAMxL,cACrBD,YAAayL,EAAMzL,YACnB0L,KAAMD,EAAMC,KACZC,WAAYF,EAAME,WAClBC,iBAAkBH,EAAMG,iBACxBC,kBAAmBJ,EAAMI,kBACzBC,kBAAmBL,EAAMK,kBACzBC,gBAAiBN,EAAMM,gBACvBC,gBAAiBP,EAAMO,gBACvBC,gBAAiBR,EAAMQ,gBACvBC,gBAAiBT,EAAMS,gBACvBC,mBAAoBV,EAAMU,mBAC1BrM,QAAS2L,EAAM3L,QACf2D,eAAgBgI,EAAMhI,eACtB2I,yBAA0BX,EAAMW,yBAChCC,QAASZ,EAAMY,QACfC,qBAAsBb,EAAMa,yBAGV,SAACC,GACvB,MAAO,CACHqE,sBAAuB,SAACnE,GAAD,OAASF,EAAS,CAAEjH,KAAM,oBAAqBc,MAAOqG,KAC7EC,YAAa,SAACD,GAAD,OAASF,EAAS,CAAEjH,KAAM,UAAWc,MAAOqG,QAGlDjB,EAvGf,SAAemB,GACKuD,IAMhB,IAPmB,IAAD,IAG+CtD,IAAMC,SAASF,EAAMb,mBAHpE,mBAGX+E,EAHW,KAGeC,EAHf,KAKd9D,EAAa,GACbC,GAAQN,EAAMhB,WAAa,GAApB,EACF7J,EAAI,EAAGA,EAAI,EAAGA,IACnBkL,EAAWpN,KAAK,EAAKqN,EAAOnL,GAEhC,IAAIoL,EAAQF,EAAWzM,KAAI,SAAAe,GACvB,IAAI6L,EAASzN,SAAS4B,GACtB,MAAO,CAAE8E,MAAO+G,EAAQC,MAAOD,MAInC,OACI,yBAAKE,UAAU,cAAc1G,MAAO,CAAEO,MAAO,MAAOoJ,UAAW,KAC3D,kBAAC9C,EAAA,GAAD,GACIpH,MAAOyK,EACPpD,SAAU,SAACC,EAAOC,GAAR,OAAqBmD,EAA6BnD,IAC5DC,kBAAmB,SAACF,EAAOC,GAAehB,EAAMD,YAAY,UAC5DmB,kBAAkB,OAClBC,kBAAgB,gBALpB,kCAMsB,MANtB,oBAOS,GAPT,oBAQSnB,EAAMhB,YARf,sBASWuB,GATX,IAWA,kBAACqD,EAAA,EAAD,CAAM5J,MAAO,CAAE0E,aAAc,IAAMmF,WAAS,EACxCC,UAAU,MACVC,QAAQ,eACRC,WAAW,WAqCf,kBAAC5C,EAAA,EAAD,CAAQV,UAAU,eAAe1G,MAAO,CAAEO,MAAOhD,EAAE,YAAYgD,QAAU,GAAI8G,gBAAiB,UAAW7J,OAAQ,GAAIkH,aAAc,EAAGE,WAAY,GAC9I0C,QAAS,kBAAMtB,EAAMiE,sBAAsBC,KAD/C,oBCxFN3C,G,kDACJ,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,WAAa,KAClB,EAAK1C,MAAQ,CAAE2C,uBAAwB,IAAKC,OAAQ,EAAGC,OAAQ,GAH9C,E,gEAMjBpL,KAAKqL,SAAS,CAAErH,MAAOsH,OAAOC,gB,4CAEVC,EAAWC,GAC/B,OAAO,I,yCAEUD,EAAWC,GAE5B,IAAIC,EAAMxM,MAAO,CAACc,KAAKyJ,MAAMd,kBAAkB,GAAG3I,KAAKyJ,MAAMb,kBAAkB,KAC3EpJ,GADuFN,MAAO,CAACc,KAAKyJ,MAAMd,kBAAkB,GAAG3I,KAAKyJ,MAAMb,kBAAkB,KACjJ8C,GAAO,EAClBpM,EAAgBJ,gBAAiB6C,OAAO,CAAC2J,EAAU,EAAJlM,EAAOkM,EAAU,EAAJlM,EAAOkM,EAAU,EAAJlM,EAAOkM,EAAU,EAAJlM,EAAOkM,EAAU,EAAJlM,EAAOkM,EAAU,EAAJlM,EAAOkM,IAAMC,YAAYzM,kBAAmB8C,MAAM,CAAC,UAAW,UAAW,UAAW,UAA0B,UAAW,UAAW,UAAW,YAE/P3B,EAAqBnB,QAASc,KAAKyJ,MAAMd,kBAAkB,GAAI3I,KAAKyJ,MAAMd,kBAAkB,GAAK,GAEjGhM,EAAsBiP,EAA0B5L,KAAKyJ,MAAM7M,QAASoD,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMd,kBAAmB3I,KAAKyJ,MAAM1M,cADrH,EACsJiD,KAAKyJ,MAAMxM,WACpL0B,EAAkBT,OAAO2N,QAAQlP,GAAqB4B,MAAK,SAACyI,EAAG8E,GAAJ,OAAU9E,EAAE,GAAK8E,EAAE,MAAI3K,MAAM,EAFrE,GAGvB4K,EAAuC,MAAM,MAAO1L,EAAoBL,KAAKyJ,MAAMzN,cAAegE,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMoE,eAAgB7N,KAAKyJ,MAAMuC,UAAWhM,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,EAAcU,KAAKyJ,MAAMvN,eAAe8D,KAAKyJ,MAAMxE,mBACrTgH,EAAgC,MAAO5L,EAAoB1B,EAAiBqB,KAAKyJ,MAAMnJ,UAAWN,KAAKyJ,MAAM1M,cAAeiD,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,EAAeU,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMhJ,iBAAkBT,KAAKyJ,MAAM/I,sBAClSuL,EAAiC,MAAO5L,EAAoB1B,EAAiBqB,KAAKyJ,MAAMnJ,UAAWN,KAAKyJ,MAAM1M,cAAeiD,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,EAAeU,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMhJ,iBAAkBT,KAAKyJ,MAAM/I,sBAEnS,IAAIoN,EAAsB5O,QAASc,KAAKyJ,MAAMb,kBAAkB,GAAI5I,KAAKyJ,MAAMb,kBAAkB,GAAK,GAClGmF,EAAuBnC,EAA0B5L,KAAKyJ,MAAM7M,QAASoD,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMb,kBAAmB5I,KAAKyJ,MAAM1M,cARtH,EAQuJiD,KAAKyJ,MAAMxM,WACrL+Q,EAAmB9P,OAAO2N,QAAQkC,GAAsBxP,MAAK,SAACyI,EAAG8E,GAAJ,OAAU9E,EAAE,GAAK8E,EAAE,MAAI3K,MAAM,EATvE,GAUvB4K,EAAuC,MAAM,MAAO+B,EAAqB9N,KAAKyJ,MAAMzN,cAAegE,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMoE,eAAgB7N,KAAKyJ,MAAMuC,UAAWhM,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,EAAcU,KAAKyJ,MAAMvN,eAAe8D,KAAKyJ,MAAMxE,mBACtTgH,EAAgC,MAAO6B,EAAqBE,EAAkBhO,KAAKyJ,MAAMnJ,UAAWN,KAAKyJ,MAAM1M,cAAeiD,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,EAAeU,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMhJ,iBAAkBT,KAAKyJ,MAAM/I,sBACpSuL,EAAiC,MAAO6B,EAAqBE,EAAkBhO,KAAKyJ,MAAMnJ,UAAWN,KAAKyJ,MAAM1M,cAAeiD,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,EAAeU,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMhJ,iBAAkBT,KAAKyJ,MAAM/I,sBAErSmE,EAAqB7E,KAAKyJ,MAAMzK,gBAAiBM,EAAeU,KAAKyJ,MAAMxK,aAC3E4F,EAA8B,EAAW7E,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMxK,e,+BAIhF,OACE,kBAACoO,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMU,eAAe,gBAAgB9D,UAAU,kBAAkB1G,MAAO,CAAEqH,gBAAiB,QAASV,QAAS,UAAW8D,OAAQ,oBAAqBlK,MAAO,OAAQmK,UAAW,4BACvM,kBAACd,EAAA,EAAD,CAAMC,WAAS,EAAClP,MAAI,EAACmP,UAAU,SAASU,eAAe,gBAAgBxK,MAAO,CAAE2K,aAAc,EAAGF,OAAQ,oBAAqBjN,OAAQ,OAAQ+C,MAAO,UACnJ,uBAAGP,MAAO,CAAEpC,OAAQ,EAAGgN,YAAa,MAAOvD,gBAAiB,yBAA0BwD,WAAY,SAAUC,aAAc,sBAA1H,WACA,kBAAClB,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEqH,gBAAiB,2BAA2B,kBAAC0D,EAAD,OAChE,kBAACnB,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEqH,gBAAiB,yBAA0B7J,OAA0C,GAAjCD,EAAE,oBAAoBC,SAAiB,GAAKwN,SAAU,WAAY,yBAAKvC,GAAG,MAAMzI,MAAO,CAAEO,MAAO,OAAQ0K,YAAa,SAC7L,kBAACrB,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEqH,gBAAiB,yBAA0BsC,UAAW,EAAGuB,WAAY,EAAGP,aAAc,EAAGnN,OAAyC,GAAjCD,EAAE,oBAAoBC,WAAkB,yBAAKiL,GAAG,MAAMzI,MAAO,CAAEO,MAAO,OAAQ/C,OAAQ,YAE7M,kBAACoM,EAAA,EAAD,CAAMC,WAAS,EAAClP,MAAI,EAACmP,UAAU,SAASU,eAAe,gBAAgBxK,MAAO,CAAE4E,WAAY,KAAM+B,QAAS,EAAG8D,OAAQ,oBAAqBjN,OAAQ,OAAQ+C,MAAO,UAChK,uBAAGP,MAAO,CAAEpC,OAAQ,EAAGgN,YAAa,MAAOvD,gBAAiB,yBAA0BwD,WAAY,SAAUC,aAAc,sBAA1H,WACA,kBAAClB,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEqH,gBAAiB,2BAA2B,kBAAC8D,EAAD,OAChE,kBAACvB,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEqH,gBAAiB,yBAA0B7J,OAA0C,GAAjCD,EAAE,oBAAoBC,SAAiB,GAAKwN,SAAU,WAAY,yBAAKvC,GAAG,MAAMzI,MAAO,CAAEO,MAAO,OAAQ0K,YAAa,SAC7L,kBAACrB,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEqH,gBAAiB,yBAA0BsC,UAAW,EAAGuB,WAAY,EAAGP,aAAc,EAAGnN,OAAyC,GAAjCD,EAAE,oBAAoBC,WAAkB,yBAAKiL,GAAG,MAAMzI,MAAO,CAAEO,MAAO,OAAQ/C,OAAQ,iB,GAlD5LkL,aCHnBnB,IDqGS1C,aA1CS,SAACC,GAAW,IAAD,EACjC,OAAO,EAAP,CACEI,kBAAmBJ,EAAMI,kBACzBC,kBAAmBL,EAAMK,kBACzB7L,cAAewL,EAAMxL,cACrB8Q,eAAgBtF,EAAMsF,eACtBzB,WAAY7D,EAAM6D,WAClBC,4BAA6B9D,EAAM8D,4BACnCC,SAAU/D,EAAM+D,SAChB/L,eAAgBgI,EAAMhI,eACtBvE,cAAeuM,EAAMvM,cACrB6M,gBAAiBN,EAAMM,gBACvB0D,iBAAkBhE,EAAMgE,iBACxB5P,oBAAqB4L,EAAM5L,oBAC3BC,QAAS2L,EAAM3L,QACf4P,eAAgBjE,EAAMiE,eACtBtQ,eAAgBqM,EAAMrM,gBAfxB,wBAgBWqM,EAAM3L,SAhBjB,4BAiBe2L,EAAMtJ,aAjBrB,qBAkBQsJ,EAAMkE,MAlBd,qCAmBwBlE,EAAMmE,sBAnB9B,wBAoBWnE,EAAMY,SApBjB,0BAqBaZ,EAAMyD,WArBnB,0BAsBazD,EAAMoE,WAtBnB,0BAuBapE,EAAMjI,WAvBnB,oCAwBuBiI,EAAM5L,qBAxB7B,0BAyBa4L,EAAMtL,WAzBnB,gCA0BmBsL,EAAMvJ,iBA1BzB,iCA2BoBuJ,EAAM9H,kBA3B1B,KA8BwB,SAAC4I,GACzB,MAAO,CACL7I,oBAAqB,SAAC+I,GAAD,OAASF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KACzEqD,cAAe,SAACrD,GAAD,OAASF,EAAS,CAAEjH,KAAM,YAAac,MAAOqG,KAC7DsD,mBAAoB,SAACtD,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvEuD,gCAAiC,SAACvD,GAAD,OAASF,EAAS,CAAEjH,KAAM,8BAA+Bc,MAAOqG,KACjGwD,WAAY,SAACxD,GAAD,OAASF,EAAS,CAAEjH,KAAM,SAAUc,MAAOqG,KACvD7I,qBAAsB,SAAC6I,GAAD,OAASF,EAAS,CAAEjH,KAAM,mBAAoBc,MAAOqG,KAC3EtE,kBAAmB,SAACsE,GAAD,OAASF,EAAS,CAAEjH,KAAM,gBAAiBc,MAAOqG,QAG1DjB,CAA4C0C,I,kDCpGzD,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,WAAa,KAClB,EAAK1C,MAAQ,CAAE2C,uBAAwB,IAAKC,OAAQ,EAAGC,OAAQ,GAH9C,E,gEAMjBpL,KAAKqL,SAAS,CAAErH,MAAOsH,OAAOC,gB,4CAEVC,EAAWC,GAC/B,OAAO,I,yCAEUD,EAAWC,GAE5B,IAAIC,EAAM1L,KAAKyJ,MAAMX,gBAAgB,GACjCtJ,GAD2CQ,KAAKyJ,MAAMX,gBAAgB,GAC3D4C,GAAO,EAClBpM,EAAgBJ,gBAAiB6C,OAAO,CAAC2J,EAAU,EAAJlM,EAAOkM,EAAU,EAAJlM,EAAOkM,EAAU,EAAJlM,EAAOkM,EAAU,EAAJlM,EAAOkM,EAAU,EAAJlM,EAAOkM,EAAU,EAAJlM,EAAOkM,IAAMC,YAAYzM,kBAAmB8C,MAAM,CAAC,UAAW,UAAW,UAAW,UAA0B,UAAW,UAAW,UAAW,YAE/P3B,EAAqBnB,QAASc,KAAKyJ,MAAMX,gBAAgB,GAAI9I,KAAKyJ,MAAMX,gBAAgB,GAAK,GAE7FnM,EAAsBiP,EAA0B5L,KAAKyJ,MAAM7M,QAASoD,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMX,gBAAiB9I,KAAKyJ,MAAMV,gBADnH,EACsJ/I,KAAKyJ,MAAMxM,WACpL0B,EAAkBT,OAAO2N,QAAQlP,GAAqB4B,MAAK,SAACyI,EAAG8E,GAAJ,OAAU9E,EAAE,GAAK8E,EAAE,MAAI3K,MAAM,EAFrE,GAGvB4K,EAAuC,MAAM,MAAO1L,EAAoBL,KAAKyJ,MAAMzN,cAAegE,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMV,gBAAiB/I,KAAKyJ,MAAMuC,UAAWhM,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,GACnQ2M,EAAgC,MAAO5L,EAAoB1B,EAAiBqB,KAAKyJ,MAAMnJ,UAAWN,KAAKyJ,MAAMV,gBAAiB/I,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,EAAeU,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMhJ,iBAAkBT,KAAKyJ,MAAM/I,sBAGpS,IAAIoN,EAAsB5O,QAASc,KAAKyJ,MAAMX,gBAAgB,GAAI9I,KAAKyJ,MAAMX,gBAAgB,GAAK,GAC9FiF,EAAuBnC,EAA0B5L,KAAKyJ,MAAM7M,QAASoD,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMX,gBAAiB9I,KAAKyJ,MAAMT,gBARpH,EAQuJhJ,KAAKyJ,MAAMxM,WACrL+Q,EAAmB9P,OAAO2N,QAAQkC,GAAsBxP,MAAK,SAACyI,EAAG8E,GAAJ,OAAU9E,EAAE,GAAK8E,EAAE,MAAI3K,MAAM,EATvE,GAUvB4K,EAAuC,MAAM,MAAO+B,EAAqB9N,KAAKyJ,MAAMzN,cAAegE,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMT,gBAAiBhJ,KAAKyJ,MAAMuC,UAAWhM,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,GACpQ2M,EAAgC,MAAO6B,EAAqBE,EAAkBhO,KAAKyJ,MAAMnJ,UAAWN,KAAKyJ,MAAMT,gBAAiBhJ,KAAKyJ,MAAMlJ,eAAgBP,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMjJ,oBAAqBlB,EAAeU,KAAKyJ,MAAMxK,YAAae,KAAKyJ,MAAMhJ,iBAAkBT,KAAKyJ,MAAM/I,sBAEtSmE,EAAqB7E,KAAKyJ,MAAMzK,gBAAiBM,EAAeU,KAAKyJ,MAAMxK,aAC3E4F,EAA8B,EAAW7E,KAAKyJ,MAAMzK,gBAAiBgB,KAAKyJ,MAAMxK,e,+BAIhF,OACE,kBAACoO,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMU,eAAe,gBAAgB9D,UAAU,kBAAkB1G,MAAO,CAAEqH,gBAAiB,QAASV,QAAS,UAAW8D,OAAQ,oBAAqBlK,MAAO,OAAQmK,UAAW,4BACvM,kBAACd,EAAA,EAAD,CAAMC,WAAS,EAAClP,MAAI,EAACmP,UAAU,SAASU,eAAe,gBAAgBxK,MAAO,CAAE2K,aAAc,EAAGF,OAAQ,oBAAqBjN,OAAQ,OAAQ+C,MAAO,UACnJ,uBAAGP,MAAO,CAAEpC,OAAQ,EAAGgN,YAAa,MAAOvD,gBAAiB,yBAA0BwD,WAAY,SAAUC,aAAc,sBAAwB,UAAUvO,KAAKyJ,MAAMV,iBACvK,kBAACsE,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEqH,gBAAiB,yBAA0B7J,OAA0C,IAAjCD,EAAE,oBAAoBC,SAAkB,GAAKwN,SAAU,WAAY,yBAAKvC,GAAG,MAAMzI,MAAO,CAAEO,MAAO,OAAQ0K,YAAa,SAC9L,kBAACrB,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEqH,gBAAiB,yBAA0BsC,UAAW,EAAGuB,WAAY,EAAGP,aAAc,EAAGnN,OAAyC,GAAjCD,EAAE,oBAAoBC,WAAkB,yBAAKiL,GAAG,MAAMzI,MAAO,CAAEO,MAAO,OAAQ/C,OAAQ,YAE7M,kBAACoM,EAAA,EAAD,CAAMC,WAAS,EAAClP,MAAI,EAACmP,UAAU,SAASU,eAAe,gBAAgBxK,MAAO,CAAE4E,WAAY,KAAM+B,QAAS,EAAG8D,OAAQ,oBAAqBjN,OAAQ,OAAQ+C,MAAO,UAChK,uBAAGP,MAAO,CAAEpC,OAAQ,EAAGgN,YAAa,MAAOvD,gBAAiB,yBAA0BwD,WAAY,SAAUC,aAAc,sBAAwB,UAAUvO,KAAKyJ,MAAMT,iBACvK,kBAACqE,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEqH,gBAAiB,yBAA0B7J,OAA0C,IAAjCD,EAAE,oBAAoBC,SAAkB,GAAKwN,SAAU,WAAY,yBAAKvC,GAAG,MAAMzI,MAAO,CAAEO,MAAO,OAAQ0K,YAAa,SAC9L,kBAACrB,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEqH,gBAAiB,yBAA0BsC,UAAW,EAAGuB,WAAY,EAAGP,aAAc,EAAGnN,OAAyC,GAAjCD,EAAE,oBAAoBC,WAAkB,yBAAKiL,GAAG,MAAMzI,MAAO,CAAEO,MAAO,OAAQ/C,OAAQ,iB,GA/C5LkL,cCLnBa,IDoGS1E,aA1CS,SAACC,GAAW,IAAD,EACjC,OAAO,EAAP,CACEM,gBAAiBN,EAAMM,gBACvBC,gBAAiBP,EAAMO,gBACvBsD,WAAY7D,EAAM6D,WAClBrD,gBAAiBR,EAAMQ,gBACvBC,gBAAiBT,EAAMS,iBALzB,2BAMcT,EAAM6D,YANpB,4CAO+B7D,EAAM8D,6BAPrC,yBAQY9D,EAAM+D,UARlB,+BASkB/D,EAAMhI,gBATxB,8BAUiBgI,EAAMvM,eAVvB,gCAWmBuM,EAAMM,iBAXzB,iCAYoBN,EAAMgE,kBAZ1B,oCAauBhE,EAAM5L,qBAb7B,wBAcW4L,EAAM3L,SAdjB,+BAekB2L,EAAMiE,gBAfxB,+BAgBkBjE,EAAMrM,gBAhBxB,wBAiBWqM,EAAM3L,SAjBjB,4BAkBe2L,EAAMtJ,aAlBrB,qBAmBQsJ,EAAMkE,MAnBd,qCAoBwBlE,EAAMmE,sBApB9B,wBAqBWnE,EAAMY,SArBjB,0BAsBaZ,EAAMyD,WAtBnB,0BAuBazD,EAAMoE,WAvBnB,0BAwBapE,EAAMjI,WAxBnB,oCAyBuBiI,EAAM5L,qBAzB7B,0BA0Ba4L,EAAMtL,WA1BnB,gCA2BmBsL,EAAMvJ,iBA3BzB,iCA4BoBuJ,EAAM9H,kBA5B1B,KA+BwB,SAAC4I,GACzB,MAAO,CACL7I,oBAAqB,SAAC+I,GAAD,OAASF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KACzEqD,cAAe,SAACrD,GAAD,OAASF,EAAS,CAAEjH,KAAM,YAAac,MAAOqG,KAC7DsD,mBAAoB,SAACtD,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvEuD,gCAAiC,SAACvD,GAAD,OAASF,EAAS,CAAEjH,KAAM,8BAA+Bc,MAAOqG,KACjGwD,WAAY,SAACxD,GAAD,OAASF,EAAS,CAAEjH,KAAM,SAAUc,MAAOqG,KACvD7I,qBAAsB,SAAC6I,GAAD,OAASF,EAAS,CAAEjH,KAAM,mBAAoBc,MAAOqG,QAGhEjB,CAA4C0C,I,OCpGzC1D,aAAW,SAACC,GAAD,MAAY,CACvCsH,oBAAqB,CACnBzB,UAAW,GAEb5F,KAAM,CACJxD,MAAO,QAET8K,SAAU,CACR9K,MAAO,QAET+K,MAAO,GAEPtH,QAAS,CACPnC,SAAUiC,EAAMG,WAAWC,QAAQ,IACnC2G,WAAY/G,EAAMG,WAAWsH,wBAkCjC,IAyCe1G,gBAzCS,SAACC,GAAW,IAAD,EACjC,OAAO,EAAP,CACE0G,WAAW1G,EAAM0G,WACjBpB,eAAgBtF,EAAMsF,eACtBvB,SAAU/D,EAAM+D,SAChBvP,cAAewL,EAAMxL,cACrBkM,mBAAoBV,EAAMU,mBAC1B1I,eAAgBgI,EAAMhI,eACtBiI,KAAMD,EAAMC,KACZ0G,UAAW3G,EAAM2G,UACjBpS,YAAayL,EAAMzL,YACnBqS,OAAQ5G,EAAM4G,OACd/F,qBAAsBb,EAAMa,qBAC5BiD,4BAA6B9D,EAAM8D,4BACnC1D,kBAAmBJ,EAAMI,kBACzBC,kBAAmBL,EAAMK,kBACzBE,gBAAiBP,EAAMO,iBAfzB,qBAgBQP,EAAMC,MAhBd,wBAiBWD,EAAMY,SAjBjB,0BAkBYZ,EAAMyD,WAlBlB,KAsBwB,SAAC3C,GACzB,MAAO,CACL+F,IAAK,SAAC7F,GAAD,OAASF,EAAS,CAAEjH,KAAM,MAAOc,MAAOqG,KAC7CtE,kBAAmB,SAACsE,GAAD,OAASF,EAAS,CAAEjH,KAAM,gBAAiBc,MAAOqG,KACrE8F,aAAc,SAAC9F,GAAD,OAASF,EAAS,CAAEjH,KAAM,WAAYc,MAAOqG,KAC3D+F,mBAAoB,SAAC/F,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvEC,YAAa,SAACD,GAAD,OAASF,EAAS,CAAEjH,KAAM,UAAWc,MAAOqG,KACzDD,gBAAiB,SAACC,GAAD,OAASF,EAAS,CAAEjH,KAAM,cAAec,MAAOqG,KACjEgG,eAAgB,SAAChG,GAAD,OAASF,EAAS,CAAEjH,KAAM,aAAcc,MAAOqG,KAC/D0D,sBAAuB,SAAC1D,GAAD,OAASF,EAAS,CAAEjH,KAAM,oBAAqBc,MAAOqG,KAC7EmE,sBAAuB,SAACnE,GAAD,OAASF,EAAS,CAAEjH,KAAM,oBAAqBc,MAAOqG,KAC7EiG,oBAAqB,SAACjG,GAAD,OAASF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KACzEkG,oBAAqB,SAAClG,GAAD,OAASF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KACzEmG,mBAAoB,SAACnG,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvEoG,yBAA0B,SAACpG,GAAD,OAASF,EAAS,CAAEjH,KAAM,uBAAwBc,MAAOqG,KACnFqG,cAAe,SAACrG,GAAD,OAASF,EAAS,CAAEjH,KAAM,YAAac,MAAOqG,QAGlDjB,EAxEf,SAAgBmB,GACEuD,KAAhB,IAWI6C,EAAmB,SAACvS,GACZ,OAAPA,EAAcmM,EAAMiG,mBAAN,YAA6BjG,EAAMwF,aACrC,WAAP3R,EAAkBmM,EAAMmG,eAAenG,EAAMuC,WAE/CvC,EAAMlJ,eAAesB,SAASvE,GAChCmM,EAAMiG,mBAAmBjG,EAAMlJ,eAAevC,QAAO,SAAAI,GAAI,OAAEA,GAAMd,MAGjEmM,EAAMiG,mBAAN,sBAA6BjG,EAAMlJ,gBAAnC,CAAkDjD,MAIxD,OACE,6BACA,6BAAK,uBAAGmG,MAAO,CAAE4G,QAAS,eAAeiE,WAAW,OAAQjN,OAAQ,EAAEqN,YAAY,IAA7E,UAA6FjF,EAAMR,mBAAmB5L,KAAI,SAAAe,GAAI,OAAI,uBAAG+L,UAAWV,EAAMoE,eAAehM,SAASzD,GAAQ,2BAA6B,UAAW2M,QAAS,kBAjBrNxO,EAiB6O6B,OAhBpQqL,EAAMxE,kBAAkB1I,GADF,IAACA,IAiBqP6B,OAC5Q,yBAAKqF,MAAO,CAAC2J,UAAU,IAAI,uBAAG3J,MAAO,CAAE4G,QAAS,eAAeiE,WAAW,OAAQjN,OAAQ,EAAEqN,YAAY,IAA7E,WAA8FjF,EAAMwF,WAAW5R,KAAI,SAAAe,GAAI,OAAI,uBAAG+L,UAAWV,EAAMlJ,eAAesB,SAASzD,GAAQ,2BAA6B,UAAW2M,QAAS,kBAAM8E,EAAmBzR,KAAQA,MAAW,uBAAG+L,UAAU,UAAU1G,MAAO,CAAE4G,QAAS,gBAAiBU,QAAS,kBAAM8E,EAAmB,SAA5F,Y,yEC9C5R,SAASC,GAAYC,EAASnS,EAAMoS,EAAMC,EAAgBlT,EAAemT,EAA0BhM,GAChH,IAAItD,EAAgBI,EAAE,mBAAmBgD,QACrCmM,EAAMjR,SAAU8Q,GAClB3O,EAAgB,GAAhBA,EAAiD,EACjD2C,EAAQpD,EAAgBS,EADG,GAE3BJ,EAASgP,EAAiB5O,EAFa,GAGzC,GAAI+O,MAAMxS,EAAK,GAAGoF,GAAI,CAEpB,IAAIqN,EAAQ,GACZzS,EAAKP,KAAI,SAAAe,GACHA,EAAK4E,KAAKqN,EACZA,EAAMjS,EAAK4E,GAAKqN,EAAMjS,EAAK4E,GAAK,EAGhCqN,EAAMjS,EAAK4E,GAAK,KAIpB,IAAIrF,EAAQO,OAAOC,KAAKkS,GAAOhT,KAAI,SAAUD,GAC3C,MAAO,CAACA,EAAKiT,EAAMjT,OAIrBO,EAAMY,MAAK,SAAUC,EAAOC,GAC1B,OAAOA,EAAO,GAAKD,EAAM,MAG3B,IAAIwE,EAAIrF,EAAMN,KAAI,SAAAjB,GAAO,OAAIA,EAAQ,MACjCkH,EAAI3F,EAAMN,KAAI,SAAAjB,GAAO,OAAIA,EAAQ,MACjCkU,EAAQpR,MAAOoE,GACfiN,EAASrR,oBACVsR,aAAatR,cAAe,YAAa,cACzC6C,OAAO,CAAC,EAAGuB,EAAE5F,SAChByS,EAAIrQ,UAAU,eAAelC,KAAK,CAAC,IAAIqC,KAAK,QAAQd,KAAK,QAAS,cAAcA,KAAK,IAAK,IAAIA,KAAK,IAAK6E,EAAQ,GAAG7E,KAAK,cAAe,UAAU+B,KAAK6O,GACtJ,IACIU,EADIN,EAAIrQ,UAAU,OAAOlC,KAAK,CAAC,IAAIqC,KAAK,KAAKd,KAAK,QAAS,MAAMA,KAAK,YAAa,aAAekC,EAAc,IAAMA,EAAa,KAC1HvB,UAAU,SAASlC,KAAK,CAAC,IAAIqC,KAAK,OAAOd,KAAK,QAAS,QAAQA,KAAK,QAAS6E,GAAO7E,KAAK,SAAU8B,GAChHwP,EAAK3Q,UAAU,QAAQlC,KAAK0F,GAAGrD,KAAK,QACjCwD,MAAM,QAAQ,SAACjE,EAAGZ,GAAJ,OAAU2R,EAAO3R,MAAIO,KAAK,SAAU8B,GAClD9B,KAAK,SAAS,SAACK,EAAGZ,GACjB,OAAUY,EAAI8Q,EAAStM,EAAS,MAEjC7E,KAAK,KAAK,SAACK,EAAGZ,GAEb,OADeM,MAAOoE,EAAEnC,MAAM,EAAGvC,IACb0R,EAAStM,KAE9B7E,KAAK,MAAM,SAACK,EAAGZ,GAAJ,OAAUoE,EAAEpE,MACvBgE,GAAG,SAAS,SAACpD,EAAGZ,GACfM,SAAU,IAAM8D,EAAEpE,IAAI6F,QAAQ,oBAAoB,WAChD,GAAIvF,SAAU,IAAM8D,EAAEpE,IAAI6F,QAAQ,oBAEhC,OAAO,EAGP,IAAIiM,EAuLd,SAAoB1U,EAAcO,EAAKoU,GACrC,IAAIvJ,EAAK,GAMT,OALApL,EAAcG,SAAQ,SAAAC,GACjBA,EAAQ,UAAUG,GAAQH,EAAO,SAAauU,GAChDvJ,EAAK1K,KAAKF,SAASJ,EAAO,kBAGtBgL,EA9LiBwJ,CAAW1M,EAAcnH,EAAeiG,EAAEpE,IAE1D,OADAsR,EAAyBQ,EAAW,mBAC7B,QAOfD,EAAK3Q,UAAU,QAAQlC,KAAKoF,GAAG,SAAAxD,GAAC,OAAIA,KAAGS,KAAK,QACzCiB,MAAK,SAAC1B,EAAGZ,GACR,OAAM0E,EAAE1E,GAAK0R,EAAStM,EAAS,GAAaxE,EAC9B,MAEfL,KAAK,KAAK,SAACK,EAAGZ,GAEb,OADeM,MAAOoE,EAAEnC,MAAM,EAAGvC,IACb0R,EAAStM,EAAS,KAEvC7E,KAAK,IAAK8B,EAAS,GACnBwC,MAAM,YAAa,GACnBA,MAAM,eAAgB,MACtBA,MAAM,cAAe,cAGrB,CAEH0M,EAAIrQ,UAAU,eAAelC,KAAK,CAACmS,IAAU,SAAAvQ,GAAC,OAAIA,KAAGS,KAAK,QAAQd,KAAK,QAAS,cAAcA,KAAK,IAAK,IAAIA,KAAK,IAAK6E,EAAQ,GAAG7E,KAAK,cAAe,UAAU+B,KAAK6O,EAAQ1T,QAAQ,KAAM,MAE1L,IAAIwU,EAASjT,EAAKP,KAAI,SAAAe,GAAI,OAAIE,WAAWF,EAAI,MAE3C0S,GADAxN,EAAIpE,gBAAiB6C,OAAO,CAAC7C,MAAO2R,GAAS3R,MAAO2R,KAAU7O,MAAM,CAAC,EAAGgC,IAAQ+M,QAChE3N,MAAM,GACtB4N,EAAc/P,EAKZgC,EAJU/D,cACTgE,OAAM,SAAA1D,GAAC,OAAIA,KACXuC,OAAOuB,EAAEvB,UACToB,WAAW,EACLE,CAAUwN,GACnBI,EAAS/R,gBACN8C,MAAM,CAACgP,EAAa,IACzBC,EAAOlP,OAAO,CAAC,EAAG7C,MAAO+D,GAAM,SAAUzD,GAAK,OAAOA,EAAE9B,YACvD,IAAIwT,EAAOf,EAAIrQ,UAAU,SAASlC,KAAK,CAAC,IAAIqC,KAAK,OAAOd,KAAK,QAAS,QAAQW,UAAU,SAASlC,KAAK,CAAC,IAAIqC,KAAK,KAAKd,KAAK,QAAS,QAAQA,KAAK,YAC9I,aAAekC,EAAc,IAAMA,EAAa,KAElD6P,EAAKpR,UAAU,QAAQlC,KAAKqF,GAAMhD,KAAK,QACpCd,KAAK,IAAK,GACVA,KAAK,OAAQ,aACbA,KAAK,aAAa,SAAUK,GAC3B,OAAGA,EAAE+D,IAAI/D,EAAEgE,GAAW,eAAyByN,EAAOzR,EAAE9B,QAAU,IAC3D,aAAe4F,EAAE9D,EAAE+D,IAAM,IAAM0N,EAAOzR,EAAE9B,QAAU,OAE1DyB,KAAK,SAAS,SAAUK,GACvB,OAAGA,EAAE+D,IAAI/D,EAAEgE,GAAWQ,EACfV,EAAE9D,EAAEgE,IAAMF,EAAE9D,EAAE+D,IAAM,MAC5BpE,KAAK,UAAU,SAAUK,GAAK,OAAOwR,EAAcC,EAAOzR,EAAE9B,WAG/DwT,EAAKpR,UAAU,YAAYlC,KAAKqF,GAAMhD,KAAK,QAAQd,KAAK,QAAQ,WAC7DA,KAAK,KAAK,SAAAK,GAAC,OAAE8D,EAAE9D,EAAE+D,KAAMD,EAAE9D,EAAEgE,IAAIF,EAAE9D,EAAE+D,KAAK,KACxCrC,MAAK,SAAA1B,GAAC,OAAEA,EAAE9B,UACVyB,KAAK,KAAI,SAAAK,GAAC,OAAGyR,EAAOzR,EAAE9B,QAAQ,KAC9ByB,KAAK,YAAY,IAGjBD,MAAO4R,GAAa,IACrBI,EAAKpR,UAAU,YAAYlC,KAAK,CAAC,IAAIqC,KAAK,KAAKd,KAAK,QAAS,WAC5DA,KAAK,YAAa,eAAiB6R,EAAc,KACjDrN,KAAKzE,aAAcoE,GAAG6N,WAAWL,GAAalN,WAAW1E,SAAU,SAGpEgS,EAAKpR,UAAU,YAAYlC,KAAK,CAAC,IAAIqC,KAAK,KAAKd,KAAK,QAAS,WAC5DA,KAAK,YAAa,eAAiB6R,EAAc,KACjDrN,KAAKzE,aAAcoE,GAAG6N,WAAWL,IAGpCI,EAAKpR,UAAU,sBAAsBX,KAAK,SAAU,WAIpD,IAAIiS,EAAgB,CAClBhV,QAAS,KACTiV,gBAAiB,KACjBC,SAAU,EACVC,SAAU,EACVC,QAAS,EACTC,QAAS,EACTC,WAAY,SAAUC,GACpB3R,KAAKqR,gBAAkBrR,KAAK5D,QAC5B4D,KAAK5D,QAAUuV,GAEjBC,iBAAkB,WAKhB,MAAO,CAAEtO,EAJDtD,KAAKuR,SAAWvR,KAAKwR,QAAUxR,KAAKuR,SAAWvR,KAAKwR,QAI7CxO,EAHPhD,KAAKsR,SAAWtR,KAAKyR,QAAUzR,KAAKsR,SAAWtR,KAAKyR,QAGvCzN,MAFToB,KAAKC,IAAIrF,KAAKuR,SAAWvR,KAAKwR,SAEPvQ,OADtBmE,KAAKC,IAAIrF,KAAKsR,SAAWtR,KAAKyR,WAG7CI,qBAAsB,WAEpB,IAAIvO,GAAKtD,KAAK5D,QAAQ+C,KAAK,KACvB6D,GAAKhD,KAAK5D,QAAQ+C,KAAK,KAG3B,MAAO,CAAEqE,GAAIF,EAAGoD,GAAI1D,EAAG8O,GAAIxO,IAFdtD,KAAK5D,QAAQ+C,KAAK,SAEO4S,GAAI/O,IAD5BhD,KAAK5D,QAAQ+C,KAAK,YAGlC6S,2BAA4B,WAC1B,IAAIC,EAAQjS,KAAK6R,uBACjB,MAAO,OAASI,EAAMzO,GAAK,QAAUyO,EAAMH,GAAK,QAAUG,EAAMvL,GAAK,QAAUuL,EAAMF,IAEvFG,KAAM,SAAUC,EAAMC,GACpB,IAAIC,EAAclC,EAAIhO,OAAO,QAC1BhD,KAAK,KAAM,GAAGA,KAAK,KAAM,GAAGA,KAAK,IAAK,GAAGA,KAAK,IAAK,GACnDA,KAAK,QAAS,GAAGA,KAAK,SAAU,GAAGsF,QAAQ,aAAa,GAC3DzE,KAAK0R,WAAWW,GAChBrS,KAAKwR,QAAUW,EACfnS,KAAKyR,QAAUW,EACfpS,KAAKqC,OAAO8P,EAAMC,IAEpB/P,OAAQ,SAAU8P,EAAMC,GACtBpS,KAAKuR,SAAWY,EAChBnS,KAAKsR,SAAWc,EAChB,IAAIE,EAAUtS,KAAK4R,mBACnB5R,KAAK5D,QAAQ+C,KAAK,IAAKmT,EAAQhP,GAAGnE,KAAK,IAAKmT,EAAQtP,GACjD7D,KAAK,QAASmT,EAAQtO,OAAO7E,KAAK,SAAUmT,EAAQrR,SAEzDsR,MAAO,WACLvS,KAAK5D,QACFqH,MAAM,SAAU,IAChBA,MAAM,eAAgB,MAE3BlE,OAAQ,WACNS,KAAK5D,QAAQmD,SACbS,KAAK5D,QAAU,MAEjBoW,eAAgB,WACVxS,KAAKqR,iBACPrR,KAAKqR,gBAAgB9R,WAgC3B,IAAIkT,EAAevT,SAChB0D,GAAG,SA3BN,WACE,IAAI8P,EAAIxT,QAASc,MACjBoR,EAAcc,KAAKQ,EAAE,GAAIA,EAAE,IAC3BtB,EAAcoB,oBAyBb5P,GAAG,QAvBN,WACE,IAAI8P,EAAIxT,QAASc,MACjBoR,EAAc/O,OAAOqQ,EAAE,GAAIA,EAAE,OAsB5B9P,GAAG,OApBN,WACE,IAAI+P,EAAkBvB,EAAcS,uBACpC,GAAIc,EAAgBnP,IAAMmP,EAAgBb,GAAI,CAC5C,IAAIc,EAAOD,EAAgBnP,GAAKnC,EAC5BwR,EAAOF,EAAgBb,GAAKzQ,EAC5ByR,EAAa,CAACxP,EAAEyP,OAAOH,GAAMI,QAAQ,GAAI1P,EAAEyP,OAAOF,GAAMG,QAAQ,IAChEtC,EAkBV,SAAgB1U,EAAcgG,EAAMzF,EAAKwT,GACvC,IAAI3I,EAAK,GAMT,OALApL,EAAcG,SAAQ,SAAAC,GACjBA,EAAQ,UAAUG,GAAQ+B,WAAWlC,EAAQ2T,KAAW/N,EAAM,IAAM1D,WAAWlC,EAAQ2T,KAAW/N,EAAM,IAC1GoF,EAAK1K,KAAKF,SAASJ,EAAO,kBAGtBgL,EAzBa6L,CAAO/O,EAAc4O,EAAY/V,EAAegT,GAChEG,EAAyBQ,EAAW,kBAElCiC,EAAgBb,GAAKa,EAAgBnP,GAAK,GAAKmP,EAAgBZ,GAAKY,EAAgBjM,GAAK,EAG3F0K,EAAcmB,QAEdnB,EAAc7R,YAOlB4Q,EAAIxM,KAAK8O,I,gECvNPS,G,kDACJ,WAAYzJ,GAAQ,IAAD,8BACjB,cAAMA,IA8DRyG,yBAA2B,SAACtS,EAAMwE,GAEhC,IAAIgF,EAAO,EAAKmB,MAAM4K,gBACtBvV,EAAKzB,SAAQ,SAAAC,GACNgL,EAAKvF,SAASzF,IAAYgL,EAAK1K,KAAKN,MAE3C,EAAKiP,SAAS,CAAE8H,gBAAiB/L,KArEhB,EAuEnBgM,sBAAwB,WAGtB,GAFAlU,YAAa,qBAAqBuF,QAAQ,oBAAmB,GAC7DvF,YAAa,cAAcK,SACxB,EAAKgJ,MAAM4K,gBAAgBzV,OAAO,EAAG2V,MAAM,wBAA9C,CACA,IAAIC,EAAS,EAAK7J,MAAM8J,gBACpBC,EAAkB,EAAKjL,MAAM4K,gBAAgBnV,QAAO,SAACI,GACvD,GAAIA,GAAQ,EAAKqL,MAAM3M,YAAY,IAAMsB,GAAQ,EAAKqL,MAAM3M,YAAY,GACtE,OAAOsB,KAGRoV,EAAgB9V,OAAO,GAAG2V,MAAM,mBACmB,GAAlD,EAAK5J,MAAMP,yBAAX,SAA4G,GAArD,EAAKO,MAAMP,yBAAyB,eAC7F,EAAKO,MAAM6F,mBAAmBkE,GAC9BF,EAAOE,EAAiB,oBAGxB,EAAK/J,MAAM6F,mBAAmB,EAAK/G,MAAM4K,iBACzCG,EAAO,EAAK/K,MAAM4K,gBAAiB,mBAErC,EAAK9H,SAAS,CAAE8H,gBAAiB,OA1FhB,EAmHnBM,QAAU,SAAC3W,GAIT,IAHA,IAAI4W,EAAa5W,EAAY,GACzB6W,EAAY7W,EAAY,GACxB8W,EAAM,GACDhV,EAAI8U,EAAY9U,GAAK+U,EAAW/U,IACvCgV,EAAIlX,KAAKkC,GAEX,OAAOgV,GAxHP,EAAKC,MAAQnK,IAAMoK,YACnB,EAAKvL,MAAQ,CAAEwL,aAAc,GAAIC,eAAgB,KAAM9P,aAAc,KAAMiP,gBAAiB,IAH3E,E,gEAMjB,IACIc,EADAC,EAAOlU,KAC6B,UAAtBA,KAAKyJ,MAAM7M,QAAuBqX,EAAWE,KAAuD,UAAtBnU,KAAKyJ,MAAM7M,QAAuBqX,EAAWG,KAAuD,SAAtBpU,KAAKyJ,MAAM7M,UAAsBqX,EAAWI,MAC1NnV,MAAO+U,GAAUK,MAAK,SAAUpQ,GAC9BgQ,EAAK7I,SAAS,CAAEnH,aAAcA,S,8CAIhC,OAAO,I,2CAEa,IAAD,OACfgQ,EAAOlU,KACPuU,EAAcvU,KAAKyT,QAAQzT,KAAKyJ,MAAM3M,aAEtC0X,EAAiB,GACjBvE,EAAiB,IACjBwE,EAAsBzU,KAAKyJ,MAAM3M,YAAY,GAAKkD,KAAKyJ,MAAM3M,YAAY,GAAO,EAAIkD,KAAKyJ,MAAM2C,WAC/FqI,EAAqBD,EAAiB,MAAOA,EAAiB,IAAMC,GACxE,IAAIC,EAAoBD,EAAqBD,EACzCxX,EAAmE,EAAhDoI,KAAKuP,MAAMD,EAAmBzE,GAClDjT,EAAiB,IAAGA,EAAiB,GAExC,IAAI4X,EAAgBhJ,EAA0B5L,KAAKyJ,MAAM7M,QAASoD,KAAKyJ,MAAMlJ,eAAgBgU,EAAavU,KAAKyJ,MAAM1M,cAAcC,EAAiBgD,KAAKyJ,MAAMxM,WAC3JU,EAAQO,OAAOC,KAAKyW,GAAevX,KAAI,SAAUD,GACnD,MAAO,CAACA,EAAKwX,EAAcxX,OAS7B,GAPAO,EAAMY,MAAK,SAAUC,EAAOC,GAC1B,OAAOA,EAAO,GAAKD,EAAM,MAE3Bb,EAAQA,EAAMN,KAAI,SAACjB,GAAD,OAAaA,EAAQ,MAEC,UAAtB4D,KAAKyJ,MAAM7M,QAAkCuX,KAAuD,UAAtBnU,KAAKyJ,MAAM7M,SAAkCwX,KAE9G,MAA3BpU,KAAKuI,MAAMrE,aAAsB,CACnC,IAAItD,EAAcI,EAAE,mBAAmBgD,QACnCiM,EAAiB,IAEvBtS,EAAMxB,SAAQ,SAAC4T,EAAS8E,GACpB,IAAIC,EAAa,UAAU/E,EAAQ1T,QAAQ,YAAa,IACpD+K,EAAO,GACX,EAAKmB,MAAMrE,aAAa/H,SAAQ,SAAAC,GAC9B,GAAIA,EAAQ,UAAY8X,EAAKzK,MAAM1M,cAAe,CAChD,IAAIT,EAAY,GAChBA,EAAS,EAAQE,SAASJ,EAAO,cACjCE,EAAS,EAAQF,EAAQ2T,GACzB3I,EAAK1K,KAAKJ,OAGd4C,SAAU,wBAAwBC,KAAK,SAAUxB,EAAMD,OAASuS,GAAgBnQ,UAAU,IAAMgV,GAAYlX,KAAK,CAACkX,IAAa,SAAAtV,GAAC,OAAIA,KAAGS,KAAK,OAAOd,KAAK,KAAM2V,GAAY3V,KAAK,QAASyB,GACrLzB,KAAK,KAAK,SAAAK,GAGT,OADAsQ,GAAYC,EAAS3I,EAAM,IAAM0N,EAAY7E,EAAgBiE,EAAKzK,MAAM1M,cAAemX,EAAKhE,yBAA0BgE,EAAK3L,MAAMrE,cAC1H,KAER/E,KAAK,KAAK,SAACK,EAAGZ,GAAJ,OAAUqR,EAAiB4E,W,+BAkCpC,IAAD,OACP,OACE,6BACE,kBAAChK,EAAA,EAAD,CAAQV,UAAU,SAAS1G,MAAO,CAAC4E,WAAW,EAAE+B,QAAQ,EAAEpG,MAAM,KAAM+G,QAAS,WAC7E,IAAImJ,EAAK,EACD,EAAKzK,MAAMP,yBAAyB,gBACnChK,MAAO,EAAKqJ,MAAM4K,iBAAiB,EAAK1J,MAAM3M,YAAY,IAC3D,EAAK2M,MAAMH,gBAAgB,CAACpK,MAAO,EAAKqJ,MAAM4K,iBAAiB,EAAK1J,MAAM3M,YAAY,KAErFoC,MAAO,EAAKqJ,MAAM4K,iBAAiB,EAAK1J,MAAM3M,YAAY,IAC3D,EAAK2M,MAAMH,gBAAgB,CAAC,EAAKG,MAAM3M,YAAY,GAAGoC,MAAO,EAAKqJ,MAAM4K,oBAG5E4B,YAAW,WAAYb,EAAKd,0BAA4B,OAV9D,UAaA,yBAAKjJ,UAAU,uBACf,yBAAK+B,GAAG,sBAAsBzI,MAAO,CAAEO,MAAOhE,KAAKyJ,MAAMzF,e,GA/G7CmI,aAkJL7D,gBApBS,SAACC,GACvB,MAAO,CACLzL,YAAayL,EAAMzL,YACnByD,eAAgBgI,EAAMhI,eACtB3D,QAAS2L,EAAM3L,QACfG,cAAewL,EAAMxL,cACrBmM,yBAA0BX,EAAMW,yBAChCkD,WAAW7D,EAAM6D,WACjBnP,UAAUsL,EAAMtL,cAGM,SAACoM,GACzB,MAAO,CACLqG,mBAAoB,SAACnG,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvEsD,mBAAoB,SAACtD,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvE+F,mBAAoB,SAAC/F,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvED,gBAAiB,SAACC,GAAD,OAASF,EAAS,CAAEjH,KAAM,cAAec,MAAOqG,KACjEuD,gCAAiC,SAACvD,GAAD,OAASF,EAAS,CAAEjH,KAAM,8BAA+Bc,MAAOqG,QAGtFjB,CAA4C4K,I,8BChI3D,IAUe5K,gBAVS,SAACC,GACvB,MAAO,CACL+D,SAAU/D,EAAM+D,aAGM,SAACjD,GACzB,MAAO,CACLgG,aAAc,SAAC9F,GAAD,OAASF,EAAS,CAAEjH,KAAM,WAAYc,MAAOqG,QAGhDjB,EAlCf,SAAkBmB,GAChB,OACE,kBAAC4D,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,aACRC,WAAW,YAEX,kBAACuH,GAAA,EAAD,CACEC,eAAe,QACfC,QACE,kBAACC,GAAA,EAAD,CACEC,QAAS3L,EAAM6C,SACf/B,SAAU,SAACC,GAAD,OAAWf,EAAM4F,aAAa7E,EAAM6K,OAAOD,UACrDE,KAAK,WACLvN,MAAM,YAGVmC,MAAM,iBCLR8C,GAAY1F,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFxD,MAAO,QAEXyD,QAAS,CACLnC,SAAUiC,EAAMG,WAAWC,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEhBC,iBAAkB,CACdxC,SAAUiC,EAAMG,WAAWC,QAAQ,IACnCI,MAAOR,EAAMS,QAAQ9G,KAAK+G,WAE9BC,MAAO,CACHC,aAAc,IAElBC,WAAY,CACRC,WAAY,QA4WpB,IA4CeC,gBA5CS,SAACC,GACrB,MAAO,CACHxL,cAAewL,EAAMxL,cACrBD,YAAayL,EAAMzL,YACnB0L,KAAMD,EAAMC,KACZC,WAAYF,EAAME,WAClBC,iBAAkBH,EAAMG,iBACxBC,kBAAmBJ,EAAMI,kBACzBC,kBAAmBL,EAAMK,kBACzBC,gBAAiBN,EAAMM,gBACvBC,gBAAiBP,EAAMO,gBACvBC,gBAAiBR,EAAMQ,gBACvBC,gBAAiBT,EAAMS,gBACvBC,mBAAoBV,EAAMU,mBAC1BrM,QAAS2L,EAAM3L,QACf2D,eAAgBgI,EAAMhI,eACtB2I,yBAA0BX,EAAMW,yBAChCC,QAASZ,EAAMY,QACfC,qBAAsBb,EAAMa,yBAGV,SAACC,GACvB,MAAO,CACHkG,eAAgB,SAAChG,GAAD,OAASF,EAAS,CAAEjH,KAAM,aAAcc,MAAOqG,KAC/DgM,uBAAwB,SAAChM,GAAD,OAASF,EAAS,CAAEjH,KAAM,qBAAsBc,MAAOqG,KAC/ED,gBAAiB,SAACC,GAAD,OAASF,EAAS,CAAEjH,KAAM,cAAec,MAAOqG,KACjEiM,SAAU,SAACjM,GAAD,OAASF,EAAS,CAAEjH,KAAM,OAAQc,MAAOqG,KACnDkM,qBAAsB,SAAClM,GAAD,OAASF,EAAS,CAAEjH,KAAM,mBAAoBc,MAAOqG,KAC3EmM,oBAAqB,SAACnM,GAAD,OAASF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KACzE0D,sBAAuB,SAAC1D,GAAD,OAASF,EAAS,CAAEjH,KAAM,oBAAqBc,MAAOqG,KAC7EmE,sBAAuB,SAACnE,GAAD,OAASF,EAAS,CAAEjH,KAAM,oBAAqBc,MAAOqG,KAC7EiG,oBAAqB,SAACjG,GAAD,OAASF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KACzEoM,oBAAqB,SAACpM,GAAD,OAASF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KACzEqM,oBAAqB,SAACrM,GAAD,OAASF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KACzE+F,mBAAoB,SAAC/F,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvEsM,6BAA8B,SAACtM,GAAD,OAASF,EAAS,CAAEjH,KAAM,2BAA4Bc,MAAOqG,KAC3FuD,gCAAiC,SAACvD,GAAD,OAASF,EAAS,CAAEjH,KAAM,8BAA+Bc,MAAOqG,KACjGC,YAAa,SAACD,GAAD,OAASF,EAAS,CAAEjH,KAAM,UAAWc,MAAOqG,KACzDkG,oBAAqB,SAAClG,GAAD,OAASF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KACzEmG,mBAAoB,SAACnG,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvEoG,yBAA0B,SAACpG,GAAD,OAASF,EAAS,CAAEjH,KAAM,uBAAwBc,MAAOqG,QAI5EjB,EArZf,SAAemB,GAYX,IAZmB,IAAD,QACZqM,EAAU9I,KADE,EAGqBtD,IAAMC,SAASF,EAAM3M,aAH1C,mBAGX8M,EAHW,KAGEC,EAHF,OAI+CH,IAAMC,SAASF,EAAMd,mBAJpE,mBAIXuE,EAJW,KAIeC,EAJf,OAK+CzD,IAAMC,SAASF,EAAMb,mBALpE,mBAKX+E,EALW,KAKeC,EALf,OAM2ClE,IAAMC,SAASF,EAAMX,iBANhE,mBAMXiN,EANW,KAMaC,EANb,OAOStM,IAAMC,SAAS,GAPxB,mBAOJsM,GAPI,WAUdnM,EAAa,GACbC,GAAQN,EAAMhB,WAAa,GAApB,EACF7J,EAAI,EAAGA,EAAI,EAAGA,IACnBkL,EAAWpN,KAAK,EAAKqN,EAAOnL,GAEhC,IAAIoL,EAAQF,EAAWzM,KAAI,SAAAe,GACvB,IAAI6L,EAASzN,SAAS4B,GACtB,MAAO,CAAE8E,MAAO+G,EAAQC,MAAOD,MAInC,OACI,yBAAKxG,MAAO,CAAEyS,UAAW,sBACrB,uBAAG/L,UAAU,aAAa1G,MAAO,CAAE0E,aAAc,IAAjD,YACA,kBAACgO,GAAA,EAAD,CAAchM,UAAU,oBAAoB1G,MAAO,CAAEyK,OAAQ,iBAAkBkI,aAAc,EAAGzH,WAAY,EAAG0H,cAAe,EAAGhO,WAAY,EAAGqG,YAAa,GAAI1K,MAAOhD,EAAE,YAAYgD,QAAU,IAC5LsS,aAAc,SACdpK,GAAG,QACHqK,OAAK,EACLC,QAAS,CAAC,SAAU,SAAU,QAC9BC,YAAa,SAACC,GAAD,OACT,kBAACC,GAAA,EAAD,iBAAeD,EAAf,CAAuBxM,MAAM,GAAG7I,OAAO,SAASuV,WAAW,EAAMC,WAAU,gBAAOH,EAAOG,WAAd,CAA0BC,kBAAkB,QAE3HvM,SAAU,SAACC,EAAOjB,GACd,IAAIrG,EAAQqG,EAAIlN,QAAQ,IAAK,IAC7BoN,EAAM+L,SAAStS,GACfuG,EAAMqD,gCAAgC,OAI/B,SAAdrD,EAAMjB,KAAkB,yBAAK/E,MAAO,CAAE2J,UAAW,GAAIiB,YAAa,EAAGrK,MAAOhD,EAAE,YAAYgD,UACvF,uBAAGP,MAAO,CAAE4E,WAAY,EAAGF,cAAe,EAAGiF,UAAW,GAAIsB,YAAa,GAAIL,YAAa,EAAGvD,gBAAiB,UAAWxF,SAAU,KAAwB,UAAjBmE,EAAM7M,QAAsB,gBAAkB,UAAY6M,EAAM7M,QAAU,KACpN,yBAAKQ,IAAKqM,EAAMP,yBAA0BiB,UAAU,4BAChD,kBAAC4M,GAAA,EAAD,CAAM5M,UAAW2L,EAAQhH,UACpB,CAAC,aAAc,WAAWzR,KAAI,SAAC6F,GAC5B,IAAM8T,EAAO,8BAA0B9T,GACvC,OACI,yBAAKiH,UAAU,YAAW,kBAAC8M,GAAA,EAAD,CAAU7Z,IAAK8F,EAAOgU,UAAMC,GAClD,kBAAChC,GAAA,EAAD,CACIC,QAAS3L,EAAMP,yBAAyBhG,GACxCkU,KAAK,QACLC,UAAW,EACXnU,MAAOA,EACPqH,SAAU,SAACC,GACP,IAAI8M,EAAW7N,EAAMP,yBACjBO,EAAMP,yBAAyBsB,EAAM6K,OAAOnS,OAAUoU,EAAS9M,EAAM6K,OAAOnS,OAAS,EAClFoU,EAAS9M,EAAM6K,OAAOnS,OAAS,EACtC+S,EAAUsB,KAAKC,UAAUF,IAEzB7N,EAAMoM,6BAA6ByB,MAG3C,uBAAGnN,UAAU,kBAAkB+B,GAAI8K,GAAU9T,UAOhB,GAAhDuG,EAAMP,yBAAyB,cAC5B,yBAAKiB,UAAU,cAAc1G,MAAO,CAAEO,MAAOhD,EAAE,YAAYgD,QAAU,KACjE,kBAACsG,EAAA,GAAD,GACIpH,MAAO0G,EACPW,SAAU,SAACC,EAAOC,GAAR,OAAqBZ,EAAgBY,IAC/CC,kBAAmB,SAACF,EAAOC,GAAR,OAAqBhB,EAAMD,YAAY,UAC1DmB,kBAAkB,OAClBC,kBAAgB,gBALpB,kCAMsB,MANtB,oBAOS,GAPT,oBAQSnB,EAAMhB,YARf,sBASWuB,GATX,IAWA,kBAACqD,EAAA,EAAD,CAAM5J,MAAO,CAAE0E,aAAc,IAAMmF,WAAS,EACxCC,UAAU,MACVC,QAAQ,eACRC,WAAW,UACX,kBAACkJ,GAAA,EAAD,CAAWb,QAAS,CAAE2B,MAAO3B,EAAQ1N,YAAc8D,GAAG,iBAAiBhC,MAAM,QAAQhH,MAAO0G,EAAY,GAAInG,MAAO,CAAEO,MAAO,IACxHuG,SAAU,SAAAC,GACF4F,MAAM5T,SAASgO,EAAM6K,OAAOnS,QAC5B2G,EAAgB,CAAC,GAAID,EAAY,KAE7BY,EAAM6K,OAAOnS,MAAQ0G,EAAY,GACjCyJ,MAAM,sDAGNxJ,EAAgB,CAACW,EAAM6K,OAAOnS,MAAO0G,EAAY,QAMjE,kBAAC+M,GAAA,EAAD,CAAWb,QAAS,CAAE2B,MAAO3B,EAAQ1N,YAAc8D,GAAG,iBAAiBhC,MAAM,QAAQhH,MAAO0G,EAAY,GAAInG,MAAO,CAAEO,MAAO,IACxHuG,SAAU,SAAAC,GACF4F,MAAM5T,SAASgO,EAAM6K,OAAOnS,QAC5B2G,EAAgB,CAACD,EAAY,GAAI,KAE7BpN,SAASgO,EAAM6K,OAAOnS,OAASuG,EAAMhB,YACrC4K,MAAM,sCACNxJ,EAAgB,CAACD,EAAY,GAAIH,EAAMhB,cAGvCoB,EAAgB,CAACD,EAAY,GAAIpN,SAASgO,EAAM6K,OAAOnS,aAO3E,kBAAC,GAAD,MACA,kBAAC2H,EAAA,EAAD,CAAQV,UAAU,eAAe1G,MAAO,CAAEO,MAAOhD,EAAE,YAAYgD,QAAU,GAAI8G,gBAAiB,UAAW7J,OAAQ,GAAIkH,aAAc,EAAGE,YAAa,GAC/I0C,QAAS,WACLtB,EAAMH,gBAAgBM,KAF9B,iBAKK,KACiC,GAA7CH,EAAMP,yBAAN,QACG,6BACI,6BACI,kBAACwO,GAAD,CACInb,KAAMkN,EAAM1M,cAAc4a,WAAY7a,YAAa2M,EAAM3M,YACzD8a,cAAe5W,EAAE,YAAYgD,QAASuP,gBAAiB9J,EAAM8J,oBAGhE,MAER,KACM,SAAd9J,EAAMjB,KAAkB,yBAAK/E,MAAO,CAAE2J,UAAW,GAAIiB,YAAa,EAAGrK,MAAOhD,EAAE,YAAYgD,UACvF,yBAAKmG,UAAU,eACX,kBAACgM,GAAA,EAAD,CACIG,aAAc7M,EAAMf,iBACpBwD,GAAG,QACHqK,OAAK,EACLC,QAAS,CAAC,aAAc,aAAc,aAAc,YAAa,UAAW,OAAQ,YAAa,YAAa,WAAWnZ,KAAI,SAACwa,GAAD,OAAYA,KACzIpB,YAAa,SAACC,GAAD,OACT,kBAACC,GAAA,EAAD,iBAAeD,EAAf,CAAuBxM,MAAM,QAAQ7I,OAAO,SAASwV,WAAU,gBAAOH,EAAOG,WAAd,CAA0BC,kBAAkB,QAE/GvM,SAAU,SAACC,EAAOtH,GAAR,OAAkBuG,EAAMgM,qBAAqBvS,MAE3D,uBAAGO,MAAO,CAAE4E,WAAY,EAAGF,cAAe,EAAGiF,UAAW,GAAIsB,YAAa,GAAIL,YAAa,EAAGvD,gBAAiB,UAAWxF,SAAU,KAAwB,UAAjBmE,EAAM7M,QAAsB,gBAAkB,UAAY6M,EAAM7M,QAAU,MAExN,yBAAKuN,UAAU,cAAc1G,MAAO,CAAEO,MAAOhD,EAAE,YAAYgD,QAAU,KACjE,kBAAC8T,GAAA,EAAD,CAAYhC,QAAS,CAAEtO,KAAMsO,EAAQ5N,QAArC,WAGA,kBAACoC,EAAA,GAAD,GACIpH,MAAOgK,EACP3C,SAAU,SAACC,EAAOC,GAAR,OAAqB0C,EAA6B1C,IAC5DC,kBAAmB,SAACF,EAAOC,GAAR,OAAqBhB,EAAMD,YAAY,UAC1DmB,kBAAkB,OAClBC,kBAAgB,gBALpB,kCAMsB,MANtB,oBAOS,GAPT,oBAQSnB,EAAMhB,YARf,sBASWuB,GATX,IAWA,kBAACqD,EAAA,EAAD,CAAM5J,MAAO,CAAE0E,aAAc,IAAMmF,WAAS,EACxCC,UAAU,MACVC,QAAQ,eACRC,WAAW,UACX,kBAACkJ,GAAA,EAAD,CAAWb,QAAS,CAAE2B,MAAO3B,EAAQ1N,YAAc8D,GAAG,iBAAiBhC,MAAM,QAAQhH,MAAOgK,EAAyB,GAAIzJ,MAAO,CAAEO,MAAO,IACrIuG,SAAU,SAAAC,GACF4F,MAAM5T,SAASgO,EAAM6K,OAAOnS,QAC5BiK,EAA6B,CAAC,GAAID,EAAyB,KAEvD1C,EAAM6K,OAAOnS,MAAQgK,EAAyB,GAC9CmG,MAAM,sDAGNlG,EAA6B,CAAC3C,EAAM6K,OAAOnS,MAAOgK,EAAyB,QAM3F,kBAACyJ,GAAA,EAAD,CAAWb,QAAS,CAAE2B,MAAO3B,EAAQ1N,YAAc8D,GAAG,iBAAiBhC,MAAM,QAAQhH,MAAOgK,EAAyB,GAAIzJ,MAAO,CAAEO,MAAO,IACrIuG,SAAU,SAAAC,GACF4F,MAAM5T,SAASgO,EAAM6K,OAAOnS,QAC5BiK,EAA6B,CAACD,EAAyB,GAAI,KAEvD1Q,SAASgO,EAAM6K,OAAOnS,OAASuG,EAAMhB,YACrC4K,MAAM,sCACNlG,EAA6B,CAACD,EAAyB,GAAIzD,EAAMhB,cAGjE0E,EAA6B,CAACD,EAAyB,GAAI1Q,SAASgO,EAAM6K,OAAOnS,aAOrG,kBAAC2H,EAAA,EAAD,CAAQV,UAAU,eAAe1G,MAAO,CAAEO,MAAOhD,EAAE,YAAYgD,QAAU,GAAI8G,gBAAiB,UAAW7J,OAAQ,GAAIkH,aAAc,EAAGE,YAAa,GAC/I0C,QAAS,kBAAMtB,EAAMwD,sBAAsBC,KAD/C,iBAIJ,yBAAK/C,UAAU,cAAc1G,MAAO,CAAEO,MAAOhD,EAAE,YAAYgD,QAAU,KACjE,kBAAC8T,GAAA,EAAD,CAAYhC,QAAS,CAAEtO,KAAMsO,EAAQ5N,QAArC,WAGA,kBAACoC,EAAA,GAAD,GACIpH,MAAOyK,EACPpD,SAAU,SAACC,EAAOC,GAAR,OAAqBmD,EAA6BnD,IAC5DC,kBAAmB,SAACF,EAAOC,GAAehB,EAAMD,YAAY,UAC5DmB,kBAAkB,OAClBC,kBAAgB,gBALpB,kCAMsB,MANtB,oBAOS,GAPT,oBAQSnB,EAAMhB,YARf,sBASWuB,GATX,KAYJ,kBAACqD,EAAA,EAAD,CAAM5J,MAAO,CAAE0E,aAAc,IAAMmF,WAAS,EACxCC,UAAU,MACVC,QAAQ,eACRC,WAAW,UACX,kBAACkJ,GAAA,EAAD,CAAWb,QAAS,CAAE2B,MAAO3B,EAAQ1N,YAAc8D,GAAG,iBAAiBhC,MAAM,QAAQhH,MAAOyK,EAAyB,GAAIlK,MAAO,CAAEO,MAAO,IACrIuG,SAAU,SAAAC,GACF4F,MAAM5T,SAASgO,EAAM6K,OAAOnS,QAC5B0K,EAA6B,CAAC,GAAID,EAAyB,KAEvDnD,EAAM6K,OAAOnS,MAAQyK,EAAyB,GAC9C0F,MAAM,sDAGNzF,EAA6B,CAACpD,EAAM6K,OAAOnS,MAAOyK,EAAyB,QAM3F,kBAACgJ,GAAA,EAAD,CAAWb,QAAS,CAAE2B,MAAO3B,EAAQ1N,YAAc8D,GAAG,iBAAiBhC,MAAM,QAAQhH,MAAOyK,EAAyB,GAAIlK,MAAO,CAAEO,MAAO,IACrIuG,SAAU,SAAAC,GACF4F,MAAM5T,SAASgO,EAAM6K,OAAOnS,QAC5B0K,EAA6B,CAACD,EAAyB,GAAI,KAEvDnR,SAASgO,EAAM6K,OAAOnS,OAASuG,EAAMhB,YACrC4K,MAAM,sCACNzF,EAA6B,CAACD,EAAyB,GAAIlE,EAAMhB,cAGjEmF,EAA6B,CAACD,EAAyB,GAAInR,SAASgO,EAAM6K,OAAOnS,aAOrG,kBAAC2H,EAAA,EAAD,CAAQV,UAAU,eAAe1G,MAAO,CAAEO,MAAOhD,EAAE,YAAYgD,QAAU,GAAI8G,gBAAiB,UAAW7J,OAAQ,GAAIkH,aAAc,EAAGE,WAAY,GAC9I0C,QAAS,kBAAMtB,EAAMiE,sBAAsBC,KAD/C,iBAIK,KACM,QAAdlE,EAAMjB,KACH,yBAAK/E,MAAO,CAAE2J,UAAW,GAAIiB,YAAa,EAAGlG,aAAc,GAAInE,MAAOhD,EAAE,YAAYgD,UAChF,yBAAKmG,UAAU,SACX,kBAACgM,GAAA,EAAD,CACIG,aAAc7M,EAAMZ,gBACpBqD,GAAG,QACHqK,OAAK,EACLC,QAAS,CAAC,aAAc,aAAc,aAAc,YAAa,UAAW,OAAQ,YAAa,YAAa,WAAWnZ,KAAI,SAACwa,GAAD,OAAYA,KACzIpB,YAAa,SAACC,GAAD,OACT,kBAACC,GAAA,EAAD,iBAAeD,EAAf,CAAuBxM,MAAM,QAAQ7I,OAAO,SAASwV,WAAU,gBAAOH,EAAOG,WAAd,CAA0BC,kBAAkB,QAE/GvM,SAAU,SAACC,EAAOtH,GAAR,OAAkBuG,EAAMiM,oBAAoBxS,MAE1D,uBAAGO,MAAO,CAAE4E,WAAY,EAAGF,cAAe,EAAGiF,UAAW,GAAIsB,YAAa,GAAIL,YAAa,EAAGvD,gBAAiB,UAAWxF,SAAU,KAAwB,UAAjBmE,EAAM7M,QAAsB,gBAAkB,UAAY6M,EAAM7M,QAAU,KACpN,yBAAKuN,UAAU,cAAc1G,MAAO,CAAEO,MAAOhD,EAAE,YAAYgD,QAAU,KACjE,kBAACsG,EAAA,GAAD,GACIpH,MAAO6S,EACPxL,SAAU,SAACC,EAAOC,GAAR,OAAqBuL,EAA2BvL,IAC1DC,kBAAmB,SAACF,EAAOC,GAAR,OAAqBhB,EAAMD,YAAY,UAC1DmB,kBAAkB,OAClBC,kBAAgB,gBALpB,kCAMsB,MANtB,oBAOS,GAPT,oBAQSnB,EAAMhB,YARf,sBASWuB,GATX,IAWA,kBAACqD,EAAA,EAAD,CAAM5J,MAAO,CAAE0E,aAAc,IAAMmF,WAAS,EACxCC,UAAU,MACVC,QAAQ,eACRC,WAAW,UACX,kBAACkJ,GAAA,EAAD,CAAWb,QAAS,CAAE2B,MAAO3B,EAAQ1N,YAAc8D,GAAG,iBAAiBhC,MAAM,QAAQhH,MAAO6S,EAAuB,GAAItS,MAAO,CAAEO,MAAO,IACnIuG,SAAU,SAAAC,GACF4F,MAAM5T,SAASgO,EAAM6K,OAAOnS,QAC5B8S,EAA2B,CAAC,GAAID,EAAuB,KAEnDvL,EAAM6K,OAAOnS,MAAQ6S,EAAuB,GAC5C1C,MAAM,sDAGN2C,EAA2B,CAACxL,EAAM6K,OAAOnS,MAAO6S,EAAuB,QAMvF,kBAACY,GAAA,EAAD,CAAWb,QAAS,CAAE2B,MAAO3B,EAAQ1N,YAAc8D,GAAG,iBAAiBhC,MAAM,QAAQhH,MAAO6S,EAAuB,GAAItS,MAAO,CAAEO,MAAO,IACnIuG,SAAU,SAAAC,GACF4F,MAAM5T,SAASgO,EAAM6K,OAAOnS,QAC5B8S,EAA2B,CAACD,EAAuB,GAAI,KAEnDvZ,SAASgO,EAAM6K,OAAOnS,OAASuG,EAAMhB,YACrC4K,MAAM,sCACN2C,EAA2B,CAACD,EAAuB,GAAItM,EAAMhB,cAG7DuN,EAA2B,CAACD,EAAuB,GAAIvZ,SAASgO,EAAM6K,OAAOnS,aAOjG,kBAAC2H,EAAA,EAAD,CAAQV,UAAU,eAAe1G,MAAO,CAAEO,MAAOhD,EAAE,YAAYgD,QAAU,GAAI8G,gBAAiB,UAAW7J,OAAQ,GAAIkH,aAAc,EAAGE,YAAa,GAC/I0C,QAAS,kBAAMtB,EAAM+F,oBAAoBuG,KAD7C,iBAIJ,yBAAK5L,UAAU,QACX,kBAACgM,GAAA,EAAD,CAAchM,UAAW,CAAE3C,KAAMsO,EAAQjH,qBACrCyH,aAAc7M,EAAMV,gBAAgB4O,WACpCzL,GAAG,QACHqK,OAAK,EACLC,QAAS/M,EAAMR,mBAAmB5L,KAAI,SAACwa,GAAD,OAAYA,KAClDpB,YAAa,SAACC,GAAD,OACT,kBAACC,GAAA,EAAD,iBAAeD,EAAf,CAAuBxM,MAAM,SAAS7I,OAAO,SAASuV,WAAW,EAAMC,WAAU,gBAAOH,EAAOG,WAAd,CAA0BC,kBAAkB,QAEjIvM,SAAU,SAACC,EAAOtH,GACduG,EAAMkM,oBAAoBzS,GAC1BuG,EAAMD,YAAY,YAI9B,yBAAKW,UAAU,QACX,kBAACgM,GAAA,EAAD,CAAchM,UAAW,CAAE3C,KAAMsO,EAAQjH,qBACrCyH,aAAc7M,EAAMT,gBAAgB2O,WACpCzL,GAAG,QACHqK,OAAK,EACLC,QAAS/M,EAAMR,mBAAmB5L,KAAI,SAACwa,GAAD,OAAYA,KAClDpB,YAAa,SAACC,GAAD,OACT,kBAACC,GAAA,EAAD,iBAAeD,EAAf,CAAuBxM,MAAM,SAAS7I,OAAO,SAASuV,WAAW,EAAMC,WAAU,gBAAOH,EAAOG,WAAd,CAA0BC,kBAAkB,QAEjIvM,SAAU,SAACC,EAAOtH,GACduG,EAAMmM,oBAAoB1S,GAC1BuG,EAAMD,YAAY,cAInB,SChYnC,IAAMwD,GAAY1F,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJxD,MAAO,QAET8K,SAAU,CACR9K,MAAO,OACP+T,SAAU,KAEZhJ,MAAO,GAGPtH,QAAS,CACPnC,SAAUiC,EAAMG,WAAWC,QAAQ,IACnC2G,WAAY/G,EAAMG,WAAWsH,uBAqFjC,I,GA0Be1G,gBA1BS,SAACC,GACvB,MAAO,CACL6D,WAAW7D,EAAM6D,WACjBtP,YAAYyL,EAAMzL,YAClByD,eAAegI,EAAMhI,eACrBxD,cAAcwL,EAAMxL,cACpBb,eAAeqM,EAAMrM,eACrBuQ,KAAKlE,EAAMkE,KACXuL,UAAUzP,EAAMyP,UAChBlX,YAAYyH,EAAMzH,gBAGI,SAACuI,GACzB,MAAO,CACLqG,mBAAoB,SAACnG,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvEsD,mBAAoB,SAACtD,GAAD,OAASF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KACvEgG,eAAgB,SAAChG,GAAD,OAASF,EAAS,CAAEjH,KAAM,aAAcc,MAAOqG,KAC/DgM,uBAAwB,SAAChM,GAAD,OAASF,EAAS,CAAEjH,KAAM,qBAAsBc,MAAOqG,KAC/EtE,kBAAmB,SAACsE,GAAD,OAASF,EAAS,CAAEjH,KAAM,gBAAiBc,MAAOqG,KACrE0O,aAAc,SAAC1O,GAAD,OAASF,EAAS,CAAEjH,KAAM,WAAYc,MAAOqG,KAC3D2O,kBAAmB,SAAC3O,GAAD,OAASF,EAAS,CAAEjH,KAAM,gBAAiBc,MAAOqG,KACrED,gBAAiB,SAACC,GAAD,OAASF,EAAS,CAAEjH,KAAM,cAAec,MAAOqG,KACjE4O,eAAe,SAAC5O,GAAD,OAASF,EAAS,CAAEjH,KAAM,aAAcc,MAAOqG,KAC9D6O,SAAS,SAAC7O,GAAD,OAAOF,EAAS,CAACjH,KAAK,OAAOc,MAAMqG,QAGjCjB,EA3Gf,SAAiBmB,IC1BF,SAAuBlJ,EAAgBO,GAC/BE,EAAE,sBAAsBgD,QAA3C,IACItC,EAAkBxC,WAAYyC,KAAK,IACvCzC,SAAU,sBAAsBY,UAAU,KAAKlC,KAAK2C,GAAe,SAAAf,GAAC,OAAEA,KAAGS,KAAK,KAC7Ed,KAAK,aAAY,SAACK,EAAEZ,GAAH,MAAO,gBAAgB,GAAGA,EAAE,OAC7CO,KAAK,YAAW,SAASmF,GACtBpF,SAAUc,MAAMF,UAAU,QAAQlC,KAAK,CAAC0G,IAAarE,KAAK,QAAQiB,KAAKoD,GAAYnF,KAAK,oBAAoB,cAE/GA,KAAK,cAAc,SAAUmF,GAC1BpF,SAAUc,MAAMF,UAAU,QAAQlC,KAAK,CAAC,IAAIqC,KAAK,QAAQd,KAAK,KAAK,WAAiE,OAAnDuC,EAAgBU,KAAKlD,EAAG4B,EAAYwD,KAAsB5C,OACxIvC,KAAK,OAAQ,QAAQA,KAAK,YAAY,wBDiB/C2E,CAAc2F,EAAMlJ,eAAekJ,EAAM3I,aACzC,IAAMgV,EAAU9I,KAFM,EAIQtD,IAAMC,SAAS,CAAC,IAJxB,mBAIfyL,EAJe,KAINiD,EAJM,KAKhBC,EAAe,SAACpV,GAAD,OAAW,WAC9B,IAAMqV,EAAenD,EAAQoD,QAAQtV,GAC/BuV,EAAU,YAAOrD,IAED,IAAlBmD,EACFE,EAAW/b,KAAKwG,GAEhBuV,EAAWC,OAAOH,EAAc,GAElCF,EAAWI,KAeb,OACE,yBAAKtO,UAAU,iBAAiB1G,MAAO,CAACxC,OAAOqK,OAAOC,cAClC,GAAjB9B,EAAMuO,UACP,yBAAK7N,UAAU,wBACb,kBAAC,GAAD,CAAOoJ,gBAAiB9J,EAAM8J,kBAC9B,yBAAKpJ,UAAU,YAAY1G,MAAO,CAAC4E,WAAW,EAAG6N,UAAU,sBACzD,uBAAG/L,UAAU,cAAb,WACA,kBAACwM,GAAA,EAAD,CACEzK,GAAG,uBACHoK,aAAc7M,EAAM2C,WACpBuM,QAAQ,SACR5Q,MAAM,UACNwC,SAAU,SAACC,GAAD,OAzBC,SAACA,GACpB,IAAIjB,EAAM/M,SAASgO,EAAM6K,OAAOnS,OAC5BqG,GAAO,GACTwL,YAAW,WACTtL,EAAM0O,eAAe5O,KACpB,KAoBwBqP,CAAapO,IAClCoM,WAAW,EACXnT,MAAO,CAACxC,OAAO,OAGnB,yBAAKkJ,UAAU,QACb,uBAAGA,UAAU,cAAb,SACA,kBAAC4M,GAAA,EAAD,CAAM5M,UAAW2L,EAAQhH,UACtB,CAAC,WAAY,eAAezR,KAAI,SAAC6F,GAChC,IAAM8T,EAAO,8BAA0B9T,GACvC,OACE,kBAAC+T,GAAA,EAAD,CAAU7Z,IAAK8F,EAAOgU,UAAMC,EAAWpM,QAASuN,EAAapV,IAC3D,kBAACiS,GAAA,EAAD,CACEC,QAAS3L,EAAMgD,KAAK5K,SAASqB,GAC7BkU,KAAK,QACLC,UAAW,EACXnU,MAAOA,EACPqH,SAAU,SAACC,EAAOtH,GAChB,IAAI2V,EAAU,YAAIpP,EAAMgD,MACrBoM,EAAUhX,SAAS2I,EAAM6K,OAAOnS,QAA8B,YAApBsH,EAAM6K,OAAOnS,MACxD2V,EAAUA,EAAU7a,QAAO,SAAAI,GAAI,OAAEA,GAAMoM,EAAM6K,OAAOnS,SAGpD2V,EAAUnc,KAAK8N,EAAM6K,OAAOnS,OAE9BuG,EAAM2O,SAASS,MAInB,uBAAG1O,UAAU,kBAAkB+B,GAAI8K,GAAU9T,UAMlD,KACP,yBAAKO,MAAO,CAACO,MAAM,OAAOoG,QAAQ,EAAE8L,UAAU,sBAAsB,yBAAK/L,UAAU,oBAAoB1G,MAAO,CAACO,MAAM,e,wCEpErH8U,G,kDACJ,WAAYrP,GAAQ,IAAD,8BACjB,cAAMA,IAIRsP,kBAAoB,SAACvO,GACnB,EAAKa,SAAS,CAAEoB,KAAM,CAAC,eAAgB,WAAY,iBACnD,EAAKhD,MAAMoM,6BAA6B,CAAE,aAAc,EAAGmD,QAAS,IACpE,EAAKvP,MAAMqD,gCAAgC,IAC3C,EAAKrD,MAAMH,gBAAgB,CAAC,EAAG,KAC/B,EAAKG,MAAM6F,mBAAmB,IAC9B,EAAK7F,MAAM+L,SAAS,SACpB,EAAK/L,MAAMwD,sBAAsB,CAAC,EAAG,KACrC,EAAKxD,MAAMiE,sBAAsB,CAAC,GAAI,KACtC,EAAKjE,MAAM+F,oBAAoB,CAAC,EAAG,KACT,kBAAtBhF,EAAM6K,OAAOnS,OACf,EAAKmI,SAAS,CAAEzO,QAAS,WACzB,EAAK6M,MAAMwP,YAAY,UACvB,EAAKC,cAAc,WACY,iBAAtB1O,EAAM6K,OAAOnS,OACtB,EAAKmI,SAAS,CAAEzO,QAAS,UACzB,EAAK6M,MAAMwP,YAAY,SACvB,EAAKC,cAAc,WAEnB,EAAK7N,SAAS,CAAEzO,QAAS,WACzB,EAAK6M,MAAMwP,YAAY,UACvB,EAAKC,cAAc,YA1BJ,EA8BnBA,cAAgB,SAACC,GACK,UAAhBA,GACF,EAAKC,aAAaC,IAAQC,IAAaC,IAAaJ,GAElC,UAAhBA,GACF,EAAKC,aAAaI,IAAQC,IAAaC,IAAaP,GAElC,SAAhBA,GACF,EAAKC,aAAaO,IAAOC,IAAYC,IAAYV,IAtClC,EAyCnBC,aAAe,SACbU,EACAC,EACAC,EACAb,GAEA,IAAIjF,EAAI,eAERhV,MAAO4a,GAA0BxF,MAAK,SAACtY,GACrC,IAAIoN,EAAuBwC,EAAmB5P,GAAeC,MACzDC,EAAiB0P,EAAmB5P,GAAeE,eACnD+M,EAAqB/K,OAAOC,KAAKiL,GACrC8K,EAAKzK,MAAMoD,mBAAmB3Q,GAC9BgY,EAAKzK,MAAM8F,eACTnG,EAAqBH,EAAmB,IAAIvL,QAE9CwW,EAAK7I,SAAS,CAAEpC,mBAAoBA,IACpCiL,EAAKzK,MAAM8L,uBAAuBtM,GAClCiL,EAAKzK,MAAMkM,oBAAoB1M,EAAmB,IAClDiL,EAAKzK,MAAMmM,oBAAoB3M,EAAmB,IAClDiL,EAAKzK,MAAMwQ,gBAAgBhR,EAAmB,IAC9CiL,EAAK7I,SAAS,CAAE6O,SAAUjR,EAAmB,KAC7CiL,EAAKzK,MAAM0Q,yBAAyB/Q,GACpC8K,EAAK7I,SAAS,CAAEjC,qBAAsBA,IAAwB,eAC9D8K,EAAK7I,SAAS,CAAErP,cAAeA,IAC/BkY,EAAKzK,MAAMyO,kBAAkBlc,GAC7BkY,EAAKzK,MAAMxE,kBAAkBgE,EAAmB,OAGlD/J,MAAO6a,GAAoBzF,MAAK,SAAC1W,GAC/B,IAAIwc,EAAc,GAClBlb,SACG9B,KAAI,SAAUoC,GACb,OAAOA,EAAElC,SAEVuO,QAAQjO,GACRP,KAAI,SAACe,GACJgc,EAAYhc,EAAKhB,KAAOgB,EAAKic,UAEjCnG,EAAKzK,MAAM6Q,cAAcF,MAG3Blb,MAAO8a,GAAoB1F,MAAK,SAAC1W,GAC/B,IAAIwc,EAAc,GAClBlb,SACG9B,KAAI,SAAUoC,GACb,OAAOA,EAAElC,SAEVuO,QAAQjO,GACRP,KAAI,SAACe,GACJgc,EAAYhc,EAAKhB,KAAOgB,EAAKic,UAEjCnG,EAAKzK,MAAM8Q,cAAcH,OA7FV,EAiGnBI,mBAAqB,SAACtX,EAAOd,GAC3B2S,YAAW,WACT,EAAK1J,SAAS,CAAEoP,OAAQrV,KAAKqV,aAC5B,KACe,EAAKpP,SAAS,CAAE2M,UAAW9U,IAC7B,EAAKmI,SAAS,CAAE2M,UAAW9U,KAnG3C,EAAKqF,MAAQ,CAAEyP,UAAW,EAAG5O,qBAAsB,MAHlC,E,gEA0GjBpJ,KAAKkZ,cAAc,Y,8CAGnB,OAAO,I,+BAEC,IAAD,OACP,OACE,yBAAK/O,UAAU,kBACb,yBAAKA,UAAU,mBACT,kBAACkD,EAAA,EAAD,CAAMC,WAAS,EAACoN,QAAS,EAAGvQ,UAAU,WAAW1G,MAAO,CAAEkX,KAAM3Z,EAAE,YAAYgD,QAAQyK,SAAS,WAC7F,kBAACpB,EAAA,EAAD,CAAMjP,MAAI,GAAV,IAAY,wBAAI+L,UAAU,aAAd,YACZ,kBAACkD,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAE4E,WAAY,IAAIuS,YAAa,qBAAsB5W,MAAO,MAAO,kBAAC6G,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAKyP,mBAAmB,EAAG,YAAlD,cACrF,kBAACnN,EAAA,EAAD,CAAMjP,MAAI,EAACqF,MAAO,CAAEmX,YAAa,qBAAsB5W,MAAO,MAAO,kBAAC6G,EAAA,EAAD,CAAQE,QAAS,kBAAM,EAAKyP,mBAAmB,EAAG,YAAlD,eAE9C,GAAxBxa,KAAKuI,MAAMyP,UACV,kBAAC6C,GAAA,EAAD,CAAK1Q,UAAU,oBACb,yBAAKA,UAAU,QACb,0BAAM2Q,SAAU,kBAAM,EAAKN,mBAAmB,EAAG,UAC/C,kBAACO,GAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,GAAA,EAAD,CAAWD,UAAU,WACrB,kBAACE,GAAA,EAAD,CAAYC,aAAW,SAAS7F,KAAK,UAAU/K,SAAUvK,KAAK+Y,mBAC3D,CAAC,iBAAkB,iBAAiB,iBAAiB1b,KAAI,SAAC6F,GACzD,OAAO,kBAAC8R,GAAA,EAAD,CAAkB9R,MAAOA,EAAOgS,QAAS,kBAACkG,GAAA,EAAD,MAAWlR,MAAOhH,QAGtE,kBAAC2H,EAAA,EAAD,CAAQzI,KAAK,SAASuW,QAAQ,WAAW5Q,MAAM,WAA/C,YAIN,MAGe,GAAxB/H,KAAKuI,MAAMyP,UACZ,yBAAK7N,UAAU,iBACf,yBAAKA,UAAU,WACb,yBAAKA,UAAU,gBAAe,kBAAC,GAAD,QAEhC,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,OACb,kBAAC,GAAD,OAEF,yBAAKA,UAAU,UACO,SAAnBnK,KAAKyJ,MAAMjB,MACkB,MAA5BxI,KAAKyJ,MAAMzN,eACa,MAAxBgE,KAAKyJ,MAAMnJ,UACX,kBAAC+a,EAAD,MACE,OAGR,yBAAKlR,UAAU,qBACb,yBAAKA,UAAU,OAAM,yBAAK+B,GAAG,UAAUzI,MAAO,CAAEO,MAAO,OAAQ/C,OAAQ,OAAQkH,aAAc,OAC7F,yBAAKgC,UAAU,UAAS,yBAAK+B,GAAG,MAAMzI,MAAO,CAAEO,MAAO,OAAQ/C,OAAQ,OAAQkH,aAAc,SAEzF,U,GAhKKgE,aA2OH7D,gBAtES,SAACC,GACvB,MAAO,CACL+D,SAAU/D,EAAM+D,SAChBxP,YAAayL,EAAMzL,YACnBsP,WAAY7D,EAAM6D,WAClB7L,eAAgBgI,EAAMhI,eACtBrE,eAAgBqM,EAAMrM,eACtBa,cAAewL,EAAMxL,cACrByL,KAAMD,EAAMC,KACZE,iBAAkBH,EAAMG,iBACxB1M,cAAeuM,EAAMvM,cACrB6M,gBAAiBN,EAAMM,gBACvB0D,iBAAkBhE,EAAMgE,iBACxB3P,QAAS2L,EAAM3L,QACf4P,eAAgBjE,EAAMiE,eACtBrD,QAASZ,EAAMY,QACfJ,gBAAiBR,EAAMQ,gBACvBC,gBAAiBT,EAAMS,gBACvBsS,iBAAkB/S,EAAM+S,iBACxBjP,4BAA6B9D,EAAM8D,4BACnClI,OAAQoE,EAAMpE,OACd7D,UAAWiI,EAAMjI,UACjBrD,UAAWsL,EAAMtL,cAGK,SAACoM,GACzB,MAAO,CACL4P,YAAa,SAAC1P,GAAD,OAASF,EAAS,CAAEjH,KAAM,UAAWc,MAAOqG,KACzDmG,mBAAoB,SAACnG,GAAD,OAClBF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KAC5CsD,mBAAoB,SAACtD,GAAD,OAClBF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KAC5CgG,eAAgB,SAAChG,GAAD,OAASF,EAAS,CAAEjH,KAAM,aAAcc,MAAOqG,KAC/DgM,uBAAwB,SAAChM,GAAD,OACtBF,EAAS,CAAEjH,KAAM,qBAAsBc,MAAOqG,KAChDtE,kBAAmB,SAACsE,GAAD,OACjBF,EAAS,CAAEjH,KAAM,gBAAiBc,MAAO1G,SAAS+M,MACpD0O,aAAc,SAAC1O,GAAD,OAASF,EAAS,CAAEjH,KAAM,WAAYc,MAAOqG,KAC3D2O,kBAAmB,SAAC3O,GAAD,OAASF,EAAS,CAAEjH,KAAM,gBAAiBc,MAAOqG,KACrE4Q,yBAA0B,SAAC5Q,GAAD,OACxBF,EAAS,CAAEjH,KAAM,uBAAwBc,MAAOqG,KAClDsM,6BAA8B,SAACtM,GAAD,OAC5BF,EAAS,CAAEjH,KAAM,2BAA4Bc,MAAOqG,KACtDuD,gCAAiC,SAACvD,GAAD,OAC/BF,EAAS,CAAEjH,KAAM,8BAA+Bc,MAAOqG,KACzD+F,mBAAoB,SAAC/F,GAAD,OAClBF,EAAS,CAAEjH,KAAM,iBAAkBc,MAAOqG,KAC5CD,gBAAiB,SAACC,GAAD,OAASF,EAAS,CAAEjH,KAAM,cAAec,MAAOqG,KACjE0Q,gBAAiB,SAAC1Q,GAAD,OAASF,EAAS,CAAEjH,KAAM,cAAec,MAAOqG,KAEjEiM,SAAU,SAACjM,GAAD,OAASF,EAAS,CAAEjH,KAAM,OAAQc,MAAOqG,KACnD0D,sBAAuB,SAAC1D,GAAD,OACrBF,EAAS,CAAEjH,KAAM,oBAAqBc,MAAOqG,KAC/CmE,sBAAuB,SAACnE,GAAD,OACrBF,EAAS,CAAEjH,KAAM,oBAAqBc,MAAOqG,KAC/CiG,oBAAqB,SAACjG,GAAD,OACnBF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KAC7CoM,oBAAqB,SAACpM,GAAD,OACnBF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KAC7CqM,oBAAqB,SAACrM,GAAD,OACnBF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KAE7C+Q,cAAe,SAAC/Q,GAAD,OAASF,EAAS,CAAEjH,KAAM,YAAac,MAAOqG,KAC7DgR,cAAe,SAAChR,GAAD,OAASF,EAAS,CAAEjH,KAAM,YAAac,MAAOqG,KAC7DkG,oBAAqB,SAAClG,GAAD,OACnBF,EAAS,CAAEjH,KAAM,kBAAmBc,MAAOqG,KAC7CoG,yBAA0B,SAACpG,GAAD,OACxBF,EAAS,CAAEjH,KAAM,uBAAwBc,MAAOqG,QAGvCjB,CAA4CwQ,I,kBChRvDyC,IAAY,IACbtc,YAAa,CAACuD,eAAe,IAAKC,oBAAoB,IAAKC,kBAAkB,IAAKJ,iBAAiB,KACnGiR,gBAAiB,KACjBrX,eAAgB,KAChBiN,QAAS,oBACTnN,cAAe,KACfiB,UAAW,KACXqD,UAAW,KACX8I,qBAAsB,KACtBoS,yBAA0B,KAC1Bjb,eAAgB,CAAC,aACjBzD,YAAa,CAAC,EAAG,IACjBsP,WAAY,EACZK,KAAM,CAAC,eAAgB,WAAY,eACnCxD,mBAAoB,CACjB,QAEHlM,cAAe,KACf8Q,eAAgB,CAAC,QACjB4N,WAAY,EACZhT,WAAY,GACZuP,UAAW,EACXpb,QAAS,SACT4P,eAAgB,GAChBD,iBAAkB,OAClB5P,oBAAqB,KACrBud,SAAU,KACVwB,OAAQ,aACRrP,4BAA6B,GAC7BC,UAAU,EACVqP,MAAO,KACP/G,cAAe,GACfZ,eAAgB,KAChB4H,oBAAqB,KACrBC,aAAc,aACdC,mBAAoB,QACpBC,YAAa,KACbvT,KAAM,QACNE,iBAAkB,aAClBC,kBAAmB,CAAC,EAAG,IACvBC,kBAAmB,CAAC,GAAI,IACxBC,gBAAiB,aACjBE,gBAAiB,OACjBC,gBAAiB,OACjBF,gBAAiB,CAAC,EAAG,KA5CR,kCA6CK,QA7CL,0CA8Ca,CAAE,aAAc,EAAG,QAAW,IA9C3C,2BA+CF,IA/CE,yBAgDL,GAhDK,yBAiDJ,QAjDI,kCAkDK,MAlDL,2BAmDH,GAnDG,iCAoDI,CAAC,OAAQ,cApDb,kCAqDK,IArDL,wCAsDW,IAtDX,oCAuDO,IAvDP,sCAwDS,IAxDT,4BAyDD,CAAC,OAAQ,YAAa,YAAa,aAAc,aAAc,aAAc,YAAa,YAzDzF,4BA0DF,GA1DE,4BA2DF,GA3DE,iCA4DG,IA5DH,6BA6DD,CAAC,UAAY,kBA7DZ,IAwNDkT,GAxJC,WAAmC,IAAlCzT,EAAiC,uDAAzBgT,GAAcU,EAAW,uCAC/C,GAAoB,oBAAhBA,EAAO7Z,KAER,OAAO,gBAAKmG,EAAZ,CAAmBvJ,gBAAiBid,EAAO/Y,QAE9C,GAAoB,cAAhB+Y,EAAO7Z,KAER,OADA8Z,QAAQC,IAAIF,EAAO/Y,OACZ,gBAAKqF,EAAZ,CAAmBoE,UAAWsP,EAAO/Y,QAExC,GAAoB,cAAhB+Y,EAAO7Z,KAER,OADA8Z,QAAQC,IAAIF,EAAO/Y,OACZ,gBAAKqF,EAAZ,CAAmByD,UAAWiQ,EAAO/Y,QAExC,GAAoB,mBAAhB+Y,EAAO7Z,KAER,OADA8Z,QAAQC,IAAIF,EAAO/Y,OACZ,gBAAKqF,EAAZ,CAAmBsF,eAAgBoO,EAAO/Y,MAAM+Y,EAAO/Y,MAAMxF,OAAO,GAAGX,cAAckf,EAAO/Y,MAAM+Y,EAAO/Y,MAAMxF,OAAO,KAEzH,GAAoB,yBAAhBue,EAAO7Z,KAER,OAAO,gBAAKmG,EAAZ,CAAmBmE,qBAAsBuP,EAAO/Y,QAEnD,GAAoB,uBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmB6T,mBAAoBH,EAAO/Y,QAEjD,GAAoB,2BAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmB8T,uBAAwBJ,EAAO/Y,QAErD,GAAoB,gBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBpE,OAAQ8X,EAAO/Y,QAErC,GAAoB,SAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBkE,KAAMwP,EAAO/Y,QAEnC,GAAoB,cAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBjI,UAAW2b,EAAO/Y,QAExC,GAAoB,mBAAhB+Y,EAAO7Z,KAA2B,CACnC,IAAIka,EAAY,CAAC,gBAAiB,eAAgB,aAAc,iBAAiB,eAAgB,YAAjF,CAAgG,eAC5Gxb,EAAY,GAEhB,OADAmb,EAAO/Y,MAAM7F,KAAI,SAACe,EAAKH,GAAS6C,EAAY1C,GAAMke,EAAYre,MACvD,gBAAKsK,EAAZ,CAAmBzH,YAAYA,EAAYP,eAAgB0b,EAAO/Y,QAErE,GAAoB,cAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBtL,UAAWgf,EAAO/Y,QAExC,GAAoB,kBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBvM,cAAeigB,EAAO/Y,QAE5C,GAAoB,uBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBU,mBAAoBgT,EAAO/Y,QAEjD,GAAoB,oBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBgL,gBAAiB0I,EAAO/Y,QAE9C,GAAoB,gBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBzL,YAAamf,EAAO/Y,QAE1C,GAAoB,kBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBxL,cAAekf,EAAO/Y,MAAM2K,eAAgB,CAACoO,EAAO/Y,MAAMyU,cAEhF,GAAoB,aAAhBsE,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmB+D,SAAU2P,EAAO/Y,QAEvC,GAAoB,yBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBa,qBAAsB6S,EAAO/Y,QAEnD,GAAoB,YAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBY,QAAS8S,EAAO/Y,QAEtC,GAAoB,eAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmB6D,WAAY6P,EAAO/Y,QAEzC,GAAoB,SAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBC,KAAMyT,EAAO/Y,QAEnC,GAAoB,eAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBE,WAAYwT,EAAO/Y,QAEzC,GAAoB,qBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBG,iBAAkBuT,EAAO/Y,QAG/C,GAAoB,sBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBI,kBAAmBsT,EAAO/Y,QAEhD,GAAoB,sBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBK,kBAAmBqT,EAAO/Y,QAEhD,GAAoB,oBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBO,gBAAiBmT,EAAO/Y,QAE9C,GAAoB,oBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBM,gBAAiBoT,EAAO/Y,QAE9C,GAAoB,oBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBQ,gBAAiBkT,EAAO/Y,QAE9C,GAAoB,oBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBS,gBAAiBiT,EAAO/Y,QAE9C,GAAoB,gCAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmB8D,4BAA6B4P,EAAO/Y,QAE1D,GAAoB,wBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmB5L,oBAAqBsf,EAAO/Y,QAElD,GAAoB,mBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBrM,eAAgB+f,EAAO/Y,QAE7C,GAAoB,uBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBuT,mBAAoBG,EAAO/Y,QAEjD,GAAoB,iBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBsT,aAAcI,EAAO/Y,QAE3C,GAAoB,mBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBiE,eAAgByP,EAAO/Y,QAE7C,GAAoB,YAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmB3L,QAASqf,EAAO/Y,QAEtC,GAAoB,6BAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBW,yBAA0B+S,EAAO/Y,QAEvD,GAAoB,gBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBwT,YAAaE,EAAO/Y,QAE1C,GAAoB,cAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmB2G,UAAW+M,EAAO/Y,QAExC,GAAoB,WAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmB4G,OAAQ8M,EAAO/Y,QAErC,GAAoB,YAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBgU,QAASN,EAAO/Y,QAEtC,GAAoB,qBAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmB+S,iBAAkBW,EAAO/Y,QAE/C,GAAoB,aAAhB+Y,EAAO7Z,KACR,OAAO,gBAAKmG,EAAZ,CAAmBiU,SAAUP,EAAO/Y,QAEvC,GAAoB,oBAAhB+Y,EAAO7Z,KAA4B,CACpC,IAAIgF,EAAO6U,EAAO/Y,MAAMlF,QAAO,SAAAI,GAAI,MAAY,WAARA,KACvC,OAAO,gBAAKmK,EAAZ,CAAmBkU,gBAAiBrV,IAEvC,MAAoB,qBAAhB6U,EAAO7Z,KAED,gBAAKmG,EAAZ,CAAmB9H,iBAAkBwb,EAAO/Y,QAExCqF,G,UC9MKhB,GAPDmV,aAAe,CAC3BhV,WAAY,CACViV,OAAQ,CACNC,cAAe,W,UCKfC,GAAMC,aAAYd,IACxBe,IAASC,OAAQ,kBAACC,GAAA,EAAD,CAAe1V,MAAOA,IAAO,kBAAC,IAAD,CAAUsV,MAAOA,IAAO,kBAAC,GAAD,QAAmCK,SAASC,eAAe,U,wCCVjIC,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,6DCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.f0ad1454.chunk.js","sourcesContent":["export function groupby_year(original_data) {\n  var years = {}\n  var sparkline_data = {}\n  original_data.forEach(element => {\n    years[element['1-qid']] = []\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')] = []\n  });\n\n  original_data.forEach(element => {\n    var temp_dict = { year: parseInt(element['1-qid']), rank: parseInt(element['two_realRank']) }\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')].push(temp_dict)\n    years[element['1-qid']].push(element)\n  });\n  return { years: years, sparkline_data: sparkline_data };\n}\nexport function features_with_score(dataset, models, state_range, selected_year, number_of_charts, rank_data) {\n  var temp1 = {}\n  var temp_final = {}\n  models.map(model => {\n    var temp2 = {}\n    var v = number_of_charts;\n    var top_nine = sorted_features(dataset, model, state_range, selected_year,rank_data)\n    if (top_nine.length < number_of_charts) { v = top_nine.length;; number_of_charts = top_nine.length } // This is because number of charts is calculated based on space but there are cases when we don't have that many features\n    for (var i = 0; i < number_of_charts; i++) {\n      temp2[top_nine[i]] = v;\n      v = v - 1\n    }\n    temp1[model] = temp2\n  });\n\n  for (var key in temp1) {\n    for (var key2 in temp1[key]) {\n      if (temp_final[key2] > 0) {\n\n        temp_final[key2] = temp_final[key2] + temp1[key][key2]\n      }\n      else {\n        temp_final[key2] = temp1[key][key2]\n      }\n    }\n  }\n  return temp_final;\n}\n\n\nexport function sorted_features(dataset, model, state_range, selected_year,rank_data) { // Uses feature rank to rank and return features name by removing the feature_rank string\n  if (!state_range.length > 0) { return [] }\n  state_range = state_range.map(element => element - 1)\n  var tempvoted_data_with_score = {},items,data,feautures;\n\n  if (model == \"ListNet\") { return [] }\n  var data2 = rank_data[model].filter(element => { if (parseInt(element['1-qid']) == parseInt(selected_year)) { return element } })\n  data = state_range.map(index => data2[index])\n  feautures = Object.keys(data[0])\n\n  data.map(item => {\n    feautures.forEach(feauture => {\n      if (tempvoted_data_with_score[feauture] >= 0 || tempvoted_data_with_score[feauture] < 0) {\n        tempvoted_data_with_score[feauture] = tempvoted_data_with_score[feauture] + (parseFloat(item[feauture]))\n      }\n      else { tempvoted_data_with_score[feauture] = parseFloat(item[feauture]) }\n    })\n  })\n  //-----------------------------------------------------------------\n  // Create items array\n  items = Object.keys(tempvoted_data_with_score).map(function (key) {\n    return [key, tempvoted_data_with_score[key]];\n  });\n  // Sort the array based on the second element\n  items.sort(function (first, second) {\n    return first[1] - second[1];\n  });\n  var items2 = items.map((element) => element[0].replace(\"_feature_rank\", \"\"))\n  items2 = items2.filter(item => item != \"1-qid\" && item!=\"model\")\n  return items2;\n  //-----------------------------------------------------------------\n}\n","import * as d3 from 'd3';\nexport function handle_transparency(class_name, clicked_circles, anim_config) {\n    if (clicked_circles.length != 0) {\n        d3.selectAll(\".\" + \"items\").attr('opacity', 0.3) // Reduce the opacity of all groups\n        clicked_circles.map(circle_class => {\n            d3.selectAll(\".\" + circle_class).attr('opacity', 1) // Set opacity of 1 for all clicked instances\n        })\n    }\n    else {\n        d3.selectAll(\".items\").attr('opacity', 1); // Groups\n    }\n}\nexport function draw_lines(clicked_circles, diverginColor) {\n    d3.selectAll(\"#mylines\").remove()\n    clicked_circles.map(d => {\n        var lines = []\n        var two_realRank = 0\n        var parent_id = d3.select(\"#\" + d).attr('id').substring(0,3)\n        var points = []\n        d3.select(\"#\" + parent_id).selectAll(\"#\" + d).each(function (d) {\n            two_realRank = d3.select(this).attr('two_realRank')\n            points.push([d3.select(this).attr('cx2'), d3.select(this).attr('cy')])\n        })\n        lines.push([d, d3.line()(points), two_realRank])\n        d3.select(\"#\" + parent_id).selectAll('.' + d).data(lines, d => d[0]).join('path').attr(\"stroke\", d => diverginColor(d[2])).attr(\"stroke-width\", 2)\n            .attr('id', 'mylines').attr('State', d => d[2]).attr('class', d).transition().duration(0).attr('d', d => d[1]).attr(\"fill\", \"none\")\n    })\n}","import * as d3 from \"d3\";\nimport * as $ from \"jquery\";\nimport CreatexpCircle from \"./05_01_Create_exp_circles\"\nimport CreatexpHistogram from \"./05_02_Create_exp_histogram\"\nexport default function create_top_explanation_plot(parent_id, selected_instances, sorted_features, lime_data, selected_year, defualt_models, \n    clicked_circles, Set_clicked_circles, diverginColor, anim_config, clicked_features, Set_clicked_features, feature_total_width, \n    feature_width,top_histogram_width,symbolTypes) {\n    var top_parent_height = $(\"#\" + parent_id).height();\n    var marginTop=20\n    d3.select(\"#\" + parent_id).selectAll(\".features\").data(sorted_features).join(\"svg\").attr(\"class\", \"features\")\n        .attr(\"x\", (d, i) => feature_total_width * i).attr(\"width\", feature_total_width).attr(\"y\",marginTop).attr(\"height\", top_parent_height-marginTop)\n        .attr(\"add_feature_name\",function(d,i){\n            d3.select(\"#\" + parent_id).selectAll(\".feature_name\"+i).data([0]).join(\"text\").attr(\"class\",\"feature_name\"+i).attr(\"x\", (d) => 10+feature_total_width * i).attr(\"dominant-baseline\",\"hanging\").attr(\"font-size\",12).text(d[0].length>15?d[0].slice(0,15)+\"..\":d[0])\n        })\n        .attr(\"svg2\",function(d){\n            d3.select(this).selectAll(\"#svg1\").data([0]).join(\"svg\").attr('id','svg1').attr(\"x\", top_histogram_width).attr(\"width\", feature_width).attr(\"height\", top_parent_height)\n            .attr(\"add_exp_circles\",function(){\n                CreatexpCircle(d,d3.select(this), selected_instances, sorted_features, lime_data, selected_year, defualt_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, clicked_features, Set_clicked_features,symbolTypes)\n            })\n        })\n        .attr(\"svg1\",function(d){\n            d3.select(this).selectAll(\"#svg2\").data([0]).join(\"g\").attr('id','svg2').attr(\"transform\",\"translate(\"+0+\",\"+\"0)\" ).attr(\"width\", top_histogram_width).attr(\"height\", top_parent_height)\n            .attr(\"add_exp_circles\",function(){\n                CreatexpHistogram(d,d3.select(this), selected_instances, sorted_features, lime_data, selected_year, defualt_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, clicked_features, Set_clicked_features,top_histogram_width,feature_width)\n            })\n        })\n\n\n}","import * as d3 from \"d3\";\nexport default function CreatexpCircle(d, selection, selected_instances, sorted_features, lime_data, selected_year, defualt_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, clicked_features, Set_clicked_features,symbolTypes) {\n    var margin = { item_top_margin: 6,item_bottom_margin:6, circ_radius: 5, item_left_margin: 6, item_right_margin: 6 }\n    var item_width = d3.select(\"#svg1\").attr(\"width\")\n    var item_height = d3.select(\"#svg1\").attr(\"height\")\n    var feature_name = d[0]\n    var feature_contrib_name = d[0] + \"_contribution\"\n    var symbolGenerator = d3.symbol().size(30);\n    var circ_data = []\n    defualt_models.map(model => {\n        lime_data[model].map(item => {\n            if (item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n                item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n                circ_data.push(item)\n            }\n        })})\n        // Draw circle starts here\n        var yScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[d[0]]))), d3.max(circ_data.map(item => parseFloat(item[d[0]])))])\n            .range([margin.item_top_margin, item_height-margin.item_bottom_margin])\n        var xScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[feature_contrib_name]))), d3.max(circ_data.map(item => parseFloat(item[feature_contrib_name])))])\n            .range([margin.item_left_margin, item_width - margin.item_right_margin])\n\n        var mycircles = selection.selectAll(\".my_circles\").data(circ_data, d => d['id']).join(\n            enter => enter.append('g')\n                .attr('id', d => d['id'])\n                .attr('class', d=>d['id']+' items circle2 my_circles')\n                .attr('fill', d => diverginColor(d['two_realRank']))                \n                .attr(\"transform\", function (d, i) {\n                    var x_transform = xScale(parseFloat(d[feature_contrib_name]))\n                    var y_transform = yScale(parseFloat(d[feature_name]))\n                    return \"translate(\" + x_transform + \",\" + y_transform + \")\";\n                  })\n                  .attr(\"Add_symbol\", function (d, i) {\n                    d3.select(this).selectAll(\"path\").data([0]).join(\"path\").attr(\"d\", function () { symbolGenerator.type(d3[symbolTypes[d[\"model\"]]]); return symbolGenerator(); })\n                      .attr(\"fill\", diverginColor(d['two_realRank']));\n                  })\n            // Update\n            , update => update.attr('class', d=>d['id']+' items circle2 my_circles')\n                .transition().duration(anim_config.circle_animation).delay(anim_config.rank_animation + anim_config.deviation_animation + anim_config.feature_animation)\n                .attr(\"transform\", function (d, i) {\n                    var x_transform = xScale(parseFloat(d[feature_contrib_name]))\n                    var y_transform = yScale(parseFloat(d[feature_name]))\n                    return \"translate(\" + x_transform + \",\" + y_transform + \")\";\n                  })\n                .attr('id', d => d['id'])\n                .attr(\"Add_symbol\", function (d, i) {\n                    d3.select(this).selectAll(\"path\").data([0]).join(\"path\").attr(\"d\", function () { symbolGenerator.type(d3[symbolTypes[d[\"model\"]]]); return symbolGenerator(); })\n                      .attr(\"fill\", diverginColor(d['two_realRank']));\n                  })\n            , exit => exit.remove())\n        mycircles.on('click', d => {\n            Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']])\n        }\n        )\n        // Draw circle ends here\n    \n\n}","import * as d3 from \"d3\";\nexport default function CreatexpHistogram(d, selection, selected_instances, sorted_features, lime_data, selected_year, defualt_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, clicked_features, Set_clicked_features,top_histogram_width,feature_width) {\n    var margin = { item_top_margin: 6, item_bottom_margin: 6, circ_radius: 5, item_left_margin: 6, item_right_margin: 6 }\n    var item_width = d3.select(\"#svg2\").attr(\"width\")\n    var item_height = d3.select(\"#svg2\").attr(\"height\")\n    var y_axis_x_transform=feature_width+8\n    var feature_name = d[0]\n    defualt_models.map(model => {\n        var hist_data = []\n        lime_data[model].map(item => {\n            if (item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n                item[feature_name] = parseFloat(item[feature_name])\n                hist_data.push(item)\n            }\n        })\n        // Draw circle starts here\n        var y = d3.scaleLinear().domain([d3.min(hist_data.map(item => parseFloat(item[feature_name]))), d3.max(hist_data.map(item => parseFloat(item[feature_name])))])\n            .range([0, item_height-margin.item_bottom_margin])\n        // set the parameters for the histogram\n        var histogram = d3.histogram()\n            .value(d => d[feature_name])   // I need to give the vector of value\n            .domain(y.domain())  // then the domain of the graphic\n            .thresholds(y.ticks(3)); // then the numbers of bins\n        // And apply this function to data to get the bins\n        var bins = histogram(hist_data);\n        var x = d3.scaleLinear().domain([0, d3.max(bins.map(item => item.length))])\n        .range([0, item_width])\n        // append the bar rectangles to the svg element\n        selection.selectAll(\"rect\")\n            .data(bins)\n            .join(\"rect\")\n            .attr(\"x\", d=> top_histogram_width-x(d.length))\n            .attr(\"y\", d=>y(d.x0))\n            .attr(\"height\", function (d) { return (y(d.x1) - y(d.x0)) -0.5})\n            .attr(\"width\", function (d) { return x(d.length)})\n            .style(\"fill\", \"#b2b2b2\")\n            .attr(\"length\",d=>d.length)\n            .attr(\"add_horizontal_lines\",function(d,i){\n                d3.select(this.parentNode).selectAll(\".myhorizontal_lines\").data(bins).join('line').attr(\"class\",\"myhorizontal_lines\")\n                .attr(\"y1\",d=>y(d.x0)).attr(\"y2\",d=>y(d.x0)).attr(\"x1\",top_histogram_width).attr(\"x2\",feature_width+top_histogram_width -2).attr('stroke-width', 0.5).attr(\"stroke\", \"#bababa\")\n            })\n            .attr(\"add_vertical_line\",function(d,i){\n                d3.select(this.parentNode).selectAll(\".my_vertical_lines\").data([0]).join('line').attr(\"class\",\"my_vertical_lines\").attr(\"transform\",\"translate(\"+top_histogram_width+\",0)\")\n                .attr(\"y1\",0).attr(\"y2\",item_height).attr(\"x1\",feature_width/2).attr(\"x2\",feature_width/2).attr('stroke-width', 0.5).attr(\"stroke\", \"#bababa\")\n            })\n    //-------------- Add right axis\n            selection.selectAll(\".axisRight\").data([0]).join(\"g\").attr(\"class\",\"axisRight\").attr(\"transform\",\"translate(\"+y_axis_x_transform+\",0)\").call(d3.axisRight(y).ticks(3).tickFormat(d3.format(\".1s\")))\n        .attr(\"remove\",function(){d3.select(this).selectAll(\".domain\").remove();d3.select(this).selectAll(\"line\").remove();d3.select(this).selectAll(\"text\").attr(\"font-size\",9)})\n        \n    })\n\n}","import * as d3 from \"d3\";\nimport * as $ from \"jquery\";\nimport * as misc_algo from \"./misc_algo\";\nimport create_top_explanation_plot from \"./05_00_top_explanation_plot\"\nexport function CreatexpChart(\n  parent_id, selected_instances, sorted_features, lime_data, selected_year, defualt_models, clicked_circles, Set_clicked_circles,\n  diverginColor, anim_config, clicked_features, Set_clicked_features, symbolTypes) {\n  var bottom_parent_width = $(\"#\" + parent_id).width() - 5;\n  var bottom_parent_height = $(\"#\" + parent_id).height();\n  var space_for_right_y_axis=20\n  //----------------------------------------------------------------------\n  var top_histogram_width = 20 // This is the width\n  var feature_total_width = bottom_parent_width / sorted_features.length; // This is the width each svg has to contain all features\n  var feature_width = (bottom_parent_width / sorted_features.length) - (top_histogram_width+space_for_right_y_axis); // This is the width to use for the bottom explanation chart\n  d3.select(\"#\" + parent_id).selectAll(\".features\").data(sorted_features).join(\"svg\").attr(\"class\", \"features\")\n    .attr(\"x\", (d, i) => top_histogram_width + feature_total_width * i).attr(\"width\", feature_width).attr(\"height\", bottom_parent_height)\n    .attr(\"add_lines\", function (feature_data, i) {\n      // font_line_gap=sparkline_width+4\n      var config = { fontSize: 12, font_dy: -6, sparkline_width: 20, font_line_gap: 24, line_stroke_width: 10, animation_duration: 0, container_height: 100, my_svg_top_margin: 10, myg_top_margin: 10, left_margin: 100 };\n      var y_distance = config.line_stroke_width + 2;\n      d3.select(this).selectAll(\".items\").data(selected_instances).join(\"g\").attr(\"class\", \"items\").attr(\"transform\", (d, i) => \"translate(\" + 0 + \",\" + (8 + i * y_distance) + \")\")\n        //---------------------------------------------------------------------------------------------------------------------------------------------------\n        .attr(\"add_lines_and_circles\", function (current_two_realRank, i) {\n          var feature_contrib_name = feature_data[0] + \"_contribution\";\n          d3.select(this).selectAll(\"line\").data([current_two_realRank]).join(\"line\")\n            .attr(\"x1\", 0).attr(\"x2\", feature_width - 2).attr(\"y1\", 0).attr(\"y2\", (d) => 0).attr(\"stroke-width\", 2).attr(\"stroke\", \"#CECECE\");\n          //----------------------------------------------------Add circles\n          var current_item = [];\n          //var circ_xscale=d3.scaleLinear().domain\n          var circ_data = [];\n          defualt_models.map((model_name, model_index) => {\n            lime_data[model_name].map((item) => {\n              if (item[\"1-qid\"] == selected_year && selected_instances.includes(parseInt(item[\"two_realRank\"]))) {\n                item[\"id\"] = item[\"State\"].replace(/ /g, \"\").replace(/[^a-zA-Z ]/g, \"\") + model_name.replace(/ /g, \"\").replace(/[^a-zA-Z ]/g, \"\");\n                circ_data.push(item)\n                if (current_two_realRank == parseInt(item[\"two_realRank\"])) { current_item.push(item); }\n              }\n            });\n          });\n          // Draw circle starts here\n          var xScale = d3.scaleLinear().domain([0, d3.max(circ_data.map((item) => parseFloat(item[feature_contrib_name])))]).range([5, feature_width - 7]);\n          // ---------------------------------------------------------------------------------Add symbols\n          var symbolGenerator = d3.symbol().size(30);\n          d3.select(this).selectAll(\".\" + \"symbols\").data(current_item).join(\"g\")//.transition().duration(0)\n            .attr('class', d => \"symbols circle2 \" + d['model'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\"))\n            .attr(\"transform\", function (d, i) {\n              // make a transformation algorithm to scale modelwise\n              var x_transform = 5\n              if (parseFloat(d[feature_contrib_name]) > 0) {\n                x_transform = xScale(parseFloat(d[feature_contrib_name]))\n              }\n              return \"translate(\" + x_transform + \",\" + 0 + \")\";\n            })\n            .attr(\"Add_symbol\", function (d, i) {\n              d3.select(this.parentNode).classed(d['id'],true)\n              d3.select(this).selectAll(\"path\").data([0]).join(\"path\").attr(\"d\", function () { symbolGenerator.type(d3[symbolTypes[d['model']]]); return symbolGenerator(); })\n                .attr(\"fill\", d => diverginColor(current_two_realRank));\n            })\n            .on('click', d => {\n              Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']])\n          })\n          //-----\n        })\n    });\n  //----------------------------------------------------------------------\n  create_top_explanation_plot(\"top_exp\", selected_instances, sorted_features, lime_data, selected_year, defualt_models, \n    clicked_circles, Set_clicked_circles, diverginColor, anim_config, clicked_features, Set_clicked_features, feature_total_width, \n    feature_width,top_histogram_width,symbolTypes)\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport function CreatexpCircle(\n  parent_id,\n  selected_instances,\n  sorted_features,\n  lime_data,\n  selected_year,\n  defualt_models,\n  clicked_circles,\n  Set_clicked_circles,\n  diverginColor,\n  anim_config,\n  clicked_features,\n  Set_clicked_features\n) {\n  var margin = {\n    item_top_margin: 15,\n    right: 14,\n    bottom: 0,\n    left: 20,\n    circ_radius: 5,\n    item_left_margin: 25,\n    item_right_margin: 3,\n  };\n  var bottom_parent_width = $(\"#\" + parent_id).width() - margin.item_left_margin;\n  var bottom_parent_height = $(\"#\" + parent_id).height() - margin.item_top_margin * 2;\n  var item_width =\n    bottom_parent_width / sorted_features.length - margin.item_right_margin;\n  var item_height = bottom_parent_height;\n  sorted_features.map((d, svg_index) => {\n    var x_transformation =\n      margin.item_left_margin +\n      item_width * svg_index +\n      margin.item_right_margin * svg_index;\n    var feature_name = d[0];\n    var feature_contrib_name = d[0] + \"_contribution\";\n    defualt_models.map((model) => {\n      var circ_data = [];\n      lime_data[model].map((item) => {\n        if (\n          item[\"1-qid\"] == selected_year &&\n          selected_instances.includes(parseInt(item[\"two_realRank\"]))\n        ) {\n          item[\"id\"] =\n            parent_id +\n            item[\"State\"].replace(/ /g, \"\").replace(/[^a-zA-Z ]/g, \"\") +\n            model.replace(/ /g, \"\").replace(/[^a-zA-Z ]/g, \"\");\n          circ_data.push(item);\n        }\n      });\n      // Draw circle starts here\n      var xScale = d3\n        .scaleLinear()\n        .domain([\n          d3.min(circ_data.map((item) => parseFloat(item[d[0]]))),\n          d3.max(circ_data.map((item) => parseFloat(item[d[0]]))),\n        ])\n        .range([2 * margin.circ_radius, item_width - 2 * margin.circ_radius]);\n      var yScale = d3\n        .scaleLinear()\n        .domain([\n          d3.min(\n            circ_data.map((item) => parseFloat(item[feature_contrib_name]))\n          ),\n          d3.max(\n            circ_data.map((item) => parseFloat(item[feature_contrib_name]))\n          ),\n        ])\n        .range([\n          margin.item_top_margin + margin.circ_radius,\n          item_height - margin.circ_radius,\n        ]);\n      var mycircles = d3\n        .select(\"#\" + parent_id)\n        .select(\"#\" + d[0].replace(/[^\\w\\s]/gi, \"\"))\n        .selectAll(\".my_circles\" + model)\n        .data(circ_data, (d) => d[\"id\"])\n        .join(\n          (enter) =>\n            enter\n              .append(\"circle\")\n              .attr(\"id\", (d) => d[\"id\"])\n              .attr(\"class\", \"circle2 my_circles\" + model)\n              .attr(\"r\", margin.circ_radius)\n              .attr(\n                \"cy\",\n                (d) =>\n                  margin.circ_radius / 2 +\n                  yScale(parseFloat(d[feature_contrib_name]))\n              )\n              .attr(\"cx\", (d, i) => xScale(parseFloat(d[feature_name])))\n              .attr(\"fill\", (d) => diverginColor(d[\"two_realRank\"]))\n              .attr(\n                \"cx2\",\n                (d, i) => x_transformation + xScale(parseFloat(d[feature_name]))\n              )\n              .attr(\"two_realRank\", (d) => d[\"two_realRank\"]),\n          // Update\n          (update) =>\n            update\n              .attr(\"class\", \"circle2 my_circles\" + model)\n              .transition()\n              .duration(anim_config.circle_animation)\n              .delay(\n                anim_config.rank_animation +\n                anim_config.deviation_animation +\n                anim_config.feature_animation\n              )\n              .on(\"end\", () =>\n                misc_algo.draw_lines(clicked_circles, diverginColor)\n              )\n              .attr(\"id\", (d) => d[\"id\"])\n              .attr(\"class\", \"circle2 my_circles\" + model)\n              .attr(\"r\", margin.circ_radius)\n              .attr(\n                \"cy\",\n                (d) =>\n                  margin.circ_radius / 2 +\n                  yScale(parseFloat(d[feature_contrib_name]))\n              )\n              .attr(\"cx\", (d, i) => xScale(parseFloat(d[feature_name])))\n              .attr(\"fill\", (d) => diverginColor(d[\"two_realRank\"]))\n              .attr(\n                \"cx2\",\n                (d, i) => x_transformation + xScale(parseFloat(d[feature_name]))\n              )\n              .attr(\"two_realRank\", (d) => d[\"two_realRank\"]),\n          (exit) => exit.remove()\n        );\n      mycircles\n        .attr(\n          \"cx2\",\n          (d, i) => x_transformation + xScale(parseFloat(d[feature_name]))\n        )\n        .on(\"click\", (d) => {\n          Set_clicked_circles(\n            clicked_circles.includes(d[\"id\"])\n              ? clicked_circles.filter((item) => item != d[\"id\"])\n              : [...clicked_circles, d[\"id\"]]\n          );\n        });\n      // Draw circle ends here\n    });\n  });\n}\n","import * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport Create_sparkline from \"./02_Sparkline\"\nimport add_lines_and_circles from \"./03_deviation_chart_line_symbol\"\n\nexport function Create_deviation_chart(parent_id,parent_exp_id, selected_instances, original_data, defualt_models, anim_config, selected_year, average, clicked_circles, Set_clicked_circles, diverginColor,sparkline_data,Set_selected_year,dataset,symbolTypes) {\n  var parent_width = $(\"#\" + parent_id).width() - 5\n  var data = original_data.filter(item => selected_year==item['1-qid'] && selected_instances.includes(parseInt(item['two_realRank'])))\n  var temp_scale_data = []\n  data.map(item => { defualt_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n  // font_line_gap=sparkline_width+4\n  var config = { fontSize: 12, font_dy: -6, sparkline_width:20,font_line_gap: 24, line_stroke_width: 10, animation_duration: 0, container_height: 100, my_svg_top_margin: 10, myg_top_margin: 10, left_margin: 100 }\n  var y_distance = config.line_stroke_width + 2\n  var circle_radius = config.line_stroke_width / 2\n  var parent_g = d3.select(\"#\" + parent_id).attr('height', y_distance + data.length * y_distance)\n    .selectAll(\".parent_g\").data([0]).join('g').attr('class', 'parent_g').attr('transform', \"translate(\" + 0 + \",8)\")\n\n//-------------------------------------------------- g for each row\n  var items_g = parent_g.selectAll(\".items\").data(data, d => d['State']).join(enter => enter.append(\"g\").attr(\"class\", \"items\")\n    .attr('transform', (d, i) => \"translate(\" + config.left_margin + \",\" + i * y_distance + \")\")\n    , update => update.transition().duration(anim_config.rank_animation).attr('transform', (d, i) => \"translate(\" + config.left_margin + \",\" + i * y_distance + \")\")\n    , exit => exit.remove()\n  )\n\n//-------------------------------------------------- Add state\n  items_g.attr(\"add_state\", function (d) {\n    d3.select(this).selectAll(\"text\").data([d]).join('text').text(d['State'] + \" \" + d['two_realRank']).attr('fill', d => diverginColor(d['two_realRank'])).attr(\"dominant-baseline\", \"hanging\").attr(\"font-size\", config.fontSize)\n      .attr(\"x\", 0).attr('text-anchor', 'end').attr(\"dy\", config.font_dy)\n  })\n\n//-------------------------------------------------- Add sparkline\n  items_g.attr(\"add_sparkline\", function (d) {\n    // sparkline height is y_distance\n    if(dataset!='house'){Create_sparkline(d3.select(this),config,y_distance,sparkline_data,d,diverginColor,selected_year,Set_selected_year)}\n  })\n//-------------------------------------------------- Add lines_and_circles\nitems_g.attr(\"add_lines_and_circles\", function (d) {\n  add_lines_and_circles(d3.select(this),data,defualt_models,config,symbolTypes,clicked_circles,Set_clicked_circles,parent_exp_id,diverginColor,circle_radius,d,anim_config,y_distance,parent_width)\n})\n/*\n.on(\"click\", function() {\n  d3.select(this).classed(\"visible\", d3.select(this).classed(\"visible\") ? false : true);\n});\n*/\n}","import * as d3 from 'd3';\nexport default function Create_sparkline(parent, config, y_distance, sparkline_data, d, diverginColor, selected_year, Set_selected_year) { // sparkline height is y_distance\n    var year = selected_year\n    var s_margin = { top: 0, right: 0, bottom: 0, left: 4 },\n        s_width = config.sparkline_width - 2,\n        s_height = y_distance - 5;\n    var s_svg = parent.selectAll(\".sparkline_svg\").data([0]).join(\"svg\").attr(\"class\", \"sparkline_svg\").attr(\"x\", 2).attr(\"y\", -3)\n        .attr(\"width\", s_width + s_margin.left + s_margin.right)\n        .attr(\"height\", s_height + s_margin.top + s_margin.bottom)\n    \n    var data = sparkline_data[d['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")]\n    // Add X axis  \n    var x = d3.scaleLinear().domain(d3.extent(data, function (d) { return d.year; })).range([0, s_width]);\n    //-----------------------------------------------------------------------------------------------------------------------------------------Add the area\n    s_svg.selectAll(\"path\").remove()\n    s_svg.append(\"path\")\n        .datum(data, d => d)\n        .attr(\"id\", \"A\")\n        .attr(\"opacity\", 1)\n        .attr(\"fill\", diverginColor(d['two_realRank'])) //#969696\n        .attr(\"stroke\", diverginColor(d['two_realRank']))\n        .attr(\"stroke-width\", (d) => {\n            return 1.5\n        })\n        .attr(\"d\", d3.area()\n            .x(function (d) { return x(d.year) })\n            .y0(function () {\n                var y = d3.scaleLinear().domain([0, d3.max(data, function (d) { return +d.rank; })]).range([s_height, 0]);\n                return y(0)\n            })\n            .y1(function (d) {\n                var y = d3.scaleLinear().domain([0, d3.max(data, function (d) { return +d.rank; })]).range([0, s_height]);\n                return y(d.rank)\n            })\n        )\n    //------------Circles\n    s_svg.selectAll('circle').raise().data(data).join('circle')\n        .attr('cx', function (d, i) { return x(d.year) })\n        .attr('cy', s_height - 2)\n        .attr(\"class\", \"myid\")\n        .on(\"mouseover\", function (d) {\n            d3.select(this).style('fill', 'black')\n            d3.select(this).attr('r', 3)\n        })\n        .style('fill', (d) => d.year != year ? 'transparent' : 'black')\n        .attr('class', (d) => d.year != year ? 'transparent_class' : 'red_class')\n        .attr('r', 2)\n        .on('dblclick', (d, i) => {\n            d3.event.preventDefault();\n            Set_selected_year(d.year)\n        })\n        .on(\"mouseout\", function (d) {\n            d3.select(this).style('fill', 'transparent')\n            d3.select(this).style('fill', d.year != year ? 'transparent' : 'black')\n            d3.select(this).attr('r', 2)\n        })\n}","import * as d3 from 'd3';\nexport default function add_lines_and_circles(selection,data,defualt_models,config,symbolTypes,clicked_circles,Set_clicked_circles,parent_exp_id,diverginColor,circle_radius,d,anim_config,y_distance,parent_width){\n  var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n  var line_data = []\n  defualt_models.map(model_name => {\n    data_for_all_years.map(item => {\n      var a = {}\n      a['two_realRank'] = parseInt(item['two_realRank'])\n      a['predicted_rank'] = parseInt(item[model_name])\n      a[\"model\"] = model_name\n      a['year'] = item['1-qid']\n      line_data.push(a)\n    })\n  })\n  // This is only for scaling starts here\n  var temp_scale_data = []\n  data.map(item => { defualt_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n  var temp_max = d3.max(temp_scale_data)\n  var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, parent_width - (config.left_margin + circle_radius)])\n  if (temp_max == 0) { var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, 0]) }\n  // This is only for scaling ends here\n  selection.selectAll(\"line\").data([d]).join(enter => enter.append('line')\n    .attr(\"x1\", config.font_line_gap).attr(\"y1\", (d, i) => y_distance * i).attr(\"y2\", (d, i) => y_distance * i).attr(\"stroke-width\", config.line_stroke_width).attr(\"stroke\", \"#cecece\").attr(\"x2\", (d2) => {\n      var temp = []\n      line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n      return sclale1(d3.max(temp))\n    })\n    // Update\n    , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"x2\", (d2) => {\n      var temp = []\n      line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n      return sclale1(d3.max(temp))\n    }))\n\n  // ------------ Circles start here\n  var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n  var circ_data = []\n  defualt_models.map(model_name => {\n    data_for_all_years.map(item => {\n      var a = {}\n      a['two_realRank'] = parseInt(item['two_realRank'])\n      a['predicted_rank'] = parseInt(item[model_name])\n      a[\"model\"] = model_name\n      a['year'] = item['1-qid']\n      a['id'] =item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n      circ_data.push(a)\n    })\n  })\n\n  var symbolGenerator = d3.symbol().size(30);\n  var mysymbs=selection.selectAll(\".\"+\"symbols\").data(circ_data).join(\"g\")\n  .attr('class',d=>d[\"id\"]+\" symbols circle \")\n    .attr(\"transform\", function (d2, i) {\n      // make a transformation algorithm to scale modelwise\n      var x_transform = 5\n      if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { x_transform = sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n      x_transform =sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n      return \"translate(\" + x_transform + \",\" + 0 + \")\";\n    })\n    .attr(\"Add_symbol\", function (d, i) {\n      d3.select(this).selectAll(\"path\").data([0]).join(\"path\").attr(\"d\", function () {symbolGenerator.type(d3[symbolTypes[d['model']]]);return symbolGenerator();})\n        .attr(\"fill\", () => diverginColor(d[\"two_realRank\"]));\n    })\n    .attr(\"add_parent_id\",function(d){\n      d3.select(this.parentNode).classed(d['id'],true)\n    });\n //-----\n mysymbs.attr(\"parent_id\", parent_exp_id)\n    .on('click', d => Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']]))\n}","import React from 'react';\nimport \"../Sliders.scss\";\nimport * as $ from 'jquery';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.state_range);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"rangeslider\" style={{ width: \"100%\", padding: 20,display:\"inline-block\" }} > \n                {\n                    /*\n                    <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: 40 }}\n                        onChange={event => {\n                            if (isNaN(parseInt(event.target.value))) {\n                                set_sliderRange([\"\", sliderRange[1]])\n                            } else {\n                                if (event.target.value > sliderRange[1]) {\n                                    alert(\"Lower range can not be larger than the upper range\")\n                                }\n                                else {\n                                    set_sliderRange([event.target.value, sliderRange[1]])\n                                }\n                            }\n                        }\n                        }\n                    />\n                    */\n                }\n                <div style={{width: \"70%\"}}>\n                    <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                        valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\n                    />\n                </div>\n                {\n                    /*\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: 40 }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([sliderRange[0], \"\"])\n                        } else {\n                            if (parseInt(event.target.value) > props.slider_max) {\n                                alert(\"Upper range can not exceed maximum\")\n                                set_sliderRange([sliderRange[0], props.slider_max])\n                            }\n                            else {\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                            }\n                        }\n                    }\n                    }\n                />\n                    */\n                }\n                <div style={{width: \"20%\"}}>\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                    onClick={() => {\n                        props.Set_state_range(sliderRange)\n                    }}\n                >Update range</Button>\n                </div>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        selected_year: state.selected_year,\n        state_range: state.state_range,\n        mode: state.mode, // Model mode model\n        slider_max: state.slider_max,\n        range_mode_model: state.range_mode_model, // Range mode model\n        range_mode_range1: state.range_mode_range1,\n        range_mode_range2: state.range_mode_range2,\n        time_mode_model: state.time_mode_model, // Time mode model\n        time_mode_range: state.time_mode_range,\n        time_mode_year1: state.time_mode_year1,\n        time_mode_year2: state.time_mode_year2,\n        years_for_dropdown: state.years_for_dropdown,\n        dataset: state.dataset,\n        defualt_models: state.defualt_models,\n        slider_and_feature_value: state.slider_and_feature_value,\n        sort_by: state.sort_by,\n        grouped_by_year_data: state.grouped_by_year_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport * as explanation_chart from \"../04_explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../01_deviation_chart\";\nimport * as misc_algo from \"../misc_algo\";\nimport * as $ from \"jquery\";\nimport ModelSlider from \"./ModelSlider\";\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 };\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight });\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // var diverginColor = d3.scaleLinear().domain([this.props.state_range[0], this.props.state_range[1]]).range(['#93003a','#00429d'])\n    var min = this.props.state_range[0],\n      max = this.props.state_range[1];\n    var d = (max - min) / 8;\n    var diverginColor = d3\n      .scaleLinear()\n      .domain([\n        min + d * 7,\n        min + d * 6,\n        min + d * 5,\n        min + d * 4,\n        min + d * 3,\n        min + d * 2,\n        min,\n      ])\n      .interpolate(d3.interpolateRgb)\n      .range([\"#00429d\", \"#4771b2\", \"#73a2c6\", \"#a5d5d8\", \"#ffbcaf\", \"#f4777f\", \"#cf3759\", \"#93003a\"]);\n    var selected_instances = d3.range(this.props.state_range[0],this.props.state_range[1] + 1);\n    var number_of_charts = 9;\n    var features_with_score = algo1.features_with_score(\n      this.props.dataset,\n      this.props.defualt_models,\n      this.props.state_range,\n      this.props.selected_year,\n      number_of_charts,\n      this.props.rank_data\n    );\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts);\n\n    deviation_chart.Create_deviation_chart(\n      \"dev_plot_container\",\n      \"exp\",\n      selected_instances,\n      this.props.original_data,\n      this.props.defualt_models,\n      this.props.anim_config,\n      this.props.selected_year,\n      this.props.average_m,\n      this.props.clicked_circles,\n      this.props.Set_clicked_circles,\n      diverginColor,\n      this.props.sparkline_data,\n      this.props.Set_selected_year,\n      this.props.dataset,\n      this.props.symbolTypes,\n    );\n    explanation_chart.CreatexpChart(\"exp\", selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features, this.props.symbolTypes)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config);\n  }\n  render() {\n    return (\n    <svg id=\"dev_plot_container\" style={{ width: \"100%\", marginBottom: 10 }}></svg>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n    selected_year: state.selected_year,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features,\n    symbolTypes: state.symbolTypes,\n  };\n};\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) =>\n      dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) =>\n      dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) =>\n      dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) =>\n      dispatch({ type: \"clicked_features\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n  };\n};\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);\n","import React from 'react';\nimport \"../Sliders.scss\";\nimport * as $ from 'jquery';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [range_mode_slider_value1, set_range_mode_slider_value1] = React.useState(props.range_mode_range1);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"rangeslider\" style={{ width:\"95%\",marginTop:30 }} >\n                    <Slider\n                        value={range_mode_slider_value1}\n                        onChange={(event, newValue) => set_range_mode_slider_value1(newValue)}\n                        onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"on\"\n                        min={1}\n                        max={props.slider_max}\n                        marks={marks}\n                    />\n                    <Grid style={{ marginBottom: 15 }} container\n                        direction=\"row\"\n                        justify=\"space-around\"\n                        alignItems=\"center\">\n                            {\n                                /*\n                        <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={range_mode_slider_value1[0]} style={{ width: 40 }}\n                            onChange={event => {\n                                if (isNaN(parseInt(event.target.value))) {\n                                    set_range_mode_slider_value1([\"\", range_mode_slider_value1[1]])\n                                } else {\n                                    if (event.target.value > range_mode_slider_value1[1]) {\n                                        alert(\"Lower range can not be larger than the upper range\")\n                                    }\n                                    else {\n                                        set_range_mode_slider_value1([event.target.value, range_mode_slider_value1[1]])\n                                    }\n                                }\n                            }\n                            }\n                        />\n                        <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={range_mode_slider_value1[1]} style={{ width: 40 }}\n                            onChange={event => {\n                                if (isNaN(parseInt(event.target.value))) {\n                                    set_range_mode_slider_value1([range_mode_slider_value1[0], \"\"])\n                                } else {\n                                    if (parseInt(event.target.value) > props.slider_max) {\n                                        alert(\"Upper range can not exceed maximum\")\n                                        set_range_mode_slider_value1([range_mode_slider_value1[0], props.slider_max])\n                                    }\n                                    else {\n                                        set_range_mode_slider_value1([range_mode_slider_value1[0], parseInt(event.target.value)])\n                                    }\n                                }\n                            }\n                            }\n                        />\n\n                                */\n                            }\n                    </Grid>\n                    <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                        onClick={() => props.Set_range_mode_range1(range_mode_slider_value1)}\n                    >Update range</Button>\n                </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        mode: state.mode, // Model mode model\n        slider_max: state.slider_max,\n        range_mode_range1: state.range_mode_range1,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\nimport \"../Sliders.scss\";\nimport * as $ from 'jquery';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [range_mode_slider_value2, set_range_mode_slider_value2] = React.useState(props.range_mode_range2);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"rangeslider\" style={{ width: \"95%\", marginTop: 30 }} >\n            <Slider\n                value={range_mode_slider_value2}\n                onChange={(event, newValue) => set_range_mode_slider_value2(newValue)}\n                onChangeCommitted={(event, newValue) => { props.Set_changed(\"range\") }}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                valueLabelDisplay=\"on\"\n                min={1}\n                max={props.slider_max}\n                marks={marks}\n            />\n            <Grid style={{ marginBottom: 15 }} container\n                direction=\"row\"\n                justify=\"space-around\"\n                alignItems=\"center\">\n                {\n            /*\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={range_mode_slider_value2[0]} style={{ width: 40 }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_range_mode_slider_value2([\"\", range_mode_slider_value2[1]])\n                        } else {\n                            if (event.target.value > range_mode_slider_value2[1]) {\n                                alert(\"Lower range can not be larger than the upper range\")\n                            }\n                            else {\n                                set_range_mode_slider_value2([event.target.value, range_mode_slider_value2[1]])\n                            }\n                        }\n                    }\n                    }\n                />\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={range_mode_slider_value2[1]} style={{ width: 40 }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_range_mode_slider_value2([range_mode_slider_value2[0], \"\"])\n                        } else {\n                            if (parseInt(event.target.value) > props.slider_max) {\n                                alert(\"Upper range can not exceed maximum\")\n                                set_range_mode_slider_value2([range_mode_slider_value2[0], props.slider_max])\n                            }\n                            else {\n                                set_range_mode_slider_value2([range_mode_slider_value2[0], parseInt(event.target.value)])\n                            }\n                        }\n                    }\n                    }\n                />\n            */\n                }\n            </Grid>\n            <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: 0 }}\n                onClick={() => props.Set_range_mode_range2(range_mode_slider_value2)}\n            >Update range</Button>\n\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        selected_year: state.selected_year,\n        state_range: state.state_range,\n        mode: state.mode, // Model mode model\n        slider_max: state.slider_max,\n        range_mode_model: state.range_mode_model, // Range mode model\n        range_mode_range1: state.range_mode_range1,\n        range_mode_range2: state.range_mode_range2,\n        time_mode_model: state.time_mode_model, // Time mode model\n        time_mode_range: state.time_mode_range,\n        time_mode_year1: state.time_mode_year1,\n        time_mode_year2: state.time_mode_year2,\n        years_for_dropdown: state.years_for_dropdown,\n        dataset: state.dataset,\n        defualt_models: state.defualt_models,\n        slider_and_feature_value: state.slider_and_feature_value,\n        sort_by: state.sort_by,\n        grouped_by_year_data: state.grouped_by_year_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../04_explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../01_deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nimport SliderGroup1 from './SliderGroup1';\nimport SliderGroup2 from './SliderGroup2';\n\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Range1\n    var min = d3.min([this.props.range_mode_range1[0],this.props.range_mode_range2[0]]), max = d3.max([this.props.range_mode_range1[1],this.props.range_mode_range2[1]]);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    \n    var selected_instances = d3.range(this.props.range_mode_range1[0], this.props.range_mode_range1[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.range_mode_range1, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('r1d','r1e', selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_years, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor,this.props.sparkline_data,this.props.Set_selected_year)\n    explanation_chart.CreatexpChart('r1e', selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    explanation_chart.CreatexpCircle('r1e', selected_instances, sorted_features, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    // Range2\n    var selected_instances2 = d3.range(this.props.range_mode_range2[0], this.props.range_mode_range2[1] + 1)\n    var features_with_score2 = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.range_mode_range2, this.props.selected_year, number_of_charts, this.props.rank_data)\n    var sorted_features2 = Object.entries(features_with_score2).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('r2d','r2e', selected_instances2, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.selected_years, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor,this.props.sparkline_data,this.props.Set_selected_year)\n    explanation_chart.CreatexpChart('r2e', selected_instances2, sorted_features2, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    explanation_chart.CreatexpCircle('r2e', selected_instances2, sorted_features2, this.props.lime_data, this.props.selected_year, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    //---------------------------------\n    misc_algo.draw_lines(this.props.clicked_circles, diverginColor, this.props.anim_config, sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    return (\n      <Grid container direction=\"row\" justifyContent=\"space-between\" className=\"slope_chart_exp\" style={{ backgroundColor: 'white', padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"100%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ paddingRight: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 1</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\"}}><SliderGroup1></SliderGroup1></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.5 - 25), overflow: \"scroll\" }}><svg id=\"r1d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"r1e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ marginLeft: \"1%\", padding: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 2</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\"}}><SliderGroup2></SliderGroup2></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.5 - 25), overflow: \"scroll\" }}><svg id=\"r2d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"r2e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    selected_year: state.selected_year,\n    selected_years: state.selected_years,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    sort_by: state.sort_by,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport * as explanation_chart from \"../04_explanation_chart\";\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as deviation_chart from \"../01_deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // Range1\n    var min = this.props.time_mode_range[0], max = this.props.time_mode_range[1];\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    \n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var number_of_charts = 9\n    var features_with_score = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.time_mode_range, this.props.time_mode_year1, number_of_charts, this.props.rank_data)\n    var sorted_features = Object.entries(features_with_score).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('y1d','y1e', selected_instances, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.time_mode_year1, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('y1e', selected_instances, sorted_features, this.props.lime_data, this.props.time_mode_year1, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n\n    // Range2\n    var selected_instances2 = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var features_with_score2 = algo1.features_with_score(this.props.dataset, this.props.defualt_models, this.props.time_mode_range, this.props.time_mode_year2, number_of_charts, this.props.rank_data)\n    var sorted_features2 = Object.entries(features_with_score2).sort((a, b) => a[1] - b[1]).slice(0, number_of_charts)\n    deviation_chart.Create_deviation_chart('y2d','y2e', selected_instances2, this.props.original_data, this.props.defualt_models, this.props.anim_config, this.props.time_mode_year2, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor)\n    explanation_chart.CreatexpChart('y2e', selected_instances2, sorted_features2, this.props.lime_data, this.props.time_mode_year2, this.props.defualt_models, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.anim_config, this.props.clicked_features, this.props.Set_clicked_features)\n    //---------------------------------\n    misc_algo.draw_lines(this.props.clicked_circles, diverginColor, this.props.anim_config, sorted_features)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    return (\n      <Grid container direction=\"row\" justifyContent=\"space-between\" className=\"slope_chart_exp\" style={{ backgroundColor: 'white', padding: \"0px 0px\", border: \"1px solid #eaeaea\", width: \"100%\", boxShadow: \"-2px 1px 4px -1px white\" }}>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ paddingRight: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>{\"Year : \"+this.props.time_mode_year1}</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"y1d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"y1e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n        <Grid container item direction=\"column\" justifyContent=\"space-between\" style={{ marginLeft: \"1%\", padding: 0, border: \"1px solid #a0a0a0\", height: \"100%\", width: \"49.4%\" }}>\n          <p style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>{\"Year : \"+this.props.time_mode_year2}</p>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", height: ($(\".slope_chart_exp\").height() * 0.69 - 25), overflow: \"scroll\" }}><svg id=\"y2d\" style={{ width: \"100%\", marginRight: \"3%\" }}></svg></Grid>\n          <Grid item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\", marginTop: 5, paddingTop: 5, paddingRight: 3, height: $(\".slope_chart_exp\").height() * 0.3 }}><svg id=\"y2e\" style={{ width: \"100%\", height: \"100%\" }}></svg></Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    time_mode_model: state.time_mode_model,\n    time_mode_range: state.time_mode_range,\n    deviate_by: state.deviate_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    deviate_by: state.deviate_by,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    tracking: state.tracking,\n    defualt_models: state.defualt_models,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    features_with_score: state.features_with_score,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    default_model_scores: state.default_model_scores,\n    sort_by: state.sort_by,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    features_with_score: state.features_with_score,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./TopBar.scss\";\nimport { connect } from \"react-redux\";\nconst useStyles = makeStyles((theme) => ({\n  MuiAutocompleteroot: {\n    marginTop: 0,\n  },\n  root: {\n    width: '100%',\n  },\n  listroot: {\n    width: '100%',\n  },\n  paper: {\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\nfunction TopBar(props) {\n  const classes = useStyles();\n  const handleyearChange = (event, value, reason) => {\n    if (reason == 'select-option') {\n      props.Set_selected_year(value)\n      var myfunc = props.appHandleChange\n      myfunc(value, \"year_changed\")\n    }\n  };\n  var handle_year_click = (year) => {\n    props.Set_selected_year(year)\n  }\n  var handle_model_click=(model)=>{\n    if(model==\"All\"){props.Set_defualt_models([...props.all_models])}\n    else if(model==\"Average\"){props.Set_average_m(!props.average_m)}\n    else{\n      if (props.defualt_models.includes(model)) {\n        props.Set_defualt_models(props.defualt_models.filter(item=>item!=model))\n      }\n      else {\n        props.Set_defualt_models([...props.defualt_models,model])\n      }  \n    }\n  }\n  return (\n    <div>\n    <div><p style={{ display: \"inline-block\",fontWeight:'bold', margin: 0,marginRight:2 }}>Years:</p>{props.years_for_dropdown.map(item => <p className={props.selected_years.includes(item) ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_year_click(item)}>{item}</p>)}</div>\n    <div style={{marginTop:5}}><p style={{ display: \"inline-block\",fontWeight:'bold', margin: 0,marginRight:2 }}>Models:</p>{props.all_models.map(item => <p className={props.defualt_models.includes(item) ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}<p className=\"years_p\" style={{ display: \"inline-block\"}} onClick={() => handle_model_click(\"All\")}>All</p></div>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    all_models:state.all_models,\n    selected_years: state.selected_years,\n    tracking: state.tracking,\n    selected_year: state.selected_year,\n    years_for_dropdown: state.years_for_dropdown,\n    defualt_models: state.defualt_models,\n    mode: state.mode,\n    prev_prop: state.prev_prop,\n    state_range: state.state_range,\n    replay: state.replay,\n    grouped_by_year_data: state.grouped_by_year_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    time_mode_range: state.time_mode_range,\n    mode: state.mode, // Model mode model\n    sort_by: state.sort_by,\n    average_m:state.average_m\n\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    add: (val) => dispatch({ type: \"add\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    set_tracking: (val) => dispatch({ type: \"tracking\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    Set_average_m: (val) => dispatch({ type: \"average_m\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(TopBar);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import * as d3 from 'd3';\nimport * as $ from \"jquery\"\nexport default function CreateChart(feature, data, node, feature_height, selected_year, handleHistogramselection, feature_data) {\n  var feature_width = $(\".Sidebar_parent\").width()\n  var svg = d3.select(node),\n    margin = { top: 30, right: 15, bottom: 20, left: 7 },\n    width = feature_width - margin.left - margin.right,\n    height = feature_height - margin.top - margin.bottom;\n  if (isNaN(data[0].y)) {\n    //-----------------------------------------------------------(handle the categorical features here)\n    var occur = {}\n    data.map(item => {\n      if (item.y in occur) {\n        occur[item.y] = occur[item.y] + 1\n      }\n      else {\n        occur[item.y] = 1\n      }\n    })\n    // Create items array\n    var items = Object.keys(occur).map(function (key) {\n      return [key, occur[key]];\n    });\n\n    // Sort the array based on the second element\n    items.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    //-----\n    var y = items.map(element => element[0]);\n    var x = items.map(element => element[1]);\n    var sum_x = d3.sum(x)\n    var cScale = d3.scaleSequential()\n      .interpolator(d3.interpolate(\"#999999b3\", \"#999999b3\"))\n      .domain([0, x.length]);\n    svg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", 15).attr(\"x\", width / 2).attr(\"text-anchor\", \"middle\").text(feature);\n    var g = svg.selectAll(\".g1\").data([0]).join(\"g\").attr(\"class\", \"g1\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    var svg1 = g.selectAll(\".svg1\").data([0]).join('svg').attr(\"class\", \"svg1\").attr('width', width).attr('height', height)\n    svg1.selectAll('rect').data(x).join(\"rect\")\n      .style('fill', (d, i) => cScale(i)).attr(\"height\", height)\n      .attr('width', (d, i) => {\n        return (((d / sum_x) * width) - .2)\n      })\n      .attr(\"x\", (d, i) => {\n        var temp_sum = d3.sum(x.slice(0, i))\n        return ((temp_sum / sum_x) * width)\n      })\n      .attr(\"id\", (d, i) => y[i])\n      .on(\"click\", (d, i) => {\n        d3.select(\"#\" + y[i]).classed(\"cat_item_clicked\", () => {\n          if (d3.select(\"#\" + y[i]).classed(\"cat_item_clicked\")) {\n\n            return false\n          }\n          else {\n            var statelist = cat_states(feature_data, selected_year, y[i])\n            handleHistogramselection(statelist, \"histogram_data\")\n            return true\n          }\n        })\n\n      }\n      )\n    //---\n    svg1.selectAll(\"text\").data(y, d => d).join(\"text\")\n      .text((d, i) => {\n        if (((x[i] / sum_x) * width) > 12) { return d }\n        else { return \"\" }\n      })\n      .attr(\"x\", (d, i) => {\n        var temp_sum = d3.sum(x.slice(0, i))\n        return ((temp_sum / sum_x) * width) + 8\n      })\n      .attr(\"y\", height / 2)\n      .style(\"font-size\", 9)\n      .style(\"writing-mode\", \"tb\")\n      .style(\"text-anchor\", \"middle\")\n    //-----------------------------------------------------------Barchart ends here\n  }\n  else {\n    //----------------------------------------------------------- Handle the Numeric features here)\n    svg.selectAll(\".hist_title\").data([feature], d => d).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", 15).attr(\"x\", width / 2).attr(\"text-anchor\", \"middle\").text(feature.replace(/_/g, ' '));\n\n    var temp_x = data.map(item => parseFloat(item['y'])),\n      x = d3.scaleLinear().domain([d3.min(temp_x), d3.max(temp_x)]).range([0, width]).nice(),\n      tick_values = x.ticks(4),\n      hist_height = height,\n      histogram = d3.histogram()\n        .value(d => d)   // I need to give the vector of value\n        .domain(x.domain())  // then the domain of the graphic\n        .thresholds(4); // then the numbers of bins\n    var bins = histogram(temp_x),\n      y_hist = d3.scaleLinear()\n        .range([hist_height, 0]);\n    y_hist.domain([0, d3.max(bins, function (d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\n    var svg0 = svg.selectAll('.svg0').data([0]).join('svg').attr(\"class\", \"svg0\").selectAll(\".myg0\").data([0]).join('g').attr(\"class\", \"myg0\").attr(\"transform\",\n      \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n    svg0.selectAll(\"rect\").data(bins).join('rect')\n      .attr(\"x\", 1)\n      .attr(\"fill\", \"#999999b3\")\n      .attr(\"transform\", function (d) {\n        if(d.x0==d.x1){return \"translate(\" + 0 + \",\" + y_hist(d.length) + \")\"}\n        return \"translate(\" + x(d.x0) + \",\" + y_hist(d.length) + \")\";\n      })\n      .attr(\"width\", function (d) { \n        if(d.x0==d.x1){return width}\n        return x(d.x1) - x(d.x0) - 0.2; })\n      .attr(\"height\", function (d) { return hist_height - y_hist(d.length); });\n    //-------Add text of bars\n    \n    svg0.selectAll(\".mylabel\").data(bins).join('text').attr(\"class\",\"mylabel\")\n      .attr(\"x\", d=>x(d.x0)+((x(d.x1)-x(d.x0))/3))\n      .text(d=>d.length)\n      .attr('y',d=> y_hist(d.length)-2)\n      .attr('font-size',10)\n  \n    //------------- Add X axis\n    if(d3.max(tick_values)>1000){\n      svg0.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n      .attr(\"transform\", \"translate(0,\" + hist_height + \")\")\n      .call(d3.axisBottom(x).tickValues(tick_values).tickFormat(d3.format(\".2s\")))\n    }\n    else{\n      svg0.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n      .attr(\"transform\", \"translate(0,\" + hist_height + \")\")\n      .call(d3.axisBottom(x).tickValues(tick_values))\n    }\n\n    svg0.selectAll(\".tick line,.domain\").attr(\"stroke\", \"#adadad\")\n\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here    \n    //---drag starts here\n    var selectionRect = {\n      element: null,\n      previousElement: null,\n      currentY: 0,\n      currentX: 0,\n      originX: 0,\n      originY: 0,\n      setElement: function (ele) {\n        this.previousElement = this.element;\n        this.element = ele;\n      },\n      getNewAttributes: function () {\n        var x = this.currentX < this.originX ? this.currentX : this.originX;\n        var y = this.currentY < this.originY ? this.currentY : this.originY;\n        var width = Math.abs(this.currentX - this.originX);\n        var height = Math.abs(this.currentY - this.originY);\n        return { x: x, y: y, width: width, height: height }; // returning the javascript object\n      },\n      getCurrentAttributes: function () {\n        // use plus sign to convert string into number\n        var x = +this.element.attr(\"x\");\n        var y = +this.element.attr(\"y\");\n        var width = +this.element.attr(\"width\");\n        var height = +this.element.attr(\"height\");\n        return { x1: x, y1: y, x2: x + width, y2: y + height }; // returning the javascript object\n      },\n      getCurrentAttributesAsText: function () {\n        var attrs = this.getCurrentAttributes();\n        return \"x1: \" + attrs.x1 + \" x2: \" + attrs.x2 + \" y1: \" + attrs.y1 + \" y2: \" + attrs.y2;\n      },\n      init: function (newX, newY) {\n        var rectElement = svg.append(\"rect\")\n          .attr('rx', 1).attr('ry', 1).attr(\"x\", 0).attr(\"y\", 0)\n          .attr('width', 0).attr('height', 0).classed(\"selection\", true);\n        this.setElement(rectElement);\n        this.originX = newX;\n        this.originY = newY;\n        this.update(newX, newY);\n      },\n      update: function (newX, newY) {\n        this.currentX = newX;\n        this.currentY = newY;\n        var NewAttr = this.getNewAttributes()\n        this.element.attr(\"x\", NewAttr.x).attr(\"y\", NewAttr.y)\n          .attr('width', NewAttr.width).attr('height', NewAttr.height)\n      },\n      focus: function () {\n        this.element\n          .style(\"stroke\", \"\")\n          .style(\"stroke-width\", \"1\");\n      },\n      remove: function () {\n        this.element.remove();\n        this.element = null;\n      },\n      removePrevious: function () {\n        if (this.previousElement) {\n          this.previousElement.remove();\n        }\n      }\n    };\n\n    //-----------------\n    function dragStart() {\n      var p = d3.mouse(this);\n      selectionRect.init(p[0], p[1]);\n      selectionRect.removePrevious();\n    }\n    function dragMove() {\n      var p = d3.mouse(this);\n      selectionRect.update(p[0], p[1]);\n    }\n    function dragEnd() {\n      var finalAttributes = selectionRect.getCurrentAttributes();\n      if (finalAttributes.x1 != finalAttributes.x2) {\n        var myx1 = finalAttributes.x1 - margin.left\n        var myx2 = finalAttributes.x2 - margin.left\n        var temp_range = [x.invert(myx1).toFixed(4), x.invert(myx2).toFixed(4)]\n        var statelist = states(feature_data, temp_range, selected_year, feature)\n        handleHistogramselection(statelist, \"histogram_data\")\n      }\n      if (finalAttributes.x2 - finalAttributes.x1 > 1 && finalAttributes.y2 - finalAttributes.y1 > 1) {\n        // range selected\n       // d3.event.sourceEvent.preventDefault();\n        selectionRect.focus();\n      } else {\n        selectionRect.remove();\n      }\n    }\n    var dragBehavior = d3.drag()\n      .on(\"start\", dragStart)\n      .on(\"drag\", dragMove)\n      .on(\"end\", dragEnd);\n    svg.call(dragBehavior);\n    //---drag ends here\n  }\n  function states(original_data,range,year,feature){\n    var temp=[]\n    original_data.forEach(element => {\n      if(element[\"1-qid\"]==year && parseFloat(element[feature])>=range[0] && parseFloat(element[feature])<=range[1]){\n       temp.push(parseInt(element['two_realRank']))\n      }\n    });\n    return temp;\n  }\n  function cat_states(original_data,year,country){\n    var temp=[]\n    original_data.forEach(element => {\n      if(element[\"1-qid\"]==year && element[\"country\"]==country){\n       temp.push(parseInt(element['two_realRank']))\n      }\n    });\n    return temp;\n  }\n  //----------------------------------------------------------- Histogram creation ends here\n}\n\n//https://www.youtube.com/watch?v=N9nHQzboCUI","import React, { Component, PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport './Histogram.css';\nimport * as algo1 from \"../../Algorithms/algo1\";\nimport CreateChart from \"./Histogram\"\nimport exp_fiscal_CordAscent from \"../../Data/data/fiscal/lime/chart1_data.csv\";\nimport exp_school_CordAscent from \"../../Data/data/school/lime/chart1_data.csv\";\nimport exp_house_CordAscent from \"../../Data/data/house/lime/chart1_data.csv\";\nimport { connect } from 'react-redux'\nimport { Button } from '@material-ui/core';\nimport * as $ from \"jquery\"\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = { feaures_dict: {}, features_voted: null, feature_data: null, selected_states: [] } // This is the default height\n  }\n  componentDidMount() {\n    var self = this\n    var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent } else if (this.props.dataset == \"house\") { filename = exp_house_CordAscent }\n    d3.csv(filename).then(function (feature_data) {\n      self.setState({ feature_data: feature_data })\n    })\n  }\n  shouldComponentUpdate() {\n    return true;\n  }\n  componentDidUpdate() {\n    var self = this\n    var legend_data = this.makeArr(this.props.state_range);\n    //------\n    var height_between = 20\n    var feature_height = 260\n    var number_of_elements = (this.props.state_range[1] - this.props.state_range[0]) + (2 * this.props.deviate_by);\n    if (number_of_elements * height_between < 700) { height_between = 700 / number_of_elements }\n    var exp_chart_height = (number_of_elements * height_between);\n    var number_of_charts = Math.floor(exp_chart_height / feature_height) * 3\n    if(number_of_charts<9){number_of_charts=9}\n    //------\n    var features_dict = algo1.features_with_score(this.props.dataset, this.props.defualt_models, legend_data, this.props.selected_year,number_of_charts,this.props.rank_data)\n    var items = Object.keys(features_dict).map(function (key) {\n      return [key, features_dict[key]];\n    });\n    items.sort(function (first, second) { // Sort the array based on the second element\n      return second[1] - first[1];\n    });\n    items = items.map((element) => element[0])\n    //--------\n    var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent }\n    //--------------------------------Iterate through each features\n    if (this.state.feature_data != null) {\n      var feature_width=$(\".Sidebar_parent\").width()\n      var feature_height = 150; // Feature height for individual feature\n //--------------------------------------------- Iterate trough eact item and create histograms\n    items.forEach((feature, feature_index) => {\n        var feature_id = \"feature\"+feature.replace(/[^\\w\\s]/gi, '')\n        var temp = []\n        this.state.feature_data.forEach(element => {\n          if (element[\"1-qid\"] == self.props.selected_year) {\n            var temp_dict = {}\n            temp_dict[\"x\"] = parseInt(element['two_realRank'])\n            temp_dict[\"y\"] = element[feature]\n            temp.push(temp_dict)\n          }\n        });\n        d3.select(\"#histogram_container\").attr(\"height\", items.length * feature_height).selectAll(\"#\" + feature_id).data([feature_id], d => d).join(\"svg\").attr(\"id\", feature_id).attr(\"width\", feature_width)\n          .attr(\"x\", d => {\n            //--------------------------------------------- Create chart is imported from the Histogram.js and this is the function that creates all the histograms\n            CreateChart(feature, temp, \"#\" + feature_id, feature_height, self.props.selected_year, self.handleHistogramselection, self.state.feature_data)\n            return 0;\n          })\n          .attr(\"y\", (d, i) => feature_height * feature_index)\n      })\n    }\n  }\n  handleHistogramselection = (data, type) => {\n    \n    var temp = this.state.selected_states\n    data.forEach(element => {\n      if (!temp.includes(element)) { temp.push(element) }\n    });\n    this.setState({ selected_states: temp })\n  }\n  update_histogram_data = () => {\n    d3.selectAll(\".cat_item_clicked\").classed(\"cat_item_clicked\",false)\n    d3.selectAll(\".selection\").remove()\n    if(this.state.selected_states.length<1){alert(\"Empty selection!\");return}\n    var myfunc = this.props.appHandleChange\n    var filtered_states = this.state.selected_states.filter((item) => {\n      if (item >= this.props.state_range[0] && item <= this.props.state_range[1]) {\n        return item\n      }\n    })\n    if(filtered_states.length<1){alert(\"Empty Selection\")}\n    if (this.props.slider_and_feature_value[\"Feature\"] == 1 && this.props.slider_and_feature_value[\"Rank range\"] == 1) { // If rank range is selected then filter states within the range\n      this.props.Set_histogram_data(filtered_states)\n      myfunc(filtered_states, \"histogram_data\")\n    }\n    else {\n      this.props.Set_histogram_data(this.state.selected_states) // else set states as selected\n      myfunc(this.state.selected_states, \"histogram_data\")\n    }\n    this.setState({ selected_states: [] })\n  }\n  //-----------------------------------------------------------------\n  render() {\n    return (\n      <div>\n        <Button className=\"update\" style={{marginLeft:0,padding:0,width:197}} onClick={() => {\n          var self=this\n              if(!this.props.slider_and_feature_value[\"Rank range\"]){\n                if(d3.min(this.state.selected_states)<this.props.state_range[0]){\n                  this.props.Set_state_range([d3.min(this.state.selected_states),this.props.state_range[1]])\n                }\n                if(d3.max(this.state.selected_states)>this.props.state_range[1]){\n                  this.props.Set_state_range([this.props.state_range[0],d3.max(this.state.selected_states)])\n                }\n              }\n              setTimeout(function(){ self.update_histogram_data(); }, 500);\n          }}\n          >Update</Button>\n        <div className=\"hitograms_container\">\n        <svg id=\"histogram_container\" style={{ width: this.props.width }}></svg>\n        </div>\n      </div>\n    );\n  }\n  makeArr = (state_range) => {\n    var startValue = state_range[0];\n    var stopValue = state_range[1];\n    var arr = [];\n    for (var i = startValue; i <= stopValue; i++) {\n      arr.push(i);\n    }\n    return arr;\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n    defualt_models: state.defualt_models,\n    dataset: state.dataset,\n    selected_year: state.selected_year,\n    slider_and_feature_value: state.slider_and_feature_value,\n    deviate_by:state.deviate_by,\n    rank_data:state.rank_data\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\nimport { connect } from 'react-redux'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nfunction Tracking(props) {\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"baseline\"\n    >\n      <FormControlLabel\n        labelPlacement=\"start\"\n        control={\n          <Checkbox\n            checked={props.tracking}\n            onChange={(event) => props.set_tracking(event.target.checked)}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Tracking\"\n      />\n    </Grid>\n  );\n}\n\nconst maptstateToprop = (state) => {\n  return {\n    tracking: state.tracking,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    set_tracking: (val) => dispatch({ type: \"tracking\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Tracking);\n//https://material-ui.com/components/menus/\n","import React from 'react';\nimport \"./Sidebar.scss\";\nimport * as $ from 'jquery';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport Histograms from \"./Histograms\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from \"@material-ui/core/Button\";\nimport Grid from '@material-ui/core/Grid';\nimport Tracking from \"./Tracking\"\nimport * as algo1 from \"../../Algorithms/algo1\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.state_range);\n    const [range_mode_slider_value1, set_range_mode_slider_value1] = React.useState(props.range_mode_range1);\n    const [range_mode_slider_value2, set_range_mode_slider_value2] = React.useState(props.range_mode_range2);\n    const [time_mode_slider_value, set_time_mode_slider_value] = React.useState(props.time_mode_range);\n    const [dummy, set_dummy] = React.useState(0);\n\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div style={{ borderTop: \"1px solid #eaeaea\" }}>\n            <p className=\"title_show\" style={{ marginBottom: 8 }}>Compare:</p>\n            <Autocomplete className=\"autocomplete_mode\" style={{ border: \"1px solid grey\", borderRadius: 0, paddingTop: 0, paddingBottom: 0, marginLeft: 5, marginRight: 30, width: $('.Sidebar').width() - 10 }}\n                defaultValue={\"Models\"}\n                id=\"debug\"\n                debug\n                options={[\"Models\", \"Ranges\", \"Time\"]}\n                renderInput={(params) => (\n                    <TextField {...params} label=\"\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                )}\n                onChange={(event, val) => {\n                    var value = val.replace('s', \"\")\n                    props.Set_mode(value)\n                    props.Set_clicked_items_in_slopechart([])\n                }\n                }\n            />\n            {props.mode == \"Model\" ? <div style={{ marginTop: 10, paddingLeft: 5, width: $('.Sidebar').width() }}>\n                <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                <div key={props.slider_and_feature_value} className=\"slider_feature_container\">\n                    <List className={classes.listroot}>\n                        {['Rank range', 'Feature'].map((value) => {\n                            const labelId = `checkbox-list-label-${value}`;\n                            return (\n                                <div className=\"listItem\"><ListItem key={value} role={undefined} >\n                                    <Checkbox\n                                        checked={props.slider_and_feature_value[value]}\n                                        edge=\"start\"\n                                        tabIndex={-1}\n                                        value={value}\n                                        onChange={(event) => {\n                                            var temp_val = props.slider_and_feature_value\n                                            if (props.slider_and_feature_value[event.target.value]) { temp_val[event.target.value] = 0 }\n                                            else { temp_val[event.target.value] = 1 }\n                                            set_dummy(JSON.stringify(temp_val)) // This is to change the state so that the component is updated\n                                            //console.log(\"dummy\",dummy)\n                                            props.Set_slider_and_feature_value(temp_val)\n                                        }}\n                                    />\n                                    <p className=\"list_item_label\" id={labelId}>{value}</p>\n                                </ListItem>\n                                </div>\n                            );\n                        })}\n                    </List>\n                </div>\n                {props.slider_and_feature_value[\"Rank range\"] == 1 ?\n                    <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                        <Slider\n                            value={sliderRange}\n                            onChange={(event, newValue) => set_sliderRange(newValue)}\n                            onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                            valueLabelDisplay=\"auto\"\n                            aria-labelledby=\"range-slider\"\n                            valueLabelDisplay=\"on\"\n                            min={1}\n                            max={props.slider_max}\n                            marks={marks}\n                        />\n                        <Grid style={{ marginBottom: 15 }} container\n                            direction=\"row\"\n                            justify=\"space-around\"\n                            alignItems=\"center\">\n                            <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: 40 }}\n                                onChange={event => {\n                                    if (isNaN(parseInt(event.target.value))) {\n                                        set_sliderRange([\"\", sliderRange[1]])\n                                    } else {\n                                        if (event.target.value > sliderRange[1]) {\n                                            alert(\"Lower range can not be larger than the upper range\")\n                                        }\n                                        else {\n                                            set_sliderRange([event.target.value, sliderRange[1]])\n                                        }\n                                    }\n                                }\n                                }\n                            />\n                            <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: 40 }}\n                                onChange={event => {\n                                    if (isNaN(parseInt(event.target.value))) {\n                                        set_sliderRange([sliderRange[0], \"\"])\n                                    } else {\n                                        if (parseInt(event.target.value) > props.slider_max) {\n                                            alert(\"Upper range can not exceed maximum\")\n                                            set_sliderRange([sliderRange[0], props.slider_max])\n                                        }\n                                        else {\n                                            set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                                        }\n                                    }\n                                }\n                                }\n                            />\n                        </Grid>\n                        <Tracking></Tracking>\n                        <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                            onClick={() =>{\n                                props.Set_state_range(sliderRange) \n                            }}\n                        >Update range</Button>\n                    </div> : null}\n                {props.slider_and_feature_value[\"Feature\"] == 1 ?\n                    <div>\n                        <div>\n                            <Histograms\n                                year={props.selected_year.toString()} state_range={props.state_range}\n                                Sidebar_width={$('.Sidebar').width()} appHandleChange={props.appHandleChange}>\n                            </Histograms>\n                        </div>\n                    </div> : null\n                }\n            </div> : null}\n            {props.mode == \"Range\" ? <div style={{ marginTop: 10, paddingLeft: 5, width: $('.Sidebar').width() }}>\n                <div className=\"range_model\">\n                    <Autocomplete\n                        defaultValue={props.range_mode_model}\n                        id=\"debug\"\n                        debug\n                        options={[\"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"LinearReg\", \"ListNet\", \"MART\", \"RandomFor\", \"RankBoost\", \"RankNet\"].map((option) => option)}\n                        renderInput={(params) => (\n                            <TextField {...params} label=\"Model\" margin=\"normal\" InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                        )}\n                        onChange={(event, value) => props.Set_range_mode_model(value)}\n                    />\n                    <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                </div>\n                <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                    <Typography classes={{ root: classes.tRoot }}>\n                        Group 1\n                        </Typography>\n                    <Slider\n                        value={range_mode_slider_value1}\n                        onChange={(event, newValue) => set_range_mode_slider_value1(newValue)}\n                        onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"on\"\n                        min={1}\n                        max={props.slider_max}\n                        marks={marks}\n                    />\n                    <Grid style={{ marginBottom: 15 }} container\n                        direction=\"row\"\n                        justify=\"space-around\"\n                        alignItems=\"center\">\n                        <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={range_mode_slider_value1[0]} style={{ width: 40 }}\n                            onChange={event => {\n                                if (isNaN(parseInt(event.target.value))) {\n                                    set_range_mode_slider_value1([\"\", range_mode_slider_value1[1]])\n                                } else {\n                                    if (event.target.value > range_mode_slider_value1[1]) {\n                                        alert(\"Lower range can not be larger than the upper range\")\n                                    }\n                                    else {\n                                        set_range_mode_slider_value1([event.target.value, range_mode_slider_value1[1]])\n                                    }\n                                }\n                            }\n                            }\n                        />\n                        <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={range_mode_slider_value1[1]} style={{ width: 40 }}\n                            onChange={event => {\n                                if (isNaN(parseInt(event.target.value))) {\n                                    set_range_mode_slider_value1([range_mode_slider_value1[0], \"\"])\n                                } else {\n                                    if (parseInt(event.target.value) > props.slider_max) {\n                                        alert(\"Upper range can not exceed maximum\")\n                                        set_range_mode_slider_value1([range_mode_slider_value1[0], props.slider_max])\n                                    }\n                                    else {\n                                        set_range_mode_slider_value1([range_mode_slider_value1[0], parseInt(event.target.value)])\n                                    }\n                                }\n                            }\n                            }\n                        />\n                    </Grid>\n                    <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                        onClick={() => props.Set_range_mode_range1(range_mode_slider_value1)}\n                    >Update range</Button>\n                </div>\n                <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                    <Typography classes={{ root: classes.tRoot }}>\n                        Group 2\n                        </Typography>\n                    <Slider\n                        value={range_mode_slider_value2}\n                        onChange={(event, newValue) => set_range_mode_slider_value2(newValue)}\n                        onChangeCommitted={(event, newValue) => { props.Set_changed(\"range\") }}\n                        valueLabelDisplay=\"auto\"\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"on\"\n                        min={1}\n                        max={props.slider_max}\n                        marks={marks}\n                    />\n                </div>\n                <Grid style={{ marginBottom: 15 }} container\n                    direction=\"row\"\n                    justify=\"space-around\"\n                    alignItems=\"center\">\n                    <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={range_mode_slider_value2[0]} style={{ width: 40 }}\n                        onChange={event => {\n                            if (isNaN(parseInt(event.target.value))) {\n                                set_range_mode_slider_value2([\"\", range_mode_slider_value2[1]])\n                            } else {\n                                if (event.target.value > range_mode_slider_value2[1]) {\n                                    alert(\"Lower range can not be larger than the upper range\")\n                                }\n                                else {\n                                    set_range_mode_slider_value2([event.target.value, range_mode_slider_value2[1]])\n                                }\n                            }\n                        }\n                        }\n                    />\n                    <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={range_mode_slider_value2[1]} style={{ width: 40 }}\n                        onChange={event => {\n                            if (isNaN(parseInt(event.target.value))) {\n                                set_range_mode_slider_value2([range_mode_slider_value2[0], \"\"])\n                            } else {\n                                if (parseInt(event.target.value) > props.slider_max) {\n                                    alert(\"Upper range can not exceed maximum\")\n                                    set_range_mode_slider_value2([range_mode_slider_value2[0], props.slider_max])\n                                }\n                                else {\n                                    set_range_mode_slider_value2([range_mode_slider_value2[0], parseInt(event.target.value)])\n                                }\n                            }\n                        }\n                        }\n                    />\n                </Grid>\n                <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: 0 }}\n                    onClick={() => props.Set_range_mode_range2(range_mode_slider_value2)}\n                >Update range</Button>\n\n            </div> : null}\n            {props.mode == \"Time\" ?\n                <div style={{ marginTop: 10, paddingLeft: 5, marginBottom: 10, width: $('.Sidebar').width() }}>\n                    <div className=\"model\">\n                        <Autocomplete\n                            defaultValue={props.time_mode_model}\n                            id=\"debug\"\n                            debug\n                            options={[\"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"LinearReg\", \"ListNet\", \"MART\", \"RandomFor\", \"RankBoost\", \"RankNet\"].map((option) => option)}\n                            renderInput={(params) => (\n                                <TextField {...params} label=\"Model\" margin=\"normal\" InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                            )}\n                            onChange={(event, value) => props.Set_time_mode_model(value)}\n                        />\n                        <p style={{ marginLeft: 0, marginBottom: -5, marginTop: 15, marginRight: 12, paddingLeft: 5, backgroundColor: \"#f7f7f7\", fontSize: 16 }}>{props.dataset == \"fiscal\" ? \"Select states\" : \"Select \" + props.dataset + \"s\"}</p>\n                        <div className=\"rangeslider\" style={{ width: $('.Sidebar').width() - 12 }} >\n                            <Slider\n                                value={time_mode_slider_value}\n                                onChange={(event, newValue) => set_time_mode_slider_value(newValue)}\n                                onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                                valueLabelDisplay=\"auto\"\n                                aria-labelledby=\"range-slider\"\n                                valueLabelDisplay=\"on\"\n                                min={1}\n                                max={props.slider_max}\n                                marks={marks}\n                            />\n                            <Grid style={{ marginBottom: 15 }} container\n                                direction=\"row\"\n                                justify=\"space-around\"\n                                alignItems=\"center\">\n                                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={time_mode_slider_value[0]} style={{ width: 40 }}\n                                    onChange={event => {\n                                        if (isNaN(parseInt(event.target.value))) {\n                                            set_time_mode_slider_value([\"\", time_mode_slider_value[1]])\n                                        } else {\n                                            if (event.target.value > time_mode_slider_value[1]) {\n                                                alert(\"Lower range can not be larger than the upper range\")\n                                            }\n                                            else {\n                                                set_time_mode_slider_value([event.target.value, time_mode_slider_value[1]])\n                                            }\n                                        }\n                                    }\n                                    }\n                                />\n                                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={time_mode_slider_value[1]} style={{ width: 40 }}\n                                    onChange={event => {\n                                        if (isNaN(parseInt(event.target.value))) {\n                                            set_time_mode_slider_value([time_mode_slider_value[0], \"\"])\n                                        } else {\n                                            if (parseInt(event.target.value) > props.slider_max) {\n                                                alert(\"Upper range can not exceed maximum\")\n                                                set_time_mode_slider_value([time_mode_slider_value[0], props.slider_max])\n                                            }\n                                            else {\n                                                set_time_mode_slider_value([time_mode_slider_value[0], parseInt(event.target.value)])\n                                            }\n                                        }\n                                    }\n                                    }\n                                />\n                            </Grid>\n                            <Button className=\"range_button\" style={{ width: $('.Sidebar').width() - 11, backgroundColor: \"#ededed\", height: 30, marginBottom: 5, marginLeft: -3 }}\n                                onClick={() => props.Set_time_mode_range(time_mode_slider_value)}\n                            >Update range</Button>\n                        </div>\n                        <div className=\"year\">\n                            <Autocomplete className={{ root: classes.MuiAutocompleteroot }}\n                                defaultValue={props.time_mode_year1.toString()}\n                                id=\"debug\"\n                                debug\n                                options={props.years_for_dropdown.map((option) => option)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Year 1\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                                )}\n                                onChange={(event, value) => {\n                                    props.Set_time_mode_year1(value)\n                                    props.Set_changed(\"year\")\n                                }}\n                            />\n                        </div>\n                        <div className=\"year\">\n                            <Autocomplete className={{ root: classes.MuiAutocompleteroot }}\n                                defaultValue={props.time_mode_year2.toString()}\n                                id=\"debug\"\n                                debug\n                                options={props.years_for_dropdown.map((option) => option)}\n                                renderInput={(params) => (\n                                    <TextField {...params} label=\"Year 2\" margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                                )}\n                                onChange={(event, value) => {\n                                    props.Set_time_mode_year2(value)\n                                    props.Set_changed(\"year\")\n                                }}\n                            />\n                        </div>\n                    </div></div> : null}\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        selected_year: state.selected_year,\n        state_range: state.state_range,\n        mode: state.mode, // Model mode model\n        slider_max: state.slider_max,\n        range_mode_model: state.range_mode_model, // Range mode model\n        range_mode_range1: state.range_mode_range1,\n        range_mode_range2: state.range_mode_range2,\n        time_mode_model: state.time_mode_model, // Time mode model\n        time_mode_range: state.time_mode_range,\n        time_mode_year1: state.time_mode_year1,\n        time_mode_year2: state.time_mode_year2,\n        years_for_dropdown: state.years_for_dropdown,\n        dataset: state.dataset,\n        defualt_models: state.defualt_models,\n        slider_and_feature_value: state.slider_and_feature_value,\n        sort_by: state.sort_by,\n        grouped_by_year_data: state.grouped_by_year_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n        Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n        Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n        Set_range_mode_model: (val) => dispatch({ type: \"range_mode_model\", value: val }),\n        Set_time_mode_model: (val) => dispatch({ type: \"time_mode_model\", value: val }),\n        Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n        Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n        Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n        Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n        Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n        Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n        Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\n        Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n        Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n        Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./Sidebar.scss\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from \"react-redux\";\nimport Modes from \"./Modes\"\nimport CreatexpChart from \"./Create_model_symbols\"\nimport * as $ from \"jquery\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  listroot: {\n    width: '100%',\n    maxWidth: 360,\n  },\n  paper: {\n\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction Sidebar(props) {\n  CreatexpChart(props.defualt_models,props.symbolTypes)\n  const classes = useStyles();\n  //------------For list and chckbox\n  const [checked, setChecked] = React.useState([0]);\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  const inputchanged = (event) => {\n    var val = parseInt(event.target.value)\n    if (val > -1) {\n      setTimeout(function () {\n        props.Set_deviate_by(val)\n      }, 100);\n\n    }\n  }\n  const show_checkboxChanged = (event,val) => {\n    var myfunc = props.appHandleChange\n    myfunc(val, \"show_checkboxChanged\")\n  }\n  return (\n    <div className=\"Sidebar_parent\" style={{height:window.innerHeight}}>\n      {props.view_data==1?\n      <div className=\"rangeSlidercontainer\">\n        <Modes appHandleChange={props.appHandleChange} ></Modes>\n        <div className=\"deviation\" style={{marginLeft:5, borderTop:\"0px solid #eaeaea\"}}>\n          <p className=\"title_show\">Margin:</p>\n          <TextField\n            id=\"outlined-size-normal\"\n            defaultValue={props.deviate_by}\n            variant=\"filled\"\n            color=\"primary\"\n            onChange={(event) => inputchanged(event)}\n            fullWidth={false}\n            style={{height:24}}\n          />\n        </div>\n        <div className=\"show\">\n          <p className=\"title_show\">Show:</p>\n          <List className={classes.listroot}>\n            {['Rankings', 'Explanation'].map((value) => {\n              const labelId = `checkbox-list-label-${value}`;\n              return (\n                <ListItem key={value} role={undefined} onClick={handleToggle(value)}>\n                  <Checkbox\n                    checked={props.show.includes(value)}\n                    edge=\"start\"\n                    tabIndex={-1}\n                    value={value}\n                    onChange={(event, value) => {\n                      var temp_show=[...props.show]\n                      if(temp_show.includes(event.target.value) && event.target.value!=\"Rankings\"){\n                        temp_show=temp_show.filter(item=>item!=event.target.value)\n                      }\n                      else{\n                        temp_show.push(event.target.value)\n                      }\n                      props.Set_show(temp_show)\n                    }\n                  }\n                  />\n                  <p className=\"list_item_label\" id={labelId}>{value}</p>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      </div>:null}\n      <div style={{width:\"100%\",padding:3,borderTop:\"1px solid #bfbbbb\"}}><svg className=\"symbols_container\" style={{width:\"100%\"}}></svg></div>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    deviate_by:state.deviate_by,\n    state_range:state.state_range,\n    defualt_models:state.defualt_models,\n    selected_year:state.selected_year,\n    sparkline_data:state.sparkline_data,\n    show:state.show,\n    view_data:state.view_data,\n    symbolTypes:state.symbolTypes,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_defualt_models: (val) => dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_deviate_by:(val) => dispatch({ type: \"deviate_by\", value: val }),\n    Set_show:(val)=>dispatch({type:\"show\",value:val}),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Sidebar);","import * as d3 from \"d3\";\nimport * as $ from \"jquery\";\nexport default function CreatexpChart(defualt_models, symbolTypes) {\n    var parent_width = $(\".symbols_container\").width();\n    var symbolGenerator = d3.symbol().size(80);\n    d3.select(\".symbols_container\").selectAll(\"g\").data(defualt_models,d=>d).join(\"g\")\n    .attr(\"transform\",(d,i)=>\"translate(10,\"+25*i+\")\")\n    .attr(\"add_text\",function(model_name){\n        d3.select(this).selectAll('text').data([model_name]).join(\"text\").text(model_name).attr(\"dominant-baseline\",\"hanging\")\n    })\n    .attr(\"Add_symbol\", function (model_name) {\n        d3.select(this).selectAll(\"path\").data([0]).join(\"path\").attr(\"d\", function () { symbolGenerator.type(d3[symbolTypes[model_name]]); return symbolGenerator(); })\n          .attr(\"fill\", \"grey\").attr(\"transform\",\"translate(120,10)\");\n      })  \n}","import React, { Component } from \"react\";\n//------------------------------------------------All datasets imports\nimport fiscal from \"./Data/fiscal.csv\";\nimport school from \"./Data/school.csv\";\nimport house from \"./Data/house.csv\";\n\nimport fiscal_rank from \"./Data/data/fiscal/lime/fiscal_rank.csv\";\nimport fiscal_lime from \"./Data/data/fiscal/lime/fiscal_lime.csv\";\n\nimport school_rank from \"./Data/data/school/lime/school_rank.csv\";\nimport school_lime from \"./Data/data/school/lime/school_lime.csv\";\n\nimport house_rank from \"./Data/data/house/lime/house_rank.csv\";\nimport house_lime from \"./Data/data/house/lime/house_lime.csv\";\n\n//------------------------------------------------All datasets imports ends here\nimport \"./App.scss\";\nimport \"./components/Charts/Charts.css\";\nimport * as d3 from \"d3\";\nimport * as algo1 from \"./Algorithms/algo1\";\nimport ModelChart from \"./components/Charts/Model/ModelChart\";\nimport RangeChart from \"./components/Charts/Range/RangeChart\";\nimport YearChart from \"./components/Charts/Time/YearChart\";\nimport TopBar from \"./components/TopBar/TopBar\";\nimport { Row, Col } from \"reactstrap\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport * as $ from \"jquery\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./components/Charts/Charts.css\";\nimport { Hidden } from \"@material-ui/core\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // mydata is original data\n    this.state = { view_data: 1, grouped_by_year_data: null };\n  }\n  handleradioChange = (event) => {\n    this.setState({ show: [\"Slope charts\", \"Rankings\", \"Explanation\"] });\n    this.props.Set_slider_and_feature_value({ \"Rank range\": 1, Feature: 0 });\n    this.props.Set_clicked_items_in_slopechart([]);\n    this.props.Set_state_range([1, 25]);\n    this.props.Set_histogram_data([]);\n    this.props.Set_mode(\"Model\");\n    this.props.Set_range_mode_range1([1, 25]);\n    this.props.Set_range_mode_range2([15, 40]);\n    this.props.Set_time_mode_range([5, 35]);\n    if (event.target.value == \"Fiscal Dataset\") {\n      this.setState({ dataset: \"fiscal\" });\n      this.props.Set_dataset(\"fiscal\");\n      this.dataprocessor(\"fiscal\");\n    } else if (event.target.value == \"House Dataset\") {\n      this.setState({ dataset: \"house\" });\n      this.props.Set_dataset(\"house\");\n      this.dataprocessor(\"house\");\n    } else {\n      this.setState({ dataset: \"school\" });\n      this.props.Set_dataset(\"school\");\n      this.dataprocessor(\"school\");\n    }\n  };\n  //--------- data processor processes data for initial render\n  dataprocessor = (dataset_name) => {\n    if (dataset_name == \"school\") {\n      this.process_data(school, school_rank, school_lime, dataset_name);\n    }\n    if (dataset_name == \"fiscal\") {\n      this.process_data(fiscal, fiscal_rank, fiscal_lime, dataset_name);\n    }\n    if (dataset_name == \"house\") {\n      this.process_data(house, house_rank, house_lime, dataset_name);\n    }\n  };\n  process_data = (\n    slopechart_data_filename,\n    rank_data_filename,\n    lime_data_filename,\n    dataset_name\n  ) => {\n    var self = this;\n    //-------------\n    d3.csv(slopechart_data_filename).then((original_data) => {\n      var grouped_by_year_data = algo1.groupby_year(original_data).years;\n      var sparkline_data = algo1.groupby_year(original_data).sparkline_data;\n      var years_for_dropdown = Object.keys(grouped_by_year_data);\n      self.props.Set_sparkline_data(sparkline_data);\n      self.props.Set_slider_max(\n        grouped_by_year_data[years_for_dropdown[0]].length\n      );\n      self.setState({ years_for_dropdown: years_for_dropdown });\n      self.props.Set_years_for_dropdown(years_for_dropdown);\n      self.props.Set_time_mode_year1(years_for_dropdown[0]);\n      self.props.Set_time_mode_year2(years_for_dropdown[1]);\n      self.props.Set_legend_year(years_for_dropdown[0]);\n      self.setState({ ref_year: years_for_dropdown[0] });\n      self.props.Set_grouped_by_year_data(grouped_by_year_data);\n      self.setState({ grouped_by_year_data: grouped_by_year_data }, () => { });\n      self.setState({ original_data: original_data });\n      self.props.Set_original_data(original_data);\n      self.props.Set_selected_year(years_for_dropdown[0]);\n    });\n    //-------------\n    d3.csv(rank_data_filename).then((data) => {\n      var nested_data = {};\n      d3.nest()\n        .key(function (d) {\n          return d.model;\n        })\n        .entries(data)\n        .map((item) => {\n          nested_data[item.key] = item.values;\n        });\n      self.props.Set_rank_data(nested_data);\n    });\n    //-------------\n    d3.csv(lime_data_filename).then((data) => {\n      var nested_data = {};\n      d3.nest()\n        .key(function (d) {\n          return d.model;\n        })\n        .entries(data)\n        .map((item) => {\n          nested_data[item.key] = item.values;\n        });\n      self.props.Set_lime_data(nested_data);\n    });\n  };\n\n  buttonclickHandler = (value, type) => {\n    setTimeout(() => {\n      this.setState({ random: Math.random() });\n    }, 500);\n    type = \"button\" ? this.setState({ view_data: value }) : null;\n    type = \"form\" ? this.setState({ view_data: value }) : null;\n  };\n  //-----------------Models are generated ends here\n  componentDidMount() {\n    this.dataprocessor(\"fiscal\");\n  }\n  shouldComponentUpdate() {\n    return true;\n  }\n  render() {\n    return (\n      <div className=\"root_container\">\n        <div className=\"uploader_topbar\">\n              <Grid container spacing={0} className=\"myheader\" style={{ left: $('.Sidebar').width(),overflow:\"hidden\" }}>\n                <Grid item> <h4 className=\"app_title\">RIEVAL </h4></Grid>\n                <Grid item style={{ marginLeft: 100,borderRight: \"1px dashed #eaeaea\", width: 100 }}><Button onClick={() => this.buttonclickHandler(1, \"button\")}>View Data</Button></Grid>\n                <Grid item style={{ borderRight: \"1px dashed #eaeaea\", width: 120 }}><Button onClick={() => this.buttonclickHandler(0, \"button\")}>Load Data</Button></Grid>\n              </Grid>\n              {this.state.view_data == false ?\n                <Row className=\"Topbar_container\">\n                  <div className=\"load\">\n                    <form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\n                      <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\"></FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={this.handleradioChange}>\n                          {['Fiscal Dataset', 'School Dataset','House Dataset'].map((value) => {\n                            return <FormControlLabel value={value} control={<Radio />} label={value} />\n                          })}\n                        </RadioGroup>\n                        <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Load</Button>\n                      </FormControl>\n                    </form>\n                  </div></Row>\n                : null}\n        \n        </div>\n        {this.state.view_data != false ?\n        <div className=\"app_container\">\n        <div className=\"sidebar\">\n          <div className=\"div2 Sidebar\"><Sidebar></Sidebar></div>\n        </div>\n        <div className=\"dev_container\">\n          <div className=\"top\">\n            <TopBar></TopBar>\n          </div>\n          <div className=\"bottom\">\n            {this.props.mode == \"Model\" &&\n              this.props.original_data != null &&\n              this.props.lime_data != null ? (\n              <ModelChart></ModelChart>\n            ) : null}\n          </div>\n        </div>\n        <div className=\"feature_container\">\n          <div className=\"top\"><svg id=\"top_exp\" style={{ width: \"100%\", height: \"100%\", marginBottom: 10 }}></svg></div>\n          <div className=\"bottom\"><svg id=\"exp\" style={{ width: \"100%\", height: \"100%\", marginBottom: 10 }}></svg></div>\n        </div>\n      </div>:null}\n      </div>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    tracking: state.tracking,\n    state_range: state.state_range,\n    deviate_by: state.deviate_by,\n    defualt_models: state.defualt_models,\n    sparkline_data: state.sparkline_data,\n    selected_year: state.selected_year,\n    mode: state.mode,\n    range_mode_model: state.range_mode_model,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sort_by: state.sort_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    popup_chart_data: state.popup_chart_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    config: state.config,\n    lime_data: state.lime_data,\n    rank_data: state.rank_data,\n  };\n};\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_dataset: (val) => dispatch({ type: \"dataset\", value: val }),\n    Set_defualt_models: (val) =>\n      dispatch({ type: \"defualt_models\", value: val }),\n    Set_sparkline_data: (val) =>\n      dispatch({ type: \"sparkline_data\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_years_for_dropdown: (val) =>\n      dispatch({ type: \"years_for_dropdown\", value: val }),\n    Set_selected_year: (val) =>\n      dispatch({ type: \"selected_year\", value: parseInt(val) }),\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\n    Set_grouped_by_year_data: (val) =>\n      dispatch({ type: \"grouped_by_year_data\", value: val }),\n    Set_slider_and_feature_value: (val) =>\n      dispatch({ type: \"slider_and_feature_value\", value: val }),\n    Set_clicked_items_in_slopechart: (val) =>\n      dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_histogram_data: (val) =>\n      dispatch({ type: \"histogram_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\n\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n    Set_range_mode_range1: (val) =>\n      dispatch({ type: \"range_mode_range1\", value: val }),\n    Set_range_mode_range2: (val) =>\n      dispatch({ type: \"range_mode_range2\", value: val }),\n    Set_time_mode_range: (val) =>\n      dispatch({ type: \"time_mode_range\", value: val }),\n    Set_time_mode_year1: (val) =>\n      dispatch({ type: \"time_mode_year1\", value: val }),\n    Set_time_mode_year2: (val) =>\n      dispatch({ type: \"time_mode_year2\", value: val }),\n\n    Set_rank_data: (val) => dispatch({ type: \"rank_data\", value: val }),\n    Set_lime_data: (val) => dispatch({ type: \"lime_data\", value: val }),\n    Set_pop_over_models: (val) =>\n      dispatch({ type: \"pop_over_models\", value: val }),\n    Set_default_model_scores: (val) =>\n      dispatch({ type: \"default_model_scores\", value: val }),\n  };\n};\nexport default connect(maptstateToprop, mapdispatchToprop)(App);\n","let initialState = {\n   anim_config: {rank_animation:3000,deviation_animation:3000,feature_animation:3000,circle_animation:3000},\n   appHandleChange: null,\n   sparkline_data: null,\n   sort_by: \"Average Precision\",\n   original_data: null,\n   rank_data: null,\n   lime_data: null,\n   grouped_by_year_data: null,\n   slope_chart_ready_to_vis: null,\n   defualt_models: [\"LinearReg\"], // Change the pop_over_models as well. Set symbols as well\n   state_range: [1, 40], // Change in handleradioChange\n   deviate_by: 0,\n   show: [\"Slope charts\", \"Rankings\", \"Explanation\"], // change in app.js\n   years_for_dropdown: [\n      \"2006\"\n   ],\n   selected_year: 2006,\n   selected_years: [\"2006\"],\n   slider_min: 1,\n   slider_max: 50,\n   view_data: 1,\n   dataset: \"fiscal\", // change in componentDidmount in app.js too\n   histogram_data: [],\n   chart_scale_type: \"true\",\n   features_with_score: null,\n   ref_year: null,\n   cmodel: \"CordAscent\",\n   clicked_items_in_slopechart: [],\n   tracking: false,\n   dummy: null,\n   features_dict: {},\n   features_voted: null,\n   Legend_ready_to_vis: null,\n   legend_model: \"CordAscent\",\n   legend_show_option: \"Model\",\n   legend_year: 2012,\n   mode: \"Model\",\n   range_mode_model: \"CordAscent\",\n   range_mode_range1: [1, 25],\n   range_mode_range2: [15, 40],\n   time_mode_model: \"CordAscent\",\n   time_mode_year1: \"Null\",\n   time_mode_year2: \"Null\",\n   time_mode_range: [6, 32],\n   chart_scale_type: \"true\",\n   slider_and_feature_value: { 'Rank range': 1, 'Feature': 0 },\n   prev_prop: {},\n   replay: false,\n   changed: \"year\",\n   popup_chart_data: null,\n   pop_over: true,\n   pop_over_models: [\"MART\", \"LinearReg\"],\n   clicked_features: [],\n   drag_drop_feautre_data: {},\n   dbclicked_features: [],\n   default_model_scores: {},\n   all_models: [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"RankBoost\", \"RankNet\"],\n   average_y: false,\n   average_m: false,\n   clicked_circles:[],\n   symbolTypes:{\"LinearReg\":\"symbolDiamond\"},\n}\n//---InitialState ends here\nconst reducer = (state = initialState, action) => {\n   if (action.type === \"clicked_circles\") {\n      //console.log(action.value)\n      return { ...state, clicked_circles: action.value }\n   }\n   if (action.type === \"average_y\") {\n      console.log(action.value)\n      return { ...state, average_y: action.value }\n   }\n   if (action.type === \"average_m\") {\n      console.log(action.value)\n      return { ...state, average_m: action.value }\n   } \n   if (action.type === \"selected_years\") {\n      console.log(action.value)\n      return { ...state, selected_years: action.value[action.value.length-1],selected_year:action.value[action.value.length-1] }\n   }\n   if (action.type === \"default_model_scores\") {\n      //console.log(action.value)\n      return { ...state, default_model_scores: action.value }\n   }\n   if (action.type === \"dbclicked_features\") {\n      return { ...state, dbclicked_features: action.value }\n   }\n   if (action.type === \"drag_drop_feautre_data\") {\n      return { ...state, drag_drop_feautre_data: action.value }\n   }\n   if (action.type === \"anim_config\") {\n      return { ...state, config: action.value }\n   }\n   if (action.type === \"show\") {\n      return { ...state, show: action.value }\n   }\n   if (action.type === \"lime_data\") {\n      return { ...state, lime_data: action.value }\n   }\n   if (action.type === \"defualt_models\") {\n      var all_symbols=[\"symbolDiamond\", \"symbolSquare\", \"symbolStar\", \"symbolTriangle\",\"symbolCircle\", \"symbolWye\", , \"symbolCross\"]\n      var symbolTypes={}\n      action.value.map((item,index)=>{symbolTypes[item]=all_symbols[index]})\n      return { ...state, symbolTypes:symbolTypes,defualt_models: action.value }\n   }\n   if (action.type === \"rank_data\") {\n      return { ...state, rank_data: action.value }\n   }\n   if (action.type === \"original_data\") {\n      return { ...state, original_data: action.value }\n   }\n   if (action.type === \"years_for_dropdown\") {\n      return { ...state, years_for_dropdown: action.value }\n   }\n   if (action.type === \"appHandleChange\") {\n      return { ...state, appHandleChange: action.value }\n   }\n   if (action.type === \"state_range\") {\n      return { ...state, state_range: action.value }\n   }\n   if (action.type === \"selected_year\") {\n      return { ...state, selected_year: action.value,selected_years: [action.value.toString()] }\n   }\n   if (action.type === \"tracking\") {\n      return { ...state, tracking: action.value }\n   }\n   if (action.type === \"grouped_by_year_data\") {\n      return { ...state, grouped_by_year_data: action.value }\n   }\n   if (action.type === \"sort_by\") {\n      return { ...state, sort_by: action.value }\n   }\n   if (action.type === \"deviate_by\") {\n      return { ...state, deviate_by: action.value }\n   }\n   if (action.type === \"mode\") {\n      return { ...state, mode: action.value }\n   }\n   if (action.type === \"slider_max\") {\n      return { ...state, slider_max: action.value }\n   }\n   if (action.type === \"range_mode_model\") {\n      return { ...state, range_mode_model: action.value }\n   }\n   //----\n   if (action.type === \"range_mode_range1\") {\n      return { ...state, range_mode_range1: action.value }\n   }\n   if (action.type === \"range_mode_range2\") {\n      return { ...state, range_mode_range2: action.value }\n   }\n   if (action.type === \"time_mode_range\") {\n      return { ...state, time_mode_range: action.value }\n   }\n   if (action.type === \"time_mode_model\") {\n      return { ...state, time_mode_model: action.value }\n   }\n   if (action.type === \"time_mode_year1\") {\n      return { ...state, time_mode_year1: action.value }\n   }\n   if (action.type === \"time_mode_year2\") {\n      return { ...state, time_mode_year2: action.value }\n   }\n   if (action.type === \"clicked_items_in_slopechart\") {\n      return { ...state, clicked_items_in_slopechart: action.value }\n   }\n   if (action.type === \"features_with_score\") {\n      return { ...state, features_with_score: action.value }\n   }\n   if (action.type === \"sparkline_data\") {\n      return { ...state, sparkline_data: action.value }\n   }\n   if (action.type === \"legend_show_option\") {\n      return { ...state, legend_show_option: action.value }\n   }\n   if (action.type === \"legend_model\") {\n      return { ...state, legend_model: action.value }\n   }\n   if (action.type === \"histogram_data\") {\n      return { ...state, histogram_data: action.value }\n   }\n   if (action.type === \"dataset\") {\n      return { ...state, dataset: action.value }\n   }\n   if (action.type === \"slider_and_feature_value\") {\n      return { ...state, slider_and_feature_value: action.value }\n   }\n   if (action.type === \"legend_year\") {\n      return { ...state, legend_year: action.value }\n   }\n   if (action.type === \"prev_prop\") {\n      return { ...state, prev_prop: action.value }\n   }\n   if (action.type === \"replay\") {\n      return { ...state, replay: action.value }\n   }\n   if (action.type === \"changed\") {\n      return { ...state, changed: action.value }\n   }\n   if (action.type === \"popup_chart_data\") {\n      return { ...state, popup_chart_data: action.value }\n   }\n   if (action.type === \"pop_over\") {\n      return { ...state, pop_over: action.value }\n   }\n   if (action.type === \"pop_over_models\") {\n      var temp = action.value.filter(item => item != \"ListNet\")\n      return { ...state, pop_over_models: temp }\n   }\n   if (action.type === \"clicked_features\") {\n      //console.log(action.value)\n      return { ...state, clicked_features: action.value }\n   }\n   return state;\n}\nexport default reducer;","import { createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({      \n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  }\n});\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './store/reducer';\nimport theme from './Themes'; \nimport { ThemeProvider } from '@material-ui/styles';\nconst store=createStore(reducer);\nReactDOM.render( <ThemeProvider theme={theme}><Provider store={store}><App /></Provider></ThemeProvider>,document.getElementById('root'));\n\n\n","module.exports = __webpack_public_path__ + \"static/media/chart1_data.d3b20544.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.cca71c9e.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal.977bae2d.csv\";","module.exports = __webpack_public_path__ + \"static/media/school.2d2c77ef.csv\";","module.exports = __webpack_public_path__ + \"static/media/house.88979d03.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_rank.6e0a824e.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_lime.7992abf1.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_rank.edf0b9e3.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_lime.644683c6.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_rank.f85c2352.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_lime.b31dfb61.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.45acbae8.csv\";"],"sourceRoot":""}