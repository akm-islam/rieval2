{"version":3,"sources":["Data/data/fiscal/lime/chart1_data.csv","Data/data/school/lime/chart1_data.csv","Data/fiscal.csv","Data/school.csv","Data/house.csv","Data/data/fiscal/lime/fiscal_rank.csv","Data/data/fiscal/lime/fiscal_lime.csv","Data/data/school/lime/school_rank.csv","Data/data/school/lime/school_lime.csv","Data/data/house/lime/house_rank.csv","Data/data/house/lime/house_lime.csv","Data/data/house/lime/chart1_data.csv","Algorithms/algo1.js","components/Charts/DevPlot/deviation_chart.js","components/Charts/DevPlot/Sparkline.js","components/Charts/misc_algo.js","components/Charts/Model/ModelSlider.js","components/Charts/ExpChart/Create_exp_circles.js","components/Charts/ExpChart/MDS.js","components/Charts/Model/ExpChartComponent.js","components/Charts/Model/YearAndModelSelection/YearModelSelection.js","components/Charts/Popover/chart_pop.js","components/Charts/Popover/FilterModel.js","components/Charts/Popover/Popover.js","components/Charts/Model/ModelChartComponent.js","components/Charts/Range/SliderGroup1.js","components/Charts/Range/SliderGroup2.js","components/Charts/Range/YearAndModelSelection/YearModelSelection.js","components/Charts/Range/ExpChartComponent.js","components/Charts/Range/RangeChartComponent.js","components/themes.js","components/Charts/Time/Year1DropDown.js","components/Charts/Time/Year2DropDown.js","components/Charts/Time/YearAndModelSelection/Slider.js","components/Charts/Time/YearAndModelSelection/YearModelSelection.js","components/Charts/Time/ExpChartComponent.js","components/Charts/Time/YearChart.js","components/Top/FeatureHistograms/FeatureHistograms.js","components/Top/FeatureHistograms/CreateBarChart.js","components/Top/FeatureHistograms/CreateHistogram.js","components/Top/FeaturesDropdown.js","components/Top/SelectMode.js","components/Top/theme.js","components/Top/Threshold.js","components/Top/Top.js","components/BrushTest/BrushTest.js","components/Legend/Legend.js","App.js","store/reducer.js","Themes.js","index.js"],"names":["module","exports","groupby_year","original_data","years","sparkline_data","forEach","element","replace","temp_dict","year","parseInt","rank","push","features_with_score","dataset","models","selected_instances","selected_year","number_of_charts","rank_data","temp1","temp_final","key","map","model","temp2","v","top_nine","length","items","data","feautures","tempvoted_data_with_score","data2","filter","index","Object","keys","item","feauture","parseFloat","sort","first","second","items2","sorted_features","i","key2","Create_deviation_chart","parent_id","parent_exp_id","default_models","anim_config","average","clicked_circles","Set_clicked_circles","diverginColor","Set_selected_year","threshold","div","d3","selectAll","join","attr","style","parent_width","$","width","parent_height","height","includes","temp_scale_data","Math","abs","config","space_for_state_name","fontSize","font_dy","sparkline_width","font_line_gap","line_stroke_width","animation_duration","container_height","my_svg_top_margin","myg_top_margin","y_distance","circle_radius","t","textures","lines","size","strokeWidth","stroke","background","call","d","enter","append","update","transition","duration","rank_animation","exit","remove","this","text","dd","val","substring","parent","s_margin","s_width","s_height","s_svg","x","domain","range","datum","y0","y","y1","raise","on","preventDefault","Create_sparkline","data_for_all_years","line_data","model_name","a","two_realRank","predicted_rank","temp_max","sclale1","url","d2","temp","deviation_animation","delay","circ_data","classed","html","pageX","pageY","handle_transparency","class_name","circle_id","useStyles","makeStyles","theme","root","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","secondary","tRoot","marginBottom","rang_input","marginLeft","connect","state","state_range","mode","slider_max","range_mode_model","range_mode_range1","range_mode_range2","time_mode_model","time_mode_range","time_mode_year1","time_mode_year2","years_for_dropdown","slider_and_feature_value","sort_by","grouped_by_year_data","dispatch","Set_state_range","type","value","Set_changed","props","classes","React","useState","sliderRange","set_sliderRange","temp_marks","step","marks","myitem","label","className","paddingTop","border","padding","marginTop","TextField","input","id","onChange","event","isNaN","target","alert","margin","Slider","newValue","onChangeCommitted","valueLabelDisplay","aria-labelledby","xs","Button","backgroundColor","onClick","CreatexpCircle","selection","lime_data","item_width","item_height","deviation_array","feature_name","feature_contrib_name","sum_data","console","log","xScale","my_mean","rScale","getRandomArbitrary","min","max","seed","rand","rnd","disp","sin","floor","random","circle_animation","feature_animation","getMdsData","myurl","fetch","method","body","JSON","stringify","headers","then","res","json","response","catch","error","Create_MDS","mds_ref","circle_data","mds_id","w","h","r","yScale","svg","current","circles","lasso","d3lasso","closePathSelect","closePathDistance","targetArea","possibleItems","notPossibleItems","selected_ids","selectedItems","each","notSelectedItems","SlopeChart","Createsvg","dragged_features","indexed_features","self","histogram_data","under_threshold_instances","year_data","excluded_features","algo1","entries","b","slice","mds_height","feature_containers","setState","clicked_features","Set_clicked_features","feature","dbclicked_features","unshift","set_dbclicked_features","popup_chart_data","Set_popup_chart_data","set_pop_over","deltaY","parentNode","origin_index","lower","difference","document","elementFromPoint","sourceEvent","clientX","clientY","origin_feature","dest_index","indexOf","dest_feature","Set_dragged_features","container","feature_contrib_data_for_mds","MDS_response","parse","mds","line_color","exp","createRef","mouseX","mouseY","window","innerHeight","prevProps","prevState","ref","Component","chart_scale_type","show","average_m","average_y","Set_prev_prop","Set_sparkline_data","Set_replay","all_models","Set_default_models","display","justifyContent","marginRight","fontWeight","Chart","CreateChart","scatterplot_data","feature_contribute","temp_x","temp_y","nice","parent_svg","myid","svg1","hist_height","bins","histogram","y_hist","svg0","x0","x1","y2","tickSize","ticks","tickValues","tickFormat","select","String","CreateChart_cat","barplot_data","values","bandwidth","merged_arr","concat","apply","pop_over_models","clicked_items_in_slopechart","reduced_opacity","idName","Set_clicked_items_in_slopechart","Set_pop_over_models","anchorEl","setAnchorEl","open","Boolean","checked","setChecked","handleToggle","currentIndex","newChecked","splice","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","onClose","TransitionComponent","Fade","List","labelId","ListItem","role","undefined","Checkbox","edge","tabIndex","temp_Models","checkboxChanged","pop_over","set_clicked_features","position","top","left","pointerEvents","Grid","boxShadow","borderBottom","direction","justify","alignItems","FilterModel","maxHeight","overflow","maxWidth","textClickHandler_original","height_slope_exp_chart","interpolate","deviation_chart","misc_algo","Set_selected_instances","Set_deviation_array","class","spacing","exp_id","Popover","Set_range_mode_range1","Set_range_mode_range2","paddingLeft","Set_range_mode_model","exp_data","selected_instances1","selected_instances2","paddingRight","SliderGroup1","borderRight","SliderGroup2","createMuiTheme","primary","main","overrides","MuiAutocomplete","MuiFilledInput","MuiInputLabel","MuiTextField","MuiButton","textTransform","fullWidth","Root","disableRipple","variant","MuiCheckbox","InputLabelProps","shrink","MuiPaper","elevation","MuiCard","Set_time_mode_year1","Autocomplete","disableClearable","defaultValue","toString","debug","options","option","renderInput","params","InputProps","disableUnderline","Set_time_mode_year2","Set_time_mode_range","Set_time_mode_model","verticalAlign","Year1DropDown","Year2DropDown","FeatureHistograms","store_instances","instances","all_instances","feature_data","filename","exp_fiscal_CordAscent","exp_school_CordAscent","exp_house_CordAscent","nextProps","nextState","features_dict","feature_index","number_of_features","feature_width","occur","sum_x","feature_height","CreateBarChart","item_data","area_chart_height","myticks","binned_data","thresholds","area_chart_data","areaGenerator","curve","extent","invert","upper","CreateHistogram","borderRadius","filtered_instances","Set","handleClose","Set_histogram_data","deviate_by","Set_slider_max","SimpleMenu","Set_mode","onSubmit","buttonclickHandler","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","outerTheme","Set_threshold","set_threshold","ThemeProvider","noValidate","autoComplete","Input","inputProps","App","setTimeout","Set_view_data","view_data","ref_year","features_voted","Legend_ready_to_vis","legend_model","ButtonGroup","SelectMode","Threshold","Row","handleradioChange","innerWidth","Legend","legend_container_width","legend_container_height","legend1_rScale","legend1_yScale","legend1_height","legend1_ticks","legend1_svg","legend2_svg_height","legend2_height","legend2_yScale","legend2_ticks","rect_height","legend2_svg","Set_legend_year","dataprocessor","dataset_name","process_data","school","school_rank","school_lime","fiscal","fiscal_rank","fiscal_lime","house","house_rank","house_lime","slopechart_data_filename","rank_data_filename","lime_data_filename","Set_years_for_dropdown","Set_grouped_by_year_data","Set_original_data","nested_data","Set_rank_data","temp_data","Set_lime_data","selected_dataset","Set_dataset","Top","YearChart","legend_width","tracking","Set_ref_year","Set_slider_and_feature_value","Set_default_model_scores","initialState","appHandleChange","slope_chart_ready_to_vis","slider_min","cmodel","dummy","legend_show_option","legend_year","reducer","action","default_model_scores","drag_drop_feautre_data","prev_prop","replay","changed","button","MuiGrid","store","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ff27f0f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chart1_data.bbc13ad4.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.e95760f9.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal.977bae2d.csv\";","module.exports = __webpack_public_path__ + \"static/media/school.2d2c77ef.csv\";","module.exports = __webpack_public_path__ + \"static/media/house.88979d03.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_rank.442b3a04.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_lime.9d697bff.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_rank.a78bd499.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_lime.ef16e4c0.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_rank.e66c7c0d.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_lime.66415f13.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.81e362e3.csv\";","export function groupby_year(original_data) {\r\n  var years = {}\r\n  var sparkline_data = {}\r\n  original_data.forEach(element => {\r\n    years[element['1-qid']] = []\r\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')] = []\r\n  });\r\n\r\n  original_data.forEach(element => {\r\n    var temp_dict = { year: parseInt(element['1-qid']), rank: parseInt(element['two_realRank']) }\r\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')].push(temp_dict)\r\n    years[element['1-qid']].push(element)\r\n  });\r\n  return { years: years, sparkline_data: sparkline_data };\r\n}\r\nexport function features_with_score(dataset, models, selected_instances, selected_year, number_of_charts, rank_data) {\r\n  var temp1 = {}\r\n  var temp_final = {}\r\n  models.map(model => {\r\n    var temp2 = {}\r\n    var v = number_of_charts;\r\n    var top_nine = sorted_features(dataset, model, selected_instances, selected_year,rank_data)\r\n    if (top_nine.length < number_of_charts) { v = top_nine.length;; number_of_charts = top_nine.length } // This is because number of charts is calculated based on space but there are cases when we don't have that many features\r\n    for (var i = 0; i < number_of_charts; i++) {\r\n      temp2[top_nine[i]] = v;\r\n      v = v - 1\r\n    }\r\n    temp1[model] = temp2\r\n  });\r\n\r\n  for (var key in temp1) {\r\n    for (var key2 in temp1[key]) {\r\n      if (temp_final[key2] > 0) {\r\n\r\n        temp_final[key2] = temp_final[key2] + temp1[key][key2]\r\n      }\r\n      else {\r\n        temp_final[key2] = temp1[key][key2]\r\n      }\r\n    }\r\n  }\r\n  return temp_final;\r\n}\r\n\r\n\r\nexport function sorted_features(dataset, model, selected_instances, selected_year,rank_data) { // Uses feature rank to rank and return features name by removing the feature_rank string\r\n //return Object.keys(rank_data[model][0]).filter(item=>!['1-qid','model'].includes(item)).map(item=>item.replace(\"_feature_rank\", \"\"))\r\n  if (!selected_instances.length > 0) { return [] }\r\n  selected_instances = selected_instances.map(element => element - 1)\r\n  var tempvoted_data_with_score = {},items,data,feautures;\r\n\r\n  if (model == \"ListNet\") { return [] }\r\n  var data2 = rank_data[model].filter(element => { if (parseInt(element['1-qid']) == parseInt(selected_year)) { return element } })\r\n  data = selected_instances.map(index => data2[index])\r\n  feautures = Object.keys(data[0])\r\n  data.map(item => {\r\n    feautures.forEach(feauture => {\r\n      if (tempvoted_data_with_score[feauture] >= 0 || tempvoted_data_with_score[feauture] < 0) {\r\n        tempvoted_data_with_score[feauture] = tempvoted_data_with_score[feauture] + (parseFloat(item[feauture]))\r\n      }\r\n      else { tempvoted_data_with_score[feauture] = parseFloat(item[feauture]) }\r\n    })\r\n  })\r\n  //-----------------------------------------------------------------\r\n  // Create items array\r\n  items = Object.keys(tempvoted_data_with_score).map(function (key) {\r\n    return [key, tempvoted_data_with_score[key]];\r\n  });\r\n  // Sort the array based on the second element\r\n  items.sort(function (first, second) {\r\n    return first[1] - second[1];\r\n  });\r\n  var items2 = items.map((element) => element[0].replace(\"_feature_rank\", \"\"))\r\n  items2 = items2.filter(item => item != \"1-qid\" && item!=\"model\")\r\n  return items2;\r\n  //-----------------------------------------------------------------\r\n}\r\n","import * as d3 from 'd3';\r\nimport * as $ from 'jquery';\r\nimport textures from 'textures';\r\nimport Create_sparkline from \"./Sparkline\"\r\n\r\nexport function Create_deviation_chart(parent_id,parent_exp_id, selected_instances, original_data, default_models, anim_config, selected_year, average, clicked_circles, Set_clicked_circles, diverginColor,sparkline_data,Set_selected_year,dataset,threshold) {\r\n  var div = d3.select(\"body\").selectAll('.tooltip').data([0]).join(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\r\n  var parent_width = $(\"#\" + parent_id).width() - 5\r\n  var parent_height = $(\".\" + 'deviation_plot_container_div').height() // deviation_plot_container_div is the div that contains the deviation plot for all modes\r\n  var data = original_data.filter(item => selected_year==item['1-qid'] && selected_instances.includes(parseInt(item['two_realRank'])))\r\n  var temp_scale_data = []\r\n  data.map(item => { default_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\r\n  // font_line_gap=sparkline_width+4\r\n  var config = { space_for_state_name: 120,fontSize: 12, font_dy: -6, sparkline_width:20,font_line_gap: 24, line_stroke_width: 10, animation_duration: 0, container_height: 100, my_svg_top_margin: 10, myg_top_margin: 10 }\r\n  var y_distance = parent_height/selected_instances.length\r\n  if(y_distance<15){var y_distance=15}\r\n  d3.select(\"#\" + parent_id).attr(\"height\",y_distance*selected_instances)\r\n\r\n  var circle_radius = config.line_stroke_width / 2\r\n  var t = textures.lines().size(5).strokeWidth(2).stroke(\"#cccccc\").background(\"gray\");\r\n  var svg=d3.select(\"#\" + parent_id).attr('height', y_distance + data.length * y_distance).call(t)\r\n  var parent_g = svg.selectAll(\".parent_g\").data([0]).join('g').attr('class', 'parent_g').attr('transform', \"translate(\" + 0 + \",13)\")\r\n  var items_g = parent_g.selectAll(\".items\").data(data, d => d['State']).join(enter => enter.append(\"g\").attr(\"class\", \"items\")\r\n    .attr('transform', (d, i) => \"translate(\" + config.space_for_state_name + \",\" + i * y_distance + \")\")\r\n    , update => update.transition().duration(anim_config.rank_animation).attr('transform', (d, i) => \"translate(\" + config.space_for_state_name + \",\" + i * y_distance + \")\")\r\n    , exit => exit.remove()\r\n  )\r\n  items_g.attr(\"add_state\", function (d) {\r\n    d3.select(this).selectAll(\"text\").data([d]).join('text')\r\n    .text(dd=>{\r\n      var max_textsize=15\r\n      var val = d['State']\r\n          if (val.length > max_textsize) { val = val.replace(\"University\", \"U\") }\r\n          if(val.length > max_textsize){val = val.substring(0, max_textsize)+\"..\"}\r\n          return val + \" \" + d['two_realRank'] \r\n    })\r\n    .attr('fill', d => diverginColor(d['two_realRank'])).attr(\"dominant-baseline\", \"hanging\").attr(\"font-size\", config.fontSize)\r\n      .attr(\"x\", 0).attr('text-anchor', 'end').attr(\"dy\", config.font_dy)\r\n  }).attr(\"add_sparkline\", function (d) {\r\n    // sparkline height is y_distance\r\n    if(dataset!='house'){Create_sparkline(d3.select(this),config,config.line_stroke_width,sparkline_data,d,diverginColor,selected_year,Set_selected_year)}\r\n  })\r\n    .attr(\"add_lines_and_circles\", function (d) {\r\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\r\n      var line_data = []\r\n      default_models.map(model_name => {\r\n        data_for_all_years.map(item => {\r\n          var a = {}\r\n          var two_realRank = parseInt(item['two_realRank'])\r\n          var predicted_rank = parseInt(item[model_name])\r\n          a['two_realRank'] = two_realRank\r\n          a['predicted_rank'] = predicted_rank\r\n          a[\"model\"] = model_name\r\n          a['year'] = item['1-qid']\r\n          if (Math.abs(predicted_rank - two_realRank) < threshold) {\r\n            line_data.push(a)\r\n          }\r\n        })\r\n      })\r\n      // This is only for scaling starts here\r\n      var temp_scale_data = []\r\n      data.map(item => { default_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\r\n      var temp_max = d3.max(temp_scale_data)\r\n      var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, parent_width - (config.space_for_state_name + circle_radius)])\r\n      if (temp_max == 0) { var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, 0]) }\r\n      // This is only for scaling ends here\r\n      d3.select(this).selectAll(\"line\").data([d]).join(enter => enter.append('line')\r\n        .attr(\"x1\", config.font_line_gap).attr(\"y1\", (d, i) => y_distance * i).attr(\"y2\", (d, i) => y_distance * i).attr(\"stroke-width\", config.line_stroke_width).attr(\"stroke\", t.url()).attr(\"x2\", (d2) => {\r\n          var temp = []\r\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\r\n          return sclale1(d3.max(temp))\r\n        })\r\n        // Update\r\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"x2\", (d2) => {\r\n          var temp = []\r\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\r\n          return sclale1(d3.max(temp))\r\n        }))\r\n      // ------------ Circles start here\r\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\r\n      var circ_data = []\r\n      default_models.map(model_name => {\r\n        data_for_all_years.map(item => {\r\n          var a = {}\r\n          var two_realRank = parseInt(item['two_realRank'])\r\n          var predicted_rank = parseInt(item[model_name])\r\n          a['two_realRank'] = two_realRank\r\n          a['predicted_rank'] = predicted_rank\r\n          a[\"model\"] = model_name\r\n          a['year'] = item['1-qid']\r\n          a['id'] =item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n          if (Math.abs(predicted_rank - two_realRank) < threshold) {\r\n            circ_data.push(a)            \r\n          }\r\n        })\r\n      })\r\n      var my_circs = d3.select(this).selectAll(\".my_circles\").data(circ_data, d => d['id']).join(\r\n        enter => enter.append(\"circle\").attr('id', d => d['id']).attr('class', 'my_circles').attr(\"cx\", (d2, i) => {\r\n          d3.select(this).classed(d2['id'], true)\r\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\r\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\r\n        })\r\n        // Update\r\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"cx\", (d2, i) => {\r\n          d3.select(this).classed(d2['id'], true)\r\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\r\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\r\n        })\r\n      )\r\n      my_circs.attr(\"r\",item=> {\r\n          return circle_radius\r\n    })\r\n      .attr('fill', d => diverginColor(d['two_realRank'])).attr(\"parent_id\", parent_exp_id)\r\n        .on('click', d => Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']]))\r\n        .on(\"mouseover\", function (d2) {\r\n          div.transition().duration(200).style(\"opacity\", .9);\r\n          div.html(\"Year : \" + d2[\"year\"] + \"<br></br>\" + \"Model: \" + d2[\"model\"] + \"<br></br>\" + \"Deviation: \" + Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\r\n          .style(\"left\", (d3.event.pageX - 140) + \"px\").style(\"top\", (d3.event.pageY - 98) + \"px\");\r\n        }).on(\"mouseout\", function (d2) {\r\n          //d3.select(this).classed(d2['id'],true)\r\n          div.transition()\r\n            .duration(500)\r\n            .style(\"opacity\", 0);\r\n        })\r\n\r\n    })\r\n\r\n}","import * as d3 from 'd3';\r\nexport default function Create_sparkline(parent, config, y_distance, sparkline_data, d, diverginColor, selected_year, Set_selected_year) { // sparkline height is y_distance\r\n    var year = selected_year\r\n    var s_margin = { top: 0, right: 0, bottom: 0, left: 4 },\r\n        s_width = config.sparkline_width - 2,\r\n        s_height = y_distance - 2;\r\n    var s_svg = parent.selectAll(\".sparkline_svg\").data([0]).join(\"svg\").attr(\"class\", \"sparkline_svg\").attr(\"x\", 2).attr(\"y\", -3)\r\n        .attr(\"width\", s_width + s_margin.left + s_margin.right)\r\n        .attr(\"height\", s_height + s_margin.top + s_margin.bottom)\r\n    \r\n    var data = sparkline_data[d['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")]\r\n    // Add X axis  \r\n    var x = d3.scaleLinear().domain(d3.extent(data, function (d) { return d.year; })).range([0, s_width]);\r\n    //-----------------------------------------------------------------------------------------------------------------------------------------Add the area\r\n    s_svg.selectAll(\"path\").remove()\r\n    s_svg.append(\"path\")\r\n        .datum(data, d => d)\r\n        .attr(\"id\", \"A\")\r\n        .attr(\"opacity\", 1)\r\n        .attr(\"fill\", diverginColor(d['two_realRank'])) //#969696\r\n        .attr(\"stroke\", diverginColor(d['two_realRank']))\r\n        .attr(\"stroke-width\", (d) => {\r\n            return 1.5\r\n        })\r\n        .attr(\"d\", d3.area()\r\n            .x(function (d) { return x(d.year) })\r\n            .y0(function () {\r\n                var y = d3.scaleLinear().domain([0, d3.max(data, function (d) { return +d.rank; })]).range([s_height, 0]);\r\n                return y(0)\r\n            })\r\n            .y1(function (d) {\r\n                var y = d3.scaleLinear().domain([0, d3.max(data, function (d) { return +d.rank; })]).range([0, s_height]);\r\n                return y(d.rank)\r\n            })\r\n        )\r\n    //------------Circles\r\n    s_svg.selectAll('circle').raise().data(data).join('circle')\r\n        .attr('cx', function (d, i) { return x(d.year) })\r\n        .attr('cy', s_height - 2)\r\n        .attr(\"class\", \"myid\")\r\n        .on(\"mouseover\", function (d) {\r\n            d3.select(this).style('fill', 'black')\r\n            d3.select(this).attr('r', 3)\r\n        })\r\n        .style('fill', (d) => d.year != year ? 'transparent' : 'black')\r\n        .attr('class', (d) => d.year != year ? 'transparent_class' : 'red_class')\r\n        .attr('r', 2)\r\n        .on('dblclick', (d, i) => {\r\n            d3.event.preventDefault();\r\n            Set_selected_year(d.year)\r\n        })\r\n        .on(\"mouseout\", function (d) {\r\n            d3.select(this).style('fill', 'transparent')\r\n            d3.select(this).style('fill', d.year != year ? 'transparent' : 'black')\r\n            d3.select(this).attr('r', 2)\r\n        })\r\n}","import * as d3 from 'd3';\r\nexport function handle_transparency(class_name, clicked_circles, anim_config) {\r\n    \r\n    if (clicked_circles.length != 0) { // If there are no clicked circles make all opacity 1\r\n        d3.selectAll(\".items\").attr('opacity', 0.6) // Groups\r\n        d3.selectAll(\".\" + \"my_circles\").attr('opacity', 0.3) // Circles\r\n        clicked_circles.map(circle_id => {\r\n            d3.selectAll(\".\" + circle_id).attr('opacity', 1) // Groups\r\n            d3.selectAll(\"#\" + circle_id).attr('opacity', 1) // Circles\r\n        })\r\n    }\r\n    else {\r\n        d3.selectAll(\".items\").attr('opacity', 1); // Groups\r\n        d3.selectAll(\".\" + \"my_circles\").attr('opacity', 1) // Circles \r\n    }\r\n}\r\nexport function draw_lines(clicked_circles, diverginColor) {\r\n   \r\n}","import React from 'react';\r\nimport * as $ from 'jquery';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './ModelSlider.scss';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tRoot: {\r\n        marginBottom: 35,\r\n    },\r\n    rang_input: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\nfunction Modes(props) {\r\n    const classes = useStyles();\r\n    // states \r\n    const [sliderRange, set_sliderRange] = React.useState(props.state_range);\r\n    //-----------------------------------------------------------------\r\n    var temp_marks = [];\r\n    var step = (props.slider_max - 1) / (6 - 1);\r\n    for (var i = 0; i < 6; i++) {\r\n        temp_marks.push(1 + (step * i));\r\n    }\r\n    var marks = temp_marks.map(item => {\r\n        var myitem = parseInt(item)\r\n        return { value: myitem, label: myitem }\r\n    })\r\n    //console.log(props.marks)\r\n    //-----------------------------------------------------------------\r\n    return (\r\n        <div className=\"Modelslider\" style={{height: 70, width: \"99%\",\r\n            paddingTop: 30, border: \"2px solid rgb(178, 178, 178,0.5)\"\r\n        }} >\r\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([\"\", sliderRange[1]])\r\n                        } else {\r\n                            if (event.target.value > sliderRange[1]) {\r\n                                alert(\"Lower range can not be larger than the upper range\")\r\n                            }\r\n                            else {\r\n                                set_sliderRange([event.target.value, sliderRange[1]])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\r\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\r\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\r\n                />\r\n            </div>\r\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([sliderRange[0], \"\"])\r\n                        } else {\r\n                            if (parseInt(event.target.value) > props.slider_max) {\r\n                                alert(\"Upper range can not exceed maximum\")\r\n                                set_sliderRange([sliderRange[0], props.slider_max])\r\n                            }\r\n                            else {\r\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\r\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\r\n                    onClick={() => {\r\n                        props.Set_state_range(sliderRange)\r\n                    }}\r\n                >Update range</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        selected_year: state.selected_year,\r\n        state_range: state.state_range,\r\n        mode: state.mode, // Model mode model\r\n        slider_max: state.slider_max,\r\n        range_mode_model: state.range_mode_model, // Range mode model\r\n        range_mode_range1: state.range_mode_range1,\r\n        range_mode_range2: state.range_mode_range2,\r\n        time_mode_model: state.time_mode_model, // Time mode model\r\n        time_mode_range: state.time_mode_range,\r\n        time_mode_year1: state.time_mode_year1,\r\n        time_mode_year2: state.time_mode_year2,\r\n        years_for_dropdown: state.years_for_dropdown,\r\n        dataset: state.dataset,\r\n        default_models: state.default_models,\r\n        slider_and_feature_value: state.slider_and_feature_value,\r\n        sort_by: state.sort_by,\r\n        grouped_by_year_data: state.grouped_by_year_data\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\r\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import * as d3 from \"d3\";\r\nexport default function CreatexpCircle(d, selection, selected_instances,\r\n    lime_data, selected_year, default_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, item_width, item_height, deviation_array, index,threshold) {\r\n    var margin = { item_top_margin: 25, item_bottom_margin: 6, circ_radius: 5, item_left_margin: 6, item_right_margin: 6 }\r\n    var feature_name = d[0]\r\n    var feature_contrib_name = d[0] + \"_contribution\"\r\n    var circ_data = []\r\n    var sum_data = []\r\n    default_models.map(model => {\r\n        lime_data[model].map(item => {\r\n            if (item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\r\n                console.log('test',item['deviation'])\r\n                if(item['deviation']<threshold){sum_data.push(parseFloat(item[feature_contrib_name]))}\r\n                item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n                circ_data.push(item)\r\n            }\r\n        })\r\n    })\r\n    // Draw circle starts here\r\n    if (isNaN(lime_data[default_models[0]][0][feature_name])) {\r\n        var yScale = d3.scaleBand().domain(lime_data[default_models[0]].map(item => item[feature_name])).range([margin.item_top_margin, item_height - margin.item_bottom_margin])\r\n    }\r\n    else {\r\n        var yScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[d[0]]))), d3.max(circ_data.map(item => parseFloat(item[d[0]])))]).range([margin.item_top_margin, item_height - margin.item_bottom_margin])\r\n    }\r\n    var xScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[feature_contrib_name]))), d3.max(circ_data.map(item => parseFloat(item[feature_contrib_name])))]).range([margin.item_left_margin, item_width - margin.item_right_margin])\r\n    //----------\r\n    var my_mean = d3.mean(sum_data)\r\n    //----------\r\n    selection.selectAll(\".my_mean_line\").data([0]).join(\"line\").attr(\"class\", \"my_mean_line\").attr(\"x1\", xScale(my_mean)).attr(\"x2\", xScale(my_mean)).attr(\"y1\", 18).attr(\"y2\", item_height).attr('stroke', \"rgb(96, 96, 96,0.5)\").attr('stroke-width', 1)\r\n    var rScale = d3.scaleLinear().domain(d3.extent(deviation_array)).range([5, 2])\r\n    var mycircles = selection.selectAll(\".my_circles\").data(circ_data, d => d['id']).join(\r\n        enter => enter.append('circle')\r\n            .attr('id', d => d['id'])\r\n            .attr('class', d => 'my_circles')\r\n            .attr('fill', d => diverginColor(d['two_realRank']))\r\n            .attr(\"transform\", function (d, i) {\r\n                var x_transform = xScale(parseFloat(d[feature_contrib_name]))\r\n                var y_transform = getRandomArbitrary(margin.item_top_margin, item_height - margin.item_bottom_margin, i)\r\n                return \"translate(\" + x_transform + \",\" + y_transform + \")\";\r\n            })\r\n            .attr(\"r\", d => d['deviation']>threshold?0:rScale(d['deviation']))\r\n        // Update\r\n        , update => update.attr('class', d => d['id'] + ' items circle2 my_circles')\r\n            .transition().duration(anim_config.circle_animation).delay(anim_config.rank_animation + anim_config.deviation_animation + anim_config.feature_animation)\r\n            .attr(\"transform\", function (d, i) {\r\n                var x_transform = xScale(parseFloat(d[feature_contrib_name]))\r\n                var y_transform = getRandomArbitrary(margin.item_top_margin, item_height - margin.item_bottom_margin, i)\r\n                return \"translate(\" + x_transform + \",\" + y_transform + \")\";\r\n            })\r\n            .attr('id', d => d['id'])\r\n            .attr(\"r\", d => d['deviation']>threshold?0:rScale(d['deviation']))\r\n        , exit => exit.remove())\r\n    mycircles.attr(\"myindex\",index).attr('feature_name',d[0]).on('click', d => {\r\n        Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']])\r\n    }\r\n    )\r\n    if(index==0){selection.selectAll(\".avg_text\").data(['avg']).join(\"text\").attr(\"x\", xScale(my_mean)+5).attr(\"class\", \"avg_text\").attr(\"myindex\",index).attr(\"y\", (item_height-margin.item_top_margin-margin.item_bottom_margin)/2+margin.item_top_margin).text('avg').attr('font-size', 12)\r\n    .attr('dominant-baseline', \"middle\").attr('text-anchor','middle').attr('transform',d=>\"rotate(-90,\"+(xScale(my_mean)+5)+\",\"+((item_height-margin.item_top_margin-margin.item_bottom_margin)/2+margin.item_top_margin)+\")\")}\r\n    else{selection.selectAll('.avg_text').remove()}\r\n    // Draw circle ends here\r\n    function getRandomArbitrary(min, max, seed) {\r\n        min = min || 0;\r\n        max = max || 1;\r\n        var rand;\r\n        if (typeof seed === \"number\") {\r\n            seed = (seed * 9301 + 49297) % 233280;\r\n            var rnd = seed / 233280;\r\n            var disp = Math.abs(Math.sin(seed));\r\n            rnd = (rnd + disp) - Math.floor((rnd + disp));\r\n            rand = Math.floor(min + rnd * (max - min + 1));\r\n        } else {\r\n            rand = Math.floor(Math.random() * (max - min + 1)) + min;\r\n        }\r\n        return rand;\r\n    }\r\n}","import * as d3 from 'd3';\r\nimport * as $ from 'jquery';\r\nimport * as d3lasso from 'd3-lasso';\r\nexport default function getMdsData(myurl, data) {\r\n  return fetch(myurl, {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }).then(res => res.json())\r\n    .then(response => {\r\n      console.log(response)\r\n      return response;\r\n    }).catch(error => console.error('Error: from Json Handler', error));\r\n}\r\nexport function Create_MDS(mds_ref,circle_data,mds_id,diverginColor, Set_clicked_circles) {\r\n  //console.log(circle_data,\"MDS_data\")\r\n  //---------------------------------------------------------------------------\r\n  // Create mds ends here\r\n  var margin = { item_top_margin: 15, right: 14, bottom: 0, left: 20, circ_radius: 5, item_left_margin: 25, item_right_margin: 3 }\r\n  var w = $(mds_id).width() - margin.item_left_margin\r\n  var h = $(mds_id).height() - margin.item_top_margin * 2\r\n  var r = 5;\r\n  var xScale = d3.scaleLinear().domain(d3.extent(circle_data.map(item => item['x']))).range([r * 2, w - r * 2])\r\n  var yScale = d3.scaleLinear().domain(d3.extent(circle_data.map(item => item['y']))).range([r * 2, h - r * 2])\r\n\r\n  var svg = d3.select(mds_ref.current).style(\"border\", \"1px solid #eaeaea\")\r\n\r\n  var circles = svg.selectAll(\"circle\")\r\n    .data(circle_data)\r\n    .join(\"circle\")\r\n    .attr(\"cx\", d => xScale(d['x']))\r\n    .attr(\"cy\", d => yScale(d['y']))\r\n    .attr(\"r\", r)\r\n    .attr(\"fill\", d => diverginColor(d[\"two_realRank\"]))\r\n    .attr('id', d => d['id'])\r\n    .attr('class', 'my_circles')\r\n  // Lasso functions\r\n  var lasso_start = function () {\r\n    lasso.items()\r\n      .attr(\"r\", 5) // reset size\r\n      .classed(\"not_possible\", true)\r\n      .classed(\"selected\", false);\r\n  };\r\n\r\n  var lasso_draw = function () {\r\n    // Style the possible dots\r\n    lasso.possibleItems()\r\n      .classed(\"not_possible\", false)\r\n      .classed(\"possible\", true);\r\n\r\n    // Style the not possible dot\r\n    lasso.notPossibleItems()\r\n      .classed(\"not_possible\", true)\r\n      .classed(\"possible\", false);\r\n  };\r\n\r\n  var lasso_end = function () {\r\n    var selected_ids = []\r\n    lasso.selectedItems().each(function () {\r\n      selected_ids.push(d3.select(this).attr(\"id\"))\r\n    })\r\n    Set_clicked_circles(selected_ids)\r\n    // Reset the color of all dots\r\n    lasso.items()\r\n      .classed(\"not_possible\", false)\r\n      .classed(\"possible\", false);\r\n\r\n    // Style the selected dots\r\n    lasso.selectedItems()\r\n      .classed(\"selected\", true)\r\n      .attr(\"r\", 6);\r\n\r\n    // Reset the style of the not selected dots\r\n    lasso.notSelectedItems()\r\n      .attr(\"r\", 5);\r\n\r\n  };\r\n  var lasso = d3lasso.lasso()\r\n    .closePathSelect(true)\r\n    .closePathDistance(100)\r\n    .items(circles)\r\n    .targetArea(svg)\r\n    .on(\"start\", lasso_start)\r\n    .on(\"draw\", lasso_draw)\r\n    .on(\"end\", lasso_end);\r\n  svg.call(lasso);\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\nimport * as algo1 from \"../../../Algorithms/algo1\";\r\nimport * as $ from 'jquery';\r\nimport CreatexpCircle from \"../ExpChart/Create_exp_circles\"\r\nimport getMdsData from \"../ExpChart/MDS\"\r\nimport { Create_MDS } from \"../ExpChart/MDS\"\r\nimport \"../ExpChart/MDS.css\"\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.line_color = null;\r\n    this.exp = React.createRef()\r\n    this.mds = React.createRef()\r\n    this.state = { mds_height: 110, mouseX: 0, mouseY: 0, excluded_features: [], sorted_features: null, circle_data: null, indexed_features: null, random: true }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ width: window.innerHeight })\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log($('.right_container').width(), 'right_container')\r\n    this.Createsvg(this.props.model_name, this.props.dragged_features, null)\r\n  }\r\n  Createsvg = (model_name, dragged_features, indexed_features) => {\r\n    var self = this\r\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\r\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\r\n    //-------------------- Threshold filter\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n    this.props.default_models.map(model_name => {\r\n      year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[model_name])\r\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n          under_threshold_instances.push(two_realRank)\r\n        }\r\n      })\r\n    })\r\n    selected_instances = selected_instances.filter(item => under_threshold_instances.includes(item))\r\n    //--------------------\r\n\r\n    //------------------------------\r\n    var number_of_charts = 8 + self.state.excluded_features.length\r\n    var features_with_score = algo1.features_with_score(this.props.dataset, [model_name], selected_instances, this.props.selected_year, number_of_charts, this.props.rank_data)\r\n    if (model_name in self.props.dragged_features) { features_with_score = self.props.dragged_features[model_name] }\r\n    var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\r\n    var temp_sorted_features = indexed_features.filter(item => !this.state.excluded_features.includes(item))// Exclude crossed features \r\n    var sorted_features = temp_sorted_features.slice(0, number_of_charts).map((item, index) => [item, index])\r\n    console.log(self.state.excluded_features.length, number_of_charts, sorted_features.length, \"feature_contrib_data_for_mds\")\r\n    var marginTop = 5;\r\n    var parent_height = parseInt($('.explanation_chart_parent').height()) - this.state.mds_height - parseInt($('.title_p').height())\r\n    var item_width = parseInt($(\"#\" + model_name).width())\r\n    var item_height = (parent_height - 10) / sorted_features.length - marginTop // 10 is the top margin\r\n    var feature_containers = d3.select('#' + model_name).attr('height', parent_height).selectAll(\".feature_items\").data(sorted_features, d => d[0])\r\n      .join(enter => enter.append(\"svg\").attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , update => update.transition().duration(2000).attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , exit => exit.remove()\r\n      )\r\n    feature_containers.attr(\"class\", d => \"feature_items \" + d[0]).attr(\"myindex\", (d, i) => i).attr('feature_name', d => d[0])\r\n    feature_containers.attr(\"add_title_text_and_rect_for_title_text\", function (d, index) {\r\n      d3.select(this).selectAll(\".title_rect\").data([0]).join('rect').attr(\"class\", \"title_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", 18).attr(\"fill\", \"#e2e2e2\").attr(\"y\", 0).attr(\"x\", 0)\r\n      d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr(\"class\", \"title_text\").attr(\"myindex\", index).attr('feature_name', d[0]).attr('x', item_width / 2).text(d[0]).attr(\"dominant-baseline\", \"hanging\")\r\n        .attr(\"y\", 2).attr('text-anchor', 'middle').attr('font-size', 12)\r\n    })\r\n    feature_containers.attr(\"add_cross_button\", function (d, index) {\r\n      d3.select(this).selectAll(\".cross_button\").data([0]).join(\"text\").attr('y', 7.3).attr('dominant-baseline', 'middle').attr(\"myindex\", index).attr('feature_name', d[0]).raise()\r\n        .attr('x', item_width - 15).style('cursor', 'pointer').attr('font-size', 12).attr('fill', 'black')\r\n        .text(\"\\uf410\").attr('class', \"cross_button fa make_cursor\").on('click', () => {\r\n          //alert(\"clicked!\")\r\n          d3.event.preventDefault()\r\n          self.setState({ excluded_features: [...self.state.excluded_features, d[0]] })\r\n        })\r\n    })\r\n    feature_containers.attr(\"add_rect_for_circle_background_and_handle_clicks\", function (d, index) {\r\n      d3.select(this).selectAll(\".circ_rect\").data([0]).join('rect').attr(\"class\", \"circ_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", item_height - 18).attr(\"fill\", \"#f2f2f2\").attr(\"y\", 18).attr(\"x\", 0)\r\n        .on('click', () => {\r\n          if (self.props.clicked_features.includes(d[0])) {\r\n            self.props.Set_clicked_features(self.props.clicked_features.filter(item => item != d[0]))\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").remove()\r\n          }\r\n          else {\r\n            self.props.Set_clicked_features([...self.props.clicked_features, d[0]])\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n          }\r\n        })\r\n        .on('dblclick', () => {\r\n          var feature = d[0]\r\n          var year = self.props.selected_year\r\n          d3.event.preventDefault()\r\n          var temp = [...self.props.dbclicked_features]\r\n          if (!temp.includes(feature)) {\r\n            temp.unshift(feature)\r\n            d3.selectAll(\".rect\").classed(\"exp_chart_clicked\", true)\r\n          }\r\n          self.props.set_dbclicked_features(temp)\r\n          //self.props.set_dbclicked_features([feature])\r\n          //----------------------------Data for popup chart\r\n          var popup_chart_data = {}\r\n          self.props.default_models.filter(item => item != \"ListNet\").map(model_name => {\r\n            var data = []\r\n            if (self.props.histogram_data.length > 0) {\r\n              data = self.props.lime_data[model_name].filter(element => { if ((parseInt(element['1-qid']) == parseInt(year)) && (self.props.histogram_data.includes(parseInt(element['two_realRank'])))) { return element } });\r\n            }\r\n            else {\r\n              data = self.props.lime_data[model_name].filter(element => parseInt(element['1-qid']) == parseInt(year) && selected_instances.includes(parseInt(element['two_realRank'])))\r\n            }\r\n            popup_chart_data[model_name] = data\r\n          })\r\n          self.props.Set_popup_chart_data([popup_chart_data, feature]) // This is to update the pop when the year or anything changes during the pop up is open\r\n          //self.props.Set_popup_chart_data([popup_chart_data, feature])\r\n          self.props.set_pop_over(true)\r\n        })\r\n\r\n    })\r\n    feature_containers.attr(\"CreatexpCircle\", function (d, index) {\r\n      CreatexpCircle(d, d3.select(this), selected_instances, self.props.lime_data, self.props.selected_year, [model_name], self.props.clicked_circles,\r\n        self.props.Set_clicked_circles, self.props.diverginColor, self.props.anim_config, item_width, item_height, self.props.deviation_array, index,self.props.threshold)\r\n    }).attr(\"height\", item_height).attr('width', item_width)\r\n    feature_containers.attr('check_clicked_features', d => {\r\n      if (self.props.clicked_features.includes(d[0])) {\r\n        d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n      }\r\n    })\r\n    feature_containers.attr('add_drag_drop', function (d, index) {\r\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", item_width - 18).attr(\"height\", 18).style(\"fill\", \"transparent\").style('cursor', 'move')\r\n        .call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended).container(this.parentNode.parentNode)) // Set the parent node based on which the distance will be calculated\r\n      var deltaY, is_dragging;\r\n      function dragstarted(event, d) {\r\n        //d3.select(this).attr(\"width\", '100%').attr(\"height\", '100%').style('fill','rgb(249, 195, 87,0.3)')\r\n        d3.select(this.parentNode).raise()\r\n        deltaY = d3.select(this.parentNode).attr(\"y\") - d3.event.y;\r\n      }\r\n      function dragged(event, d) {\r\n        is_dragging = true\r\n        d3.select(this.parentNode).raise()\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n      }\r\n      function dragended(event, d) {\r\n        var origin_index = parseInt(d3.select(this).attr(\"myindex\")); d3.select(this.parentNode).lower();\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n        var difference = parseInt(d3.select(document.elementFromPoint(d3.event.sourceEvent.clientX, d3.event.sourceEvent.clientY)).attr(\"myindex\")) - origin_index\r\n        //if (isNaN(dest_index)) { alert(\"Please drop properly!\"); dest_index = origin_index }\r\n        var origin_feature = d3.select(this).attr(\"feature_name\")\r\n\r\n        var temp1 = {}\r\n        var number_of_charts = 15 // change this number to have features when cross button clicked\r\n        self.props.default_models.map(model_name => {\r\n          var features_with_score = algo1.features_with_score(self.props.dataset, [model_name], selected_instances, self.props.selected_year, number_of_charts, self.props.rank_data)\r\n          if (model_name in self.props.dragged_features) {\r\n            features_with_score = self.props.dragged_features[model_name]\r\n          }\r\n          var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\r\n          var origin_index = indexed_features.indexOf(origin_feature)\r\n          var dest_index = origin_index + difference\r\n          if (dest_index < 0) { var dest_feature = indexed_features[0] }\r\n          else if (dest_index > number_of_charts - 1) { var dest_feature = indexed_features[number_of_charts - 1] }\r\n          else { var dest_feature = indexed_features[dest_index] }\r\n\r\n          features_with_score[origin_feature] = features_with_score[origin_feature] - difference\r\n          features_with_score[dest_feature] = features_with_score[dest_feature] + difference\r\n          temp1[model_name] = features_with_score\r\n        })\r\n        self.props.Set_dragged_features(temp1)\r\n        //-------------------------------------\r\n        d3.select(this).raise()\r\n      }\r\n    })\r\n    //--------------------------------------MDS Plot-------------------------------------//\r\n    var feature_contrib_data_for_mds = this.props.lime_data[model_name].filter(item => item['1-qid'] == this.props.selected_year && selected_instances.includes(item['two_realRank']))\r\n    getMdsData(this.props.url, { \"data\": feature_contrib_data_for_mds, \"weight\": features_with_score }).then(data => {\r\n      if (typeof data != 'undefined') {\r\n        var MDS_response = JSON.parse(data.response)\r\n        var circle_data = feature_contrib_data_for_mds.map((item, index) => {\r\n          item['x'] = MDS_response[index][0]\r\n          item['y'] = MDS_response[index][1]\r\n          item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + item[\"model\"].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n          return item\r\n        })\r\n        Create_MDS(this.mds, circle_data, \"#mds\" + model_name, self.props.diverginColor, this.props.Set_clicked_circles)\r\n      }\r\n    })\r\n  }\r\n  //------------------------------\r\n  render() {\r\n    return (\r\n      <div className={\"explanation_chart_parent exp\" + this.props.model_name} style={{ width: '100%', height: '100%', \"border\": this.props.mode == 'Model' ? \"2px solid #e2e2e2\" : 'none', padding: \"2px 5px\" }}>\r\n        <p className=\"title_p\" style={{ padding: 0, margin: 0 }}>{this.props.model_name}</p>\r\n        <svg ref={this.mds} id={\"mds\" + this.props.model_name} style={{ margin: 0, width: \"100%\", height: this.state.mds_height }}></svg>\r\n        <svg ref={this.exp} id={this.props.model_name} style={{ marginTop: 0, width: \"100%\" }}></svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    deviation_array: state.deviation_array,\r\n    original_data: state.original_data,\r\n    time_mode_model: state.time_mode_model,\r\n    chart_scale_type: state.chart_scale_type,\r\n    dataset: state.dataset,\r\n    histogram_data: state.histogram_data,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    show: state.show,\r\n    average_m: state.average_m,\r\n    average_y: state.average_y,\r\n    lime_data: state.lime_data,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    clicked_features: state.clicked_features,\r\n    threshold: state.threshold,\r\n    mode: state.mode,\r\n    dbclicked_features: state.dbclicked_features,\r\n    dragged_features: state.dragged_features,\r\n    url: state.url,\r\n    default_models: state.default_models,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_dragged_features: (val) => dispatch({ type: \"dragged_features\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\r\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\r\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\r\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\r\n    Set_popup_chart_data: (val) => dispatch({ type: \"popup_chart_data\", value: val }),\r\n    set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React from 'react';\r\nimport \"./YearModelSelection.scss\";\r\nimport { connect } from \"react-redux\";\r\nfunction YearModelSelection(props) {\r\n  var handle_year_click = (year) => {\r\n    props.Set_selected_year(year)\r\n  }\r\n  var handle_model_click=(model)=>{\r\n      if (props.default_models.includes(model)) {\r\n        props.Set_default_models(props.default_models.filter(item=>item!=model))\r\n      }\r\n      else {\r\n        props.Set_default_models([...props.default_models,model])\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"model_topbar\" style={{width:\"100%\",marginBottom:2,display:'flex',justifyContent: \"center\",margin:0}}>\r\n    <div ><h5 style={{ display: \"inline-block\", marginLeft: 0,marginRight:3,fontSize:16,fontWeight:600 }}>Years: </h5>{props.years_for_dropdown.map(item => <p className={props.selected_year==item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_year_click(item)}>{item}</p>)}</div>\r\n    <div style={{marginLeft:20}}><h5 style={{ display: \"inline-block\", marginLeft: 0,marginRight:3,fontSize:16,fontWeight:600}}>Models:</h5>{props.all_models.map(item => <p className={props.default_models.includes(item) ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</div>\r\n    </div>\r\n  );\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    all_models:state.all_models,\r\n    selected_year: state.selected_year,\r\n    years_for_dropdown: state.years_for_dropdown,\r\n    default_models: state.default_models,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\r\n\r\n//https://material-ui.com/api/slider/\r\n//https://material-ui.com/components/expansion-panels/\r\n//https://material-ui.com/api/checkbox/\r\n//https://material-ui.com/components/radio-buttons/","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\n//import {get_feature_voting} from \"../Algorithms/exp_algo\";\r\n\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \"a\": 10 }\r\n    this.myid=React.createRef()\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ a: 5 })\r\n  }\r\n  componentDidUpdate() {\r\n    var temp_dict = {}\r\n    this.props.default_models.filter(item => item != \"ListNet\").map(model => {\r\n      temp_dict[model] = this.props.popup_chart_data[0][model]\r\n    })\r\n    var merged_arr = [].concat.apply([], Object.values(temp_dict))\r\n    var scatterplot_data = Object.entries(this.props.popup_chart_data[0]).filter(item => this.props.pop_over_models.includes(item[0]))\r\n\r\n    //console.log(this.props.popup_chart_data[0],this.props.pop_over_models)\r\n    //----------------------------------------------------------------------------------------------------------Call createChart\r\n    if (merged_arr.length > 0) { // This is to avoid the error caused by the next line\r\n      if (isNaN(merged_arr[0][this.props.popup_chart_data[1]])) {\r\n        this.CreateChart_cat(merged_arr, this.props.popup_chart_data[1], scatterplot_data)\r\n      }\r\n      else {\r\n        //this.CreateChart_cat(merged_arr, this.props.popup_chart_data[1], scatterplot_data)\r\n        this.CreateChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data)\r\n      }\r\n    }\r\n    else {\r\n      this.CreateChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data) // calling the function to set the  graph empty when all models are unselected\r\n    }\r\n    //----------------------------------------------------------------------------------------------------------Set and unset Opacity\r\n    if (this.props.clicked_items_in_slopechart.length > 0) {\r\n      d3.selectAll('circle,.datapoint').attr('opacity', this.props.config.reduced_opacity)\r\n    }\r\n    this.props.clicked_items_in_slopechart.map(idName => d3.selectAll('#' + idName).attr('opacity', 1))\r\n    //----------------------------------------------------------------------------------------------------------\r\n  }\r\n  CreateChart = (data, feature, scatterplot_data) => {\r\n    var self = this,\r\n      feature_contribute = feature + \"_contribution\"\r\n    // set the dimensions and margins of the graph\r\n    var margin = { top: 0, right: 30, bottom: 45, left: 50, space_for_hist: 50 },\r\n      width = 520 - margin.left - margin.right,\r\n      height = 250 - margin.top - margin.bottom;\r\n    var temp_x = data.map(item => parseFloat(item[feature])),\r\n      temp_y = data.map(item => parseFloat(item[feature_contribute]))\r\n    var x = d3.scaleLinear().domain([d3.min(temp_x), d3.max(temp_x)]).range([0, width]).nice(),\r\n      y = d3.scaleLinear().domain([d3.min(temp_y), d3.max(temp_y)]).range([height, 0]).nice(); // circles will start from y position 10 and go upto height-10\r\n\r\n    //-------------------------------------------------------------All svgs\r\n    var parent_svg = d3.select(\"#\" + self.props.myid).attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom + margin.space_for_hist),\r\n      svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"y\", margin.space_for_hist).attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\",\r\n        \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n\r\n    //------------------------------------------------------------------------------------------------------ Create Histogram starts here\r\n    var hist_height = margin.space_for_hist,\r\n      histogram = d3.histogram()\r\n        .value(d => d)   // I need to give the vector of value\r\n        .domain(x.domain())  // then the domain of the graphic\r\n    //.thresholds(x.ticks(5)); // then the numbers of bins\r\n    var bins = histogram(temp_x),\r\n      y_hist = d3.scaleLinear()\r\n        .range([hist_height, 0]);\r\n\r\n    y_hist.domain([0, d3.max(bins, function (d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\r\n    var svg0 = parent_svg.selectAll('.svg0').data([0]).join('svg').attr(\"class\", \"svg0\").selectAll(\".myg0\").data([0]).join('g').attr(\"class\", \"myg0\").attr(\"transform\",\r\n      \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n    // Add line on the bottom of the histogram\r\n    svg0.selectAll(\".myline\").data([0]).join('line').attr(\"class\", \"myline\").attr(\"x1\", 0).attr(\"y1\", margin.space_for_hist).attr(\"x2\", width).attr(\"y2\", margin.space_for_hist).attr(\"stroke\", \"#EBEBEB\");\r\n    svg0.selectAll(\"rect\").data(bins).join('rect')\r\n      .attr(\"x\", 1)\r\n      .attr(\"fill\", \"#b7b7b7\")\r\n      .attr(\"transform\", function (d) {\r\n        if (d.x0 == d.x1) { return \"translate(\" + 0 + \",\" + y_hist(d.length) + \")\" }\r\n        return \"translate(\" + x(d.x0) + \",\" + y_hist(d.length) + \")\";\r\n      })\r\n      .attr(\"width\", function (d) {\r\n        if (d.x0 == d.x1) { return width }\r\n        return x(d.x1) - x(d.x0) - 0.2;\r\n      })\r\n      .attr(\"height\", function (d) { return hist_height - y_hist(d.length); });\r\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here\r\n\r\n    var svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\",\r\n      \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n    svg1.selectAll(\".myline2\").data([0]).join('line').attr(\"class\", \"myline2\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\r\n    //svg1.selectAll(\".myline3\").data([0]).join('line').attr(\"class\",\"myline3\").attr(\"x1\", 0).attr(\"y1\", height).attr(\"x2\", width).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\r\n\r\n    //------------- Add Y axis\r\n    var y2 = d3.scaleOrdinal().domain([\".\", \"0\", \"..\"]).range([height / 4, height / 2, (3 * height) / 4]); // circles will start from y position 10 and go upto height-10\r\n    svg1.selectAll(\".myYaxis\").data([0]).join('g').attr(\"class\", \"myYaxis\")\r\n      .call(d3.axisLeft(y2).tickSize(-width * 1.0).ticks(3).tickValues([\",\", \"0\", \"..\"]).tickFormat(d => d))\r\n      .select(\".domain\").remove()\r\n    svg1.selectAll(\".myYaxis\").selectAll('text').remove()\r\n\r\n    d3.selectAll('.svg11').selectAll('.myYtext').data([[\"++ ve\", height / 8], [\"+ ve\", (3 * height) / 8], [\"0\", height / 2], [\"- ve\", (5 * height) / 8], [\"-- ve\", (7 * height) / 8]]).join(\"text\").attr(\"class\", \"myYtext\")\r\n      .attr(\"x\", 45).attr(\"y\", (d, i) => d[1] + 4).text(d => d[0]).attr('font-size', 14).attr(\"text-anchor\", \"end\")\r\n    d3.selectAll('.svg11').attr('add_horizontal_lines', function () { //horizontal lines starts here\r\n      d3.select(this).selectAll(\".horiz_line\").data([3.85, 1.31]).join('line').attr('class', \"horiz_line\")\r\n        .attr(\"x1\", 11)\r\n        .attr(\"x2\", 50)\r\n        .attr(\"y1\", d => (height / d) - 2)\r\n        .attr(\"y2\", d => (height / d) - 2)\r\n        .style(\"stroke\", \"#EBEBEB\")\r\n    })\r\n\r\n    d3.selectAll('.svg11').selectAll(\".line0\").data([0]).join('line').attr('class', \"line0\")\r\n      .attr(\"x1\", 11)\r\n      .attr(\"x2\", 35)\r\n      .attr(\"y1\", d => (height / 2))\r\n      .attr(\"y2\", d => (height / 2))\r\n      .style(\"stroke\", \"#EBEBEB\")\r\n\r\n\r\n    //------------- Add X axis\r\n    if (d3.max(d3.max(bins)) > 1000) {\r\n      svg1.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(d3.axisBottom(x).tickSize(-height * 1.3).tickValues(bins.map(item => item['x1'])).tickFormat(d3.format(\".2s\")))\r\n        .select(\".domain\").remove()\r\n    }\r\n    else {\r\n      svg1.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\r\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n        .call(d3.axisBottom(x).tickSize(-height * 1.3).tickValues(bins.map(item => item['x1'])))\r\n        .select(\".domain\").remove()\r\n    }\r\n    svg1.selectAll(\".tick line\").attr(\"stroke\", \"#EBEBEB\")\r\n\r\n    //------------------------------------------------------------------------------------------------------ Scatterplot starts here\r\n    svg1.selectAll(\".scatterplot_g\").data(scatterplot_data).join('g').attr(\"id\", d => d[0] + \"scatterplot_g_id\").attr(\"class\", \"scatterplot_g\").attr(\"ax\", function (d) {\r\n      temp_x = d[1].map(item => parseFloat(item[feature]))\r\n      temp_y = d[1].map(item => parseFloat(item[feature_contribute]))\r\n\r\n      x = d3.scaleLinear().domain([d3.min(temp_x), d3.max(temp_x)]).range([0, width]).nice()\r\n      y = d3.scaleLinear().domain([d3.min(temp_y), d3.max(temp_y)]).range([height, 0]).nice();\r\n\r\n      d3.select(this).selectAll('circle').data(d[1])\r\n        .join(\"circle\")\r\n        .attr(\"cx\", (d, i) => {\r\n          if (x(parseFloat(d[feature])) < 10) {\r\n            return 10;\r\n          }\r\n          else if (x(parseFloat(d[feature])) > width - 10) {\r\n            return width - 10;\r\n          }\r\n          return x(d[feature]) + 2\r\n        })\r\n        .attr(\"cy\", (d, i) => {\r\n          if (y(parseFloat(d[feature_contribute])) < 10) {\r\n            return 10;\r\n          }\r\n          else if (y(parseFloat(d[feature_contribute])) > (height - 10)) {\r\n            return height - 10;\r\n          }\r\n          return y(parseFloat(d[feature_contribute])) - 0\r\n\r\n        })\r\n        .attr(\"actual_Y_valu\", d => d[feature_contribute])\r\n        .attr(\"r\", 4)\r\n        .attr(\"class\", \"random\")\r\n        .attr(\"fill\", (d) => self.props.diverginColor(d['two_realRank']))\r\n        .attr(\"id\", d => \"A\" + String(d['State']).replace(/ +/g, \"\"))\r\n        .attr(\"class\", function (d) {\r\n          return \"bar myid\" + String(d['two_realRank']) + \" exp_circles\"\r\n        })\r\n        .attr('dataset_name',d[0])\r\n        .on(\"click\", d => {\r\n          //self.props.textClickHandler_original(\"A\" + d[\"State\"])\r\n        })\r\n    })\r\n\r\n// Define the div for the tooltip\r\n    var div = d3.select(\"body\").append(\"div\")\r\n      .attr(\"class\", \"tooltip2\")\r\n      .style(\"opacity\", 0);\r\n    d3.selectAll('.exp_circles')\r\n      .on(\"mouseover\", function (d) {\r\n        div.transition()\r\n          .duration(200)\r\n          .style(\"opacity\", .9);\r\n        div.html(\"<p>\" + d['State'] + \"</p>\" + \"<p>\" + \"Model: \" + d3.select(this).attr('dataset_name') + \"</p>\")\r\n        //div.html(d['State'])\r\n          .style(\"left\", (d3.event.pageX) + \"px\")\r\n          .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n      })\r\n      .on(\"mouseout\", function (d) {\r\n        d3.selectAll('.tooltip2').transition()\r\n          .duration(500)\r\n          .style(\"opacity\", 0);\r\n      })\r\n\r\n    //------------------------------------------------------------------------------------------------------ Scatterplot ends here\r\n\r\n  }\r\n  CreateChart_cat = (data, feature, scatterplot_data) => {\r\n    var self = this,\r\n      feature_contribute = feature + \"_contribution\"\r\n    var margin = { top: 0, right: 30, bottom: 75, left: 50, space_for_hist: 50 }, width = 520 - margin.left - margin.right, height = 270 - margin.top - margin.bottom;\r\n    var barplot_data = {}\r\n    data.map(item => { if (barplot_data[item[feature]] > 0) { barplot_data[item[feature]] += 1 } else { barplot_data[item[feature]] = 1 } })\r\n\r\n    var temp_x = Object.keys(barplot_data),\r\n      temp_y = Object.values(barplot_data),\r\n      y = d3.scaleLinear().domain([d3.min(temp_y), d3.max(temp_y)]).range([height, 0]).nice(); // circles will start from y position 10 and go upto height-10\r\n\r\n    var x = d3.scaleBand().domain(temp_x).range([0, width]).padding(0.1);\r\n\r\n    // add the x Axis\r\n    //svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x));\r\n    //-------------------------------------------------------------All svgs\r\n    var parent_svg = d3.select(\"#\" + self.props.myid).attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom + margin.space_for_hist),\r\n      svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"y\", margin.space_for_hist).attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\",\r\n        \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n\r\n    //------------------------------------------------------------------------------------------------------ Create Histogram starts here\r\n    var hist_height = margin.space_for_hist\r\n    y = d3.scaleLinear().domain([0, d3.max(temp_y)]).range([hist_height, 0]).nice();\r\n    var svg0 = parent_svg.selectAll('.svg0').data([0]).join('svg').attr(\"class\", \"svg0\").selectAll(\".myg0\").data([0]).join('g').attr(\"class\", \"myg0\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n    // Add line on the bottom of the histogram\r\n    svg0.selectAll(\".myline\").data([0]).join('line').attr(\"class\", \"myline\").attr(\"x1\", 0).attr(\"y1\", margin.space_for_hist).attr(\"x2\", width).attr(\"y2\", margin.space_for_hist).attr(\"stroke\", \"#EBEBEB\");\r\n    svg0.selectAll(\"rect\").data(Object.entries(barplot_data)).join('rect')\r\n      .attr(\"x\", d => x(d[0]))\r\n      .attr(\"fill\", \"#b7b7b7\")\r\n      .attr(\"width\", x.bandwidth())\r\n      .attr(\"y\", d => y(d[1]))\r\n      .attr(\"height\", d => hist_height - y(d[1]));\r\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here\r\n\r\n    var svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\",\r\n      \"translate(\" + margin.left + \",\" + margin.top + \")\")\r\n    svg1.selectAll(\".myline2\").data([0]).join('line').attr(\"class\", \"myline2\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\r\n    svg1.selectAll(\".myline3\").data([0]).join('line').attr(\"class\", \"myline3\").attr(\"x1\", 0).attr(\"y1\", height).attr(\"x2\", width).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\r\n\r\n\r\n    //------------- Add Y axis\r\n    var y2 = d3.scaleOrdinal().domain([\".\", \"0\", \"..\"]).range([height / 4, height / 2, (3 * height) / 4]); // circles will start from y position 10 and go upto height-10\r\n    svg1.selectAll(\".myYaxis\").data([0]).join('g').attr(\"class\", \"myYaxis\")\r\n      .call(d3.axisLeft(y2).tickSize(-width * 1.0).ticks(3).tickValues([\",\", \"0\", \"..\"]).tickFormat(d => d))\r\n      .select(\".domain\").remove()\r\n    svg1.selectAll(\".myYaxis\").selectAll('text').remove()\r\n    d3.selectAll('.svg11').selectAll('.myYtext').data([[\"++ve\", height / 8], [\"+ve\", (3 * height) / 8], [\"0\", height / 2], [\"-ve\", (5 * height) / 8], [\"--ve\", (7 * height) / 8]]).join(\"text\").attr(\"class\", \"myYtext\")\r\n      .attr(\"x\", 45).attr(\"y\", (d, i) => d[1] + 4).text(d => d[0]).attr('font-size', 14).attr(\"text-anchor\", \"end\")\r\n    d3.selectAll('.svg11').attr('add_horizontal_lines', function () { //horizontal lines starts here\r\n      d3.select(this).selectAll(\".horiz_line\").data([3.85, 1.31]).join('line').attr('class', \"horiz_line\")\r\n        .attr(\"x1\", 11)\r\n        .attr(\"x2\", 50)\r\n        .attr(\"y1\", d => (height / d) - 2)\r\n        .attr(\"y2\", d => (height / d) - 2)\r\n        .style(\"stroke\", \"#EBEBEB\")\r\n    })\r\n\r\n    d3.selectAll('.svg11').selectAll(\".line0\").data([0]).join('line').attr('class', \"line0\")\r\n      .attr(\"x1\", 11)\r\n      .attr(\"x2\", 35)\r\n      .attr(\"y1\", d => (height / 2))\r\n      .attr(\"y2\", d => (height / 2))\r\n      .style(\"stroke\", \"#EBEBEB\")\r\n\r\n\r\n    //------------- Add X axis\r\n    svg1.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x).tickSize(-height * 1.3)).selectAll(\"text\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .attr(\"dx\", \"-.8em\")\r\n      .attr(\"dy\", \"0em\")\r\n      .attr(\"transform\", \"rotate(-90)\")\r\n      .selectAll(\".tick line\").remove()\r\n    svg1.selectAll(\".domain\").remove()\r\n    svg1.selectAll(\".tick line\").attr(\"stroke\", \"#EBEBEB\")\r\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here\r\n    //------------------------------------------------------------------------------------------------------ Scatterplot starts here\r\n    svg1.selectAll(\".scatterplot_g\").data(scatterplot_data).join('g').attr(\"id\", d => d[0] + \"scatterplot_g_id\").attr(\"class\", \"scatterplot_g\").attr(\"ax\", function (d) {\r\n      var temp_y = d[1].map(item => parseFloat(item[feature + \"_contribution\"])) // d[1] \r\n      y = d3.scaleLinear().domain([d3.min(temp_y), d3.max(temp_y)]).range([height, 0]).nice();\r\n\r\n      d3.select(this).selectAll('circle').data(d[1])\r\n        .join(\"circle\")\r\n        .attr(\"cx\", (d, i) => {\r\n          return x(d[feature]) + x.bandwidth() / 2\r\n        })\r\n        .attr(\"cy\", (d, i) => {\r\n          if (y(parseFloat(d[feature_contribute])) < 10) {\r\n            return 10;\r\n          }\r\n          else if (y(parseFloat(d[feature_contribute])) > (height - 10)) {\r\n            return height - 10;\r\n          }\r\n          return y(parseFloat(d[feature_contribute])) - 0\r\n\r\n        })\r\n        .attr(\"actual_Y_valu\", d => d[feature_contribute])\r\n        .attr(\"r\", 4)\r\n        .attr(\"class\", \"random\")\r\n        .attr(\"fill\", (d) => self.props.diverginColor(d['two_realRank']))\r\n        .attr(\"id\", d => \"A\" + String(d['State']).replace(/ +/g, \"\"))\r\n        .attr(\"class\", function (d) {\r\n          return \"bar myid\" + String(d['two_realRank']) + \" exp_circles\"\r\n        })\r\n        .attr('dataset_name',d[0])\r\n        .on(\"click\", d => {\r\n          //self.props.textClickHandler_original(\"A\" + d[\"State\"])\r\n        })\r\n    })\r\n\r\n// Define the div for the tooltip\r\nvar div = d3.select(\"body\").append(\"div\")\r\n.attr(\"class\", \"tooltip2\")\r\n.style(\"opacity\", 0);\r\nd3.selectAll('.exp_circles')\r\n.on(\"mouseover\", function (d) {\r\n  div.transition()\r\n    .duration(200)\r\n    .style(\"opacity\", .9);\r\n  div.html(\"<p>\" + d['State'] + \"</p>\" + \"<p>\" + \"Model: \" + d3.select(this).attr('dataset_name') + \"</p>\")\r\n  //div.html(d['State'])\r\n    .style(\"left\", (d3.event.pageX) + \"px\")\r\n    .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n})\r\n.on(\"mouseout\", function (d) {\r\n  d3.selectAll('.tooltip2').transition()\r\n    .duration(500)\r\n    .style(\"opacity\", 0);\r\n})\r\n\r\n    //------------------------------------------------------------------------------------------------------ Scatterplot ends here\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div key={this.props.popup_chart_data[1]} style={{ margin: 10, padding: 10, border: this.props.index == 0 ? \"3px solid #e5e5e5\" : \"white\" }}>\r\n        <svg ref={this.myid} id={this.props.myid}> </svg>\r\n        <p style={{ color: \"#4f4c4c\", marginLeft: \"42%\", marginTop: -25, marginBottom: 0 }}>{this.props.popup_chart_data[1]}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    //popup_chart_data: state.popup_chart_data,\r\n    pop_over_models: state.pop_over_models,\r\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\r\n    config: state.config,\r\n    mode: state.mode,\r\n    range_mode_model: state.range_mode_model,\r\n    time_mode_model: state.time_mode_model,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { connect } from \"react-redux\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nfunction FadeMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  //------------For list and chckbox\r\n  const [checked, setChecked] = React.useState([0]);\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n    setChecked(newChecked);\r\n  };\r\n  //----------------\r\n  const checkboxChanged = (event) => {\r\n    let temp_Models=[...props.pop_over_models].filter(item=>item!=\"ListNet\")\r\n    if (temp_Models.includes(event.target.value)) {\r\n      temp_Models = props.pop_over_models.filter(item => item != event.target.value)\r\n      props.Set_pop_over_models(temp_Models)\r\n    }\r\n    else {\r\n      temp_Models.push(event.target.value)\r\n      props.Set_pop_over_models(temp_Models)\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        Filter Models\r\n        <ArrowDropDownIcon></ArrowDropDownIcon>\r\n      </Button>\r\n      <Menu\r\n        id=\"fade-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n      >\r\n        <div className=\"CheckboxContainer\">\r\n          <List>\r\n            {props.default_models.map((value) => {\r\n              const labelId = `checkbox-list-label-${value}`;\r\n              return (\r\n                <ListItem key={value} role={undefined} onClick={handleToggle(value)}>\r\n                  <Checkbox\r\n                    checked={props.pop_over_models.includes(value)}\r\n                    edge=\"start\"\r\n                    tabIndex={-1}\r\n                    value={value}\r\n                    onChange={(event, value) => {\r\n                      checkboxChanged(event, value)\r\n                    }\r\n                    }\r\n                  />\r\n                  <p className=\"list_item_label\" id={labelId}>{value}</p>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    pop_over_models:state.pop_over_models\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\r\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);\r\n//https://material-ui.com/components/menus/\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from \"react-redux\";\r\nimport Chart_pop from './chart_pop'\r\nimport Draggable from 'react-draggable';\r\nimport * as d3 from 'd3';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport FilterModel from \"./FilterModel\"\r\nimport * as $ from 'jquery';\r\nexport function SimplePopover(props) {\r\n    console.log('dbclicked_features:',props.dbclicked_features,'popup_chart_data:',props.popup_chart_data,\"clicked_data\")\r\n    const handleClose = () =>{\r\n        props.set_pop_over(false)\r\n        props.set_dbclicked_features([])\r\n    };\r\n    return (\r\n        <div className=\"pop_over\" style={{ position: \"relative\" }}>\r\n            {props.pop_over == true ?\r\n                <div style={{ top: \"2%\", left: \"14%\", position: \"fixed\",pointerEvents:\"none\",backgroundColor:\"transparent\" }}>\r\n                    <Draggable>\r\n                        <Grid style={{ backgroundColor: \"#ffffff\", boxShadow: \"3px 2px 15px -7px #000000\",pointerEvents:\"auto\" }}>\r\n                            <Grid container style={{ borderBottom: \"1px solid #e2e2e2\", marginBottom: 20 }}\r\n                                direction=\"row\"\r\n                                justify=\"space-between\"\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <FilterModel default_models={props.default_models}></FilterModel>\r\n                                <Button color=\"secondary\" id=\"draggable-dialog-title\" onClick={handleClose}>close</Button>\r\n                            </Grid>\r\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{maxHeight:700,overflow:\"scroll\",maxWidth:1600}}>\r\n                                {\r\n                                props.dbclicked_features.length>0?props.dbclicked_features.map((item,index)=><Chart_pop index={index}\r\n                                popup_chart_data={[props.popup_chart_data[0],item]} default_models={props.default_models} \r\n                                myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')} diverginColor={props.diverginColor} \r\n                                textClickHandler_original={props.textClickHandler_original}></Chart_pop>):<Chart_pop popup_chart_data={props.popup_chart_data} \r\n                                default_models={props.default_models} myid=\"myid1\" \r\n                                diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Draggable>\r\n                </div> : null}\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        popup_chart_data: state.popup_chart_data,\r\n        pop_over: state.pop_over,\r\n        dbclicked_features:state.dbclicked_features,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\r\n        set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\r\n        set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SimplePopover);\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\r\nimport * as misc_algo from '../misc_algo'\r\nimport * as $ from 'jquery';\r\nimport ModelSlider from './ModelSlider';\r\nimport ExpChart from './ExpChartComponent';\r\nimport './ModelSlider.scss';\r\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Popover from '../Popover/Popover';\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.line_color = null;\r\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\r\n  }\r\n  componentDidMount() { this.setState({ width: window.innerHeight }) }\r\n  shouldComponentUpdate(prevProps, prevState) { return true; }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\r\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\r\n\r\n    //--------------------\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n\r\n    //-------------------- Threshold filter\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n    this.props.default_models.map(model_name => {\r\n      year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[model_name])\r\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n          under_threshold_instances.push(two_realRank)\r\n        }\r\n      })\r\n    })\r\n    selected_instances = selected_instances.filter(item => under_threshold_instances.includes(item))\r\n    deviation_chart.Create_deviation_chart('dev_plot_container_svg', 'exp', selected_instances, this.props.original_data, this.props.default_models, this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\r\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\r\n  }\r\n  render() {\r\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\r\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\r\n    //--------------------\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n    this.props.Set_selected_instances(selected_instances)\r\n    //--------------------\r\n    var deviation_array = []\r\n    this.props.default_models.map(model => {\r\n      this.props.lime_data[model].map(item => {\r\n        if (item['1-qid'] == this.props.selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\r\n          deviation_array.push(item['deviation'])\r\n        }\r\n      })\r\n    })\r\n    this.props.Set_deviation_array(deviation_array)\r\n    //console.log('deviation_array: ', d3.extent(deviation_array))\r\n    //--------------------\r\n    return (\r\n      <Grid className=\"ModelChartParent\" container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ height: '100%', width: '100%', backgroundColor: 'white', margin: 2, padding: 2, boxShadow: \"-2px 1px 4px -1px white\" }}> {/* This model chart's height and width is the parent*/}\r\n        <Grid item className=\"left_container\" style={{ width: 420, backgroundColor: \"#fcfcfc\" }}>\r\n          {/* The deviation plot container starts below */}\r\n          <div className=\"year_and_model_selector_and_slider_container\"> {/* This is used to calculate the deviation plot height */}\r\n            <YearModelSelection></YearModelSelection><ModelSlider></ModelSlider>\r\n          </div>\r\n          {/* The deviation plot container starts below */}\r\n          <div class=\"deviation_plot_container_div\" style={{ width: \"100%\", height: $('.ModelChartParent').height() - $('.year_and_model_selector_and_slider_container').height(), marginBottom: 0, overflow: 'scroll' }}>\r\n            <svg id=\"dev_plot_container_svg\" style={{ width: \"100%\", overflow: 'hidden' }}></svg>\r\n          </div>\r\n          {/* The deviation plot container ends here */}\r\n        </Grid>\r\n        {/* The explanation plot container starts below */}\r\n        {this.props.rank_data != null ?\r\n          <Grid item className=\"right_container\" style={{ height: '100%', width: $('.ModelChartParent').width() - $('.left_container').width() }}>\r\n            <Grid container spacing={1} direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ width: '100%', height: '100%' }}>\r\n              {\r\n                this.props.default_models.map((model_name, index) => {\r\n                  return <Grid item style={{ width: ($('.ModelChartParent').width() - $('.left_container').width()) / this.props.default_models.length, height: \"100%\", overflow: 'hidden' }}>\r\n                    <ExpChart diverginColor={diverginColor} exp_id={\"exp\" + index} default_models={this.props.default_models} state_range={this.props.state_range} selected_year={this.props.selected_year} model_name={model_name}></ExpChart>\r\n                  </Grid>\r\n                })\r\n              }\r\n            </Grid>\r\n          </Grid> : null}\r\n        {/* The explanation plot container ends here */}\r\n        <Popover diverginColor={diverginColor} default_models={this.props.default_models}></Popover>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    default_models: state.default_models,\r\n    histogram_data: state.histogram_data,\r\n    state_range: state.state_range,\r\n    selected_year: state.selected_year,\r\n    lime_data: state.lime_data,\r\n    default_models: state.default_models,\r\n    original_data: state.original_data,\r\n    dataset: state.dataset,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    average_m: state.average_m,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    threshold: state.threshold\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\r\n    Set_deviation_array: (val) => dispatch({ type: \"deviation_array\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './ModelSlider.scss';\r\nimport * as $ from 'jquery'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tRoot: {\r\n        marginBottom: 35,\r\n    },\r\n    rang_input: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\nfunction Modes(props) {\r\n    const classes = useStyles();\r\n    // states \r\n    const [sliderRange, set_sliderRange] = React.useState(props.range_mode_range1);\r\n    //-----------------------------------------------------------------\r\n    var temp_marks = [];\r\n    var step = (props.slider_max - 1) / (6 - 1);\r\n    for (var i = 0; i < 6; i++) {\r\n        temp_marks.push(1 + (step * i));\r\n    }\r\n    var marks = temp_marks.map(item => {\r\n        var myitem = parseInt(item)\r\n        return { value: myitem, label: myitem }\r\n    })\r\n    //console.log(props.marks)\r\n    //-----------------------------------------------------------------\r\n    return (\r\n        <div className=\"Modelslider\" \r\n        style={{height: 70, width: '100%',marginBottom:5,padding: 30, border: \"1px solid rgb(178, 178, 178,0.5)\"}}>\r\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([\"\", sliderRange[1]])\r\n                        } else {\r\n                            if (event.target.value > sliderRange[1]) {\r\n                                alert(\"Lower range can not be larger than the upper range\")\r\n                            }\r\n                            else {\r\n                                set_sliderRange([event.target.value, sliderRange[1]])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\r\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\r\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\r\n                />\r\n            </div>\r\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([sliderRange[0], \"\"])\r\n                        } else {\r\n                            if (parseInt(event.target.value) > props.slider_max) {\r\n                                alert(\"Upper range can not exceed maximum\")\r\n                                set_sliderRange([sliderRange[0], props.slider_max])\r\n                            }\r\n                            else {\r\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\r\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\r\n                    onClick={() => {\r\n                        props.Set_range_mode_range1(sliderRange)\r\n                    }}\r\n                >Update range</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        slider_max: state.slider_max,\r\n        range_mode_range1: state.range_mode_range1,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\r\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './ModelSlider.scss';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tRoot: {\r\n        marginBottom: 35,\r\n    },\r\n    rang_input: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\nfunction Modes(props) {\r\n    const classes = useStyles();\r\n    // states \r\n    const [sliderRange, set_sliderRange] = React.useState(props.range_mode_range2);\r\n    //-----------------------------------------------------------------\r\n    var temp_marks = [];\r\n    var step = (props.slider_max - 1) / (6 - 1);\r\n    for (var i = 0; i < 6; i++) {\r\n        temp_marks.push(1 + (step * i));\r\n    }\r\n    var marks = temp_marks.map(item => {\r\n        var myitem = parseInt(item)\r\n        return { value: myitem, label: myitem }\r\n    })\r\n    //console.log(props.marks)\r\n    //-----------------------------------------------------------------\r\n    return (\r\n        <div className=\"Modelslider\" style={{height: 70, width: \"100%\",marginBottom:5, paddingTop: 30,paddingLeft:15, border: \"1px solid rgb(178, 178, 178,0.5)\"}}>\r\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([\"\", sliderRange[1]])\r\n                        } else {\r\n                            if (event.target.value > sliderRange[1]) {\r\n                                alert(\"Lower range can not be larger than the upper range\")\r\n                            }\r\n                            else {\r\n                                set_sliderRange([event.target.value, sliderRange[1]])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\r\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\r\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\r\n                />\r\n            </div>\r\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([sliderRange[0], \"\"])\r\n                        } else {\r\n                            if (parseInt(event.target.value) > props.slider_max) {\r\n                                alert(\"Upper range can not exceed maximum\")\r\n                                set_sliderRange([sliderRange[0], props.slider_max])\r\n                            }\r\n                            else {\r\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\r\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\r\n                    onClick={() => {\r\n                        props.Set_range_mode_range2(sliderRange)\r\n                    }}\r\n                >Update range</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        slider_max: state.slider_max,\r\n        range_mode_range2: state.range_mode_range2,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\r\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\r\nimport \"./YearModelSelection.scss\";\r\nimport { connect } from \"react-redux\";\r\nfunction YearModelSelection(props) {\r\n  var handle_year_click = (year) => {\r\n    props.Set_selected_year(year)\r\n  }\r\n  var handle_model_click=(model)=>props.Set_range_mode_model(model)\r\n  return (\r\n    <div className=\"range_topbar\" style={{width:\"100%\",marginBottom:2,display:'flex',justifyContent: \"center\",margin:0}}>\r\n    <div ><h5 style={{ display: \"inline-block\", marginLeft: 0,marginRight:3,fontSize:16,fontWeight:600 }}>Years: </h5>{props.years_for_dropdown.map(item => <p className={props.selected_year==item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_year_click(item)}>{item}</p>)}</div>\r\n    <div style={{marginLeft:20}}><h5 style={{ display: \"inline-block\", marginLeft: 0,marginRight:3,fontSize:16,fontWeight:600}}>Models:</h5>{props.all_models.map(item => <p className={props.range_mode_model==item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</div>\r\n    </div>\r\n  );\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    all_models:state.all_models,\r\n    selected_year: state.selected_year,\r\n    years_for_dropdown: state.years_for_dropdown,\r\n    default_models: state.default_models,\r\n    range_mode_model:state.range_mode_model,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    Set_range_mode_model: (val) => dispatch({ type: \"range_mode_model\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\r\n\r\n//https://material-ui.com/api/slider/\r\n//https://material-ui.com/components/expansion-panels/\r\n//https://material-ui.com/api/checkbox/\r\n//https://material-ui.com/components/radio-buttons/","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\nimport * as algo1 from \"../../../Algorithms/algo1\";\r\nimport * as $ from 'jquery';\r\nimport CreatexpCircle from \"../ExpChart/Create_exp_circles\"\r\nimport getMdsData from \"../ExpChart/MDS\"\r\nimport { Create_MDS } from \"../ExpChart/MDS\"\r\nimport \"../ExpChart/MDS.css\"\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.line_color = null;\r\n    this.exp = React.createRef()\r\n    this.mds = React.createRef()\r\n    this.state = { mds_height: 110, mouseX: 0, mouseY: 0, excluded_features: [], sorted_features: null, circle_data: null, indexed_features: null, random: true }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ width: window.innerHeight })\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.Createsvg(this.props.model_name,this.props.exp_id,this.props.state_range)\r\n  }\r\n  Createsvg = (model_name,exp_id,state_range) => {\r\n    var self = this\r\n    var selected_instances = d3.range(state_range[0], state_range[1] + 1)\r\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\r\n    //-------------------- Threshold filter\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n    this.props.default_models.map(model_name => {\r\n      year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[model_name])\r\n        if (Math.abs(predicted_rank - two_realRank) > this.props.threshold) {\r\n          under_threshold_instances.push(two_realRank)\r\n        }\r\n      })\r\n    })\r\n    selected_instances = selected_instances.filter(item => !under_threshold_instances.includes(item))\r\n    //--------------------\r\n\r\n    //------------------------------\r\n    var number_of_charts = 8 + self.state.excluded_features.length\r\n    var features_with_score = algo1.features_with_score(this.props.dataset, [model_name], selected_instances, this.props.selected_year, number_of_charts, this.props.rank_data)\r\n    if(exp_id in self.props.dragged_features){features_with_score=self.props.dragged_features[exp_id]}\r\n    var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0]) \r\n    var temp_sorted_features = indexed_features.filter(item => !this.state.excluded_features.includes(item))// Exclude crossed features \r\n    var sorted_features = temp_sorted_features.slice(0, number_of_charts).map((item, index) => [item, index])\r\n    var marginTop = 5;\r\n    var parent_height = parseInt($('.explanation_chart_parent').height()) - this.state.mds_height - parseInt($('.title_p').height())\r\n    var item_width = parseInt($(\"#\" + this.props.exp_id).width())\r\n    var item_height = (parent_height - 10) / sorted_features.length - marginTop // 10 is the top margin\r\n    var feature_containers = d3.select('#' + this.props.exp_id).attr('height', parent_height).selectAll(\".feature_items\").data(sorted_features, d => d[0])\r\n      .join(enter => enter.append(\"svg\").attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , update => update.transition().duration(2000).attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , exit => exit.remove()\r\n      )\r\n    feature_containers.attr(\"class\", d => \"feature_items \" + d[0]).attr(\"myindex\", (d, i) => i).attr('feature_name', d => d[0])\r\n    feature_containers.attr(\"add_title_text_and_rect_for_title_text\", function (d, index) {\r\n      d3.select(this).selectAll(\".title_rect\").data([0]).join('rect').attr(\"class\", \"title_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", 18).attr(\"fill\", \"#e2e2e2\").attr(\"y\", 0).attr(\"x\", 0)\r\n      d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr(\"class\", \"title_text\").attr(\"myindex\", index).attr('feature_name', d[0]).attr('x', item_width / 2).text(d[0]).attr(\"dominant-baseline\", \"hanging\")\r\n        .attr(\"y\", 2).attr('text-anchor', 'middle').attr('font-size', 12)\r\n    })\r\n    feature_containers.attr(\"add_cross_button\", function (d, index) {\r\n      d3.select(this).selectAll(\".cross_button\").data([0]).join(\"text\").attr('y', 7.3).attr('dominant-baseline', 'middle').attr(\"myindex\", index).attr('feature_name', d[0]).raise()\r\n        .attr('x', item_width - 15).style('cursor', 'pointer').attr('font-size', 12).attr('fill', 'black')\r\n        .text(\"\\uf410\").attr('class', \"cross_button fa make_cursor\").on('click', () => {\r\n          //alert(\"clicked!\")\r\n          d3.event.preventDefault()\r\n          self.setState({ excluded_features: [...self.state.excluded_features, d[0]] })\r\n        })\r\n    })\r\n    feature_containers.attr(\"add_rect_for_circle_background_and_handle_clicks\", function (d, index) {\r\n      d3.select(this).selectAll(\".circ_rect\").data([0]).join('rect').attr(\"class\", \"circ_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", item_height - 18).attr(\"fill\", \"#f2f2f2\").attr(\"y\", 18).attr(\"x\", 0)\r\n        .on('click', () => {\r\n          if (self.props.clicked_features.includes(d[0])) {\r\n            self.props.Set_clicked_features(self.props.clicked_features.filter(item => item != d[0]))\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").remove()\r\n          }\r\n          else {\r\n            self.props.Set_clicked_features([...self.props.clicked_features, d[0]])\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n          }\r\n        })\r\n        .on('dblclick', () => {\r\n          var feature = d[0]\r\n          var year = self.props.selected_year\r\n          d3.event.preventDefault()\r\n          var temp = [...self.props.dbclicked_features]\r\n          if (!temp.includes(feature)) {\r\n            temp.unshift(feature)\r\n            d3.selectAll(\".rect\").classed(\"exp_chart_clicked\", true)\r\n          }\r\n          self.props.set_dbclicked_features(temp)\r\n          //self.props.set_dbclicked_features([feature])\r\n          //----------------------------Data for popup chart\r\n          var popup_chart_data = {}\r\n          self.props.default_models.filter(item => item != \"ListNet\").map(model_name => {\r\n            var data = []\r\n            if (self.props.histogram_data.length > 0) {\r\n              data = self.props.lime_data[model_name].filter(element => { if ((parseInt(element['1-qid']) == parseInt(year)) && (self.props.histogram_data.includes(parseInt(element['two_realRank'])))) { return element } });\r\n            }\r\n            else {\r\n              data = self.props.lime_data[model_name].filter(element => parseInt(element['1-qid']) == parseInt(year) && selected_instances.includes(parseInt(element['two_realRank'])))\r\n            }\r\n            popup_chart_data[model_name] = data\r\n          })\r\n          self.props.Set_popup_chart_data([popup_chart_data, feature]) // This is to update the pop when the year or anything changes during the pop up is open\r\n          //self.props.Set_popup_chart_data([popup_chart_data, feature])\r\n          self.props.set_pop_over(true)\r\n        })\r\n\r\n    })\r\n    feature_containers.attr(\"CreatexpCircle\", function (d, index) {\r\n      CreatexpCircle(d, d3.select(this), selected_instances, self.props.lime_data, self.props.selected_year, [model_name], self.props.clicked_circles,\r\n        self.props.Set_clicked_circles, self.props.diverginColor, self.props.anim_config, item_width, item_height, self.props.deviation_array, index,self.props.threshold)\r\n    }).attr(\"height\", item_height).attr('width', item_width)\r\n    feature_containers.attr('check_clicked_features', d => {\r\n      if (self.props.clicked_features.includes(d[0])) {\r\n        d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n      }\r\n    })\r\n    feature_containers.attr('add_drag_drop', function (d, index) {\r\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", item_width - 18).attr(\"height\", 18).style(\"fill\", \"transparent\").style('cursor', 'move')\r\n        .call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended).container(this.parentNode.parentNode)) // Set the parent node based on which the distance will be calculated\r\n      var deltaY, is_dragging;\r\n      function dragstarted(event, d) {\r\n        //d3.select(this).attr(\"width\", '100%').attr(\"height\", '100%').style('fill','rgb(249, 195, 87,0.3)')\r\n        d3.select(this.parentNode).raise()\r\n        deltaY = d3.select(this.parentNode).attr(\"y\") - d3.event.y;\r\n      }\r\n      function dragged(event, d) {\r\n        is_dragging = true\r\n        d3.select(this.parentNode).raise()\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n      }\r\n      function dragended(event, d) {\r\n        var origin_index = parseInt(d3.select(this).attr(\"myindex\")); d3.select(this.parentNode).lower();\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n        var difference = parseInt(d3.select(document.elementFromPoint(d3.event.sourceEvent.clientX, d3.event.sourceEvent.clientY)).attr(\"myindex\"))-origin_index\r\n        //if (isNaN(dest_index)) { alert(\"Please drop properly!\"); dest_index = origin_index }\r\n        var origin_feature = d3.select(this).attr(\"feature_name\")\r\n        \r\n        var temp1={}\r\n        self.props.exp_data.map((exp_data,index) => { // exp_data={[[\"r1exp\",this.props.range_mode_range1],[\"r2exp\",this.props.range_mode_range2]]}\r\n          var selected_instances = d3.range(exp_data[1][0], exp_data[1][1] + 1)\r\n          if (self.props.histogram_data.length > 0) { selected_instances = self.props.histogram_data }\r\n          var number_of_charts = 15 // change this number to get features when crossed\r\n          var features_with_score = algo1.features_with_score(self.props.dataset, [model_name], selected_instances, self.props.selected_year,\r\n            number_of_charts, self.props.rank_data)\r\n          if(exp_data[0] in self.props.dragged_features){\r\n            features_with_score=self.props.dragged_features[exp_data[0]]\r\n          }\r\n          var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\r\n          var origin_index=indexed_features.indexOf(origin_feature)\r\n          var dest_index=origin_index+difference\r\n          if(dest_index<0){var dest_feature=indexed_features[0]}\r\n          else if(dest_index>number_of_charts-1){var dest_feature=indexed_features[number_of_charts-1]}\r\n          else{var dest_feature=indexed_features[dest_index]}\r\n\r\n          console.log(origin_feature,dest_feature,indexed_features,dest_index,exp_data[1][0],'test')\r\n\r\n          features_with_score[origin_feature]=features_with_score[origin_feature]-difference\r\n          features_with_score[dest_feature]=features_with_score[dest_feature]+difference\r\n          temp1[exp_data[0]]=features_with_score\r\n        })\r\n        console.log(temp1,'temp1')\r\n        self.props.Set_dragged_features(temp1)\r\n        //-------------------------------------\r\n        d3.select(this).raise()\r\n      }\r\n    })\r\n    //--------------------------------------MDS Plot-------------------------------------//\r\n    var feature_contrib_data_for_mds = this.props.lime_data[model_name].filter(item => item['1-qid'] == this.props.selected_year && selected_instances.includes(item['two_realRank']))\r\n    getMdsData(this.props.url, { \"data\": feature_contrib_data_for_mds, \"weight\": features_with_score }).then(data => {\r\n      if (typeof data != 'undefined') {\r\n        var MDS_response = JSON.parse(data.response)\r\n        var circle_data = feature_contrib_data_for_mds.map((item, index) => {\r\n          item['x'] = MDS_response[index][0]\r\n          item['y'] = MDS_response[index][1]\r\n          item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + item[\"model\"].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n          return item\r\n        })\r\n        Create_MDS(this.mds, circle_data, \"#mds\" + this.props.exp_id, self.props.diverginColor, this.props.Set_clicked_circles)\r\n      }\r\n    })\r\n  }\r\n  //------------------------------\r\n  render() {\r\n    return (\r\n      <div className={\"explanation_chart_parent exp\" + this.props.model_name} style={{ width: '100%', height: '100%', \"border\": this.props.mode == 'Model' ? \"2px solid #e2e2e2\" : 'none', padding: \"2px 5px\" }}>\r\n        <p className=\"title_p\" style={{ padding: 0, margin: 0 }}>{this.props.model_name}</p>\r\n        <svg ref={this.mds} id={\"mds\" + this.props.exp_id} style={{ margin: 0, width: \"100%\", height: this.state.mds_height }}></svg>\r\n        <svg id={this.props.exp_id} style={{ marginTop: 0, width: \"100%\" }}></svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    deviation_array: state.deviation_array,\r\n    original_data: state.original_data,\r\n    time_mode_model: state.time_mode_model,\r\n    chart_scale_type: state.chart_scale_type,\r\n    dataset: state.dataset,\r\n    histogram_data: state.histogram_data,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    show: state.show,\r\n    average_m: state.average_m,\r\n    average_y: state.average_y,\r\n    lime_data: state.lime_data,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    clicked_features: state.clicked_features,\r\n    threshold: state.threshold,\r\n    mode: state.mode,\r\n    dbclicked_features: state.dbclicked_features,\r\n    dragged_features: state.dragged_features,\r\n    url: state.url,\r\n    default_models: state.default_models,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_dragged_features: (val) => dispatch({ type: \"dragged_features\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\r\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\r\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\r\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\r\n    Set_popup_chart_data: (val) => dispatch({ type: \"popup_chart_data\", value: val }),\r\n    set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\r\nimport * as misc_algo from '../misc_algo'\r\nimport * as $ from 'jquery';\r\nimport SliderGroup1 from './SliderGroup1';\r\nimport SliderGroup2 from './SliderGroup2';\r\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\r\nimport ExpChart from './ExpChartComponent';\r\nimport Popover from '../Popover/Popover';\r\n\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.line_color = null;\r\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ width: window.innerHeight })\r\n  }\r\n  shouldComponentUpdate(prevProps, prevState) {\r\n    return true;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //------------------------------\r\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1)\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n    //------------------------------\r\n    var selected_instances1 = d3.range(this.props.range_mode_range1[0], this.props.range_mode_range1[1] + 1)\r\n    //-------------------- Threshold filter\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n  \r\n      year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[this.props.range_mode_model])\r\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n          under_threshold_instances.push(two_realRank)\r\n        }\r\n      })\r\n    \r\n    selected_instances1 = selected_instances1.filter(item => under_threshold_instances.includes(item))\r\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\r\n    //------------------------------\r\n    var selected_instances2 = d3.range(this.props.range_mode_range2[0], this.props.range_mode_range2[1] + 1)\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n    year_data.map(item => {\r\n      var two_realRank = parseInt(item['two_realRank'])\r\n      var predicted_rank = parseInt(item[this.props.range_mode_model])\r\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n        under_threshold_instances.push(two_realRank)\r\n      }\r\n    })\r\n    selected_instances2 = selected_instances2.filter(item => under_threshold_instances.includes(item))\r\n\r\n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\r\n    //------------------------------\r\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\r\n\r\n  }\r\n  render() {\r\n    //------------------------------\r\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1)\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n    this.props.Set_selected_instances(selected_instances)\r\n    //--------------------\r\n    var deviation_array = []\r\n\r\n    this.props.lime_data[this.props.range_mode_model].map(item => {\r\n      if (item['1-qid'] == this.props.selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\r\n        deviation_array.push(item['deviation'])\r\n      }\r\n    })\r\n    this.props.Set_deviation_array(deviation_array)\r\n    //console.log('deviation_array: ', d3.extent(deviation_array))\r\n    //--------------------\r\n    return (\r\n      <Grid key={this.props.mode} className=\"RangeChartParent\" container direction=\"row\" justifyContent=\"space-between\"\r\n        className=\"slope_chart_exp\" style={{ width: \"100%\", height: '100%', backgroundColor: 'white', padding: \"0px 0px\", overflow: 'hidden' }}>\r\n        <div className=\"year_and_model_selector_and_slider_container\" style={{ width: \"100%\" }}> {/* This is used to calculate the deviation plot height */}\r\n          <YearModelSelection></YearModelSelection>\r\n        </div>\r\n        {/* Group 1 */}\r\n        <Grid className=\"Group1_container\" style={{ height: \"100%\", width: \"49.4%\", paddingRight: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\" justifyContent=\"space-between\">\r\n          <p className=\"title_p1\" style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 1</p>\r\n          <Grid className=\"slidergroup1\" item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><SliderGroup1></SliderGroup1></Grid>\r\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\r\n              <svg id=\"r1d\" style={{ width: \"100%\", padding: 5 }}></svg>\r\n            </Grid>\r\n            {\r\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\r\n                <ExpChart diverginColor={diverginColor} exp_data={[[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]]} exp_id=\"r1exp\" state_range={this.props.range_mode_range1} selected_year={this.props.selected_year} model_name={this.props.range_mode_model}></ExpChart>\r\n              </Grid> : null\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n        {/* Group 2 */}\r\n        <Grid className=\"Group2_container\" style={{ height: \"100%\", width: \"49.4%\", marginLeft: '0.5%', paddingRight: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\" justifyContent=\"space-between\">\r\n          <p className=\"title_p2\" style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 2</p>\r\n          <Grid className=\"slidergroup2\" item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><SliderGroup2></SliderGroup2></Grid>\r\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group2_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\r\n              <svg id=\"r2d\" style={{ width: \"100%\", padding: 5 }}></svg>\r\n            </Grid>\r\n            {\r\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\r\n                <ExpChart diverginColor={diverginColor} exp_data={[[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]]} exp_id=\"r2exp\" state_range={this.props.range_mode_range2} selected_year={this.props.selected_year} model_name={this.props.range_mode_model}></ExpChart>\r\n              </Grid> : null\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n        <Popover diverginColor={diverginColor} default_models={[this.props.range_mode_model]}></Popover>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    mode: state.mode,\r\n    range_mode_range1: state.range_mode_range1,\r\n    range_mode_range2: state.range_mode_range2,\r\n    range_mode_model: state.range_mode_model,\r\n    lime_data: state.lime_data,\r\n    selected_year: state.selected_year,\r\n    default_models: state.default_models,\r\n    original_data: state.original_data,\r\n    dataset: state.dataset,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    average_m: state.average_m,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    threshold: state.threshold,\r\n    histogram_data: state.histogram_data,\r\n\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\r\n    Set_deviation_array: (val) => dispatch({ type: \"deviation_array\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// Create a theme instance.\r\nconst outerTheme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#0069d9\"\r\n    },\r\n    secondary: {\r\n      main: \"#0069d9\"\r\n    }\r\n  }\r\n})\r\n\r\n\r\n\r\nexport var year1_drop_down = createMuiTheme({\r\n  overrides: { // This is the place we override classes applied to a component\r\n    MuiAutocomplete:{\r\n        root:{\r\n            \r\n        }\r\n    },\r\n    MuiFilledInput: { // This is the name of the component\r\n      root: { // This is the class we want to edit\r\n        backgroundColor: \"none\",\r\n        \r\n      }\r\n    },\r\n    MuiInputLabel: {\r\n      root: {\r\n\r\n      }\r\n    },\r\n    MuiTextField: {\r\n      root: {}\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: \"none\",\r\n        padding: \"15px\"\r\n      },\r\n      fullWidth: {\r\n        maxWidth: \"100%\"\r\n      }\r\n    },\r\n    MuiFilledInput:{\r\n      root:{\r\n        padding:0,\r\n        backgroundColor:\"yellow\"\r\n      }\r\n    },\r\n    MuiAutocomplete:{\r\n      Root:{\r\n        padding:0\r\n      }\r\n    }\r\n\r\n  },\r\n  props: { // This is the place where we define props\r\n    MuiButton: {\r\n      disableRipple: true,\r\n      variant: \"contained\",\r\n      color: \"primary\"\r\n    },\r\n    MuiCheckbox: {\r\n      disableRipple: true\r\n    },\r\n    MuiTextField: {\r\n      variant: \"filled\",\r\n      InputLabelProps: {\r\n        shrink: true\r\n      }\r\n    },\r\n    MuiPaper: {\r\n      elevation: 12\r\n    },\r\n    MuiCard: {\r\n      elevation: 2\r\n    },\r\n  }\r\n});\r\n\r\nexport default outerTheme\r\n\r\n\r\n\r\n\r\n/*\r\nconst theme = createMuiTheme({\r\n  overrides: {\r\n    MuiOutlinedInput: {\r\n      root: {\r\n        \"& $notchedOutline\": {\r\n          borderColor: \"green\"\r\n        },\r\n        \"&:hover $notchedOutline\": {\r\n          borderColor: \"red\"\r\n        },\r\n        \"&$focused $notchedOutline\": {\r\n          borderColor: \"purple\"\r\n        },\r\n        \"&&& $input\": {\r\n          padding: \"1px\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n*/","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from \"react-redux\";\r\nimport * as themes from '../../themes'\r\nfunction FadeMenu(props) {\r\n    return (\r\n            <div className=\"year_drop_down_container1\">\r\n                <p style={{ margin: 0, marginTop: 3, fontSize: 16, fontWeight: 600 }}>Year 1 :</p>\r\n                <Autocomplete style={{ width: 100 }} disableClearable\r\n                    defaultValue={props.time_mode_year1.toString()}\r\n                    id=\"debug\"\r\n                    debug\r\n                    options={props.years_for_dropdown.map((option) => option)}\r\n                    renderInput={(params) => (\r\n                        <TextField {...params} margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\r\n                    )}\r\n                    onChange={(event, value) => {\r\n                        props.Set_time_mode_year1(value)\r\n                    }}\r\n                />\r\n            </div>\r\n        \r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        time_mode_year1: state.time_mode_year1,\r\n        years_for_dropdown: state.years_for_dropdown,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from \"react-redux\";\r\nfunction FadeMenu(props) {\r\n    return (\r\n        <div className=\"year_drop_down_container1\">\r\n            <p style={{margin:0,marginTop:3,fontSize:16,fontWeight:600}}>Year 2 :</p>\r\n            <Autocomplete style={{width:100}} disableClearable\r\n                defaultValue={props.time_mode_year2.toString()}\r\n                id=\"debug\"\r\n                debug\r\n                options={props.years_for_dropdown.map((option) => option)}\r\n                renderInput={(params) => (\r\n                    <TextField {...params} margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\r\n                )}\r\n                onChange={(event, value) => {\r\n                    props.Set_time_mode_year2(value)\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        time_mode_year2: state.time_mode_year2,\r\n        years_for_dropdown: state.years_for_dropdown,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);","import React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport './Slider.scss';\r\nimport * as $ from 'jquery'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tRoot: {\r\n        marginBottom: 35,\r\n    },\r\n    rang_input: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\nfunction Modes(props) {\r\n    const classes = useStyles();\r\n    // states \r\n    const [sliderRange, set_sliderRange] = React.useState(props.time_mode_range);\r\n    //-----------------------------------------------------------------\r\n    var temp_marks = [];\r\n    var step = (props.slider_max - 1) / (6 - 1);\r\n    for (var i = 0; i < 6; i++) {\r\n        temp_marks.push(1 + (step * i));\r\n    }\r\n    var marks = temp_marks.map(item => {\r\n        var myitem = parseInt(item)\r\n        return { value: myitem, label: myitem }\r\n    })\r\n    //console.log(props.marks)\r\n    //-----------------------------------------------------------------\r\n    return (\r\n        <div className=\"YearSlider\" \r\n        style={{height: 70, width:'100%',padding: 30}}>\r\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([\"\", sliderRange[1]])\r\n                        } else {\r\n                            if (event.target.value > sliderRange[1]) {\r\n                                alert(\"Lower range can not be larger than the upper range\")\r\n                            }\r\n                            else {\r\n                                set_sliderRange([event.target.value, sliderRange[1]])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\r\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\r\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\r\n                />\r\n            </div>\r\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\r\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\r\n                    onChange={event => {\r\n                        if (isNaN(parseInt(event.target.value))) {\r\n                            set_sliderRange([sliderRange[0], \"\"])\r\n                        } else {\r\n                            if (parseInt(event.target.value) > props.slider_max) {\r\n                                alert(\"Upper range can not exceed maximum\")\r\n                                set_sliderRange([sliderRange[0], props.slider_max])\r\n                            }\r\n                            else {\r\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"button\" item style={{ marginTop: -10 }}>\r\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30,fontWeight:600,fontSize:18 }}\r\n                    onClick={() => {\r\n                        props.Set_time_mode_range(sliderRange)\r\n                    }}\r\n                >Update range</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        slider_max: state.slider_max,\r\n        time_mode_range: state.time_mode_range,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\r\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\r\nimport \"./YearModelSelection.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport Slider from './Slider'\r\nimport Grid from '@material-ui/core/Grid'\r\nfunction YearModelSelection(props) {\r\n  var handle_year_click = (year) => {\r\n    props.Set_selected_year(year)\r\n  }\r\n  var handle_model_click = (model) => props.Set_time_mode_model(model)\r\n  return (\r\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" style={{width:'100%',height:76,padding:3}}>\r\n      <Grid item xs={4} style={{marginTop:5, marginLeft: 5,verticalAlign:'baseline' }}><h5 style={{ display: \"inline-block\", marginRight: 5,marginTop:-4, fontSize: 20,fontWeight:600 }}>Models:</h5>{props.all_models.map(item => <p className={props.time_mode_model == item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</Grid>\r\n      <Grid item xs={6} style={{marginLeft:15,overflow:'scroll'}}><Slider></Slider></Grid>\r\n    </Grid>\r\n  );\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    all_models: state.all_models,\r\n    selected_year: state.selected_year,\r\n    years_for_dropdown: state.years_for_dropdown,\r\n    default_models: state.default_models,\r\n    time_mode_model: state.time_mode_model,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    Set_time_mode_model: (val) => dispatch({ type: \"time_mode_model\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\r\n\r\n//https://material-ui.com/api/slider/\r\n//https://material-ui.com/components/expansion-panels/\r\n//https://material-ui.com/api/checkbox/\r\n//https://material-ui.com/components/radio-buttons/","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\nimport * as algo1 from \"../../../Algorithms/algo1\";\r\nimport * as $ from 'jquery';\r\nimport CreatexpCircle from \"../ExpChart/Create_exp_circles\"\r\nimport getMdsData from \"../ExpChart/MDS\"\r\nimport { Create_MDS } from \"../ExpChart/MDS\"\r\nimport \"../ExpChart/MDS.css\"\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mds = React.createRef()\r\n    this.state = { mds_height: 110, mouseX: 0, mouseY: 0, excluded_features: [], sorted_features: null, circle_data: null, indexed_features: null, random: true }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ width: window.innerHeight })\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.Createsvg(this.props.model_name,this.props.exp_id,this.props.state_range,this.props.selected_year)\r\n  }\r\n  Createsvg = (model_name,exp_id,state_range,selected_year) => {\r\n    var self = this\r\n    var selected_instances = d3.range(state_range[0], state_range[1] + 1)\r\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\r\n    //-------------------- Threshold filter\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\r\n    this.props.default_models.map(model_name => {\r\n      year_data.map(item => {\r\n        var two_realRank = parseInt(item['two_realRank'])\r\n        var predicted_rank = parseInt(item[model_name])\r\n        if (Math.abs(predicted_rank - two_realRank) > this.props.threshold) {\r\n          under_threshold_instances.push(two_realRank)\r\n        }\r\n      })\r\n    })\r\n    selected_instances = selected_instances.filter(item => !under_threshold_instances.includes(item))\r\n    //--------------------\r\n\r\n    //------------------------------\r\n    var number_of_charts = 8 + self.state.excluded_features.length\r\n    var features_with_score = algo1.features_with_score(this.props.dataset, [model_name], selected_instances, selected_year, number_of_charts, this.props.rank_data)\r\n    if(exp_id in self.props.dragged_features){features_with_score=self.props.dragged_features[exp_id]}\r\n    var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0]) \r\n    var temp_sorted_features = indexed_features.filter(item => !this.state.excluded_features.includes(item))// Exclude crossed features \r\n    var sorted_features = temp_sorted_features.slice(0, number_of_charts).map((item, index) => [item, index])\r\n    var marginTop = 5;\r\n    var parent_height = parseInt($('.explanation_chart_parent').height()) - this.state.mds_height - parseInt($('.title_p').height())\r\n    var item_width = parseInt($(\"#\" + this.props.exp_id).width())\r\n    var item_height = (parent_height - 10) / sorted_features.length - marginTop // 10 is the top margin\r\n    var feature_containers = d3.select('#' + this.props.exp_id).attr('height', parent_height).selectAll(\".feature_items\").data(sorted_features, d => d[0])\r\n      .join(enter => enter.append(\"svg\").attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , update => update.transition().duration(2000).attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\r\n        , exit => exit.remove()\r\n      )\r\n    feature_containers.attr(\"class\", d => \"feature_items \" + d[0]).attr(\"myindex\", (d, i) => i).attr('feature_name', d => d[0])\r\n    feature_containers.attr(\"add_title_text_and_rect_for_title_text\", function (d, index) {\r\n      d3.select(this).selectAll(\".title_rect\").data([0]).join('rect').attr(\"class\", \"title_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", 18).attr(\"fill\", \"#e2e2e2\").attr(\"y\", 0).attr(\"x\", 0)\r\n      d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr(\"class\", \"title_text\").attr(\"myindex\", index).attr('feature_name', d[0]).attr('x', item_width / 2).text(d[0]).attr(\"dominant-baseline\", \"hanging\")\r\n        .attr(\"y\", 2).attr('text-anchor', 'middle').attr('font-size', 12)\r\n    })\r\n    feature_containers.attr(\"add_cross_button\", function (d, index) {\r\n      d3.select(this).selectAll(\".cross_button\").data([0]).join(\"text\").attr('y', 7.3).attr('dominant-baseline', 'middle').attr(\"myindex\", index).attr('feature_name', d[0]).raise()\r\n        .attr('x', item_width - 15).style('cursor', 'pointer').attr('font-size', 12).attr('fill', 'black')\r\n        .text(\"\\uf410\").attr('class', \"cross_button fa make_cursor\").on('click', () => {\r\n          //alert(\"clicked!\")\r\n          d3.event.preventDefault()\r\n          self.setState({ excluded_features: [...self.state.excluded_features, d[0]] })\r\n        })\r\n    })\r\n    feature_containers.attr(\"add_rect_for_circle_background_and_handle_clicks\", function (d, index) {\r\n      d3.select(this).selectAll(\".circ_rect\").data([0]).join('rect').attr(\"class\", \"circ_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", item_height - 18).attr(\"fill\", \"#f2f2f2\").attr(\"y\", 18).attr(\"x\", 0)\r\n        .on('click', () => {\r\n          if (self.props.clicked_features.includes(d[0])) {\r\n            self.props.Set_clicked_features(self.props.clicked_features.filter(item => item != d[0]))\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").remove()\r\n          }\r\n          else {\r\n            self.props.Set_clicked_features([...self.props.clicked_features, d[0]])\r\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n          }\r\n        })\r\n        .on('dblclick', () => {\r\n          var feature = d[0]\r\n          var year = selected_year\r\n          d3.event.preventDefault()\r\n          var temp = [...self.props.dbclicked_features]\r\n          if (!temp.includes(feature)) {\r\n            temp.unshift(feature)\r\n            d3.selectAll(\".rect\").classed(\"exp_chart_clicked\", true)\r\n          }\r\n          self.props.set_dbclicked_features(temp)\r\n          //self.props.set_dbclicked_features([feature])\r\n          //----------------------------Data for popup chart\r\n          var popup_chart_data = {}\r\n          self.props.default_models.filter(item => item != \"ListNet\").map(model_name => {\r\n            var data = []\r\n            if (self.props.histogram_data.length > 0) {\r\n              data = self.props.lime_data[model_name].filter(element => { if ((parseInt(element['1-qid']) == parseInt(year)) && (self.props.histogram_data.includes(parseInt(element['two_realRank'])))) { return element } });\r\n            }\r\n            else {\r\n              data = self.props.lime_data[model_name].filter(element => parseInt(element['1-qid']) == parseInt(year) && selected_instances.includes(parseInt(element['two_realRank'])))\r\n            }\r\n            popup_chart_data[model_name] = data\r\n          })\r\n          self.props.Set_popup_chart_data([popup_chart_data, feature]) // This is to update the pop when the year or anything changes during the pop up is open\r\n          //self.props.Set_popup_chart_data([popup_chart_data, feature])\r\n          self.props.set_pop_over(true)\r\n        })\r\n\r\n    })\r\n    feature_containers.attr(\"CreatexpCircle\", function (d, index) {\r\n      CreatexpCircle(d, d3.select(this), selected_instances, self.props.lime_data, selected_year, [model_name], self.props.clicked_circles,\r\n        self.props.Set_clicked_circles, self.props.diverginColor, self.props.anim_config, item_width, item_height, self.props.deviation_array, index,self.props.threshold)\r\n    }).attr(\"height\", item_height).attr('width', item_width)\r\n    feature_containers.attr('check_clicked_features', d => {\r\n      if (self.props.clicked_features.includes(d[0])) {\r\n        d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\r\n      }\r\n    })\r\n    feature_containers.attr('add_drag_drop', function (d, index) {\r\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", item_width - 18).attr(\"height\", 18).style(\"fill\", \"transparent\").style('cursor', 'move')\r\n        .call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended).container(this.parentNode.parentNode)) // Set the parent node based on which the distance will be calculated\r\n      var deltaY, is_dragging;\r\n      function dragstarted(event, d) {\r\n        d3.select(this.parentNode).raise()\r\n        deltaY = d3.select(this.parentNode).attr(\"y\") - d3.event.y;\r\n      }\r\n      function dragged(event, d) {\r\n        is_dragging = true\r\n        d3.select(this.parentNode).raise()\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n      }\r\n      function dragended(event, d) {\r\n        var origin_index = parseInt(d3.select(this).attr(\"myindex\")); d3.select(this.parentNode).lower();\r\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\r\n        var difference = parseInt(d3.select(document.elementFromPoint(d3.event.sourceEvent.clientX, d3.event.sourceEvent.clientY)).attr(\"myindex\"))-origin_index\r\n        //if (isNaN(dest_index)) { alert(\"Please drop properly!\"); dest_index = origin_index }\r\n        var origin_feature = d3.select(this).attr(\"feature_name\")\r\n        \r\n        var temp1={}\r\n        self.props.exp_data.map((exp_data,index) => { // exp_data={[[\"r1exp\",this.props.range_mode_range1],[\"r2exp\",this.props.range_mode_range2]]}\r\n          var selected_instances = d3.range(state_range[0], state_range[1] + 1)\r\n          if (self.props.histogram_data.length > 0) { selected_instances = self.props.histogram_data }\r\n          var number_of_charts = 15 // change this number to get features when crossed\r\n          var features_with_score = algo1.features_with_score(self.props.dataset, [model_name], selected_instances, exp_data[1],\r\n            number_of_charts, self.props.rank_data)\r\n          if(exp_data[0] in self.props.dragged_features){\r\n            features_with_score=self.props.dragged_features[exp_data[0]]\r\n          }\r\n          var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\r\n          var origin_index=indexed_features.indexOf(origin_feature)\r\n          var dest_index=origin_index+difference\r\n          if(dest_index<0){var dest_feature=indexed_features[0]}\r\n          else if(dest_index>number_of_charts-1){var dest_feature=indexed_features[number_of_charts-1]}\r\n          else{var dest_feature=indexed_features[dest_index]}\r\n\r\n          console.log(origin_feature,dest_feature,indexed_features,dest_index,exp_data[1][0],'test')\r\n\r\n          features_with_score[origin_feature]=features_with_score[origin_feature]-difference\r\n          features_with_score[dest_feature]=features_with_score[dest_feature]+difference\r\n          temp1[exp_data[0]]=features_with_score\r\n        })\r\n        console.log(temp1,'temp1')\r\n        self.props.Set_dragged_features(temp1)\r\n        //-------------------------------------\r\n        d3.select(this).raise()\r\n      }\r\n    })\r\n    //--------------------------------------MDS Plot-------------------------------------//\r\n    var feature_contrib_data_for_mds = this.props.lime_data[model_name].filter(item => item['1-qid'] == selected_year && selected_instances.includes(item['two_realRank']))\r\n    getMdsData(this.props.url, { \"data\": feature_contrib_data_for_mds, \"weight\": features_with_score }).then(data => {\r\n      if (typeof data != 'undefined') {\r\n        var MDS_response = JSON.parse(data.response)\r\n        var circle_data = feature_contrib_data_for_mds.map((item, index) => {\r\n          item['x'] = MDS_response[index][0]\r\n          item['y'] = MDS_response[index][1]\r\n          item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + item[\"model\"].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\r\n          return item\r\n        })\r\n        Create_MDS(this.mds, circle_data, \"#mds\" + this.props.exp_id, self.props.diverginColor, this.props.Set_clicked_circles)\r\n      }\r\n    })\r\n  }\r\n  //------------------------------\r\n  render() {\r\n    return (\r\n      <div className={\"explanation_chart_parent exp\" + this.props.model_name} style={{ width: '100%', height: '100%', \"border\": this.props.mode == 'Model' ? \"2px solid #e2e2e2\" : 'none', padding: \"2px 5px\" }}>\r\n        <p className=\"title_p\" style={{ padding: 0, margin: 0 }}>{this.props.model_name}</p>\r\n        <svg ref={this.mds} id={\"mds\" + this.props.exp_id} style={{ margin: 0, width: \"100%\", height: this.state.mds_height }}></svg>\r\n        <svg id={this.props.exp_id} style={{ marginTop: 0, width: \"100%\" }}></svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    deviation_array: state.deviation_array,\r\n    original_data: state.original_data,\r\n    time_mode_model: state.time_mode_model,\r\n    chart_scale_type: state.chart_scale_type,\r\n    dataset: state.dataset,\r\n    histogram_data: state.histogram_data,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    show: state.show,\r\n    average_m: state.average_m,\r\n    average_y: state.average_y,\r\n    lime_data: state.lime_data,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    clicked_features: state.clicked_features,\r\n    threshold: state.threshold,\r\n    mode: state.mode,\r\n    dbclicked_features: state.dbclicked_features,\r\n    dragged_features: state.dragged_features,\r\n    url: state.url,\r\n    default_models: state.default_models,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_dragged_features: (val) => dispatch({ type: \"dragged_features\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\r\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\r\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\r\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\r\n    Set_popup_chart_data: (val) => dispatch({ type: \"popup_chart_data\", value: val }),\r\n    set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport './YearModeComponent.scss';\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\r\nimport * as misc_algo from '../misc_algo'\r\nimport * as $ from 'jquery';\r\nimport Year1DropDown from './Year1DropDown';\r\nimport Year2DropDown from './Year2DropDown';\r\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\r\nimport ExpChart from './ExpChartComponent';\r\nimport Popover from '../Popover/Popover';\r\n\r\nclass SlopeChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.line_color = null;\r\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({ width: window.innerHeight })\r\n  }\r\n  shouldComponentUpdate(prevProps, prevState) {\r\n    return true;\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //------------------------------\r\n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n\r\n    //----------\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.time_mode_year1 == item['1-qid'])\r\n    year_data.map(item => {\r\n      var two_realRank = parseInt(item['two_realRank'])\r\n      var predicted_rank = parseInt(item[this.props.time_mode_model])\r\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n        under_threshold_instances.push(two_realRank)\r\n      }\r\n    })\r\n    var selected_instances1 = selected_instances.filter(item => under_threshold_instances.includes(item))\r\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.time_mode_model], this.props.anim_config, this.props.time_mode_year1, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\r\n    //------------------------------\r\n    var under_threshold_instances = []\r\n    var year_data = this.props.original_data.filter(item => this.props.time_mode_year2 == item['1-qid'])\r\n    year_data.map(item => {\r\n      var two_realRank = parseInt(item['two_realRank'])\r\n      var predicted_rank = parseInt(item[this.props.time_mode_model])\r\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\r\n        under_threshold_instances.push(two_realRank)\r\n      }\r\n    })\r\n    var selected_instances2 = selected_instances.filter(item => under_threshold_instances.includes(item))\r\n    console.log(selected_instances2,'selected_instances2')\r\n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.time_mode_model], this.props.anim_config, this.props.time_mode_year2, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\r\n    //------------------------------\r\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\r\n\r\n  }\r\n  render() {\r\n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\r\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n    this.props.Set_selected_instances(selected_instances)\r\n    return (\r\n      <Grid key={this.props.mode} className=\"RangeChartParent\" container direction=\"row\" justifyContent=\"space-between\" spacing={2}\r\n        className=\"slope_chart_exp\" style={{ width: \"100%\", height: '100%', backgroundColor: 'white', padding: \"0px 0px\", border: \"0px solid #eaeaea\", overflow: 'hidden' }}>\r\n        <div className=\"year_and_model_selector_and_slider_container\" style={{ width: '100%' }}> {/* This is used to calculate the deviation plot height */}\r\n          <YearModelSelection></YearModelSelection>\r\n        </div>\r\n        {/* Group 1 */}\r\n        <Grid className=\"Group1_container\" xs={6} style={{ height: \"100%\", padding: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\">\r\n          <Grid className=\"slidergroup1\" item style={{ width: \"100%\", height: 30, backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><Year1DropDown></Year1DropDown></Grid>\r\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\r\n              <svg id=\"r1d\" style={{ width: \"100%\", padding: 5 }}></svg>\r\n            </Grid>\r\n            {\r\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\r\n                <ExpChart exp_data={[[\"r1exp\", this.props.time_mode_year1], [\"r2exp\", this.props.time_mode_year2]]} diverginColor={diverginColor} exp_id=\"r1exp\" default_models={[this.props.time_mode_model]} state_range={this.props.time_mode_range} selected_year={this.props.time_mode_year1} model_name={this.props.time_mode_model}></ExpChart>\r\n              </Grid> : null\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n        {/* Group 2 */}\r\n        <Grid className=\"Group2_container\" container direction=\"row\" xs={6} style={{ height: \"100%\", padding: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }}>\r\n          <Grid className=\"slidergroup2\" style={{width: \"100%\", height: 30, backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><Year2DropDown></Year2DropDown></Grid>\r\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group2_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\">\r\n            <Grid className=\"deviation_plot_container_div\" item \r\n            style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5), \r\n            overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\r\n              <svg id=\"r2d\" style={{ width: \"100%\", padding: 5 }}></svg>\r\n            </Grid>\r\n            {\r\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\r\n                <ExpChart exp_data={[[\"r1exp\", this.props.time_mode_year1], [\"r2exp\", this.props.time_mode_year2]]} diverginColor={diverginColor} exp_id=\"r2exp\" default_models={[this.props.time_mode_model]} state_range={this.props.time_mode_range} selected_year={this.props.time_mode_year2} model_name={this.props.time_mode_model}></ExpChart>\r\n              </Grid> : null\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n        <Popover diverginColor={diverginColor} default_models={[this.props.time_mode_model]}></Popover>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    time_mode_year1: state.time_mode_year1,\r\n    time_mode_year2: state.time_mode_year2,\r\n    mode: state.mode,\r\n    time_mode_range: state.time_mode_range,\r\n    time_mode_model: state.time_mode_model,\r\n    default_models: state.default_models,\r\n    original_data: state.original_data,\r\n    dataset: state.dataset,\r\n    sparkline_data: state.sparkline_data,\r\n    dataset: state.dataset,\r\n    anim_config: state.anim_config,\r\n    average_m: state.average_m,\r\n    rank_data: state.rank_data,\r\n    clicked_circles: state.clicked_circles,\r\n    threshold: state.threshold,\r\n    histogram_data: state.histogram_data,\r\n\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\r\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport * as $ from \"jquery\"\r\nimport * as d3 from 'd3';\r\nimport exp_fiscal_CordAscent from \"../../../Data/data/fiscal/lime/chart1_data.csv\";\r\nimport exp_school_CordAscent from \"../../../Data/data/school/lime/chart1_data.csv\";\r\nimport exp_house_CordAscent from \"../../../Data/data/house/lime/chart1_data.csv\";\r\nimport * as algo1 from \"../../../Algorithms/algo1\";\r\nimport CreateHistogram from './CreateHistogram'\r\nimport CreateBarChart from './CreateBarChart';\r\nimport Button from '@material-ui/core/Button';\r\nimport { delay } from 'lodash';\r\nclass FeatureHistograms extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { feature_data: [] };\r\n    }\r\n    componentDidMount() {\r\n        var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent } else if (this.props.dataset == \"house\") { filename = exp_house_CordAscent }\r\n        d3.csv(filename).then(feature_data => {\r\n            this.setState({ feature_data: feature_data,all_instances:{} })\r\n        })\r\n    }\r\n    store_instances=(feature_name,instances)=>{\r\n        var temp={...this.state.all_instances}\r\n        temp[feature_name]=instances\r\n        this.setState({all_instances:temp})\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if(typeof(this.state.all_instances)!=\"undefined\" && JSON.stringify(nextState.all_instances)!==JSON.stringify(this.state.all_instances)){\r\n            return false\r\n        }\r\n        return true    \r\n    }\r\n    componentDidUpdate() {\r\n        var self = this\r\n        var filename;\r\n        var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\r\n        //--------------------\r\n        var number_of_charts = 9\r\n        var features_dict = algo1.features_with_score(this.props.dataset, this.props.default_models, selected_instances, this.props.selected_year, number_of_charts, this.props.rank_data)\r\n        var sorted_features = Object.entries(features_dict).sort((first, second) => second[1] - first[1]).map(element => element[0])\r\n        //--------------------\r\n        if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent }\r\n        //--------------------------------Iterate through each features\r\n        const margin = { top: 10, right: 5, bottom: 50, left: 5 }; // Histogram\r\n        //const margin = { top: 10, right: 5, bottom: 40, left: 5 } // Barchart\r\n        d3.select(\".feature_histograms_container\").selectAll(\".feature\").data(sorted_features, d => d).join(\"svg\").attr(\"class\", 'feature')\r\n            //.attr(\"width\", feature_width)\r\n            //.attr(\"y\", (d, feature_index) => feature_height * feature_index)\r\n            .attr(\"add_histogram\", function (d, feature_index) {\r\n                var histogram_data = []\r\n                if (!isNaN(self.state.feature_data[0][d])) {\r\n                    self.state.feature_data.forEach(element => {\r\n                        if (element[\"1-qid\"] == self.props.selected_year) {\r\n                            var temp_dict = {}\r\n                            temp_dict[\"x\"] = parseInt(element['two_realRank'])\r\n                            temp_dict[\"y\"] = parseFloat(element[d])\r\n                            histogram_data.push(temp_dict)\r\n                        }\r\n                    });\r\n                    CreateHistogram(histogram_data, d3.select(this), d, feature_index, sorted_features.length,self.store_instances)\r\n                }\r\n                else {\r\n                    self.state.feature_data.forEach(element => {\r\n                        if (element[\"1-qid\"] == self.props.selected_year) {\r\n                            var temp_dict = {}\r\n                            temp_dict[\"x\"] = parseInt(element['two_realRank'])\r\n                            temp_dict[\"y\"] = element[d]\r\n                            histogram_data.push(temp_dict)\r\n                        }})\r\n                    CreateBarChart(histogram_data, d3.select(this), d, feature_index, sorted_features.length,self.store_instances,self.state.all_instances)\r\n                }\r\n            })\r\n            .attr('id',d=>d)\r\n            //.call(d3.brush().extent([[0, margin.top], [400, 65]]))\r\n        //--------------------------------Iterate through each features\r\n    }\r\n    render() {\r\n        return (\r\n            this.props.original_data != null ? <div style={{display:'relative', width: 400,marginTop:-8 }}>\r\n                <Button fullWidth style={{margin:0,position:'sticky',top:0,backgroundColor:\"gray\",borderRadius:0}} onClick={()=>{\r\n                    var selected_instances=[...new Set([].concat(...Object.values(this.state.all_instances)))]\r\n                    var filtered_instances=selected_instances.filter(item => item>=this.props.state_range[0] && item<=this.props.state_range[1])\r\n                    this.props.handleClose() // This will close the select menu\r\n                    if(filtered_instances.length==0){alert(\"No instance is available withing the selected range!\")}\r\n                    this.props.Set_histogram_data([...filtered_instances])\r\n                }}> Update </Button>\r\n                <div className=\"feature_histograms_container_div\" style={{display:'relative', width: 400, height: window.innerHeight, overflow: \"scroll\",marginTop:-8 }}>\r\n                <svg className=\"feature_histograms_container\" style={{ width: \"100%\", padding: 10 }}> </svg>\r\n                </div>\r\n            </div> : null\r\n        );\r\n    }\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        dataset: state.dataset,\r\n        deviate_by: state.deviate_by,\r\n        state_range: state.state_range,\r\n        default_models: state.default_models,\r\n        selected_year: state.selected_year,\r\n        sparkline_data: state.sparkline_data,\r\n        show: state.show,\r\n        mode: state.mode,\r\n        original_data: state.original_data,\r\n        rank_data: state.rank_data,\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\r\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\r\n        Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(FeatureHistograms);\r\n\r\n//https://material-ui.com/api/slider/\r\n//https://material-ui.com/components/expansion-panels/\r\n//https://material-ui.com/api/checkbox/\r\n//https://material-ui.com/components/radio-buttons/","import * as d3 from 'd3';\r\nimport * as $ from \"jquery\"\r\nexport default function CreateChart(histogram_data, svg, feature_name, feature_index, number_of_features,store_instances,all_instances) {\r\n  //( feature_height, selected_year, handleHistogramselection, feature_data)\r\n  var parent_width = $(\".feature_histograms_container\").width()\r\n  var parent_height = $(\".feature_histograms_container\").height()\r\n  var feature_width = $(\".feature_histograms_container\").width()\r\n  var feature_height = 120\r\n  const margin = { top: 10, right: 5, bottom: 40, left: 5 }\r\n  d3.select(\".feature_histograms_container\").attr('height', feature_height * number_of_features + 20)\r\n  svg.attr('y', feature_height * feature_index).attr('width', parent_width).attr('height', feature_height)\r\n  //-----------------------------------------------------------\r\n  var occur = {}\r\n  histogram_data.map(item => {\r\n    if (item.y in occur) occur[item.y] = occur[item.y] + 1\r\n    else { occur[item.y] = 1 }\r\n  })\r\n  var items = Object.entries(occur).sort((first, second) => second[1] - first[1]);\r\n  var x = items.map(element => element[1]);\r\n  var sum_x = d3.sum(x)\r\n  svg.selectAll('.item_svg').data(items).join(\"svg\").attr(\"class\", 'item_svg').attr(\"x\", (d, i) => (d3.sum(x.slice(0, i)) / sum_x) * feature_width).attr('y',margin.top).attr('width', (d, i) => ((d[1] / sum_x) * feature_width) - .2).attr('height', feature_height - margin.bottom)\r\n    .attr('add_rectangle', function (d) {\r\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"width\", \"100%\").attr(\"height\", feature_height - margin.bottom).style(\"fill\", \"gray\")\r\n      .attr(\"check\",function(){\r\n        if(feature_name+d[0] in all_instances){ if(all_instances[feature_name+d[0]].length>0){d3.select(this).classed('feature_clicked',true) }} // if the feature and the category exists we check the length and decide that it is clicked item. In categorical items if something is clicked it can not have empty instances\r\n      })\r\n      .on('click', function(){\r\n        if(!d3.select(this).classed('feature_clicked')){ // if not classed we add the class and the data\r\n          d3.select(this).classed('feature_clicked',true)\r\n          store_instances(feature_name+d[0],histogram_data.filter(item=>item['y']==d[0]).map(item=>item.x))\r\n        }\r\n        else{ // if claassed we already have it so we set it empty\r\n          d3.select(this).classed('feature_clicked',false)\r\n          store_instances(feature_name+d[0],[])\r\n        }\r\n      })\r\n      \r\n    \r\n    })\r\n    .attr('add_text', function (d) {\r\n      //if(d3.select(this).attr(\"width\")>9)\r\n      d3.select(this).selectAll(\"text\").data([0]).join(\"text\").text(d[0]).attr('x', \"50%\").attr(\"y\", '50%').attr('dominant-baseline', 'middle').style(\"font-size\", d3.select(this).attr(\"width\") > 11 ? 10 : d3.select(this).attr(\"width\") - 2).style(\"writing-mode\", \"tb\").style(\"text-anchor\", \"middle\").style('cursor', 'pointer')\r\n    })\r\n  //----------------------------------------------------------- Histogram creation ends here\r\n  svg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", feature_height-10).attr(\"x\", feature_width / 2).attr(\"text-anchor\", \"middle\").attr('font-size', 14).text(feature_name).style('text-transform','capitalize')\r\n}","import * as d3 from \"d3\"\r\nimport * as $ from \"jquery\"\r\nexport default function CreateHistogram(histogram_data, svg, feature_name, feature_index, number_of_features, store_instances) {\r\n  const margin = { top: 10, right: 5, bottom: 50, left: 5 };\r\n  var parent_width = $(\".feature_histograms_container\").width()\r\n  var feature_height = 120\r\n  var feature_width = parent_width\r\n  d3.select(\".feature_histograms_container\").attr('height', feature_height * number_of_features + 20)\r\n  svg.attr('y', feature_height * feature_index).attr('width', parent_width).attr('height', feature_height)\r\n  var item_data = histogram_data.map(item => item['y'])\r\n  var area_chart_height = feature_height - margin.top - margin.bottom;\r\n  var area_chart_width = feature_width - margin.left - margin.right\r\n  const y = d3.scaleLinear().domain(d3.extent(item_data)).range([margin.top, area_chart_height])\r\n\r\n  var myticks = y.ticks(25)\r\n  var binned_data = d3.histogram().value(d => d).domain(y.domain()).thresholds(myticks)(item_data)\r\n  //--------- Create the areaChart\r\n  var area_chart_data = []\r\n  binned_data.map((item, i) => area_chart_data.push([item.x1, item.length]))\r\n  var xScale = d3.scaleLinear().domain(d3.extent(area_chart_data.map(item => item[0]))).range([margin.left, feature_width - margin.right]) // 20 is the baseline\r\n  var yScale = d3.scaleLinear().domain([0, d3.max(area_chart_data.map(item => item[1]))]).range([area_chart_height, 0])\r\n  const areaGenerator = d3.area().curve(d3.curveMonotoneX).x(d => xScale(d[0])).y0(yScale(0)).y1(d => yScale(d[1]))\r\n\r\n  svg.append(\"path\").attr('transform', 'translate(0,' + margin.top + ')')\r\n    .attr(\"d\", areaGenerator(area_chart_data))\r\n    .style(\"fill\", \"gray\");\r\n  //svg.selectAll(\".graph_lines\").area_chart_data(ticks).join('line').attr(\"class\", \"graph_lines\").attr(\"x1\", 0).attr(\"x2\", baseline).attr(\"y1\",d=>y(d)).attr(\"y2\", d=>y(d)).attr(\"stroke-width\", 0.1).attr(\"stroke\", \"black\").raise()\r\n  svg.selectAll(\".xAxis_g\").data([0]).join('g').attr('class', 'xAxis_g').attr(\"transform\", \"translate(0,\" + (feature_height - margin.bottom) + \")\")\r\n    .call(d3.axisBottom(xScale).ticks(5).tickFormat(d3.format(\".2s\")));\r\n  //.call(d3.axisBottom(xScale).ticks(5));\r\n  svg.selectAll('.domain').attr('stroke', '#dddddd')\r\n  svg.selectAll(\".title\").data([0]).join('text').attr('x', feature_width / 2).attr('y', feature_height - 28).attr('dominant-baseline', 'hanging').attr('text-anchor', 'middle').text(feature_name).attr('font-size', 14).style('text-transform', 'capitalize')\r\n  svg.call(d3.brushX().extent([[0, margin.top], [400, area_chart_height + margin.top]]).on(\"end\", () => {\r\n    var extent = d3.event.selection\r\n    if (extent != null) {\r\n      var lower = xScale.invert(extent[0]), upper = xScale.invert(extent[1])\r\n      var instances = histogram_data.filter(item => item['y'] >= lower && item['y'] <= upper).map(item => item['x']) // x contains the ranking and y contains the value\r\n      store_instances(feature_name, instances)\r\n    }\r\n    else{store_instances(feature_name, [])}\r\n  }))\r\n}\r\n//https://stackoverflow.com/questions/54236051/how-to-draw-a-vertical-area-chart","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport FeatureHistograms from \"./FeatureHistograms/FeatureHistograms\"\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nexport default function SimpleMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop:-2}}>\r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Features<ArrowDropDownIcon></ArrowDropDownIcon></Button>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} style={{marginTop:0}}>\r\n       {anchorEl?<FeatureHistograms handleClose={handleClose}></FeatureHistograms>:null}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { connect } from 'react-redux';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nexport function SimpleMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div style={{marginTop:-2}}>\r\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Mode<ArrowDropDownIcon></ArrowDropDownIcon></Button>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} style={{marginTop:0}}>\r\n       {anchorEl?<div style={{paddingLeft:10}}><form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\"></FormLabel>\r\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={(event, val) => {handleClose();props.Set_histogram_data([]);props.Set_mode(val)}}>\r\n                    {['Model', 'Ranges', 'Time'].map((value) => {\r\n                      return <FormControlLabel value={value} control={<Radio />} label={value} />\r\n                    })}\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </form></div>:null}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    state_range: state.state_range,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\r\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SimpleMenu);\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\n// Create a theme instance.\r\nconst outerTheme1 = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#0069d9\"\r\n    },\r\n    secondary: {\r\n      main: \"#0069d9\"\r\n    }\r\n  }\r\n})\r\n\r\n\r\n\r\nconst outerTheme = createMuiTheme({\r\n  spacing: 2,\r\n  overrides: { // This is the place we override classes applied to a component\r\n    MuiFilledInput: { // This is the name of the component\r\n      root: { // This is the class we want to edit\r\n        backgroundColor: \"none\",\r\n        padding:0,\r\n      }\r\n    },\r\n    MuiInputLabel: {\r\n      root: {\r\n        backgroundColor: \"yellow\"\r\n      }\r\n    },\r\n    MuiTextField: {\r\n      root: {}\r\n    },\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: \"none\",\r\n        padding: \"15px\"\r\n      },\r\n      fullWidth: {\r\n        maxWidth: \"100%\"\r\n      }\r\n    },\r\n    MuiFilledInput:{\r\n      root:{\r\n        padding:0,\r\n        backgroundColor:\"yellow\"\r\n      }\r\n    },\r\n    MuiAutocomplete:{\r\n      Root:{\r\n        padding:0\r\n      }\r\n    }\r\n\r\n  },\r\n  props: { // This is the place where we define props\r\n    MuiButton: {\r\n      disableRipple: true,\r\n      variant: \"contained\",\r\n      color: \"primary\"\r\n    },\r\n    MuiCheckbox: {\r\n      disableRipple: true\r\n    },\r\n    MuiTextField: {\r\n      variant: \"filled\",\r\n      InputLabelProps: {\r\n        shrink: true\r\n      }\r\n    },\r\n  }\r\n});\r\n\r\nexport default outerTheme","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport outerTheme from './theme'\r\nimport { connect } from \"react-redux\";\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState } from 'react';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\nfunction Inputs(props) {\r\n    const [threshold,set_threshold]=useState(props.threshold)\r\n    const classes = useStyles();\r\n    return (\r\n        <ThemeProvider theme={outerTheme}>\r\n            <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <span>Threshold:</span>\r\n                <Input style={{width:30}} defaultValue={threshold} inputProps={{ 'aria-label': 'description' }} \r\n                onChange={(event=>set_threshold(event.target.value))}\r\n                />\r\n                <Button style={{height:20,color:\"black\",fontSize:16,backgroundColor:'#f2f2f2'}} variant='string'\r\n                onClick={()=>props.Set_threshold(threshold)}\r\n                >Update</Button>\r\n            </form>\r\n        </ThemeProvider>\r\n\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        threshold:state.threshold\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_threshold: (val) => dispatch({ type: \"threshold\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Inputs);\r\n/*\r\nimport React from 'react';\r\nimport \"./Sliders.scss\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from \"react-redux\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material/TextField';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    tRoot: {\r\n        marginBottom: 35,\r\n    },\r\n    rang_input: {\r\n        marginLeft: 10,\r\n    },\r\n}));\r\nfunction Modes(props) {\r\n    const classes = useStyles();\r\n    // states\r\n    const [threshold, set_threshold] = React.useState(props.threshold);\r\n    //-----------------------------------------------------------------\r\n    var temp_marks = [];\r\n    var min=0\r\n    var max=20\r\n    var number_marks=10\r\n    var step = (max - 1) / (number_marks - 1);\r\n    for (var i = 0; i < number_marks; i++) {\r\n        temp_marks.push(1 + (step * i));\r\n    }\r\n    var marks = temp_marks.map(item => {\r\n        var myitem = parseInt(item)\r\n        return { value: myitem, label: myitem }\r\n    })\r\n    //console.log(props.marks)\r\n    //-----------------------------------------------------------------\r\n    return (\r\n        <div className=\"rangeslider2\" style={{ marginLeft: 60,marginTop:-28, width: \"100%\", paddingTop: 0 }} >\r\n            <Typography>\r\n                Threshold\r\n            </Typography>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        threshold:state.threshold\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_threshold: (val) => dispatch({ type: \"threshold\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);\r\n*/","import React, { Component } from 'react';\r\n//------------------------------------------------All datasets imports ends here\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport * as $ from 'jquery';\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FeaturesDropdown from \"./FeaturesDropdown\"\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport SelectMode from './SelectMode'\r\nimport Threshold from './Threshold';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // mydata is original data\r\n    this.state = {\r\n      random: 10,\r\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\r\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",\r\n    };\r\n  }\r\n  buttonclickHandler = (value, type) => {\r\n    setTimeout(() => { this.setState({ random: Math.random() }) }, 500);\r\n    type = \"button\" ? this.props.Set_view_data(value) : null\r\n    type = \"form\" ? this.setState({ view_data: value }) : null\r\n  }\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid container>\r\n          <ButtonGroup aria-label=\"outlined button group\" style={{marginRight:150,border:'none'}}>\r\n          <Button style={{borderRadius:0,border:'none',borderRight:'1px solid #bfbfbf'}} onClick={() => this.buttonclickHandler(1, \"button\")}>View Data</Button>\r\n          <Button style={{borderRadius:0,border:'none', borderRight:'1px solid #bfbfbf'}} onClick={() => this.buttonclickHandler(0, \"button\")}>Load Data</Button>\r\n          </ButtonGroup>\r\n          {this.props.mode==\"Model\"?<FeaturesDropdown></FeaturesDropdown>:null}\r\n          <SelectMode></SelectMode>\r\n          <Threshold></Threshold>\r\n        </Grid>\r\n        {this.props.view_data == false ?\r\n          <Row className=\"Topbar_container\">\r\n            <div className=\"load\">\r\n              <form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\"></FormLabel>\r\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={(event, val) => this.props.handleradioChange(val)}>\r\n                    {['Fiscal Dataset', 'School Dataset', 'House Dataset'].map((value) => {\r\n                      return <FormControlLabel value={value} control={<Radio />} label={value} />\r\n                    })}\r\n                  </RadioGroup>\r\n                  <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Load</Button>\r\n                </FormControl>\r\n              </form>\r\n            </div></Row>\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    view_data: state.view_data,\r\n    mode:state.mode,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_view_data: (val) => dispatch({ type: \"view_data\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass SlopeChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.line_color = null;\r\n        this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\r\n    }\r\n    componentDidMount() { this.setState({ width: window.innerHeight }) }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // Draw a circle\r\n        var myCircle = d3.select(\"#dataviz_brushing\")\r\n            .append(\"svg\")\r\n            .append(\"circle\")\r\n            .attr(\"cx\", 200)\r\n            .attr(\"cy\", 200)\r\n            .attr(\"r\", 40)\r\n            .attr(\"fill\", \"#69a3b2\")\r\n\r\n        // Add brushing\r\n        d3.select(\"#dataviz_brushing\")\r\n            .call(d3.brush()                     // Add the brush feature using the d3.brush function\r\n                .extent([[0, 0], [400, 400]])       // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\r\n            )\r\n\r\n    }\r\n    render() {\r\n        //console.log(parseInt($(\".uploader_topbar\").height()),parseInt($(\".years_model_container\").height()),parseInt($(\".Modelslider\").height()))\r\n        return (\r\n            <div style={{ width: window.innerWidth, height: window.innerHeight }}>\r\n                <svg style={{ width: 400, height: 400 }} id=\"dataviz_brushing\"></svg>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst maptstateToprop = (state) => {\r\n    return {\r\n        state_range: state.state_range,\r\n        selected_year: state.selected_year\r\n    }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n    return {\r\n        Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\r\n        Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\r\n    }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component, PureComponent } from 'react';\r\nimport * as d3 from 'd3';\r\nimport * as $ from 'jquery';\r\nimport { connect } from \"react-redux\";\r\nimport './legend.scss'\r\nclass Legend extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {} // This is the default height\r\n  }\r\n  componentDidMount() { this.setState({ rand: 10 }) }\r\n  componentDidUpdate() {\r\n    var legend_container_width = $('.legend_container').width()\r\n    var legend_container_height = $('.legend_container').height()\r\n    //--------------------------- Legend 1\r\n    var legend1_height = 100\r\n    var legend1_rScale = d3.scaleLinear().domain(d3.extent(this.props.deviation_array)).range([5, 2])\r\n    var legend1_yScale = d3.scaleLinear().domain(d3.extent(this.props.deviation_array)).range([5, legend1_height - 5])\r\n    var legend1_ticks = legend1_yScale.ticks(4)\r\n    var legend1_svg = d3.select('#legend1').attr('width', legend_container_width).attr('height', legend1_height)\r\n    legend1_svg.selectAll('.legend1_circles').data(legend1_ticks).join('circle').attr('class', 'legend1_circles').attr('cx', 10).attr('cy', d => legend1_yScale(d)).attr('r', d => legend1_rScale(d)).attr('fill', 'grey')\r\n    legend1_svg.selectAll('.legend1_text').data(legend1_ticks).join('text').attr('class', 'legend1_text').attr('x', 20).attr('y', d => legend1_yScale(d)).text(d => d).attr('dominant-baseline', 'middle').attr('font-size', 10)\r\n\r\n    //--------------------------- Legend 2\r\n    var min = d3.min(this.props.selected_instances), max = d3.max(this.props.selected_instances);\r\n    var d = (max - min) / 8;\r\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\r\n\r\n    var legend2_svg_height = legend_container_height/2 - 50\r\n    var legend2_height = legend2_svg_height - 50\r\n\r\n    var legend2_yScale = d3.scaleLinear().domain([min, max]).range([22, legend2_height - 15])\r\n    var legend2_ticks = d3.range(min, max + 1, max / 10)\r\n    var rect_height = (legend2_height - 30) / legend2_ticks.length\r\n    var rect_width=8\r\n    var legend2_svg = d3.select('#legend2').attr('width', legend_container_width).attr('height', legend2_svg_height)\r\n    legend2_svg.selectAll('.legend2_rects').data(legend2_ticks).join('rect').attr('class', 'legend2_rects').attr('x', 10).attr('y', (d, i) => legend2_yScale(d)).attr('width', rect_width).attr('height', rect_height).attr('fill', d => diverginColor(d))\r\n    //legend2_svg.selectAll('.legend2_text').data(legend1_ticks).join('text').attr('class','legend1_text').attr('x',20).attr('y',d=>legend1_yScale(d)).text(d=>d).attr('dominant-baseline','middle').attr('font-size',10)\r\n    legend2_svg.selectAll(\".High\").data(['High']).join(\"text\").attr(\"x\", 0).attr(\"class\", \"High\").attr('dominant-baseline', \"hanging\").attr(\"y\", 0).text('High').attr('font-size', 12)\r\n    legend2_svg.selectAll(\".Low\").data(['Low']).join(\"text\").attr(\"x\", 0).attr(\"class\", \"Low\").attr('dominant-baseline', \"hanging\").attr(\"y\", legend2_height).text('Low').attr('font-size', 12)\r\n    legend2_svg.selectAll(\".legend2_labels\").data([min,max/2,max]).join(\"text\").attr(\"x\", 10+rect_width+2).attr(\"class\", \"legend2_labels\").attr('dominant-baseline', \"middle\").attr('y', (d, i) => i==0?legend2_yScale(d)+rect_height/2:legend2_yScale(d)).text(d=>d).attr('font-size', 12)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"legend_container\" style={{ height: '100%', width: '100%'}}>\r\n        <div>\r\n        <div item style={{ backgroundColor: 'rgb(211, 211, 211,0.5)',padding:5,marginBottom:5 }}>\r\n        <p className=\"title\" style={{marginBottom:10}}> Model Precision</p>\r\n          <svg id=\"legend1\"> </svg>\r\n        </div>\r\n        <div item style={{ backgroundColor: 'rgb(211, 211, 211,0.5)',padding:5 }}>\r\n          <p className=\"title\" style={{marginBottom:10}}> Rank Range</p>\r\n          <svg id=\"legend2\"> </svg>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    selected_instances: state.selected_instances,\r\n    deviation_array: state.deviation_array,\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(Legend);","import React, { Component } from 'react';\r\n//------------------------------------------------All datasets imports\r\nimport fiscal from \"./Data/fiscal.csv\";\r\nimport school from \"./Data/school.csv\";\r\nimport house from \"./Data/house.csv\";\r\n\r\nimport fiscal_rank from \"./Data/data/fiscal/lime/fiscal_rank.csv\";\r\nimport fiscal_lime from \"./Data/data/fiscal/lime/fiscal_lime.csv\";\r\n\r\nimport school_rank from \"./Data/data/school/lime/school_rank.csv\";\r\nimport school_lime from \"./Data/data/school/lime/school_lime.csv\";\r\n\r\nimport house_rank from \"./Data/data/house/lime/house_rank.csv\";\r\nimport house_lime from \"./Data/data/house/lime/house_lime.csv\";\r\n\r\n//------------------------------------------------All datasets imports ends here\r\nimport \"./App.scss\";\r\nimport * as d3 from 'd3';\r\nimport * as algo1 from \"./Algorithms/algo1\";\r\nimport ModelChart from \"./components/Charts/Model/ModelChartComponent\"\r\nimport RangeChart from \"./components/Charts/Range/RangeChartComponent\"\r\nimport YearChart from \"./components/Charts/Time/YearChart\"\r\nimport { Row, Col } from 'reactstrap';\r\nimport * as $ from 'jquery';\r\nimport { connect } from \"react-redux\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Top from './components/Top/Top';\r\nimport BrushTest from './components/BrushTest/BrushTest';\r\nimport { Hidden } from '@material-ui/core';\r\nimport Legend from '../src/components/Legend/Legend'\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // mydata is original data\r\n    this.state = {\r\n      random: 10,\r\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\r\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",\r\n    };\r\n  }\r\n  componentDidMount() { this.dataprocessor(this.props.dataset) }\r\n  //-------------------------------------------------------------------------------------------------------------------- data processor processes data for initial render\r\n  dataprocessor = (dataset_name) => {\r\n    if (dataset_name == \"school\") { this.process_data(school, school_rank, school_lime, dataset_name) }\r\n    if (dataset_name == \"fiscal\") { this.process_data(fiscal, fiscal_rank, fiscal_lime, dataset_name) }\r\n    if (dataset_name == \"house\") { this.process_data(house, house_rank, house_lime, dataset_name) }\r\n  }\r\n  process_data = (slopechart_data_filename, rank_data_filename, lime_data_filename, dataset_name) => {\r\n    var self = this\r\n    //-------------\r\n    d3.csv(slopechart_data_filename).then(original_data => {\r\n      var grouped_by_year_data = algo1.groupby_year(original_data).years\r\n      var sparkline_data = algo1.groupby_year(original_data).sparkline_data\r\n      var years_for_dropdown = Object.keys(grouped_by_year_data)\r\n      //console.log(grouped_by_year_data,sparkline_data,years_for_dropdown,'selected_year')\r\n      self.props.Set_sparkline_data(sparkline_data)\r\n      self.props.Set_slider_max(grouped_by_year_data[years_for_dropdown[0]].length)\r\n      self.setState({ years_for_dropdown: years_for_dropdown })\r\n      self.props.Set_years_for_dropdown(years_for_dropdown)\r\n      self.props.Set_time_mode_year1(years_for_dropdown[0])\r\n      self.props.Set_time_mode_year2(years_for_dropdown[1])\r\n      self.props.Set_legend_year(years_for_dropdown[0])\r\n      self.setState({ ref_year: years_for_dropdown[0] })\r\n      self.props.Set_grouped_by_year_data(grouped_by_year_data)\r\n      self.setState({ grouped_by_year_data: grouped_by_year_data })\r\n      self.setState({ original_data: original_data })\r\n      self.props.Set_original_data(original_data)\r\n      self.props.Set_selected_year(years_for_dropdown[0])\r\n    })\r\n    //-------------\r\n    d3.csv(rank_data_filename).then(data => {\r\n      var nested_data = {}\r\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\r\n        nested_data[item.key] = item.values\r\n      })\r\n      self.props.Set_rank_data(nested_data)\r\n    })\r\n    //-------------\r\n    d3.csv(lime_data_filename).then(temp_data => {\r\n      var data=temp_data.map(item=>{\r\n        item['predicted']=parseInt(item['predicted'])\r\n        item['two_realRank']=parseInt(item['two_realRank'])\r\n        item['deviation']=Math.abs(item['predicted']-item['two_realRank'])\r\n        return item\r\n      })\r\n      var nested_data = {}\r\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\r\n        nested_data[item.key] = item.values\r\n      })\r\n      self.props.Set_lime_data(nested_data)\r\n    })\r\n  }\r\n  //-------------------------------------------------------------------------------------------------------------------- data processor processes data for initial render\r\n\r\n  handleradioChange = (selected_dataset) => {\r\n    this.props.Set_rank_data(null)\r\n    this.props.Set_clicked_items_in_slopechart([])\r\n    this.props.Set_state_range([1, 25])\r\n    this.props.Set_histogram_data([])\r\n    this.props.Set_mode(\"Model\")\r\n    this.props.Set_range_mode_range1([1, 25])\r\n    this.props.Set_range_mode_range2([15, 40])\r\n    this.props.Set_time_mode_range([5, 35])\r\n    if (selected_dataset == 'Fiscal Dataset') {\r\n      this.setState({ dataset: 'fiscal' })\r\n      this.props.Set_dataset('fiscal')\r\n      this.dataprocessor(\"fiscal\")\r\n    }\r\n    else if (selected_dataset == 'House Dataset') {\r\n      this.setState({ dataset: 'house' })\r\n      this.props.Set_dataset('house')\r\n      this.dataprocessor(\"house\")\r\n    }\r\n    else {\r\n      this.setState({ dataset: 'school' })\r\n      this.props.Set_dataset('school')\r\n      this.dataprocessor(\"school\")\r\n    }\r\n  };\r\n  render() {\r\n    var legend_width = 70\r\n    return (\r\n      <div className=\"root_container\" style={{ height: window.innerHeight, width: window.innerWidth, overflow: \"hidden\" }}>\r\n        <div className=\"topBar_root\" style={{ height: 35, width: window.innerWidth}}>\r\n          <Top handleradioChange={this.handleradioChange}></Top>\r\n        </div>\r\n        {this.props.view_data ? <Row>\r\n          <div style={{ width: window.innerWidth, height: window.innerHeight - $('.topBar_root').height(), padding: \"2px 0px\" }} key={this.props.view_data}>\r\n            {this.state.view_data == true ?\r\n              <Grid className=\"charts_and_legend_container\" style={{ height: '100%', width: '100%', border: \"2px solid grey\", overflow: \"hidden\" }} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\r\n                <Grid className=\"charts_container\" style={{ height: '100%', width: $('.charts_and_legend_container').width() - legend_width }} container spacing={0} direction=\"row\" justify=\"space-evenly\" >\r\n                  {this.props.mode == \"Model\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <ModelChart></ModelChart> : null}\r\n                  {this.props.mode == \"Ranges\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <RangeChart></RangeChart> : null}\r\n                  {this.props.mode == \"Time\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <YearChart></YearChart> : null}\r\n                </Grid>\r\n                <div style={{ padding: 0,marginTop:5, height: '100%', width: legend_width }}><Legend legend_width={legend_width}></Legend></div>\r\n              </Grid> : null}\r\n          </div>\r\n        </Row> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst maptstateToprop = (state) => {\r\n  return {\r\n    tracking: state.tracking,\r\n    state_range: state.state_range,\r\n    deviate_by: state.deviate_by,\r\n    default_models: state.default_models,\r\n    sparkline_data: state.sparkline_data,\r\n    selected_year: state.selected_year,\r\n    mode: state.mode,\r\n    range_mode_model: state.range_mode_model,\r\n    original_data: state.original_data,\r\n    time_mode_model: state.time_mode_model,\r\n    chart_scale_type: state.chart_scale_type,\r\n    dataset: state.dataset,\r\n    histogram_data: state.histogram_data,\r\n    sort_by: state.sort_by,\r\n    time_mode_year1: state.time_mode_year1,\r\n    time_mode_year2: state.time_mode_year2,\r\n    popup_chart_data: state.popup_chart_data,\r\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\r\n    config: state.config,\r\n    lime_data: state.lime_data,\r\n    view_data: state.view_data\r\n  }\r\n}\r\nconst mapdispatchToprop = (dispatch) => {\r\n  return {\r\n    Set_dataset: (val) => dispatch({ type: \"dataset\", value: val }),\r\n    Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\r\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\r\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\r\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\r\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: parseInt(val) }),\r\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\r\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\r\n    Set_grouped_by_year_data: (val) => dispatch({ type: \"grouped_by_year_data\", value: val }),\r\n    Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\r\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\r\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\r\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\r\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\r\n\r\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\r\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\r\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\r\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\r\n    Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\r\n    Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\r\n\r\n    Set_rank_data: (val) => dispatch({ type: \"rank_data\", value: val }),\r\n    Set_lime_data: (val) => dispatch({ type: \"lime_data\", value: val }),\r\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\r\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\r\n\r\n  }\r\n}\r\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","let initialState = {\r\n   anim_config: {rank_animation:3000,deviation_animation:3000,feature_animation:3000,circle_animation:3000},\r\n   appHandleChange: null,\r\n   sparkline_data: null,\r\n   sort_by: \"Average Precision\",\r\n   original_data: null,\r\n   rank_data: null,\r\n   lime_data: null,\r\n   grouped_by_year_data: null,\r\n   slope_chart_ready_to_vis: null,\r\n   default_models: [\"LinearReg\",\"CordAscent\"], // Change the pop_over_models as well\r\n   state_range: [1, 30], // Change in handleradioChange\r\n   deviate_by: 0,\r\n   show: [\r\n      \"Slope charts\", \"Rankings\", \"Explanation\" // change in app.js\r\n   ],\r\n   years_for_dropdown: [\r\n      \"2006\"\r\n   ],\r\n   selected_year: 2006,\r\n   slider_min: 1,\r\n   slider_max: 50,\r\n   view_data: 1,\r\n   dataset: \"school\", // change in componentDidmount in app.js too\r\n   histogram_data: [],\r\n   chart_scale_type: \"true\",\r\n   features_with_score: null,\r\n   ref_year: null,\r\n   cmodel: \"CordAscent\",\r\n   clicked_items_in_slopechart: [],\r\n   tracking: false,\r\n   dummy: null,\r\n   features_dict: {},\r\n   features_voted: null,\r\n   Legend_ready_to_vis: null,\r\n   legend_model: \"CordAscent\",\r\n   legend_show_option: \"Rank\",\r\n   legend_year: 2012,\r\n   mode: \"Model\",\r\n   range_mode_model: \"CordAscent\",\r\n   range_mode_range1: [1, 25],\r\n   range_mode_range2: [15, 40],\r\n   time_mode_model: \"CordAscent\",\r\n   time_mode_year1: \"Null\",\r\n   time_mode_year2: \"Null\",\r\n   time_mode_range: [6, 32],\r\n   chart_scale_type: \"true\",\r\n   slider_and_feature_value: { 'Rank range': 1, 'Feature': 1 },\r\n   prev_prop: {},\r\n   replay: false,\r\n   changed: \"year\",\r\n   popup_chart_data: null,\r\n   pop_over: false,\r\n   pop_over_models: [\"LinearReg\",\"CordAscent\"],\r\n   clicked_features: [],\r\n   drag_drop_feautre_data: {},\r\n   dbclicked_features: [],\r\n   default_model_scores: {},\r\n   all_models: [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"RankBoost\", \"RankNet\"],\r\n   average_y: false,\r\n   average_m: false,\r\n   clicked_circles:[],\r\n   threshold:100,\r\n   deviation_array:[], // This is for legend\r\n   selected_instances:[], // This is for legend\r\n   dragged_features:{},\r\n   //url:\"http://0.0.0.0:5000/test\",\r\n   url:\"http://privacyprofiling.njitvis.com:5000/api/v2/rieval_mds\",\r\n}\r\n//---InitialState ends here\r\nconst reducer = (state = initialState, action) => {\r\n   if (action.type === \"dragged_features\") {\r\n      //console.log('dragged_features',action.value)\r\n      return { ...state, dragged_features: action.value }\r\n   }\r\n   if (action.type === \"selected_instances\") {\r\n      return { ...state, selected_instances: action.value }\r\n   }\r\n   if (action.type === \"deviation_array\") {\r\n      return { ...state, deviation_array: action.value }\r\n   }\r\n   if (action.type === \"view_data\") {\r\n      return { ...state, view_data: action.value }\r\n   }\r\n   if (action.type === \"threshold\") {\r\n      return { ...state, threshold: action.value }\r\n   }\r\n   if (action.type === \"clicked_circles\") {\r\n      return { ...state, clicked_circles: action.value }\r\n   }\r\n   if (action.type === \"average_y\") {\r\n      \r\n      return { ...state, average_y: action.value }\r\n   }\r\n   if (action.type === \"average_m\") {\r\n      \r\n      return { ...state, average_m: action.value }\r\n   }\r\n   if (action.type === \"default_model_scores\") {\r\n     \r\n      return { ...state, default_model_scores: action.value }\r\n   }\r\n   if (action.type === \"dbclicked_features\") {\r\n      return { ...state, dbclicked_features: action.value }\r\n   }\r\n   if (action.type === \"drag_drop_feautre_data\") {\r\n      return { ...state, drag_drop_feautre_data: action.value }\r\n   }\r\n   if (action.type === \"anim_config\") {\r\n      return { ...state, config: action.value }\r\n   }\r\n   if (action.type === \"show\") {\r\n      return { ...state, show: action.value }\r\n   }\r\n   if (action.type === \"lime_data\") {\r\n      return { ...state, lime_data: action.value }\r\n   }\r\n   if (action.type === \"default_models\") {\r\n      return { ...state,pop_over_models:action.value, default_models: action.value }\r\n   }\r\n   if (action.type === \"rank_data\") {\r\n\r\n      return { ...state, rank_data: action.value }\r\n   }\r\n   if (action.type === \"original_data\") {\r\n      return { ...state, original_data: action.value }\r\n   }\r\n   if (action.type === \"years_for_dropdown\") {\r\n      return { ...state, years_for_dropdown: action.value }\r\n   }\r\n   if (action.type === \"appHandleChange\") {\r\n      return { ...state, appHandleChange: action.value }\r\n   }\r\n   if (action.type === \"state_range\") {\r\n      return { ...state, dragged_features:{},state_range: action.value }\r\n   }\r\n   if (action.type === \"selected_year\") {\r\n      return { ...state,dragged_features:{}, selected_year: action.value}\r\n   }\r\n   if (action.type === \"tracking\") {\r\n      return { ...state, tracking: action.value }\r\n   }\r\n   if (action.type === \"grouped_by_year_data\") {\r\n     \r\n      return { ...state, grouped_by_year_data: action.value }\r\n   }\r\n   if (action.type === \"sort_by\") {\r\n      return { ...state, sort_by: action.value }\r\n   }\r\n   if (action.type === \"deviate_by\") {\r\n      return { ...state, deviate_by: action.value }\r\n   }\r\n   if (action.type === \"mode\") {\r\n      return { ...state, mode: action.value }\r\n   }\r\n   if (action.type === \"slider_max\") {\r\n      return { ...state, slider_max: action.value }\r\n   }\r\n   if (action.type === \"range_mode_model\") {\r\n      return { ...state,pop_over_models:[action.value],range_mode_model: action.value }\r\n   }\r\n   //----\r\n   if (action.type === \"range_mode_range1\") {\r\n      console.log(action.value)\r\n      return { ...state, range_mode_range1: action.value }\r\n   }\r\n   if (action.type === \"range_mode_range2\") {\r\n      console.log(action.value)\r\n      return { ...state, range_mode_range2: action.value }\r\n   }\r\n   if (action.type === \"time_mode_range\") {\r\n      return { ...state, time_mode_range: action.value }\r\n   }\r\n   if (action.type === \"time_mode_model\") {\r\n      return { ...state, pop_over_models:[action.value],time_mode_model: action.value }\r\n   }\r\n   if (action.type === \"time_mode_year1\") {\r\n      return { ...state, time_mode_year1: action.value }\r\n   }\r\n   if (action.type === \"time_mode_year2\") {\r\n      return { ...state, time_mode_year2: action.value }\r\n   }\r\n   if (action.type === \"clicked_items_in_slopechart\") {\r\n      return { ...state, clicked_items_in_slopechart: action.value }\r\n   }\r\n   if (action.type === \"features_with_score\") {\r\n      return { ...state, features_with_score: action.value }\r\n   }\r\n   if (action.type === \"sparkline_data\") {\r\n      return { ...state, sparkline_data: action.value }\r\n   }\r\n   if (action.type === \"legend_show_option\") {\r\n      return { ...state, legend_show_option: action.value }\r\n   }\r\n   if (action.type === \"legend_model\") {\r\n      return { ...state, legend_model: action.value }\r\n   }\r\n   if (action.type === \"histogram_data\") {\r\n      return { ...state,dragged_features:{}, histogram_data: action.value }\r\n   }\r\n   if (action.type === \"dataset\") {\r\n      return { ...state, dataset: action.value }\r\n   }\r\n   if (action.type === \"slider_and_feature_value\") {\r\n      return { ...state, slider_and_feature_value: action.value }\r\n   }\r\n   if (action.type === \"legend_year\") {\r\n      return { ...state, legend_year: action.value }\r\n   }\r\n   if (action.type === \"prev_prop\") {\r\n      return { ...state, prev_prop: action.value }\r\n   }\r\n   if (action.type === \"replay\") {\r\n      return { ...state, replay: action.value }\r\n   }\r\n   if (action.type === \"changed\") {\r\n      return { ...state, changed: action.value }\r\n   }\r\n   if (action.type === \"popup_chart_data\") {\r\n      return { ...state, popup_chart_data: action.value }\r\n   }\r\n   if (action.type === \"pop_over\") {\r\n      return { ...state, pop_over: action.value }\r\n   }\r\n   if (action.type === \"pop_over_models\") {\r\n      var temp = action.value.filter(item => item != \"ListNet\")\r\n      return { ...state, pop_over_models: temp }\r\n   }\r\n   if (action.type === \"clicked_features\") {\r\n      //console.log(action.value)\r\n      return { ...state, clicked_features: action.value }\r\n   }\r\n   return state;\r\n}\r\nexport default reducer;","import { createMuiTheme } from '@material-ui/core/styles';\r\nconst theme = createMuiTheme({\r\n  spacing:3,      \r\n  typography: {\r\n    button: {\r\n      textTransform: 'none'\r\n    }\r\n  },\r\n  overrides:{\r\n    MuiGrid:{\r\n      root:{\r\n        margin:0,\r\n        padding:0\r\n      },\r\n    }\r\n  }\r\n});\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { createStore } from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport reducer from './store/reducer';\r\nimport theme from './Themes'; \r\nimport { ThemeProvider } from '@material-ui/styles';\r\nconst store=createStore(reducer);\r\nReactDOM.render( <ThemeProvider theme={theme}><Provider store={store}><App /></Provider></ThemeProvider>,document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}