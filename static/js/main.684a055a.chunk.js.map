{"version":3,"sources":["Data/data/fiscal/lime/chart1_data.csv","Data/data/school/lime/chart1_data.csv","Data/RUR/RUR_histogram_data.csv","Data/fiscal.csv","Data/school.csv","Data/house.csv","Data/RUR/RUR.csv","Data/data/fiscal/lime/fiscal_rank.csv","Data/data/fiscal/lime/fiscal_lime.csv","Data/data/school/lime/school_rank.csv","Data/data/school/lime/school_lime.csv","Data/RUR/RUR_rank.csv","Data/RUR/RUR_lime.csv","Data/data/house/lime/house_rank.csv","Data/data/house/lime/house_lime.csv","Data/data/house/lime/chart1_data.csv","Algorithms/algo1.js","components/Charts/DevPlot/deviation_chart.js","components/Charts/DevPlot/Sparkline.js","components/Charts/misc_algo.js","components/Charts/Model/ModelSlider.js","store/reducer.js","components/Charts/ExpChart/Create_exp_circles.js","components/Charts/ExpChart/MDS.js","components/Charts/Model/ExpChartComponent.js","components/Charts/Model/YearAndModelSelection/YearModelSelection.js","components/Charts/Popover/CreateCatChart.js","components/Charts/Popover/CreateNumChart.js","components/Charts/Popover/02Charts.js","components/Charts/Popover/FilterModel.js","components/Charts/Popover/01Popover.js","components/Charts/Model/ModelChartComponent.js","components/Charts/Range/SliderGroup1.js","components/Charts/Range/SliderGroup2.js","components/Charts/Range/YearAndModelSelection/YearModelSelection.js","components/Charts/Range/02RangeExpChart.js","components/Charts/Range/04PopoverCharts.js","components/Charts/Range/03RangePopover.js","components/Charts/Range/01RangeChartComponent.js","components/themes.js","components/Charts/Time/Year1DropDown.js","components/Charts/Time/Year2DropDown.js","components/Charts/Time/YearAndModelSelection/Slider.js","components/Charts/Time/YearAndModelSelection/YearModelSelection.js","components/Charts/Time/02ExpChartComponent.js","components/Charts/Time/04PopoverCharts.js","components/Charts/Time/03TimePopover.js","components/Charts/Time/01YearChartComponent.js","components/Top/FeatureHistograms/FeatureHistograms.js","components/Top/FeatureHistograms/CreateBarChart.js","components/Top/FeatureHistograms/CreateHistogram.js","components/Top/FeaturesDropdown.js","components/Top/SelectMode.js","components/Top/theme.js","components/Top/Threshold.js","components/Top/SortModels.js","components/Top/Top.js","components/Legend/Legend.js","App.js","Themes.js","index.js"],"names":["module","exports","sort","type","state_range","default_models","selected_year","grouped_by_year_data","console","log","nDCG_dict","i","Object","keys","forEach","key","parseFloat","items","map","substring","first","second","temp_ndcg","length","includes","push","temp1","myitem","mydict","model","temp","Math","sqrt","temp_ap","groupby_year","original_data","years","sparkline_data","element","replace","temp_dict","year","parseInt","rank","features_with_score","dataset","models","selected_instances","number_of_charts","rank_data","temp_final","temp2","v","top_nine","data","features","tempvoted_data_with_score","filtered_rank_data","filter","index","item","my_features_rank_col","feauture","items2","sorted_features","key2","Create_deviation_chart","parent_id","parent_exp_id","anim_config","average","clicked_circles","Set_clicked_circles","diverginColor","Set_selected_year","threshold","div","d3","selectAll","join","attr","style","parent_width","$","width","parent_height","height","temp_scale_data","abs","config","space_for_state_name","fontSize","font_dy","sparkline_width","font_line_gap","line_stroke_width","animation_duration","container_height","my_svg_top_margin","myg_top_margin","y_distance","circle_radius","t","textures","lines","size","strokeWidth","stroke","background","call","d","enter","append","update","transition","duration","rank_animation","exit","remove","this","text","dd","val","parent","s_margin","s_width","s_height","s_svg","x","domain","range","datum","y0","y","y1","raise","on","preventDefault","Create_sparkline","data_for_all_years","line_data","model_name","a","two_realRank","predicted_rank","temp_max","sclale1","url","d2","deviation_animation","delay","circ_data","classed","html","pageX","pageY","handle_transparency","class_name","circle_id","useStyles","makeStyles","theme","root","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","secondary","tRoot","marginBottom","rang_input","marginLeft","connect","state","mode","slider_max","range_mode_model","range_mode_range1","range_mode_range2","time_mode_model","time_mode_range","time_mode_year1","time_mode_year2","years_for_dropdown","slider_and_feature_value","sort_by","dispatch","Set_state_range","value","Set_changed","Set_default_models","Set_default_model_scores","props","classes","React","useState","sliderRange","set_sliderRange","temp_marks","step","marks","label","className","paddingTop","border","padding","marginTop","TextField","input","id","onChange","event","isNaN","target","alert","margin","Slider","newValue","onChangeCommitted","valueLabelDisplay","aria-labelledby","xs","Button","backgroundColor","onClick","temp_Models","algo1","default_model_scores","initialState","global_config","max_circle_r","feature_animation","circle_animation","appHandleChange","lime_data","slope_chart_ready_to_vis","deviate_by","show","slider_min","view_data","histogram_data","chart_scale_type","ref_year","cmodel","clicked_items_in_slopechart","tracking","dummy","features_dict","features_voted","Legend_ready_to_vis","legend_model","legend_show_option","legend_year","reducer","action","dragged_features","deviation_array","average_y","average_m","dbclicked_features","drag_drop_feautre_data","pop_over_models","prev_prop","replay","changed","popup_chart_data","pop_over","clicked_features","createStore","getState","CreatexpCircle","selection","item_width","item_height","feature_name","feature_contrib_name","sum_data","xScale","my_mean","rScale","exponent","getRandomArbitrary","min","max","seed","rand","rnd","disp","sin","floor","random","getMdsData","myurl","fetch","method","body","JSON","stringify","headers","then","res","json","response","catch","error","Create_MDS","mds_ref","circle_data","mds_id","b","w","h","r","yScale","svg","current","circles","lasso","d3lasso","closePathSelect","closePathDistance","targetArea","possibleItems","notPossibleItems","selected_ids","selectedItems","each","notSelectedItems","SlopeChart","Createsvg","indexed_features","self","under_threshold_instances","year_data","excluded_features","entries","slice","mds_height","feature_containers","setState","Set_clicked_features","feature","unshift","set_dbclicked_features","Set_popup_chart_data","set_pop_over","deltaY","parentNode","origin_index","lower","difference","document","elementFromPoint","sourceEvent","clientX","clientY","origin_feature","dest_index","indexOf","dest_feature","Set_dragged_features","container","feature_contrib_data_for_mds","MDS_response","parse","mds","misc_algo","line_color","exp","createRef","mouseX","mouseY","window","innerHeight","prevProps","prevState","ref","Component","Set_prev_prop","Set_sparkline_data","Set_replay","all_models","sortModels","display","justifyContent","marginRight","fontWeight","modelName","handle_model_click","CreateCatChart","scatterplot_data","feature_contribute","barplot_data","temp_x","temp_y","values","nice","parent_svg","myid","svg1","hist_height","svg0","bandwidth","y2","tickSize","ticks","tickValues","tickFormat","select","CreateNumChart","data_arr","feature_width","data_for_x_axis","data_for_y_axis","bins","histogram","binned_data","area_chart_data","x0","areaGenerator","curve","regression_data","data_by_model","xValue","yValue","regrLine","area","regressionLineBehavior","regr","n","sum_x","sum_y","sum_xy","sum_xx","pair","slope","intercept","points","calculateLinearRegression","errorPoints","RegressionService","getErrorLines","lowerConfidencePoints","prepareConfidencePoints","lowerErrorPoints","upperConfidencePoints","upperErrorPoints","confidencePoints","_","xDomain","uniqueErrorPoints","pointsCount","startLine","calculateLineFromPoints","endLine","p1","p2","inputPoints","outputPoints","stdErr","pow","meanX","stdX","errorMargin","xValueValue","yValueValue","xScaleValue","yScaleValue","regressionLine","minX","maxX","minY","diffX","diffY","data_for_x_axis2","data_for_y_axis2","xScale2","yScale2","Chart","merged_arr","concat","apply","Set_pop_over_models","anchorEl","setAnchorEl","open","Boolean","checked","setChecked","handleToggle","currentIndex","newChecked","splice","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","onClose","TransitionComponent","Fade","List","labelId","ListItem","role","undefined","Checkbox","edge","tabIndex","checkboxChanged","set_clicked_features","position","top","left","pointerEvents","boxShadow","borderBottom","direction","justify","alignItems","FilterModel","maxHeight","overflow","maxWidth","textClickHandler_original","height_slope_exp_chart","interpolate","deviation_chart","selectedModel","Set_selected_instances","Set_deviation_array","Grid","class","columnSpacing","exp_id","Set_range_mode_range1","Set_range_mode_range2","paddingLeft","Set_range_mode_model","exp_data","selected_instances1","data1","selected_instances2","data2","zIndex","paddingRight","SliderGroup1","borderRight","SliderGroup2","createMuiTheme","primary","main","overrides","MuiAutocomplete","MuiFilledInput","MuiInputLabel","MuiTextField","MuiButton","textTransform","fullWidth","Root","disableRipple","variant","MuiCheckbox","InputLabelProps","shrink","MuiPaper","elevation","MuiCard","Set_time_mode_year1","Autocomplete","disableClearable","defaultValue","toString","debug","options","option","renderInput","params","InputProps","disableUnderline","Set_time_mode_year2","Set_time_mode_range","Set_time_mode_model","verticalAlign","Box","sx","borderTop","borderLeft","Year1DropDown","Year2DropDown","FeatureHistograms","store_instances","instances","all_instances","feature_data","filename","exp_fiscal_CordAscent","exp_school_CordAscent","exp_house_CordAscent","rur_histogram_data","nextProps","nextState","feature_index","number_of_features","occur","feature_height","CreateBarChart","item_data","area_chart_height","myticks","thresholds","x1","extent","invert","upper","CreateHistogram","borderRadius","filtered_instances","Set","handleClose","Set_histogram_data","Set_slider_max","SimpleMenu","Set_mode","onSubmit","buttonclickHandler","FormControl","component","FormLabel","RadioGroup","aria-label","name","FormControlLabel","control","Radio","outerTheme","spacing","Set_threshold","set_threshold","ThemeProvider","noValidate","autoComplete","Input","inputProps","Set_sort_by","set_sort_by","App","setTimeout","Set_view_data","ButtonGroup","SelectMode","SortModels","Threshold","Row","handleradioChange","Legend","legend_container_width","legend_container_height","legend1_rScale","legend1_yScale","legend1_height","legend1_ticks","legend1_svg","legend2_svg_height","legend2_yScale","legend2_ticks","rect_height","legend2_svg","legend_width","Set_legend_year","dataprocessor","dataset_name","process_data","school","school_rank","school_lime","fiscal","fiscal_rank","fiscal_lime","house","house_rank","house_lime","rur","rur_rank","rur_lime","slopechart_data_filename","rank_data_filename","lime_data_filename","Set_years_for_dropdown","Set_grouped_by_year_data","Set_original_data","nested_data","Set_rank_data","temp_data","Set_lime_data","selected_dataset","Set_clicked_items_in_slopechart","Set_dataset","innerWidth","keyup","e","Top","Set_ref_year","Set_slider_and_feature_value","button","MuiGrid","store","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.684a055a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chart1_data.d3b20544.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.cca71c9e.csv\";","module.exports = __webpack_public_path__ + \"static/media/RUR_histogram_data.ab6fad30.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal.977bae2d.csv\";","module.exports = __webpack_public_path__ + \"static/media/school.2d2c77ef.csv\";","module.exports = __webpack_public_path__ + \"static/media/house.88979d03.csv\";","module.exports = __webpack_public_path__ + \"static/media/RUR.73572563.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_rank.6e0a824e.csv\";","module.exports = __webpack_public_path__ + \"static/media/fiscal_lime.312a4eb2.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_rank.edf0b9e3.csv\";","module.exports = __webpack_public_path__ + \"static/media/school_lime.2c25b5ee.csv\";","module.exports = __webpack_public_path__ + \"static/media/RUR_rank.1805a0d5.csv\";","module.exports = __webpack_public_path__ + \"static/media/RUR_lime.449c92ba.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_rank.f85c2352.csv\";","module.exports = __webpack_public_path__ + \"static/media/house_lime.b31dfb61.csv\";","module.exports = __webpack_public_path__ + \"static/media/chart1_data.45acbae8.csv\";","//------------------------------------------------------------------------------------------------- Sort Models\nexport function sort(type, state_range, default_models, selected_year, grouped_by_year_data) {\n  console.log(type, state_range, default_models, selected_year, grouped_by_year_data,'sort')\n  //------------Handle ndgc sorting\n  if (type == 'Discounted Cumulative Gain') {\n    var nDCG_dict = { \"ndcg_term_CordAscent\": 0, \"ndcg_term_LambdaMART\": 0, \"ndcg_term_LambdaRank\": 0, \"ndcg_term_LinearReg\": 0, \"ndcg_term_ListNet\": 0, \"ndcg_term_MART\": 0, \"ndcg_term_RandomFor\": 0, \"ndcg_term_RankBoost\": 0, \"ndcg_term_RankNet\": 0 }\n    for (var i = state_range[0]; i < state_range[1]; i++) {\n      Object.keys(nDCG_dict).forEach(key => {\n          nDCG_dict[key] = nDCG_dict[key] + parseFloat(grouped_by_year_data[selected_year][i][key])\n      })\n    }\n    //---- sort\n    var items = Object.keys(nDCG_dict).map(function (key) {\n      return [key.substring(10), nDCG_dict[key]];\n    });\n    items.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    var temp_ndcg = []\n    for (var i = 0; i < items.length; i++) {\n      if (default_models.includes(items[i][0])) {\n        temp_ndcg.push(items[i][0])\n      }\n    }\n    var temp1={}\n    items.map(myitem=>{temp1[myitem[0]]=myitem[1]})\n    console.log(items)\n    return [temp_ndcg,temp1]\n  }\n  //----\n\n  //------------ Handle AP sorting\n  if (type == 'Average Precision') {\n    var mydict = {}\n    default_models.forEach((model) => {\n      var temp = 1\n      for (var i = state_range[0]; i < state_range[1]; i++) {\n        temp = temp + (grouped_by_year_data[selected_year][i][\"two_realRank\"] - grouped_by_year_data[selected_year][i][model]) ** 2\n      }\n      mydict[model] = ((state_range[1] - state_range[0]) + 1) / (Math.sqrt(temp))\n    })\n    //---- sort\n    var items = Object.keys(mydict).map(function (key) {\n      return [key, mydict[key]];\n    });\n    items.sort(function (first, second) {\n      return second[1] - first[1];\n    });\n    var temp_ap = []\n    for (var i = 0; i < items.length; i++) {\n      if (default_models.includes(items[i][0])) {\n        temp_ap.push(items[i][0])\n      }\n    }\n    return [temp_ap,mydict]\n  }\n  //------------Handle Alphabatic sorting\n  if (type == 'Alphabetically') {\n    var temp=default_models.sort()\n    return [temp,[0]]\n  }\n}\nexport function groupby_year(original_data) {\n  var years = {}\n  var sparkline_data = {}\n  original_data.forEach(element => {\n    years[element['1-qid']] = []\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')] = []\n  });\n\n  original_data.forEach(element => {\n    var temp_dict = { year: parseInt(element['1-qid']), rank: parseInt(element['two_realRank']) }\n    sparkline_data[element['State'].replace(/ /g, '').replace(/[^\\w\\s]/gi, '')].push(temp_dict)\n    years[element['1-qid']].push(element)\n  });\n  return { years: years, sparkline_data: sparkline_data };\n}\nexport function features_with_score(dataset, models, selected_instances, selected_year, number_of_charts, rank_data) {\n  //console.log(dataset, models, selected_instances, selected_year, number_of_charts, rank_data,\"abc\")\n  var temp1 = {}\n  var temp_final = {}\n  models.map(model => {\n    var temp2 = {}\n    var v = number_of_charts;\n    var top_nine = sorted_features(dataset, model, selected_instances, selected_year,rank_data)\n    if (top_nine.length < number_of_charts) { v = top_nine.length;; number_of_charts = top_nine.length } // This is because number of charts is calculated based on space but there are cases when we don't have that many features\n    for (var i = 0; i < number_of_charts; i++) {\n      temp2[top_nine[i]] = v;\n      v = v - 1\n    }\n    temp1[model] = temp2\n  });\n\n  for (var key in temp1) {\n    for (var key2 in temp1[key]) {\n      if (temp_final[key2] > 0) {\n\n        temp_final[key2] = temp_final[key2] + temp1[key][key2]\n      }\n      else {\n        temp_final[key2] = temp1[key][key2]\n      }\n    }\n  }\n  console.log(temp_final,\"temp_final\")\n  return temp_final;\n}\nexport function sorted_features(dataset, model, selected_instances, selected_year,rank_data) { // Uses feature rank to rank and return features name by removing the feature_rank string\n  //return Object.keys(rank_data[model][0]).filter(item=>!['1-qid','model'].includes(item)).map(item=>item.replace(\"_feature_rank\", \"\"))\n  if (!selected_instances.length > 0) { return [] }\n  selected_instances = selected_instances.map(element => element -1)\n  var tempvoted_data_with_score = {},items,data,features;\n  if (model == \"ListNet\") { return [] }\n\n  var filtered_rank_data = rank_data[model].filter(element => { if (parseInt(element['1-qid']) == parseInt(selected_year)) { return element } })\n  data = selected_instances.map(index => filtered_rank_data[index])\n  if(dataset==\"rur\"){\n    selected_instances = selected_instances.map(element => element)\n    data=filtered_rank_data.filter(item=>selected_instances.includes(parseInt(item['two_realRank'])))\n  }\n  features = Object.keys(data[0])\n  \n  var my_features_rank_col=features.filter(item=>item.includes(\"_feature_rank\"))\n  features=my_features_rank_col\n  data.map(item => {\n    features.forEach(feauture => {\n      if (tempvoted_data_with_score[feauture] >= 0 || tempvoted_data_with_score[feauture] < 0) {\n        tempvoted_data_with_score[feauture] = tempvoted_data_with_score[feauture] + (parseFloat(item[feauture]))\n      }\n      else { tempvoted_data_with_score[feauture] = parseFloat(item[feauture]) }\n    })\n  })\n  //-----------------------------------------------------------------\n  // Create items array\n  items = Object.keys(tempvoted_data_with_score).map(function (key) {\n    return [key, tempvoted_data_with_score[key]];\n  });\n  // Sort the array based on the second element\n  items.sort(function (first, second) {\n    return first[1] - second[1];\n  });\n  var items2 = items.map((element) => element[0].replace(\"_feature_rank\", \"\"))\n  items2 = items2.filter(item => item != \"1-qid\" && item!=\"model\")\n  //console.log(data,selected_instances,filtered_rank_data,\"items2\")\n  return items2;\n  //-----------------------------------------------------------------\n}\n","import * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport textures from 'textures';\nimport Create_sparkline from \"./Sparkline\"\n\nexport function Create_deviation_chart(parent_id,parent_exp_id, selected_instances, original_data, default_models, anim_config, selected_year, average, clicked_circles, Set_clicked_circles, diverginColor,sparkline_data,Set_selected_year,dataset,threshold) {\n  var div = d3.select(\"body\").selectAll('.tooltip').data([0]).join(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n  var parent_width = $(\"#\" + parent_id).width() - 5\n  var parent_height = $(\".\" + 'deviation_plot_container_div').height() // deviation_plot_container_div is the div that contains the deviation plot for all modes\n  var data = original_data.filter(item => selected_year==item['1-qid'] && selected_instances.includes(parseInt(item['two_realRank'])))\n  var temp_scale_data = []\n  data.map(item => { default_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n  // font_line_gap=sparkline_width+4\n  var config = { space_for_state_name: 120,fontSize: 12, font_dy: -6, sparkline_width:20,font_line_gap: 24, line_stroke_width: 10, animation_duration: 0, container_height: 100, my_svg_top_margin: 10, myg_top_margin: 10 }\n  var y_distance = parent_height/selected_instances.length\n  if(y_distance<15){var y_distance=15}\n  d3.select(\"#\" + parent_id).attr(\"height\",y_distance*selected_instances)\n\n  var circle_radius = config.line_stroke_width / 2\n  var t = textures.lines().size(5).strokeWidth(2).stroke(\"#cccccc\").background(\"gray\");\n  var svg=d3.select(\"#\" + parent_id).attr('height', y_distance + data.length * y_distance).call(t)\n  var parent_g = svg.selectAll(\".parent_g\").data([0]).join('g').attr('class', 'parent_g').attr('transform', \"translate(\" + 0 + \",13)\")\n  var items_g = parent_g.selectAll(\".items\").data(data, d => d['State']).join(enter => enter.append(\"g\").attr(\"class\", \"items\")\n    .attr('transform', (d, i) => \"translate(\" + config.space_for_state_name + \",\" + i * y_distance + \")\")\n    , update => update.transition().duration(anim_config.rank_animation).attr('transform', (d, i) => \"translate(\" + config.space_for_state_name + \",\" + i * y_distance + \")\")\n    , exit => exit.remove()\n  )\n  items_g.attr(\"add_state\", function (d) {\n    d3.select(this).selectAll(\"text\").data([d]).join('text')\n    .text(dd=>{\n      var max_textsize=15\n      var val = d['State']\n          if (val.length > max_textsize) { val = val.replace(\"University\", \"U\") }\n          if(val.length > max_textsize){val = val.substring(0, max_textsize)+\"..\"}\n          return val + \" \" + d['two_realRank'] \n    })\n    .attr('fill', d => diverginColor(d['two_realRank'])).attr(\"dominant-baseline\", \"hanging\").attr(\"font-size\", config.fontSize)\n      .attr(\"x\", 0).attr('text-anchor', 'end').attr(\"dy\", config.font_dy)\n  }).attr(\"add_sparkline\", function (d) {\n    // sparkline height is y_distance\n    if(dataset!='house'){Create_sparkline(d3.select(this),config,config.line_stroke_width,sparkline_data,d,diverginColor,selected_year,Set_selected_year)}\n  })\n    .attr(\"add_lines_and_circles\", function (d) {\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n      var line_data = []\n      default_models.map(model_name => {\n        data_for_all_years.map(item => {\n          var a = {}\n          var two_realRank = parseInt(item['two_realRank2'])\n          var predicted_rank = parseInt(item[model_name])\n          a['two_realRank'] = two_realRank\n          a['predicted_rank'] = predicted_rank\n          a[\"model\"] = model_name\n          a['year'] = item['1-qid']\n          if (Math.abs(predicted_rank - two_realRank) < threshold) {\n            line_data.push(a)\n          }\n        })\n      })\n      // This is only for scaling starts here\n      var temp_scale_data = []\n      data.map(item => { default_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n      var temp_max = d3.max(temp_scale_data)\n      var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, parent_width - (config.space_for_state_name + circle_radius)])\n      if (temp_max == 0) { var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, 0]) }\n      // This is only for scaling ends here\n      d3.select(this).selectAll(\"line\").data([d]).join(enter => enter.append('line')\n        .attr(\"x1\", config.font_line_gap).attr(\"y1\", (d, i) => y_distance * i).attr(\"y2\", (d, i) => y_distance * i).attr(\"stroke-width\", config.line_stroke_width).attr(\"stroke\", t.url()).attr(\"x2\", (d2) => {\n          var temp = []\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n          return sclale1(d3.max(temp))\n        })\n        // Update\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"x2\", (d2) => {\n          var temp = []\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n          return sclale1(d3.max(temp))\n        }))\n      // ------------ Circles start here\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n      var circ_data = []\n      default_models.map(model_name => {\n        data_for_all_years.map(item => {\n          var a = {}\n          var two_realRank = parseInt(item['two_realRank2'])\n          var predicted_rank = parseInt(item[model_name])\n          a['two_realRank'] = two_realRank\n          a['predicted_rank'] = predicted_rank\n          a[\"model\"] = model_name\n          a['year'] = item['1-qid']\n          a['id'] =item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n          a['className']=\"deviation_circles \"+model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n          if (Math.abs(predicted_rank - two_realRank) < threshold) {\n            circ_data.push(a)            \n          }\n        })\n      })\n      var my_circs = d3.select(this).selectAll(\".my_circles\").data(circ_data, d => d['id']).join(\n        enter => enter.append(\"circle\").attr('id', d => d['id']).attr(\"cx\", (d2, i) => {\n          d3.select(this).classed(d2['id'], true)\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n        })\n        // Update\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"cx\", (d2, i) => {\n          d3.select(this).classed(d2['id'], true)\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n        })\n      )\n      my_circs.attr(\"r\",circle_radius).attr('class', d=>'my_circles '+d['className'])\n      .attr('fill', d => diverginColor(d['two_realRank'])).attr(\"parent_id\", parent_exp_id)\n        .on('click', d => Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']]))\n        .on(\"mouseover\", function (d2) {\n          div.transition().duration(200).style(\"opacity\", .9);\n          div.html(\"Year : \" + d2[\"year\"] + \"<br></br>\" + \"Model: \" + d2[\"model\"] + \"<br></br>\" + \"Deviation: \" + Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n          .style(\"left\", (d3.event.pageX - 140) + \"px\").style(\"top\", (d3.event.pageY - 98) + \"px\");\n        }).on(\"mouseout\", function (d2) {\n          //d3.select(this).classed(d2['id'],true)\n          div.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n        })\n\n    })\n\n}","import * as d3 from 'd3';\nexport default function Create_sparkline(parent, config, y_distance, sparkline_data, d, diverginColor, selected_year, Set_selected_year) { // sparkline height is y_distance\n    var year = selected_year\n    var s_margin = { top: 0, right: 0, bottom: 0, left: 4 },\n        s_width = config.sparkline_width - 2,\n        s_height = y_distance - 2;\n    var s_svg = parent.selectAll(\".sparkline_svg\").data([0]).join(\"svg\").attr(\"class\", \"sparkline_svg\").attr(\"x\", 2).attr(\"y\", -3)\n        .attr(\"width\", s_width + s_margin.left + s_margin.right)\n        .attr(\"height\", s_height + s_margin.top + s_margin.bottom)\n    \n    var data = sparkline_data[d['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")]\n    // Add X axis  \n    var x = d3.scaleLinear().domain(d3.extent(data, function (d) { return d.year; })).range([0, s_width]);\n    //-----------------------------------------------------------------------------------------------------------------------------------------Add the area\n    s_svg.selectAll(\"path\").remove()\n    s_svg.append(\"path\")\n        .datum(data, d => d)\n        .attr(\"id\", \"A\")\n        .attr(\"opacity\", 1)\n        .attr(\"fill\", diverginColor(d['two_realRank'])) //#969696\n        .attr(\"stroke\", diverginColor(d['two_realRank']))\n        .attr(\"stroke-width\", (d) => {\n            return 1.5\n        })\n        .attr(\"d\", d3.area()\n            .x(function (d) { return x(d.year) })\n            .y0(function () {\n                var y = d3.scaleLinear().domain([0, d3.max(data, function (d) { return +d.rank; })]).range([s_height, 0]);\n                return y(0)\n            })\n            .y1(function (d) {\n                var y = d3.scaleLinear().domain([0, d3.max(data, function (d) { return +d.rank; })]).range([0, s_height]);\n                return y(d.rank)\n            })\n        )\n    //------------Circles\n    s_svg.selectAll('circle').raise().data(data).join('circle')\n        .attr('cx', function (d, i) { return x(d.year) })\n        .attr('cy', s_height - 2)\n        .attr(\"class\", \"myid\")\n        .on(\"mouseover\", function (d) {\n            d3.select(this).style('fill', 'black')\n            d3.select(this).attr('r', 3)\n        })\n        .style('fill', (d) => d.year != year ? 'transparent' : 'black')\n        .attr('class', (d) => d.year != year ? 'transparent_class' : 'red_class')\n        .attr('r', 2)\n        .on('dblclick', (d, i) => {\n            d3.event.preventDefault();\n            Set_selected_year(d.year)\n        })\n        .on(\"mouseout\", function (d) {\n            d3.select(this).style('fill', 'transparent')\n            d3.select(this).style('fill', d.year != year ? 'transparent' : 'black')\n            d3.select(this).attr('r', 2)\n        })\n}","import * as d3 from 'd3';\nexport function handle_transparency(class_name, clicked_circles, anim_config) {\n    if (clicked_circles.length != 0) { // If there are no clicked circles make all opacity 1\n        d3.selectAll(\".items\").attr('opacity', 0.6) // Groups\n        d3.selectAll(\".\" + \"my_circles\").attr('opacity', 0.3) // Circles\n        clicked_circles.map(circle_id => {\n            d3.selectAll(\".\" + circle_id).attr('opacity', 1) // Groups\n            d3.selectAll(\"#\" + circle_id).attr('opacity', 1) // Circles\n        })\n    }\n    else {\n        d3.selectAll(\".items\").attr('opacity', 1); // Groups\n        d3.selectAll(\".\" + \"my_circles\").attr('opacity', 1) // Circles \n    }\n}","import React from 'react';\nimport * as $ from 'jquery';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport './ModelSlider.scss';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.state_range);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"Modelslider\" style={{height: 70, width: \"99%\",\n            paddingTop: 30, border: \"2px solid rgb(178, 178, 178,0.5)\"\n        }} >\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([\"\", sliderRange[1]])\n                        } else {\n                            if (event.target.value > sliderRange[1]) {\n                                alert(\"Lower range can not be larger than the upper range\")\n                            }\n                            else {\n                                set_sliderRange([event.target.value, sliderRange[1]])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\n                />\n            </div>\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([sliderRange[0], \"\"])\n                        } else {\n                            if (parseInt(event.target.value) > props.slider_max) {\n                                alert(\"Upper range can not exceed maximum\")\n                                set_sliderRange([sliderRange[0], props.slider_max])\n                            }\n                            else {\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\n                    onClick={() => {\n                        var temp_Models = algo1.sort(props.sort_by, sliderRange, props.default_models, props.selected_year, props.grouped_by_year_data)[0];\n                        var default_model_scores = algo1.sort(props.sort_by, sliderRange,props.default_models, props.selected_year, props.grouped_by_year_data)[1];\n                        props.Set_default_model_scores(default_model_scores)\n                        props.Set_default_models([...temp_Models])\n                        props.Set_state_range(sliderRange)\n                    }}\n                >Update range</Button>\n            </div>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        selected_year: state.selected_year,\n        state_range: state.state_range,\n        mode: state.mode, // Model mode model\n        slider_max: state.slider_max,\n        range_mode_model: state.range_mode_model, // Range mode model\n        range_mode_range1: state.range_mode_range1,\n        range_mode_range2: state.range_mode_range2,\n        time_mode_model: state.time_mode_model, // Time mode model\n        time_mode_range: state.time_mode_range,\n        time_mode_year1: state.time_mode_year1,\n        time_mode_year2: state.time_mode_year2,\n        years_for_dropdown: state.years_for_dropdown,\n        dataset: state.dataset,\n        default_models: state.default_models,\n        slider_and_feature_value: state.slider_and_feature_value,\n        sort_by: state.sort_by,\n        grouped_by_year_data: state.grouped_by_year_data\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n        Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","let initialState = {\n   global_config:{max_circle_r:8},\n   anim_config: {rank_animation:3000,deviation_animation:3000,feature_animation:3000,circle_animation:3000},\n   appHandleChange: null,\n   sparkline_data: null,\n   sort_by: \"Average Precision\",\n   original_data: null,\n   rank_data: null,\n   lime_data: null,\n   grouped_by_year_data: null,\n   slope_chart_ready_to_vis: null,\n   default_models: [\"MART\",\"RandomFor\"], // Change the pop_over_models as well\n   state_range: [1, 30], // Change in handleradioChange\n   deviate_by: 0,\n   show: [\n      \"Slope charts\", \"Rankings\", \"Explanation\" // change in app.js\n   ],\n   years_for_dropdown: [\n      \"2006\"\n   ],\n   selected_year: 2011,\n   slider_min: 1,\n   slider_max: 50,\n   view_data: 1,\n   dataset: \"fiscal\", // change in componentDidmount in app.js too\n   histogram_data: [],\n   chart_scale_type: \"true\",\n   features_with_score: null,\n   ref_year: null,\n   cmodel: \"RandomFor\",\n   clicked_items_in_slopechart: [],\n   tracking: false,\n   dummy: null,\n   features_dict: {},\n   features_voted: null,\n   Legend_ready_to_vis: null,\n   legend_model: \"RandomFor\",\n   legend_show_option: \"Rank\",\n   legend_year: 2012,\n   mode: \"Model\",\n   range_mode_model: \"RandomFor\",\n   range_mode_range1: [1, 25],\n   range_mode_range2: [15, 40],\n   time_mode_model: \"RandomFor\",\n   time_mode_year1: \"Null\",\n   time_mode_year2: \"Null\",\n   time_mode_range: [6, 32],\n   chart_scale_type: \"true\",\n   slider_and_feature_value: { 'Rank range': 1, 'Feature': 1 },\n   prev_prop: {},\n   replay: false,\n   changed: \"year\",\n   popup_chart_data: null,\n   pop_over: false,\n   pop_over_models: [\"MART\",\"RandomFor\"],\n   clicked_features: [],\n   drag_drop_feautre_data: {},\n   dbclicked_features: [],\n   default_model_scores: {},\n   all_models: [\"MART\", \"RandomFor\", \"LinearReg\", \"CordAscent\", \"LambdaMART\", \"LambdaRank\", \"RankBoost\", \"RankNet\"],\n   average_y: false,\n   average_m: false,\n   clicked_circles:[],\n   threshold:10000,\n   deviation_array:[], // This is for legend\n   selected_instances:[], // This is for legend\n   dragged_features:{},\n   //url:\"http://0.0.0.0:5000/test\",\n   url:\"http://privacyprofiling.njitvis.com:5000/api/v2/rieval_mds\",\n}\n//---InitialState ends here\nconst reducer = (state = initialState, action) => {\n   if (action.type === \"dragged_features\") {\n      //console.log('dragged_features',action.value)\n      return { ...state, dragged_features: action.value }\n   }\n   if (action.type === \"selected_instances\") {\n      return { ...state, selected_instances: action.value }\n   }\n   if (action.type === \"deviation_array\") {\n      return { ...state, deviation_array: action.value }\n   }\n   if (action.type === \"view_data\") {\n      return { ...state, view_data: action.value }\n   }\n   if (action.type === \"threshold\") {\n      return { ...state, threshold: action.value }\n   }\n   if (action.type === \"clicked_circles\") {\n      console.log(action.value)\n      return { ...state, clicked_circles: action.value }\n   }\n   if (action.type === \"average_y\") {\n      \n      return { ...state, average_y: action.value }\n   }\n   if (action.type === \"average_m\") {\n      \n      return { ...state, average_m: action.value }\n   }\n   if (action.type === \"default_model_scores\") {\n     \n      return { ...state, default_model_scores: action.value }\n   }\n   if (action.type === \"dbclicked_features\") {\n      return { ...state, dbclicked_features: action.value }\n   }\n   if (action.type === \"drag_drop_feautre_data\") {\n      return { ...state, drag_drop_feautre_data: action.value }\n   }\n   if (action.type === \"anim_config\") {\n      return { ...state, config: action.value }\n   }\n   if (action.type === \"show\") {\n      return { ...state, show: action.value }\n   }\n   if (action.type === \"lime_data\") {\n      return { ...state, lime_data: action.value }\n   }\n   if (action.type === \"default_models\") {\n      return { ...state,pop_over_models:action.value, default_models: action.value }\n   }\n   if (action.type === \"rank_data\") {\n\n      return { ...state, rank_data: action.value }\n   }\n   if (action.type === \"original_data\") {\n      return { ...state, original_data: action.value }\n   }\n   if (action.type === \"years_for_dropdown\") {\n      return { ...state, years_for_dropdown: action.value }\n   }\n   if (action.type === \"appHandleChange\") {\n      return { ...state, appHandleChange: action.value }\n   }\n   if (action.type === \"state_range\") {\n      return { ...state, dragged_features:{},state_range: action.value }\n   }\n   if (action.type === \"selected_year\") {\n      return { ...state,dragged_features:{}, selected_year: action.value}\n   }\n   if (action.type === \"tracking\") {\n      return { ...state, tracking: action.value }\n   }\n   if (action.type === \"grouped_by_year_data\") {\n     \n      return { ...state, grouped_by_year_data: action.value }\n   }\n   if (action.type === \"sort_by\") {\n      return { ...state, sort_by: action.value }\n   }\n   if (action.type === \"deviate_by\") {\n      return { ...state, deviate_by: action.value }\n   }\n   if (action.type === \"mode\") {\n      if(action.value=='Model'){\n         return { ...state,pop_over_models:state.default_models, mode: action.value }\n      }\n      if(action.value=='Ranges'){\n         return { ...state,pop_over_models:[state.range_mode_model], mode: action.value }\n      }\n      else{\n         return { ...state,pop_over_models:[state.time_mode_model], mode: action.value }\n      }\n   }\n   if (action.type === \"slider_max\") {\n      return { ...state, slider_max: action.value }\n   }\n   if (action.type === \"range_mode_model\") {\n      return { ...state,pop_over_models:[action.value],range_mode_model: action.value }\n   }\n   //----\n   if (action.type === \"range_mode_range1\") {\n      console.log(action.value)\n      return { ...state, range_mode_range1: action.value }\n   }\n   if (action.type === \"range_mode_range2\") {\n      console.log(action.value)\n      return { ...state, range_mode_range2: action.value }\n   }\n   if (action.type === \"time_mode_range\") {\n      return { ...state, time_mode_range: action.value }\n   }\n   if (action.type === \"time_mode_model\") {\n      return { ...state, pop_over_models:[action.value],time_mode_model: action.value }\n   }\n   if (action.type === \"time_mode_year1\") {\n      return { ...state, time_mode_year1: action.value }\n   }\n   if (action.type === \"time_mode_year2\") {\n      return { ...state, time_mode_year2: action.value }\n   }\n   if (action.type === \"clicked_items_in_slopechart\") {\n      return { ...state, clicked_items_in_slopechart: action.value }\n   }\n   if (action.type === \"features_with_score\") {\n      return { ...state, features_with_score: action.value }\n   }\n   if (action.type === \"sparkline_data\") {\n      return { ...state, sparkline_data: action.value }\n   }\n   if (action.type === \"legend_show_option\") {\n      return { ...state, legend_show_option: action.value }\n   }\n   if (action.type === \"legend_model\") {\n      return { ...state, legend_model: action.value }\n   }\n   if (action.type === \"histogram_data\") {\n      return { ...state,dragged_features:{}, histogram_data: action.value }\n   }\n   if (action.type === \"dataset\") {\n      return { ...state, dataset: action.value }\n   }\n   if (action.type === \"slider_and_feature_value\") {\n      return { ...state, slider_and_feature_value: action.value }\n   }\n   if (action.type === \"legend_year\") {\n      return { ...state, legend_year: action.value }\n   }\n   if (action.type === \"prev_prop\") {\n      return { ...state, prev_prop: action.value }\n   }\n   if (action.type === \"replay\") {\n      return { ...state, replay: action.value }\n   }\n   if (action.type === \"changed\") {\n      return { ...state, changed: action.value }\n   }\n   if (action.type === \"popup_chart_data\") {\n      return { ...state, popup_chart_data: action.value }\n   }\n   if (action.type === \"pop_over\") {\n      return { ...state, pop_over: action.value }\n   }\n   if (action.type === \"pop_over_models\") {\n      var temp = action.value.filter(item => item != \"ListNet\")\n      return { ...state, pop_over_models: temp }\n   }\n   if (action.type === \"clicked_features\") {\n      return { ...state, clicked_features: action.value }\n   }\n   return state;\n}\nexport default reducer;","import * as d3 from \"d3\";\nimport { createStore } from 'redux';\nimport reducer from \"../../../store/reducer\";\nconst store = createStore(reducer);\nconst state = store.getState();\nexport default function CreatexpCircle(d, selection, selected_instances,\n    lime_data, selected_year, default_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, item_width, item_height, deviation_array, index,threshold) {\n    var margin = { item_top_margin: 25, item_bottom_margin: 9, circ_radius: 5, item_left_margin: 9, item_right_margin: 9 }\n    console.log(state,'state')\n    var feature_name = d[0]\n    var feature_contrib_name = d[0] + \"_contribution\"\n    var circ_data = []\n    var sum_data = []\n    default_models.map(model => {\n        lime_data[model].map(item => {\n            if (parseFloat(item[feature_contrib_name])>0 && item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n                if(item['deviation']<threshold){sum_data.push(parseFloat(item[feature_contrib_name]))}\n                item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n                circ_data.push(item)\n            }\n        })\n    })\n    // Draw circle starts here\n    if (isNaN(lime_data[default_models[0]][0][feature_name])) {\n        var yScale = d3.scaleBand().domain(lime_data[default_models[0]].map(item => item[feature_name])).range([margin.item_top_margin, item_height - margin.item_bottom_margin])\n    }\n    else {\n        var yScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[d[0]]))), d3.max(circ_data.map(item => parseFloat(item[d[0]])))]).range([margin.item_top_margin, item_height - margin.item_bottom_margin])\n    }\n    var xScale = d3.scaleLinear().domain([d3.min(circ_data.map(item => parseFloat(item[feature_contrib_name]))), d3.max(circ_data.map(item => parseFloat(item[feature_contrib_name])))]).range([margin.item_left_margin, item_width - margin.item_right_margin])\n    //----------\n    var my_mean = d3.mean(sum_data)\n    //----------\n    selection.selectAll(\".my_mean_line\").data([0]).join(\"line\").attr(\"class\", \"my_mean_line\").attr(\"x1\", xScale(my_mean)).attr(\"x2\", xScale(my_mean)).attr(\"y1\", 18).attr(\"y2\", item_height).attr('stroke', \"rgb(96, 96, 96,0.5)\").attr('stroke-width', 1)\n    var rScale = d3.scalePow().exponent(0.2).domain(d3.extent(deviation_array)).range([state.global_config.max_circle_r, 1])\n    var mycircles = selection.selectAll(\".my_circles\").data(circ_data, d => d['id']).join(\n        enter => enter.append('circle')\n            .attr('id', d => d['id'])\n            .attr('class', d => 'my_circles')\n            .attr(\"transform\", function (d, i) {\n                var x_transform = xScale(parseFloat(d[feature_contrib_name]))\n                var y_transform = getRandomArbitrary(margin.item_top_margin, item_height - margin.item_bottom_margin, i)\n                return \"translate(\" + x_transform + \",\" + y_transform + \")\";\n            })\n            .attr(\"r\", d => d['deviation']>threshold?0:rScale(d['deviation']))\n            //.attr('test',(d)=>console.log(rScale(50),'rScale',d['deviation']))\n        // Update\n        , update => update.attr('class', d => d['id'] + ' items circle2 my_circles')\n            .transition().duration(anim_config.circle_animation).delay(anim_config.rank_animation + anim_config.deviation_animation + anim_config.feature_animation)\n            .attr(\"transform\", function (d, i) {\n                var x_transform = xScale(parseFloat(d[feature_contrib_name]))\n                var y_transform = getRandomArbitrary(margin.item_top_margin, item_height - margin.item_bottom_margin, i)\n                return \"translate(\" + x_transform + \",\" + y_transform + \")\";\n            })\n            .attr('id', d => d['id'])\n            .attr(\"r\", d => d['deviation']>threshold?0:rScale(d['deviation']))\n        , exit => exit.remove())\n    mycircles.attr(\"myindex\",index).attr('feature_name',d[0]).on('click', d => {\n        Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']])\n    })\n    .attr(\"fill\", (d) => {\n        return diverginColor(d['two_realRank']).replace(\")\",\",.7)\")\n    })\n    .style('stroke',(d) => {\n        return diverginColor(d['two_realRank'])\n    })\n    if(index==0){selection.selectAll(\".avg_text\").data(['avg']).join(\"text\").attr(\"x\", xScale(my_mean)+5).attr(\"class\", \"avg_text\").attr(\"myindex\",index).attr(\"y\", (item_height-margin.item_top_margin-margin.item_bottom_margin)/2+margin.item_top_margin).text('avg').attr('font-size', 12)\n    .attr('dominant-baseline', \"middle\").attr('text-anchor','middle').attr('transform',d=>\"rotate(-90,\"+(xScale(my_mean)+5)+\",\"+((item_height-margin.item_top_margin-margin.item_bottom_margin)/2+margin.item_top_margin)+\")\")}\n    else{selection.selectAll('.avg_text').remove()}\n    // Draw circle ends here\n    function getRandomArbitrary(min, max, seed) {\n        min = min || 0;\n        max = max || 1;\n        var rand;\n        if (typeof seed === \"number\") {\n            seed = (seed * 9301 + 49297) % 233280;\n            var rnd = seed / 233280;\n            var disp = Math.abs(Math.sin(seed));\n            rnd = (rnd + disp) - Math.floor((rnd + disp));\n            rand = Math.floor(min + rnd * (max - min + 1));\n        } else {\n            rand = Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n        return rand;\n    }\n}","import * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport * as d3lasso from 'd3-lasso';\nimport { createStore } from 'redux';\nimport reducer from \"../../../store/reducer\";\nconst store = createStore(reducer);\nconst state = store.getState();\nexport default function getMdsData(myurl, data) {\n  return fetch(myurl, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(res => res.json())\n    .then(response => {\n      console.log(response)\n      return response;\n    }).catch(error => console.error('Error: from Json Handler', error));\n}\nexport function Create_MDS(mds_ref,circle_data,mds_id,diverginColor, Set_clicked_circles,deviation_array) {\n  console.log(circle_data,\"MDS_data\")\n  var circle_data=circle_data.sort((a,b)=>b['deviation']-a['deviation'])\n  var rScale = d3.scalePow().exponent(0.2).domain(d3.extent(deviation_array)).range([state.global_config.max_circle_r, 1])\n   \n  //---------------------------------------------------------------------------\n  // Create mds ends here\n  var margin = { item_top_margin: 15, right: 14, bottom: 0, left: 20, circ_radius: 5, item_left_margin: 25, item_right_margin: 3 }\n  var w = $(mds_id).width() - margin.item_left_margin\n  var h = $(mds_id).height() - margin.item_top_margin * 2\n  var r = 5;\n  var xScale = d3.scaleLinear().domain(d3.extent(circle_data.map(item => item['x']))).range([r * 2, w - r * 2])\n  var yScale = d3.scaleLinear().domain(d3.extent(circle_data.map(item => item['y']))).range([r * 2, h - r * 2])\n\n  var svg = d3.select(mds_ref.current).style(\"border\", \"1px solid #eaeaea\")\n  var circles = svg.selectAll(\"circle\")\n    .data(circle_data)\n    .join(\"circle\")\n    .attr(\"cx\", d => xScale(d['x']))\n    .attr(\"cy\", d => yScale(d['y']))\n    .attr(\"r\", d=>rScale(d['deviation']))\n    .attr(\"fill\", (d) => {\n      return diverginColor(d['two_realRank']).replace(\")\",\",.7)\")\n  })\n  .style('stroke',(d) => {\n      return diverginColor(d['two_realRank'])\n  })\n    .attr('id', d => d['id'])\n    .attr('class', 'my_circles')\n  // Lasso functions\n  var lasso_start = function () {\n    lasso.items()\n      .classed(\"not_possible\", true)\n      .classed(\"selected\", false);\n  };\n\n  var lasso_draw = function () {\n    // Style the possible dots\n    lasso.possibleItems()\n      .classed(\"not_possible\", false)\n      .classed(\"possible\", true);\n\n    // Style the not possible dot\n    lasso.notPossibleItems()\n      .classed(\"not_possible\", true)\n      .classed(\"possible\", false);\n  };\n\n  var lasso_end = function () {\n    var selected_ids = []\n    lasso.selectedItems().each(function () {\n      selected_ids.push(d3.select(this).attr(\"id\"))\n    })\n    Set_clicked_circles(selected_ids)\n    // Reset the color of all dots\n    lasso.items()\n      .classed(\"not_possible\", false)\n      .classed(\"possible\", false);\n\n    // Style the selected dots\n    lasso.selectedItems()\n      .classed(\"selected\", true)\n\n    // Reset the style of the not selected dots\n    lasso.notSelectedItems()\n\n  };\n  var lasso = d3lasso.lasso()\n    .closePathSelect(true)\n    .closePathDistance(100)\n    .items(circles)\n    .targetArea(svg)\n    .on(\"start\", lasso_start)\n    .on(\"draw\", lasso_draw)\n    .on(\"end\", lasso_end);\n  svg.call(lasso);\n}\n\n\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { connect } from \"react-redux\";\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as $ from 'jquery';\nimport CreatexpCircle from \"../ExpChart/Create_exp_circles\"\nimport getMdsData from \"../ExpChart/MDS\"\nimport { Create_MDS } from \"../ExpChart/MDS\"\nimport \"../ExpChart/MDS.css\"\nimport * as misc_algo from '../misc_algo'\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.exp = React.createRef()\n    this.mds = React.createRef()\n    this.state = { mds_height: 110, mouseX: 0, mouseY: 0, excluded_features: [], sorted_features: null, circle_data: null, indexed_features: null, random: true }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.Createsvg(this.props.model_name, this.props.dragged_features, null)\n    /*\n    setTimeout(()=>{\n      misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n    },3000)\n    */\n  }\n  Createsvg = (model_name, dragged_features, indexed_features) => {\n    var self = this\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\n    console.log(selected_instances,\"selected_instances\")\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\n    //-------------------- Threshold filter\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n    this.props.default_models.map(model_name => {\n      year_data.map(item => {\n        var two_realRank = parseInt(item['two_realRank'])\n        var predicted_rank = parseInt(item[model_name])\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n          under_threshold_instances.push(two_realRank)\n        }\n      })\n    })\n    selected_instances = selected_instances.filter(item => under_threshold_instances.includes(item))\n    //console.log(selected_instances,\"selected_instances2\")\n    //--------------------\n\n    //------------------------------\n    var number_of_charts = 8 + self.state.excluded_features.length\n    var features_with_score = algo1.features_with_score(this.props.dataset, [model_name], selected_instances, this.props.selected_year, number_of_charts, this.props.rank_data)\n    if (model_name in self.props.dragged_features) { features_with_score = self.props.dragged_features[model_name] }\n    var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\n    var temp_sorted_features = indexed_features.filter(item => !this.state.excluded_features.includes(item))// Exclude crossed features \n    var sorted_features = temp_sorted_features.slice(0, number_of_charts).map((item, index) => [item, index])\n    var marginTop = 5;\n    var parent_height = parseInt($('.explanation_chart_parent').height()) - this.state.mds_height - parseInt($('.title_p').height())\n    var item_width = parseInt($(\"#\" + model_name).width())\n    var item_height = (parent_height - 10) / sorted_features.length - marginTop // 10 is the top margin\n    var feature_containers = d3.select('#' + model_name).attr('height', parent_height).selectAll(\".feature_items\").data(sorted_features, d => d[0])\n      .join(enter => enter.append(\"svg\").attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\n        , update => update.transition().duration(2000).attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\n        , exit => exit.remove()\n      )\n    feature_containers.attr(\"class\", d => \"feature_items \" + d[0]).attr(\"myindex\", (d, i) => i).attr('feature_name', d => d[0])\n    feature_containers.attr(\"add_title_text_and_rect_for_title_text\", function (d, index) {\n      d3.select(this).selectAll(\".title_rect\").data([0]).join('rect').attr(\"class\", \"title_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", 18).attr(\"fill\", \"#e2e2e2\").attr(\"y\", 0).attr(\"x\", 0)\n      d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr(\"class\", \"title_text\").attr(\"myindex\", index).attr('feature_name', d[0]).attr('x', item_width / 2).text(d[0]).attr(\"dominant-baseline\", \"hanging\")\n        .attr(\"y\", 2).attr('text-anchor', 'middle').attr('font-size', 12)\n    })\n    feature_containers.attr(\"add_cross_button\", function (d, index) {\n      d3.select(this).selectAll(\".cross_button\").data([0]).join(\"text\").attr('y', 7.3).attr('dominant-baseline', 'middle').attr(\"myindex\", index).attr('feature_name', d[0]).raise()\n        .attr('x', item_width - 15).style('cursor', 'pointer').attr('font-size', 12).attr('fill', 'black')\n        .text(\"\\uf410\").attr('class', \"cross_button fa make_cursor\").on('click', () => {\n          //alert(\"clicked!\")\n          d3.event.preventDefault()\n          self.setState({ excluded_features: [...self.state.excluded_features, d[0]] })\n        })\n    })\n    feature_containers.attr(\"add_rect_for_circle_background_and_handle_clicks\", function (d, index) {\n      d3.select(this).selectAll(\".circ_rect\").data([0]).join('rect').attr(\"class\", \"circ_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", item_height - 18).attr(\"fill\", \"#f2f2f2\").attr(\"y\", 18).attr(\"x\", 0)\n        .on('click', () => {\n          if (self.props.clicked_features.includes(d[0])) {\n            self.props.Set_clicked_features(self.props.clicked_features.filter(item => item != d[0]))\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").remove()\n          }\n          else {\n            self.props.Set_clicked_features([...self.props.clicked_features, d[0]])\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\n          }\n        })\n        .on('dblclick', () => {\n          var feature = d[0]\n          var year = self.props.selected_year\n          d3.event.preventDefault()\n          var temp = [...self.props.dbclicked_features]\n          if (!temp.includes(feature)) {\n            temp.unshift(feature)\n            d3.selectAll(\".rect\").classed(\"exp_chart_clicked\", true)\n          }\n          self.props.set_dbclicked_features(temp)\n          //self.props.set_dbclicked_features([feature])\n          //----------------------------Data for popup chart\n          var popup_chart_data = {}\n          self.props.default_models.filter(item => item != \"ListNet\").map(model_name => {\n            var data = []\n            if (self.props.histogram_data.length > 0) {\n              data = self.props.lime_data[model_name].filter(element => { if ((parseInt(element['1-qid']) == parseInt(year)) && (self.props.histogram_data.includes(parseInt(element['two_realRank'])))) { return element } });\n            }\n            else {\n              data = self.props.lime_data[model_name].filter(element => parseInt(element['1-qid']) == parseInt(year) && selected_instances.includes(parseInt(element['two_realRank'])))\n            }\n            popup_chart_data[model_name] = data\n          })\n          self.props.Set_popup_chart_data([popup_chart_data, feature]) // This is to update the pop when the year or anything changes during the pop up is open\n          //self.props.Set_popup_chart_data([popup_chart_data, feature])\n          self.props.set_pop_over(true)\n        })\n\n    })\n    feature_containers.attr(\"CreatexpCircle\", function (d, index) {\n      CreatexpCircle(d, d3.select(this), selected_instances, self.props.lime_data, self.props.selected_year, [model_name], self.props.clicked_circles,\n        self.props.Set_clicked_circles, self.props.diverginColor, self.props.anim_config, item_width, item_height, self.props.deviation_array, index,self.props.threshold)\n    }).attr(\"height\", item_height).attr('width', item_width)\n    feature_containers.attr('check_clicked_features', d => {\n      if (self.props.clicked_features.includes(d[0])) {\n        d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\n      }\n    })\n    feature_containers.attr('add_drag_drop', function (d, index) {\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", item_width - 18).attr(\"height\", 18).style(\"fill\", \"transparent\").style('cursor', 'move')\n        .call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended).container(this.parentNode.parentNode)) // Set the parent node based on which the distance will be calculated\n      var deltaY, is_dragging;\n      function dragstarted(event, d) {\n        //d3.select(this).attr(\"width\", '100%').attr(\"height\", '100%').style('fill','rgb(249, 195, 87,0.3)')\n        d3.select(this.parentNode).raise()\n        deltaY = d3.select(this.parentNode).attr(\"y\") - d3.event.y;\n      }\n      function dragged(event, d) {\n        is_dragging = true\n        d3.select(this.parentNode).raise()\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\n      }\n      function dragended(event, d) {\n        var origin_index = parseInt(d3.select(this).attr(\"myindex\")); d3.select(this.parentNode).lower();\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\n        var difference = parseInt(d3.select(document.elementFromPoint(d3.event.sourceEvent.clientX, d3.event.sourceEvent.clientY)).attr(\"myindex\")) - origin_index\n        //if (isNaN(dest_index)) { alert(\"Please drop properly!\"); dest_index = origin_index }\n        var origin_feature = d3.select(this).attr(\"feature_name\")\n\n        var temp1 = {}\n        var number_of_charts = 15 // change this number to have features when cross button clicked\n        self.props.default_models.map(model_name => {\n          var features_with_score = algo1.features_with_score(self.props.dataset, [model_name], selected_instances, self.props.selected_year, number_of_charts, self.props.rank_data)\n          if (model_name in self.props.dragged_features) {\n            features_with_score = self.props.dragged_features[model_name]\n          }\n          var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\n          var origin_index = indexed_features.indexOf(origin_feature)\n          var dest_index = origin_index + difference\n          if (dest_index < 0) { var dest_feature = indexed_features[0] }\n          else if (dest_index > number_of_charts - 1) { var dest_feature = indexed_features[number_of_charts - 1] }\n          else { var dest_feature = indexed_features[dest_index] }\n\n          features_with_score[origin_feature] = features_with_score[origin_feature] - difference\n          features_with_score[dest_feature] = features_with_score[dest_feature] + difference\n          temp1[model_name] = features_with_score\n        })\n        self.props.Set_dragged_features(temp1)\n        //-------------------------------------\n        d3.select(this).raise()\n      }\n    })\n    //--------------------------------------MDS Plot\n    var feature_contrib_data_for_mds = this.props.lime_data[model_name].filter(item => item['1-qid'] == this.props.selected_year && selected_instances.includes(item['two_realRank']))\n    getMdsData(this.props.url, { \"data\": feature_contrib_data_for_mds, \"weight\": features_with_score }).then(data => {\n      if (typeof data != 'undefined') {\n        var MDS_response = JSON.parse(data.response)\n        var circle_data = feature_contrib_data_for_mds.map((item, index) => {\n          item['x'] = MDS_response[index][0]\n          item['y'] = MDS_response[index][1]\n          item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + item[\"model\"].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n          return item\n        })\n        Create_MDS(this.mds, circle_data, \"#mds\" + model_name, self.props.diverginColor, this.props.Set_clicked_circles,this.props.deviation_array)\n        misc_algo.handle_transparency(\"circle2\", self.props.clicked_circles, self.props.anim_config)\n      }\n    })\n  }\n  //------------------------------\n  render() {\n    return (\n      <div key={this.props.model_name} className={\"explanation_chart_parent exp\" + this.props.model_name} style={{ width: '100%', height: '100%', \"border\": this.props.mode == 'Model' ? \"2px solid #e2e2e2\" : 'none', padding: \"2px 5px\" }}>\n        <p className=\"title_p\" style={{ padding: 0, margin: 0 }}>{this.props.model_name}</p>\n        <svg ref={this.mds} id={\"mds\" + this.props.model_name} style={{ margin: 0, width: \"100%\", height: this.state.mds_height }}></svg>\n        <svg ref={this.exp} id={this.props.model_name} style={{ marginTop: 0, width: \"100%\" }}></svg>\n      </div>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    deviation_array: state.deviation_array,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features,\n    threshold: state.threshold,\n    mode: state.mode,\n    dbclicked_features: state.dbclicked_features,\n    dragged_features: state.dragged_features,\n    url: state.url,\n    default_models: state.default_models,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_dragged_features: (val) => dispatch({ type: \"dragged_features\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\n    Set_popup_chart_data: (val) => dispatch({ type: \"popup_chart_data\", value: val }),\n    set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React from 'react';\nimport \"./YearModelSelection.scss\";\nimport { connect } from \"react-redux\";\nimport * as d3 from 'd3';\nimport * as algo1 from \"../../../../Algorithms/algo1\";\nfunction YearModelSelection(props) {\n  var handle_year_click = (year) => {\n    props.Set_selected_year(year)\n    sortModels(year)\n  }\n  var handle_model_click = (model) => {\n    if (props.default_models.includes(model)) {\n      props.Set_default_models(props.default_models.filter(item => item != model))\n    }\n    else {\n      var temp_Models = algo1.sort(props.sort_by, props.state_range, [...props.default_models, model], props.selected_year, props.grouped_by_year_data)[0];\n      var default_model_scores = algo1.sort(props.sort_by, props.state_range, [...props.default_models, model], props.selected_year, props.grouped_by_year_data)[1];\n      props.Set_default_model_scores(default_model_scores)\n      props.Set_default_models([...temp_Models])\n    }\n  }\n  const sortModels = (selected_year) => {\n    var temp_Models = algo1.sort(props.sort_by, props.state_range, props.default_models, selected_year, props.grouped_by_year_data)[0];\n    var default_model_scores = algo1.sort(props.sort_by, props.state_range, props.default_models, selected_year, props.grouped_by_year_data)[1];\n    props.Set_default_model_scores(default_model_scores)\n    props.Set_default_models([...temp_Models])\n    console.log(temp_Models, default_model_scores, 'temp_model')\n  };\n  console.log(props.dataset,\"dataset\")\n  if(props.dataset==\"rur\"){var all_models=[\"MART\",\"RandomFor\"]}else{var all_models=props.all_models}\n  return (\n    <div className=\"model_topbar\" style={{ width: \"100%\", marginBottom: 2, display: 'flex', justifyContent: \"center\", margin: 0 }}>\n      <div ><h5 style={{ display: \"inline-block\", marginLeft: 0, marginRight: 3, fontSize: 16, fontWeight: 600 }}>Years: </h5>{props.years_for_dropdown.map(item => <p className={props.selected_year == item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_year_click(item)}>{item}</p>)}</div>\n      <div style={{ marginLeft: 20 }}><h5 style={{ display: \"inline-block\", marginLeft: 0, marginRight: 3, fontSize: 16, fontWeight: 600 }}>Models:</h5>{all_models.map(item => <p modelName={item} className={props.default_models.includes(item) ? \"years_p_selected years_p model_p\" : \"years_p model_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</div>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n    all_models: state.all_models,\n    selected_year: state.selected_year,\n    years_for_dropdown: state.years_for_dropdown,\n    default_models: state.default_models,\n    sort_by: state.sort_by,\n    grouped_by_year_data: state.grouped_by_year_data,\n    dataset:state.dataset\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import * as d3 from 'd3';\nvar CreateCatChart = (data, feature, scatterplot_data,props) => {\n    var rScale = d3.scalePow().exponent(0.2).domain(d3.extent(props.deviation_array)).range([8, 1])\n    var feature_contribute = feature + \"_contribution\"\n    var margin = { top: 0, right: 30, bottom: 75, left: 50, space_for_hist: 50 }, width = 520 - margin.left - margin.right, height = 270 - margin.top - margin.bottom;\n    var barplot_data = {}\n    data = data.filter(d => parseFloat(d[feature_contribute]) > 0)\n    data.map(item => { if (barplot_data[item[feature]] > 0) { barplot_data[item[feature]] += 1 } else { barplot_data[item[feature]] = 1 } })\n\n    var temp_x = Object.keys(barplot_data),\n        temp_y = Object.values(barplot_data),\n        y = d3.scaleLinear().domain([d3.min(temp_y), d3.max(temp_y)]).range([height, 0]).nice(); // circles will start from y position 10 and go upto height-10\n\n    var x = d3.scaleBand().domain(temp_x).range([0, width]).padding(0.1);\n    // add the x Axis\n    //------------------------------------------------------------- All svgs\n    var parent_svg = d3.select(\"#\" + props.myid).attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom + margin.space_for_hist),\n        svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"y\", margin.space_for_hist).attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\")\n\n    //------------------------------------------------------------------------------------------------------ Create Histogram starts here\n    var hist_height = margin.space_for_hist\n    y = d3.scaleLinear().domain([0, d3.max(temp_y)]).range([hist_height, 0]).nice();\n    var svg0 = parent_svg.selectAll('.svg0').data([0]).join('svg').attr(\"class\", \"svg0\").selectAll(\".myg0\").data([0]).join('g').attr(\"class\", \"myg0\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    // Add line on the bottom of the histogram\n    svg0.selectAll(\".myline\").data([0]).join('line').attr(\"class\", \"myline\").attr(\"x1\", 0).attr(\"y1\", margin.space_for_hist).attr(\"x2\", width).attr(\"y2\", margin.space_for_hist).attr(\"stroke\", \"#EBEBEB\");\n    svg0.selectAll(\"rect\").data(Object.entries(barplot_data)).join('rect')\n        .attr(\"x\", d => x(d[0]))\n        .attr(\"fill\", \"#b7b7b7\")\n        .attr(\"width\", x.bandwidth())\n        .attr(\"y\", d => y(d[1]))\n        .attr(\"height\", d => hist_height - y(d[1]));\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here\n\n    var svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    svg1.selectAll(\".myline2\").data([0]).join('line').attr(\"class\", \"myline2\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\n    svg1.selectAll(\".myline3\").data([0]).join('line').attr(\"class\", \"myline3\").attr(\"x1\", 0).attr(\"y1\", height).attr(\"x2\", width).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\n\n\n    //------------- Add Y axis\n    var y2 = d3.scaleOrdinal().domain([\".\", \"0\", \"..\"]).range([height / 4, height / 2, (3 * height) / 4]); // circles will start from y position 10 and go upto height-10\n    svg1.selectAll(\".myYaxis\").data([0]).join('g').attr(\"class\", \"myYaxis\").call(d3.axisLeft(y2).tickSize(-width * 1.0).ticks(1).tickValues([\"0\"]).tickFormat(d => d))\n        .select(\".domain\").remove()\n    svg1.selectAll(\".myYaxis\").selectAll('text').remove()\n    d3.selectAll('.svg11').selectAll('.myYtext').data([[\"++ ve\", height * .25], [\"+ ve\", height * .75]]).join(\"text\").attr(\"class\", \"myYtext\")\n        .attr(\"x\", 45).attr(\"y\", (d, i) => d[1] + 4).text(d => d[0]).attr('font-size', 14).attr(\"text-anchor\", \"end\")\n\n    //------------- Add X axis\n    svg1.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x).tickSize(-height * 1.3)).selectAll(\"text\")\n        .style(\"text-anchor\", \"end\")\n        .attr(\"dx\", \"-.8em\")\n        .attr(\"dy\", \"0em\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .selectAll(\".tick line\").remove()\n    svg1.selectAll(\".domain\").remove()\n    svg1.selectAll(\".tick line\").attr(\"stroke\", \"#EBEBEB\")\n    //------------------------------------------------------------------------------------------------------ Create Histogram ends here\n    //------------------------------------------------------------------------------------------------------ Scatterplot starts here\n    svg1.selectAll(\".scatterplot_g\").data(scatterplot_data).join('g').attr(\"id\", d => d[0] + \"scatterplot_g_id\").attr(\"class\", \"scatterplot_g\").attr(\"ax\", function (d) {\n        var temp_y = d[1].map(item => parseFloat(item[feature + \"_contribution\"])) // d[1] \n        y = d3.scaleLinear().domain([d3.min(temp_y), d3.max(temp_y)]).range([height, 0]).nice();\n        var circle_data=d[1].sort((a,b)=>a['deviation']-b['deviation'])\n        d3.select(this).selectAll('circle').data(circle_data)\n            .join(\"circle\")\n            .attr(\"cx\", (d, i) => {\n                return x(d[feature]) + x.bandwidth() / 2\n            })\n            .attr(\"cy\", (d, i) => {\n                if (y(parseFloat(d[feature_contribute])) < 10) {\n                    return 10;\n                }\n                else if (y(parseFloat(d[feature_contribute])) > (height - 10)) {\n                    return height - 10;\n                }\n                return y(parseFloat(d[feature_contribute])) - 0\n\n            })\n            .attr(\"actual_Y_value\", d => d[feature_contribute])\n            .attr(\"r\", d => parseFloat(d[feature_contribute]) <= 0 ? 0 : rScale(d['deviation']))\n            .attr(\"fill\", (d) => {\n                return props.diverginColor(d['two_realRank']).replace(\")\",\",.7)\")\n            })\n            .style('stroke',(d) => {\n                return props.diverginColor(d['two_realRank'])\n            })\n            .attr('class', d => 'my_circles')\n            .attr(\"id\", d => d['id'])\n            .on('click', d => {\n                props.Set_clicked_circles(props.clicked_circles.includes(d['id']) ? props.clicked_circles.filter(item => item != d['id']) : [...props.clicked_circles, d['id']])\n            })\n    })\n\n    // Define the div for the tooltip\n    var div = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip2\")\n        .style(\"opacity\", 0);\n    d3.selectAll('.exp_circles')\n        .on(\"mouseover\", function (d) {\n            div.transition()\n                .duration(200)\n                .style(\"opacity\", .9);\n            div.html(\"<p>\" + d['State'] + \"</p>\" + \"<p>\" + \"Model: \" + d3.select(this).attr('dataset_name') + \"</p>\")\n                //div.html(d['State'])\n                .style(\"left\", (d3.event.pageX) + \"px\")\n                .style(\"top\", (d3.event.pageY - 28) + \"px\");\n        })\n        .on(\"mouseout\", function (d) {\n            d3.selectAll('.tooltip2').transition()\n                .duration(500)\n                .style(\"opacity\", 0);\n        })\n\n    //------------------------------------------------------------------------------------------------------ Scatterplot ends here\n}\nexport default CreateCatChart","import * as d3 from 'd3';\nimport * as _ from \"lodash\";\nimport \"./CreateNumChart.css\"\nvar CreateNumChart = (data, feature, scatterplot_data, props) => {\n    var rScale = d3.scalePow().exponent(0.2).domain(d3.extent(props.deviation_array)).range([8, 1])\n    var feature_contribute = feature + \"_contribution\"\n    var scatterplot_data = scatterplot_data.map(data_arr => {\n        var temp = data_arr[1].filter(item => item['deviation'] < props.threshold && parseFloat(item[feature_contribute]) > 0)\n        return [data_arr[0], temp]\n    })\n    // set the dimensions and margins of the graph\n    var margin = { top: 0, right: 30, bottom: 45, left: 50, space_for_hist: 50 },\n        feature_width = 520 - margin.left - margin.right,\n        height = 250 - margin.top - margin.bottom;\n    \n    data = data.filter(d => parseFloat(d[feature_contribute]) > 0)\n    \n    var data_for_x_axis = data.map(item => parseFloat(item[feature])),\n        data_for_y_axis = data.map(item => parseFloat(item[feature_contribute]))\n    \n    var xScale = d3.scaleLinear().domain([d3.min(data_for_x_axis), d3.max(data_for_x_axis)]).range([0, feature_width]).nice(),\n        yScale = d3.scaleLinear().domain([d3.min(data_for_y_axis), d3.max(data_for_y_axis)]).range([height, 0]).nice(); // circles will start from y position 10 and go upto height-10\n    //-------------------------------------------------------------All svgs\n    var parent_svg = d3.select(\"#\" + props.myid).attr(\"width\", feature_width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom + margin.space_for_hist),\n        svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"y\", margin.space_for_hist).attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    \n    //------------------------------------------------------------------------------------------------------Create the areaChart starts here\n    var histogram = d3.histogram().value(d => d).domain(xScale.domain())\n    //.thresholds(xScale.ticks(5))\n    var bins = histogram(data_for_x_axis)\n    var svg0 = parent_svg.selectAll('.svg0').data([0]).join('svg').attr(\"class\", \"svg0\").selectAll(\".myg0\").data([0]).join('g').attr(\"class\", \"myg0\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    svg0.selectAll(\".myline\").data([0]).join('line').attr(\"class\", \"myline\").attr(\"x1\", 0).attr(\"y1\", margin.space_for_hist).attr(\"x2\", feature_width).attr(\"y2\", margin.space_for_hist).attr(\"stroke\", \"#EBEBEB\") // // Add line on the bottom of the histogram\n\n    var histogram = d3.histogram().value(d => d).domain(xScale.domain())\n    //.thresholds(xScale.ticks(25))\n    var binned_data = histogram(data_for_x_axis)\n    \n    var area_chart_data = []\n    binned_data.map((item, i) => area_chart_data.push([item.x0, item.length]))\n    var xScale = d3.scaleLinear().domain(d3.extent(area_chart_data.map(item => item[0]))).range([0, feature_width + 1])\n    var yScale = d3.scaleLinear().domain([0, d3.max(area_chart_data.map(item => item[1]))]).range([margin.space_for_hist, 0])\n    const areaGenerator = d3.area().curve(d3.curveMonotoneX).x(d => xScale(d[0])).y0(yScale(0)).y1(d => yScale(d[1]))\n\n    svg0.selectAll(\".hist_path\").data([0]).join('path').attr('class','hist_path').attr('transform', 'translate(0,' + margin.top + ')')\n        .attr(\"d\", areaGenerator(area_chart_data))\n        .style(\"fill\", \"gray\");\n    //------------------------------------------------------------------------------------------------------ Create the areaChart ends here\n    \n    var svg1 = parent_svg.selectAll('.svg11').data([0]).join('svg').attr(\"class\", \"svg11\").selectAll(\".myg\").data([0]).join('g').attr(\"class\", \"myg\").attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    svg1.selectAll(\".myline2\").data([0]).join('line').attr(\"class\", \"myline2\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", 0).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\n    svg1.selectAll(\".myline3\").data([0]).join('line').attr(\"class\", \"myline3\").attr(\"x1\", 0).attr(\"y1\", height).attr(\"x2\", feature_width).attr(\"y2\", height).attr(\"stroke\", \"#EBEBEB\");\n\n\n\n\n//------------------------------------------------------------------ Regression starts here\nvar regression_data=[]\nscatterplot_data.map(data_by_model=>{data_by_model[1].map(item=>{regression_data.push([parseFloat(item[feature]),parseFloat(item[feature_contribute])])})})\nvar data=regression_data\nvar width = feature_width,\n    height = height;\n// setup x\nvar xValue = function(d) { return d[0];}, // data -> value\n    xScale = d3.scaleLinear().range([0, width]), // value -> display\n    xMap = function(d) { return xScale(xValue(d));}; // data -> display\n// setup y\nvar yValue = function(d) { return d[1];}, // data -> value\n    yScale = d3.scaleLinear().range([height-margin.bottom, 0]), // value -> display\n    yMap = function(d) { return yScale(yValue(d));}; // data -> display\n// add the graph canvas to the body of the webpage\nvar svg = svg1.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom)\nvar regrLine = regressionLine().xScale(xScale).yScale(yScale).xValue(xValue).yValue(yValue);\nvar minX = d3.min(data, xValue), maxX = d3.max(data, xValue);\nvar minY = d3.min(data, yValue), maxY = d3.max(data, yValue);\nvar diffX = (maxX - minX) * 0.05, diffY = (maxY - minY) * 0.05;\nxScale.domain([d3.min(data, xValue) - diffX, d3.max(data, xValue) + diffX]);\nyScale.domain([d3.min(data, yValue) - diffY, d3.max(data, yValue) + diffY]);\n//------------------------------------------------------------------------------------------------------ Draw Circles\n    //------------- Add X axis\n    if (d3.max(d3.max(bins)) > 1000) {\n        svg1.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(xScale).tickSize(-height * 1.3).tickValues(bins.map(item => item['x1'])).tickFormat(d3.format(\".2s\")))\n            .select(\".domain\").remove()\n    }\n    else {\n        svg1.selectAll(\".myXaxis\").data([0]).join('g').attr(\"class\", \"myXaxis\")\n            .attr(\"transform\", \"translate(0,\" + height + \")\")\n            .call(d3.axisBottom(xScale).tickSize(-height * 1.3).tickValues(bins.map(item => item['x1'])))\n            .select(\".domain\").remove()\n    }\n    svg1.selectAll(\".tick line\").attr(\"stroke\", \"#EBEBEB\")\n\nsvg1.selectAll(\".scatterplot_g\").data(scatterplot_data).join('g').attr(\"id\", d => d[0] + \"scatterplot_g_id\").attr(\"class\", \"scatterplot_g\").attr(\"ax\", function (d) {\n    var data_for_x_axis2 = d[1].map(item => parseFloat(item[feature]))\n    var data_for_y_axis2 = d[1].map(item => parseFloat(item[feature_contribute]))\n\n    var xScale2 = d3.scaleLinear().domain([d3.min(data_for_x_axis2), d3.max(data_for_x_axis2)]).range([0, feature_width]).nice() // This scaling is for individual model\n    var yScale2 = d3.scaleLinear().domain([d3.min(data_for_y_axis2), d3.max(data_for_y_axis2)]).range([height, 0]).nice(); // This scaling is for individual model\n    d3.select(this).selectAll('circle').data(d[1])\n        .join(\"circle\")\n        .attr(\"cx\", (d, i) => xScale2(d[feature]))\n        .attr(\"cy\", (d, i) => {\n            if (yScale2(parseFloat(d[feature_contribute])) < 10) {\n                return 10;\n            }\n            else if (yScale2(parseFloat(d[feature_contribute])) > (height - 10)) {\n                return height - 10;\n            }\n            return yScale2(parseFloat(d[feature_contribute])) - 0\n\n        })\n        .attr(\"actual_Y_value\", d => d[feature_contribute] + \" : x value : \" + d[feature])\n        //.attr(\"r\", 4)\n        .attr(\"r\", d => parseFloat(d[feature_contribute]) <= 0 ? 0 : rScale(d['deviation']))\n        .attr(\"fill\", (d) => {\n            return props.diverginColor(d['two_realRank']).replace(\")\",\",.6)\")\n        })\n        .style('stroke',(d) => {\n            return props.diverginColor(d['two_realRank'])\n        })\n        .attr('class', d => 'my_circles')\n        .attr(\"id\", d => d['id'])\n        .on('click', d => {\n            props.Set_clicked_circles(props.clicked_circles.includes(d['id']) ? props.clicked_circles.filter(item => item != d['id']) : [...props.clicked_circles, d['id']])\n        })\n})\n//--------------------------------------------------------------------------------------------------\n\nsvg.selectAll(\".regr\").data([data]).join(\"g\").attr(\"class\", \"regr\").call(regrLine);\nfunction regressionLine() {\n  var xScale, yScale, xValue, yValue;\n  var area = d3.area()\n      .x(function(d) { return xScale(xValue(d[0])); })\n      .y0(function(d) { return yScale(yValue(d[0])); })\n      .y1(function(d) { return yScale(yValue(d[1])); });\n  function regressionLineBehavior(selection) {\n    selection.each(function(data) {\n      // var regr = regression('linear', data, 3);\n      var regr = calculateLinearRegression(data);\n      var regressionService = new RegressionService();\n\n      var errorPoints = regressionService.getErrorLines(data, regr.points);\n      var lowerConfidencePoints = prepareConfidencePoints(errorPoints.lowerErrorPoints);\n      var upperConfidencePoints = prepareConfidencePoints(errorPoints.upperErrorPoints);\n\n      var confidencePoints = _.zip(lowerConfidencePoints, upperConfidencePoints);\n      d3.select(this).selectAll(\".regr-confidence\").data([0]).join('path')\n          .datum(confidencePoints)\n          .attr(\"class\", \"regr-confidence\")\n          .attr(\"d\", area);\n\n      var xDomain = xScale.domain();\n      d3.select(this).selectAll(\".regr-line\").data([0]).join('line')\n          .attr(\"class\", \"regr-line\")\n          .attr(\"x1\", xScale(xDomain[0]))\n          .attr(\"y1\", yScale((xDomain[0] * regr.slope) + regr.intercept))\n          .attr(\"x2\", xScale(xDomain[1]))\n          .attr(\"y2\", yScale((xDomain[1] * regr.slope) + regr.intercept));\n    });\n  }\n\n  regressionLineBehavior.xValue = function(xValueValue) {\n    xValue = xValueValue;\n    return regressionLineBehavior;\n  };\n\n  regressionLineBehavior.yValue = function(yValueValue) {\n    yValue = yValueValue;\n    return regressionLineBehavior;\n  };\n\n  regressionLineBehavior.xScale = function(xScaleValue) {\n    xScale = xScaleValue;\n    return regressionLineBehavior;\n  };\n\n  regressionLineBehavior.yScale = function(yScaleValue) {\n    yScale = yScaleValue;\n    return regressionLineBehavior;\n  };\n\n  function calculateLinearRegression(data) {\n    // Formula is taken from http://stackoverflow.com/questions/6195335/linear-regression-in-javascript\n    var n = data.length;\n    var sum_x = 0;\n    var sum_y = 0;\n    var sum_xy = 0;\n    var sum_xx = 0;\n    var sum_yy = 0;\n\n    data.forEach(function(pair) {\n      sum_x += xValue(pair);\n      sum_y += yValue(pair);\n      sum_xy += xValue(pair) * yValue(pair);\n      sum_xx += xValue(pair) * xValue(pair);\n      sum_yy += yValue(pair) * yValue(pair);\n    });\n\n    var slope = (n * sum_xy - sum_x * sum_y) / (n * sum_xx - sum_x * sum_x);\n    var intercept = (sum_y - slope * sum_x) / n;\n    var points = data.map(function(pair) {\n      return [xValue(pair), slope * xValue(pair) + intercept];\n    });\n\n    return {\n      slope: slope,\n      intercept: intercept,\n      points: points\n    };\n  };\n\n  function prepareConfidencePoints(errorPoints) {\n    var xDomain = xScale.domain();\n\n    var uniqueErrorPoints = _.sortBy(_.uniqBy(errorPoints, xValue), xValue);\n    var pointsCount = uniqueErrorPoints.length;\n    var startLine = calculateLineFromPoints(uniqueErrorPoints[0], uniqueErrorPoints[1]);\n    var endLine = calculateLineFromPoints(uniqueErrorPoints[pointsCount - 1], uniqueErrorPoints[pointsCount - 2]);\n\n    uniqueErrorPoints.unshift([xDomain[0], xDomain[0] * startLine.a + startLine.b]);\n    uniqueErrorPoints.push([xDomain[1], xDomain[1] * endLine.a + endLine.b]);\n\n    return uniqueErrorPoints;\n  }\n\n  function calculateLineFromPoints(p1, p2) {\n    var a = (yValue(p1) - yValue(p2)) / (xValue(p1) - xValue(p2));\n    return {\n      a: a,\n      b: yValue(p1) - a * xValue(p1)\n    };\n  }\n\n  function RegressionService() {\n    function getErrorLines(inputPoints, outputPoints) {\n      // Formula is take from https://www2.stat.duke.edu/courses/Spring13/sta101.001/slides/unit6lec3H.pdf\n      var stdErr = Math.sqrt(_.sum(\n          _.zip(inputPoints.map(yValue), outputPoints.map(yValue))\n              .map(pair => Math.pow(pair[1] - pair[0], 2)))\n          / (inputPoints.length - 2));\n      var meanX = _.sum(inputPoints.map(xValue)) / inputPoints.length;\n\n      var stdX = Math.sqrt(\n          _.sum(inputPoints.map(function(val) {\n            return Math.pow(xValue(val) - meanX, 2);\n          })) / inputPoints.length);\n\n      var errorMargin = outputPoints.map(function(val) {\n        return 1.96 * stdErr * Math.sqrt(\n            1 / inputPoints.length +\n            Math.pow((xValue(val) - meanX), 2)\n                / ((inputPoints.length - 1) * Math.pow(stdX, 2)));\n      });\n\n      return {\n        lowerErrorPoints: _.zip(outputPoints, errorMargin).map(function(pair) {\n          return [xValue(pair[0]), yValue(pair[0]) - pair[1]];\n        }),\n        upperErrorPoints: _.zip(outputPoints, errorMargin).map(function(pair) {\n          return [xValue(pair[0]), yValue(pair[0]) + pair[1]];\n        })\n      };\n    }\n\n    return {\n      getErrorLines: getErrorLines\n    }\n  }\n\n  return regressionLineBehavior;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\nexport default CreateNumChart","import { merge } from 'jquery';\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as misc_algo from '../misc_algo'\nimport CreateCatChart from './CreateCatChart'\nimport CreateNumChart from './CreateNumChart'\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.setState({ a: 5 })\n  }\n  componentDidUpdate() {\n    //console.log(this.props.default_models,'popover',this.props.popup_chart_data[0])\n    var temp_dict = {}\n    this.props.default_models.filter(item => item != \"ListNet\").map(model => {\n      temp_dict[model] = this.props.popup_chart_data[0][model].filter(item=>item['deviation']<this.props.threshold).map(item=>{\n        item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n        return item\n      })\n    })\n    var merged_arr = [].concat.apply([], Object.values(temp_dict))\n    var scatterplot_data = Object.entries(this.props.popup_chart_data[0]).filter(item => this.props.pop_over_models.includes(item[0]))\n    console.log(merged_arr,temp_dict,'temp',scatterplot_data)\n    //----------------------------------------------------------------------------------------------------------Call createChart\n    if (merged_arr.length > 0) { // This is to avoid the error caused by the next line\n      if (isNaN(merged_arr[0][this.props.popup_chart_data[1]])) {\n        CreateCatChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\n      }\n      else {\n        CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\n      }\n    }\n    else {\n      CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array) // calling the function to set the  graph empty when all models are unselected\n    }\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n  }\n\n  render() {\n    return (\n      <div key={this.props.popup_chart_data[1]} style={{ margin: 10, padding: 10, border: this.props.index == 0 ? \"3px solid #e5e5e5\" : \"white\" }}>\n        <svg id={this.props.myid}> </svg>\n        <p style={{ color: \"#4f4c4c\", marginLeft: \"42%\", marginTop: -25, marginBottom: 0 }}>{this.props.popup_chart_data[1]}</p>\n      </div>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    //popup_chart_data: state.popup_chart_data,\n    pop_over_models: state.pop_over_models,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    anim_config:state.anim_config,\n    deviation_array: state.deviation_array,\n  }\n}\n//item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Fade from '@material-ui/core/Fade';\nimport { connect } from \"react-redux\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nfunction FadeMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  //------------For list and chckbox\n  const [checked, setChecked] = React.useState([0]);\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  //----------------\n  const checkboxChanged = (event) => {\n    let temp_Models=[...props.pop_over_models].filter(item=>item!=\"ListNet\")\n    if (temp_Models.includes(event.target.value)) {\n      temp_Models = props.pop_over_models.filter(item => item != event.target.value)\n      props.Set_pop_over_models(temp_Models)\n    }\n    else {\n      temp_Models.push(event.target.value)\n      props.Set_pop_over_models(temp_Models)\n    }\n  }\n  return (\n    <div>\n      <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Filter Models\n        <ArrowDropDownIcon></ArrowDropDownIcon>\n      </Button>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Fade}\n      >\n        <div className=\"CheckboxContainer\">\n          <List>\n            {props.default_models.map((value) => {\n              const labelId = `checkbox-list-label-${value}`;\n              return (\n                <ListItem key={value} role={undefined} onClick={handleToggle(value)}>\n                  <Checkbox\n                    checked={props.pop_over_models.includes(value)}\n                    edge=\"start\"\n                    tabIndex={-1}\n                    value={value}\n                    onChange={(event, value) => {\n                      checkboxChanged(event, value)\n                    }\n                    }\n                  />\n                  <p className=\"list_item_label\" id={labelId}>{value}</p>\n                </ListItem>\n              );\n            })}\n          </List>\n        </div>\n      </Menu>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    pop_over_models:state.pop_over_models\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);\n//https://material-ui.com/components/menus/\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport Chart_pop from './02Charts'\nimport Draggable from 'react-draggable';\nimport Grid from \"@material-ui/core/Grid\"\nimport FilterModel from \"./FilterModel\"\nexport function SimplePopover(props) {\n    console.log(props.default_models, 'popover')\n    const handleClose = () => {\n        props.set_pop_over(false)\n        props.set_dbclicked_features([])\n    };\n    return (\n        <div className=\"pop_over\" style={{ position: \"relative\" }}>\n            {props.pop_over == true ?\n                <div style={{ top: \"2%\", left: \"14%\", position: \"fixed\", pointerEvents: \"none\", backgroundColor: \"transparent\" }}>\n                    <Draggable>\n                        <Grid style={{ backgroundColor: \"#ffffff\", boxShadow: \"3px 2px 15px -7px #000000\", pointerEvents: \"auto\" }}>\n                            <Grid container style={{ borderBottom: \"1px solid #e2e2e2\", marginBottom: 20 }}\n                                direction=\"row\"\n                                justify=\"space-between\"\n                                alignItems=\"center\"\n                            >\n                                <FilterModel default_models={props.default_models}></FilterModel>\n                                <Button color=\"secondary\" id=\"draggable-dialog-title\" onClick={handleClose}>close</Button>\n                            </Grid>\n                            {\n                                props.mode == \"Model\" ? <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\n                                    {\n                                        props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Chart_pop\n                                            index={index}\n                                            popup_chart_data={[props.popup_chart_data[0], item]} default_models={props.default_models}\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')} diverginColor={props.diverginColor}\n                                        ></Chart_pop>) : <Chart_pop popup_chart_data={props.popup_chart_data} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\n                                    }\n                                </Grid> : null\n                            }\n                            {\n                                props.mode == \"Ranges\" ? <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\n                                    {\n                                        props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Chart_pop\n                                            index={index}\n                                            popup_chart_data={[props.popup_chart_data[0], item]} default_models={props.default_models}\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')} diverginColor={props.diverginColor}\n                                        ></Chart_pop>) : <Chart_pop popup_chart_data={props.popup_chart_data} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\n                                    }\n                                </Grid> : null\n                            }\n                            {\n                                props.mode == \"Time\" ? <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\n                                    {\n                                        props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Chart_pop\n                                            index={index}\n                                            popup_chart_data={[props.popup_chart_data[0], item]} default_models={props.default_models}\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')} diverginColor={props.diverginColor}\n                                        ></Chart_pop>) : <Chart_pop popup_chart_data={props.popup_chart_data} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\n                                    }\n                                </Grid> : null\n                            }\n                        </Grid>\n                    </Draggable>\n                </div> : null}\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        popup_chart_data: state.popup_chart_data,\n        pop_over: state.pop_over,\n        dbclicked_features: state.dbclicked_features,\n        mode: state.mode,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\n        set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\n        set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SimplePopover);\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { connect } from \"react-redux\";\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nimport ModelSlider from './ModelSlider';\nimport ExpChart from './ExpChartComponent';\nimport './ModelSlider.scss';\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\nimport Grid from '@mui/material/Grid';\nimport Popover from '../Popover/01Popover';\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() { this.setState({ width: window.innerHeight }) }\n  shouldComponentUpdate(prevProps, prevState) { return true; }\n  componentDidUpdate(prevProps, prevState) {\n    var self=this\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\n\n    //--------------------\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n\n    //-------------------- Threshold filter\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n    this.props.default_models.map(model_name => {\n      year_data.map(item => {\n        var two_realRank = parseInt(item['two_realRank'])\n        var predicted_rank = parseInt(item[model_name])\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n          under_threshold_instances.push(two_realRank)\n        }\n      })\n    })\n    selected_instances = selected_instances.filter(item => under_threshold_instances.includes(item))\n    deviation_chart.Create_deviation_chart('dev_plot_container_svg', 'exp', selected_instances, this.props.original_data, this.props.default_models, this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n    //-------------------------Handle model mousever start here \n    d3.selectAll(\".model_p\").on('mouseover',function(){\n      var selectedModel=d3.select(this).attr('modelName')\n      if(self.props.default_models.includes(selectedModel)){\n        d3.selectAll('.deviation_circles').attr('opacity',0.1)\n        d3.selectAll('.'+selectedModel).attr('opacity',1)  \n      }\n    })\n    .on('mouseout',function(){\n      d3.selectAll('.deviation_circles').attr('opacity',1)\n    })\n  //-------------------------Handle model mousever start here\n  }\n  render() {\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\n    //--------------------\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    this.props.Set_selected_instances(selected_instances)\n    //--------------------\n    var deviation_array = []\n    this.props.default_models.map(model => {\n      this.props.lime_data[model].map(item => {\n        if (item['1-qid'] == this.props.selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n          deviation_array.push(item['deviation'])\n        }\n      })\n    })\n    this.props.Set_deviation_array(deviation_array)\n    //console.log('deviation_array: ', d3.extent(deviation_array))\n    //--------------------\n    return (\n      <Grid className=\"ModelChartParent\" container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ height: '100%', width: '100%', backgroundColor: 'white', margin: 2, padding: 2, boxShadow: \"-2px 1px 4px -1px white\" }}> {/* This model chart's height and width is the parent*/}\n        <Grid item className=\"left_container\" style={{width:400, backgroundColor: \"#fcfcfc\" }}>\n          {/* The deviation plot container starts below */}\n          <div className=\"year_and_model_selector_and_slider_container\"> {/* This is used to calculate the deviation plot height */}\n            <YearModelSelection></YearModelSelection><ModelSlider></ModelSlider>\n          </div>\n          {/* The deviation plot container starts below */}\n          <div class=\"deviation_plot_container_div\" style={{ width: \"100%\", height: $('.ModelChartParent').height() - $('.year_and_model_selector_and_slider_container').height(), marginBottom: 0, overflow: 'scroll' }}>\n            <svg id=\"dev_plot_container_svg\" style={{ width: \"100%\", overflow: 'hidden' }}></svg>\n          </div>\n          {/* The deviation plot container ends here */}\n        </Grid>\n        {/* The explanation plot container starts below */}\n        {this.props.rank_data != null ?\n          <Grid className=\"right_container\" item container xs direction=\"row\" columnSpacing={1} style={{ height: '100%'}}>\n              {\n                this.props.default_models.map((model_name, index) => {\n                  return <Grid item xs={12/this.props.default_models.length} style={{height: \"100%\"}}>\n                    <ExpChart diverginColor={diverginColor} exp_id={\"exp\" + index} default_models={this.props.default_models} state_range={this.props.state_range} selected_year={this.props.selected_year} model_name={model_name}></ExpChart>\n                  </Grid>\n                })\n              }\n            \n          </Grid> : null}\n        {/* The explanation plot container ends here */}\n        <Popover diverginColor={diverginColor} default_models={this.props.default_models}></Popover>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    default_models: state.default_models,\n    histogram_data: state.histogram_data,\n    state_range: state.state_range,\n    selected_year: state.selected_year,\n    lime_data: state.lime_data,\n    default_models: state.default_models,\n    original_data: state.original_data,\n    dataset: state.dataset,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    average_m: state.average_m,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\n    Set_deviation_array: (val) => dispatch({ type: \"deviation_array\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport './ModelSlider.scss';\nimport * as $ from 'jquery'\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.range_mode_range1);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"Modelslider\" \n        style={{height: 70, width: '100%',marginBottom:5,padding: 30, border: \"1px solid rgb(178, 178, 178,0.5)\"}}>\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([\"\", sliderRange[1]])\n                        } else {\n                            if (event.target.value > sliderRange[1]) {\n                                alert(\"Lower range can not be larger than the upper range\")\n                            }\n                            else {\n                                set_sliderRange([event.target.value, sliderRange[1]])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\n                />\n            </div>\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([sliderRange[0], \"\"])\n                        } else {\n                            if (parseInt(event.target.value) > props.slider_max) {\n                                alert(\"Upper range can not exceed maximum\")\n                                set_sliderRange([sliderRange[0], props.slider_max])\n                            }\n                            else {\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\n                    onClick={() => {\n                        props.Set_range_mode_range1(sliderRange)\n                    }}\n                >Update range</Button>\n            </div>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        slider_max: state.slider_max,\n        range_mode_range1: state.range_mode_range1,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport './ModelSlider.scss';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.range_mode_range2);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"Modelslider\" style={{height: 70, width: \"100%\",marginBottom:5, paddingTop: 30,paddingLeft:15, border: \"1px solid rgb(178, 178, 178,0.5)\"}}>\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([\"\", sliderRange[1]])\n                        } else {\n                            if (event.target.value > sliderRange[1]) {\n                                alert(\"Lower range can not be larger than the upper range\")\n                            }\n                            else {\n                                set_sliderRange([event.target.value, sliderRange[1]])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\n                />\n            </div>\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([sliderRange[0], \"\"])\n                        } else {\n                            if (parseInt(event.target.value) > props.slider_max) {\n                                alert(\"Upper range can not exceed maximum\")\n                                set_sliderRange([sliderRange[0], props.slider_max])\n                            }\n                            else {\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\n                    onClick={() => {\n                        props.Set_range_mode_range2(sliderRange)\n                    }}\n                >Update range</Button>\n            </div>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        slider_max: state.slider_max,\n        range_mode_range2: state.range_mode_range2,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\nimport \"./YearModelSelection.scss\";\nimport { connect } from \"react-redux\";\nfunction YearModelSelection(props) {\n  var handle_year_click = (year) => {\n    props.Set_selected_year(year)\n  }\n  var handle_model_click=(model)=>props.Set_range_mode_model(model)\n  if(props.dataset==\"rur\"){var all_models=[\"MART\",\"RandomFor\"]}else{var all_models=props.all_models}\n  return (\n    <div className=\"range_topbar\" style={{width:\"100%\",marginBottom:2,display:'flex',justifyContent: \"center\",margin:0}}>\n    <div ><h5 style={{ display: \"inline-block\", marginLeft: 0,marginRight:3,fontSize:16,fontWeight:600 }}>Years: </h5>{props.years_for_dropdown.map(item => <p className={props.selected_year==item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_year_click(item)}>{item}</p>)}</div>\n    <div style={{marginLeft:20}}><h5 style={{ display: \"inline-block\", marginLeft: 0,marginRight:3,fontSize:16,fontWeight:600}}>Models:</h5>{all_models.map(item => <p className={props.range_mode_model==item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</div>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    all_models:state.all_models,\n    selected_year: state.selected_year,\n    years_for_dropdown: state.years_for_dropdown,\n    default_models: state.default_models,\n    range_mode_model:state.range_mode_model,\n    dataset:state.dataset,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    Set_range_mode_model: (val) => dispatch({ type: \"range_mode_model\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { connect } from \"react-redux\";\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as $ from 'jquery';\nimport CreatexpCircle from \"../ExpChart/Create_exp_circles\"\nimport getMdsData from \"../ExpChart/MDS\"\nimport { Create_MDS } from \"../ExpChart/MDS\"\nimport \"../ExpChart/MDS.css\"\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.exp = React.createRef()\n    this.mds = React.createRef()\n    this.state = { mds_height: 110, mouseX: 0, mouseY: 0, excluded_features: [], sorted_features: null, circle_data: null, indexed_features: null, random: true }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.Createsvg(this.props.model_name, this.props.exp_id, this.props.state_range)\n  }\n  Createsvg = (model_name, exp_id, state_range) => {\n    var self = this\n    var selected_instances = d3.range(state_range[0], state_range[1] + 1)\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\n    //-------------------- Threshold filter\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n    this.props.default_models.map(model_name => {\n      year_data.map(item => {\n        var two_realRank = parseInt(item['two_realRank'])\n        var predicted_rank = parseInt(item[model_name])\n        if (Math.abs(predicted_rank - two_realRank) > this.props.threshold) {\n          under_threshold_instances.push(two_realRank)\n        }\n      })\n    })\n    selected_instances = selected_instances.filter(item => !under_threshold_instances.includes(item))\n    //console.log(selected_instances,\"selected_instances2\")\n    //--------------------\n\n    //------------------------------\n    var number_of_charts = 8 + self.state.excluded_features.length\n    var features_with_score = algo1.features_with_score(this.props.dataset, [model_name], selected_instances, this.props.selected_year, number_of_charts, this.props.rank_data)\n    if (exp_id in self.props.dragged_features) { features_with_score = self.props.dragged_features[exp_id] }\n    var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\n    var temp_sorted_features = indexed_features.filter(item => !this.state.excluded_features.includes(item))// Exclude crossed features \n    var sorted_features = temp_sorted_features.slice(0, number_of_charts).map((item, index) => [item, index])\n    var marginTop = 5;\n    var parent_height = parseInt($('.explanation_chart_parent').height()) - this.state.mds_height - parseInt($('.title_p').height())\n    var item_width = parseInt($(\"#\" + this.props.exp_id).width())\n    var item_height = (parent_height - 10) / sorted_features.length - marginTop // 10 is the top margin\n    var feature_containers = d3.select('#' + this.props.exp_id).attr('height', parent_height).selectAll(\".feature_items\").data(sorted_features, d => d[0])\n      .join(enter => enter.append(\"svg\").attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\n        , update => update.transition().duration(2000).attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\n        , exit => exit.remove()\n      )\n    feature_containers.attr(\"class\", d => \"feature_items \" + d[0]).attr(\"myindex\", (d, i) => i).attr('feature_name', d => d[0])\n    feature_containers.attr(\"add_title_text_and_rect_for_title_text\", function (d, index) {\n      d3.select(this).selectAll(\".title_rect\").data([0]).join('rect').attr(\"class\", \"title_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", 18).attr(\"fill\", \"#e2e2e2\").attr(\"y\", 0).attr(\"x\", 0)\n      d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr(\"class\", \"title_text\").attr(\"myindex\", index).attr('feature_name', d[0]).attr('x', item_width / 2).text(d[0]).attr(\"dominant-baseline\", \"hanging\")\n        .attr(\"y\", 2).attr('text-anchor', 'middle').attr('font-size', 12)\n    })\n    feature_containers.attr(\"add_cross_button\", function (d, index) {\n      d3.select(this).selectAll(\".cross_button\").data([0]).join(\"text\").attr('y', 7.3).attr('dominant-baseline', 'middle').attr(\"myindex\", index).attr('feature_name', d[0]).raise()\n        .attr('x', item_width - 15).style('cursor', 'pointer').attr('font-size', 12).attr('fill', 'black')\n        .text(\"\\uf410\").attr('class', \"cross_button fa make_cursor\").on('click', () => {\n          //alert(\"clicked!\")\n          d3.event.preventDefault()\n          self.setState({ excluded_features: [...self.state.excluded_features, d[0]] })\n        })\n    })\n    feature_containers.attr(\"add_rect_for_circle_background_and_handle_clicks\", function (d, index) {\n      d3.select(this).selectAll(\".circ_rect\").data([0]).join('rect').attr(\"class\", \"circ_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", item_height - 18).attr(\"fill\", \"#f2f2f2\").attr(\"y\", 18).attr(\"x\", 0)\n        .on('click', () => {\n          if (self.props.clicked_features.includes(d[0])) {\n            self.props.Set_clicked_features(self.props.clicked_features.filter(item => item != d[0]))\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").remove()\n          }\n          else {\n            self.props.Set_clicked_features([...self.props.clicked_features, d[0]])\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\n          }\n        })\n        .on('dblclick', () => {\n          var feature = d[0]\n          var year = self.props.selected_year\n          d3.event.preventDefault()\n          var temp = [...self.props.dbclicked_features]\n          if (!temp.includes(feature)) {\n            temp.unshift(feature)\n            //temp.unshift(feature)\n            d3.selectAll(\".rect\").classed(\"exp_chart_clicked\", true)\n          }\n          self.props.set_dbclicked_features(temp)\n          //self.props.set_dbclicked_features([feature])\n          //----------------------------Data for popup chart\n          var popup_chart_data = {}\n          self.props.default_models.filter(item => item != \"ListNet\").map(model_name => {\n            var data = []\n            if (self.props.histogram_data.length > 0) {\n              data = self.props.lime_data[model_name].filter(element => { if ((parseInt(element['1-qid']) == parseInt(year)) && (self.props.histogram_data.includes(parseInt(element['two_realRank'])))) { return element } });\n            }\n            else {\n              data = self.props.lime_data[model_name].filter(element => parseInt(element['1-qid']) == parseInt(year) && selected_instances.includes(parseInt(element['two_realRank'])))\n            }\n            popup_chart_data[model_name] = data\n          })\n          self.props.Set_popup_chart_data([popup_chart_data, feature]) // This is to update the pop when the year or anything changes during the pop up is open\n          //self.props.Set_popup_chart_data([popup_chart_data, feature])\n          self.props.set_pop_over(true)\n        })\n\n    })\n    feature_containers.attr(\"CreatexpCircle\", function (d, index) {\n      CreatexpCircle(d, d3.select(this), selected_instances, self.props.lime_data, self.props.selected_year, [model_name], self.props.clicked_circles,\n        self.props.Set_clicked_circles, self.props.diverginColor, self.props.anim_config, item_width, item_height, self.props.deviation_array, index, self.props.threshold)\n    }).attr(\"height\", item_height).attr('width', item_width)\n    feature_containers.attr('check_clicked_features', d => {\n      if (self.props.clicked_features.includes(d[0])) {\n        d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\n      }\n    })\n    feature_containers.attr('add_drag_drop', function (d, index) {\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", item_width - 18).attr(\"height\", 18).style(\"fill\", \"transparent\").style('cursor', 'move')\n        .call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended).container(this.parentNode.parentNode)) // Set the parent node based on which the distance will be calculated\n      var deltaY, is_dragging;\n      function dragstarted(event, d) {\n        //d3.select(this).attr(\"width\", '100%').attr(\"height\", '100%').style('fill','rgb(249, 195, 87,0.3)')\n        d3.select(this.parentNode).raise()\n        deltaY = d3.select(this.parentNode).attr(\"y\") - d3.event.y;\n      }\n      function dragged(event, d) {\n        is_dragging = true\n        d3.select(this.parentNode).raise()\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\n      }\n      function dragended(event, d) {\n        var origin_index = parseInt(d3.select(this).attr(\"myindex\")); d3.select(this.parentNode).lower();\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\n        var difference = parseInt(d3.select(document.elementFromPoint(d3.event.sourceEvent.clientX, d3.event.sourceEvent.clientY)).attr(\"myindex\")) - origin_index\n        //if (isNaN(dest_index)) { alert(\"Please drop properly!\"); dest_index = origin_index }\n        var origin_feature = d3.select(this).attr(\"feature_name\")\n        var temp1 = {}\n        self.props.exp_data.map((exp_data, index) => { // exp_data={[[\"r1exp\",this.props.range_mode_range1],[\"r2exp\",this.props.range_mode_range2]]}\n          var selected_instances = d3.range(exp_data[1][0], exp_data[1][1] + 1)\n          if (self.props.histogram_data.length > 0) { selected_instances = self.props.histogram_data }\n          var number_of_charts = 15 // change this number to get features when crossed\n          var features_with_score = algo1.features_with_score(self.props.dataset, [model_name], selected_instances, self.props.selected_year,\n            number_of_charts, self.props.rank_data)\n          if (exp_data[0] in self.props.dragged_features) {\n            features_with_score = self.props.dragged_features[exp_data[0]]\n          }\n          var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\n          var origin_index = indexed_features.indexOf(origin_feature)\n          var dest_index = origin_index + difference\n          if (dest_index < 0) { var dest_feature = indexed_features[0] }\n          else if (dest_index > number_of_charts - 1) { var dest_feature = indexed_features[number_of_charts - 1] }\n          else { var dest_feature = indexed_features[dest_index] }\n          features_with_score[origin_feature] = features_with_score[origin_feature] - difference\n          features_with_score[dest_feature] = features_with_score[dest_feature] + difference\n          temp1[exp_data[0]] = features_with_score\n        })\n        self.props.Set_dragged_features(temp1)\n        //-------------------------------------\n        d3.select(this).raise()\n      }\n    })\n    //--------------------------------------MDS Plot-------------------------------------//\n    var feature_contrib_data_for_mds = this.props.lime_data[model_name].filter(item => item['1-qid'] == this.props.selected_year && selected_instances.includes(item['two_realRank']))\n    getMdsData(this.props.url, { \"data\": feature_contrib_data_for_mds, \"weight\": features_with_score }).then(data => {\n      if (typeof data != 'undefined') {\n        var MDS_response = JSON.parse(data.response)\n        var circle_data = feature_contrib_data_for_mds.map((item, index) => {\n          item['x'] = MDS_response[index][0]\n          item['y'] = MDS_response[index][1]\n          item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + item[\"model\"].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n          return item\n        })\n        Create_MDS(this.mds, circle_data, \"#mds\" + this.props.exp_id, self.props.diverginColor, this.props.Set_clicked_circles,this.props.deviation_array)\n      }\n    })\n  }\n  //------------------------------\n  render() {\n    return (\n      <div className={\"explanation_chart_parent exp\" + this.props.model_name} style={{ width: '100%', height: '100%', \"border\": this.props.mode == 'Model' ? \"2px solid #e2e2e2\" : 'none', padding: \"2px 5px\" }}>\n        <p className=\"title_p\" style={{ padding: 0, margin: 0 }}>{this.props.model_name}</p>\n        <svg ref={this.mds} id={\"mds\" + this.props.exp_id} style={{ margin: 0, width: \"100%\", height: this.state.mds_height }}></svg>\n        <svg id={this.props.exp_id} style={{ marginTop: 0, width: \"100%\" }}></svg>\n      </div>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    deviation_array: state.deviation_array,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features,\n    threshold: state.threshold,\n    mode: state.mode,\n    dbclicked_features: state.dbclicked_features,\n    dragged_features: state.dragged_features,\n    url: state.url,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_dragged_features: (val) => dispatch({ type: \"dragged_features\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\n    Set_popup_chart_data: (val) => dispatch({ type: \"popup_chart_data\", value: val }),\n    set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as misc_algo from '../misc_algo'\nimport CreateCatChart from '../Popover/CreateCatChart'\nimport CreateNumChart from '../Popover/CreateNumChart'\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.setState({ a: 5 })\n  }\n  componentDidUpdate() {\n    var merged_arr = this.props.popup_chart_data[0] // only data\n    var scatterplot_data = [[this.props.popup_chart_data[1],this.props.popup_chart_data[0]]] // [feature name, data]\n    //----------------------------------------------------------------------------------------------------------Call createChart\n    if (merged_arr.length > 0) { // This is to avoid the error caused by the next line\n      if (isNaN(merged_arr[0][this.props.popup_chart_data[1]])) {\n        CreateCatChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\n      }\n      else {\n        CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\n      }\n    }\n    else {\n      CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array) // calling the function to set the  graph empty when all models are unselected\n    }\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n  }\n\n  render() {\n    return (\n      <div key={this.props.popup_chart_data[1]} style={{ margin: 10, padding: 10, border: this.props.index == 0 ? \"3px solid #e5e5e5\" : \"white\" }}>\n        <svg id={this.props.myid}> </svg>\n        <p style={{ color: \"#4f4c4c\", marginLeft: \"42%\", marginTop: -25, marginBottom: 0 }}>{this.props.popup_chart_data[1]}</p>\n      </div>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    //popup_chart_data: state.popup_chart_data,\n    pop_over_models: state.pop_over_models,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    anim_config:state.anim_config,\n    deviation_array: state.deviation_array,\n  }\n}\n//item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport Chart_pop from './04PopoverCharts'\nimport Draggable from 'react-draggable';\nimport Grid from '@mui/material/Grid';\nimport * as d3 from 'd3';\nexport function SimplePopover(props) {\n    const handleClose = () => {\n        props.set_pop_over(false)\n        props.set_dbclicked_features([])\n    };\n     //------------------------------\n     var selected_instances = d3.range(d3.min([props.range_mode_range1[0], props.range_mode_range2[0]]), d3.max([props.range_mode_range1[1], props.range_mode_range2[1]]) + 1)\n     var min = d3.min(selected_instances), max = d3.max(selected_instances);\n     var d = (max - min) / 8;\n     var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n     //------------------------------\n     var selected_instances1 = d3.range(props.range_mode_range1[0], props.range_mode_range1[1] + 1)\n     //-------------------- Threshold filter\n     var under_threshold_instances = []\n     var year_data = props.original_data.filter(item => props.selected_year == item['1-qid'])\n       year_data.map(item => {\n         var two_realRank = parseInt(item['two_realRank'])\n         var predicted_rank = parseInt(item[props.range_mode_model])\n         if (Math.abs(predicted_rank - two_realRank) < props.threshold) {\n           under_threshold_instances.push(two_realRank)\n         }\n       })\n     selected_instances1 = selected_instances1.filter(item => under_threshold_instances.includes(item))\n     var data1 = props.lime_data[props.range_mode_model].filter(element => parseInt(element['1-qid']) == parseInt(props.selected_year) && selected_instances1.includes(parseInt(element['two_realRank'])))\n     //------------------------------\n     var selected_instances2 = d3.range(props.range_mode_range2[0], props.range_mode_range2[1] + 1)\n     var under_threshold_instances = []\n     var year_data = props.original_data.filter(item => props.selected_year == item['1-qid'])\n     year_data.map(item => {\n       var two_realRank = parseInt(item['two_realRank'])\n       var predicted_rank = parseInt(item[props.range_mode_model])\n       if (Math.abs(predicted_rank - two_realRank) < props.threshold) {\n         under_threshold_instances.push(two_realRank)\n       }\n     })\n     selected_instances2 = selected_instances2.filter(item => under_threshold_instances.includes(item))\n     var data2 = props.lime_data[props.range_mode_model].filter(element => parseInt(element['1-qid']) == parseInt(props.selected_year) && selected_instances2.includes(parseInt(element['two_realRank'])))\n    \n    return (\n        <div className=\"pop_over\" style={{ position: \"relative\" }}>\n            {props.pop_over == true ?\n                <div style={{ top: \"2%\", left: \"14%\", position: \"fixed\", pointerEvents: \"none\", backgroundColor: \"transparent\" }}>\n                    <Draggable>\n                        <Grid style={{ backgroundColor: \"#ffffff\", boxShadow: \"3px 2px 15px -7px #000000\", pointerEvents: \"auto\",display:\"relative\",zIndex:6 }}>\n                            <Grid container style={{ borderBottom: \"1px solid #e2e2e2\", marginBottom: 20 }} direction=\"row\" justify=\"flex-end\" alignItems=\"center\" >\n                                <Button color=\"secondary\" id=\"draggable-dialog-title\" onClick={handleClose}>close</Button>\n                            </Grid>\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\n                                { \n                                    props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Grid item container direction=\"row\" ><Chart_pop\n                                        index={index}\n                                        popup_chart_data={[data1, item]} default_models={props.default_models}\n                                        myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')+\"range1\"} diverginColor={props.diverginColor}\n                                    ></Chart_pop>\n                                    <Chart_pop\n                                        index={index}\n                                        popup_chart_data={[data2, item]} default_models={props.default_models}\n                                        myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')+\"range2\"} diverginColor={props.diverginColor}\n                                    ></Chart_pop></Grid>\n                                    ) : <Chart_pop popup_chart_data={data1} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\n                                }\n                            </Grid>\n                        </Grid>\n                    </Draggable>\n                </div> : null}\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        range_mode_range1: state.range_mode_range1,\n        range_mode_range2: state.range_mode_range2,\n        range_mode_model: state.range_mode_model,    \n        popup_chart_data: state.popup_chart_data,\n        pop_over: state.pop_over,\n        dbclicked_features: state.dbclicked_features,\n        selected_year: state.selected_year,\n        threshold: state.threshold,\n        original_data: state.original_data,\n        lime_data: state.lime_data,\n        histogram_data: state.histogram_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\n        set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\n        set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SimplePopover);\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nimport SliderGroup1 from './SliderGroup1';\nimport SliderGroup2 from './SliderGroup2';\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\nimport ExpChart from './02RangeExpChart';\nimport Popover from './03RangePopover';\n\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    //------------------------------\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1)\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    //------------------------------\n    var selected_instances1 = d3.range(this.props.range_mode_range1[0], this.props.range_mode_range1[1] + 1)\n    //-------------------- Threshold filter\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n      year_data.map(item => {\n        var two_realRank = parseInt(item['two_realRank'])\n        var predicted_rank = parseInt(item[this.props.range_mode_model])\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n          under_threshold_instances.push(two_realRank)\n        }\n      })\n    \n    selected_instances1 = selected_instances1.filter(item => under_threshold_instances.includes(item))\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\n    //------------------------------\n    var selected_instances2 = d3.range(this.props.range_mode_range2[0], this.props.range_mode_range2[1] + 1)\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank'])\n      var predicted_rank = parseInt(item[this.props.range_mode_model])\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank)\n      }\n    })\n    selected_instances2 = selected_instances2.filter(item => under_threshold_instances.includes(item))\n\n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\n    //------------------------------\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    //------------------------------\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1)\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    this.props.Set_selected_instances(selected_instances)\n    //--------------------\n    var deviation_array = []\n\n    this.props.lime_data[this.props.range_mode_model].map(item => {\n      if (item['1-qid'] == this.props.selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n        deviation_array.push(item['deviation'])\n      }\n    })\n    this.props.Set_deviation_array(deviation_array)\n    //console.log('deviation_array: ', d3.extent(deviation_array))\n    //--------------------\n    return (\n      <Grid key={this.props.mode} className=\"RangeChartParent\" container direction=\"row\" justifyContent=\"space-between\"\n        className=\"slope_chart_exp\" style={{ width: \"100%\", height: '100%', backgroundColor: 'white', padding: \"0px 0px\", overflow: 'hidden' }}>\n        <div className=\"year_and_model_selector_and_slider_container\" style={{ width: \"100%\" }}> {/* This is used to calculate the deviation plot height */}\n          <YearModelSelection></YearModelSelection>\n        </div>\n        {/* Group 1 */}\n        <Grid className=\"Group1_container\" style={{ height: \"100%\", width: \"49.4%\", paddingRight: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\" justifyContent=\"space-between\">\n          <p className=\"title_p1\" style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 1</p>\n          <Grid className=\"slidergroup1\" item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><SliderGroup1></SliderGroup1></Grid>\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\n              <svg id=\"r1d\" style={{ width: \"100%\", padding: 5 }}></svg>\n            </Grid>\n            {\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\n                <ExpChart diverginColor={diverginColor} exp_data={[[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]]} exp_id=\"r1exp\" state_range={this.props.range_mode_range1} selected_year={this.props.selected_year} model_name={this.props.range_mode_model} default_models={[this.props.range_mode_model]}></ExpChart>\n              </Grid> : null\n            }\n          </Grid>\n        </Grid>\n        {/* Group 2 */}\n        <Grid className=\"Group2_container\" style={{ height: \"100%\", width: \"49.4%\", marginLeft: '0.5%', paddingRight: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\" justifyContent=\"space-between\">\n          <p className=\"title_p2\" style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 2</p>\n          <Grid className=\"slidergroup2\" item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><SliderGroup2></SliderGroup2></Grid>\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group2_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\n              <svg id=\"r2d\" style={{ width: \"100%\", padding: 5 }}></svg>\n            </Grid>\n            {\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\n                <ExpChart diverginColor={diverginColor} exp_data={[[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]]} exp_id=\"r2exp\" state_range={this.props.range_mode_range2} selected_year={this.props.selected_year} model_name={this.props.range_mode_model} default_models={[this.props.range_mode_model]}></ExpChart>\n              </Grid> : null\n            }\n          </Grid>\n        </Grid>\n        <Popover diverginColor={diverginColor} default_models={[this.props.range_mode_model]}></Popover>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    mode: state.mode,\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    range_mode_model: state.range_mode_model,\n    lime_data: state.lime_data,\n    selected_year: state.selected_year,\n    original_data: state.original_data,\n    dataset: state.dataset,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    average_m: state.average_m,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    histogram_data: state.histogram_data,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\n    Set_deviation_array: (val) => dispatch({ type: \"deviation_array\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import { createMuiTheme } from \"@material-ui/core/styles\";\n\n// Create a theme instance.\nconst outerTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0069d9\"\n    },\n    secondary: {\n      main: \"#0069d9\"\n    }\n  }\n})\n\n\n\nexport var year1_drop_down = createMuiTheme({\n  overrides: { // This is the place we override classes applied to a component\n    MuiAutocomplete:{\n        root:{\n            \n        }\n    },\n    MuiFilledInput: { // This is the name of the component\n      root: { // This is the class we want to edit\n        backgroundColor: \"none\",\n        \n      }\n    },\n    MuiInputLabel: {\n      root: {\n\n      }\n    },\n    MuiTextField: {\n      root: {}\n    },\n    MuiButton: {\n      root: {\n        textTransform: \"none\",\n        padding: \"15px\"\n      },\n      fullWidth: {\n        maxWidth: \"100%\"\n      }\n    },\n    MuiFilledInput:{\n      root:{\n        padding:0,\n        backgroundColor:\"yellow\"\n      }\n    },\n    MuiAutocomplete:{\n      Root:{\n        padding:0\n      }\n    }\n\n  },\n  props: { // This is the place where we define props\n    MuiButton: {\n      disableRipple: true,\n      variant: \"contained\",\n      color: \"primary\"\n    },\n    MuiCheckbox: {\n      disableRipple: true\n    },\n    MuiTextField: {\n      variant: \"filled\",\n      InputLabelProps: {\n        shrink: true\n      }\n    },\n    MuiPaper: {\n      elevation: 12\n    },\n    MuiCard: {\n      elevation: 2\n    },\n  }\n});\n\nexport default outerTheme\n\n\n\n\n/*\nconst theme = createMuiTheme({\n  overrides: {\n    MuiOutlinedInput: {\n      root: {\n        \"& $notchedOutline\": {\n          borderColor: \"green\"\n        },\n        \"&:hover $notchedOutline\": {\n          borderColor: \"red\"\n        },\n        \"&$focused $notchedOutline\": {\n          borderColor: \"purple\"\n        },\n        \"&&& $input\": {\n          padding: \"1px\"\n        }\n      }\n    }\n  }\n});\n*/","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from \"react-redux\";\nimport * as themes from '../../themes'\nfunction FadeMenu(props) {\n    return (\n            <div className=\"year_drop_down_container1\">\n                <p style={{ margin: 0, marginTop: 3, fontSize: 16, fontWeight: 600 }}>Year 1 :</p>\n                <Autocomplete style={{ width: 100 }} disableClearable\n                    defaultValue={props.time_mode_year1.toString()}\n                    id=\"debug\"\n                    debug\n                    options={props.years_for_dropdown.map((option) => option)}\n                    renderInput={(params) => (\n                        <TextField {...params} margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                    )}\n                    onChange={(event, value) => {\n                        props.Set_time_mode_year1(value)\n                    }}\n                />\n            </div>\n        \n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        time_mode_year1: state.time_mode_year1,\n        years_for_dropdown: state.years_for_dropdown,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);","import React from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { connect } from \"react-redux\";\nfunction FadeMenu(props) {\n    return (\n        <div className=\"year_drop_down_container1\">\n            <p style={{margin:0,marginTop:3,fontSize:16,fontWeight:600}}>Year 2 :</p>\n            <Autocomplete style={{width:100}} disableClearable\n                defaultValue={props.time_mode_year2.toString()}\n                id=\"debug\"\n                debug\n                options={props.years_for_dropdown.map((option) => option)}\n                renderInput={(params) => (\n                    <TextField {...params} margin=\"normal\" fullWidth={true} InputProps={{ ...params.InputProps, disableUnderline: true }} />\n                )}\n                onChange={(event, value) => {\n                    props.Set_time_mode_year2(value)\n                }}\n            />\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        time_mode_year2: state.time_mode_year2,\n        years_for_dropdown: state.years_for_dropdown,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(FadeMenu);","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport './Slider.scss';\nimport * as $ from 'jquery'\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.time_mode_range);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"YearSlider\" \n        style={{height: 70, width:'100%',padding: 30}}>\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([\"\", sliderRange[1]])\n                        } else {\n                            if (event.target.value > sliderRange[1]) {\n                                alert(\"Lower range can not be larger than the upper range\")\n                            }\n                            else {\n                                set_sliderRange([event.target.value, sliderRange[1]])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"slider\" style={{width: \"100%\", margin: \"0px 0px\" }}>\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\n                />\n            </div>\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([sliderRange[0], \"\"])\n                        } else {\n                            if (parseInt(event.target.value) > props.slider_max) {\n                                alert(\"Upper range can not exceed maximum\")\n                                set_sliderRange([sliderRange[0], props.slider_max])\n                            }\n                            else {\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"button\" item style={{ marginTop: -10 }}>\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30,fontWeight:600,fontSize:18 }}\n                    onClick={() => {\n                        props.Set_time_mode_range(sliderRange)\n                    }}\n                >Update range</Button>\n            </div>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        slider_max: state.slider_max,\n        time_mode_range: state.time_mode_range,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","import React from 'react';\nimport \"./YearModelSelection.scss\";\nimport { connect } from \"react-redux\";\nimport Slider from './Slider'\nimport Grid from '@material-ui/core/Grid'\nfunction YearModelSelection(props) {\n  var handle_year_click = (year) => {\n    props.Set_selected_year(year)\n  }\n  var handle_model_click = (model) => props.Set_time_mode_model(model)\n  if(props.dataset==\"rur\"){var all_models=[\"MART\",\"RandomFor\"]}else{var all_models=props.all_models}\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" style={{width:'100%',height:76,padding:3}}>\n      <Grid item xs={4} style={{marginTop:5, marginLeft: 5,verticalAlign:'baseline' }}><h5 style={{ display: \"inline-block\", marginRight: 5,marginTop:-4, fontSize: 20,fontWeight:600 }}>Models:</h5>{all_models.map(item => <p className={props.time_mode_model == item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</Grid>\n      <Grid item xs={6} style={{marginLeft:15,overflow:'scroll'}}><Slider></Slider></Grid>\n    </Grid>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    all_models: state.all_models,\n    selected_year: state.selected_year,\n    years_for_dropdown: state.years_for_dropdown,\n    default_models: state.default_models,\n    time_mode_model: state.time_mode_model,\n    dataset:state.dataset\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    Set_time_mode_model: (val) => dispatch({ type: \"time_mode_model\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { connect } from \"react-redux\";\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport * as $ from 'jquery';\nimport CreatexpCircle from \"../ExpChart/Create_exp_circles\"\nimport getMdsData from \"../ExpChart/MDS\"\nimport { Create_MDS } from \"../ExpChart/MDS\"\n\nimport \"../ExpChart/MDS.css\"\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.mds = React.createRef()\n    this.state = { mds_height: 110, mouseX: 0, mouseY: 0, excluded_features: [], sorted_features: null, circle_data: null, indexed_features: null, random: true }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.Createsvg(this.props.model_name,this.props.exp_id,this.props.state_range,this.props.selected_year)\n  }\n  Createsvg = (model_name,exp_id,state_range,selected_year) => {\n    var self = this\n    var selected_instances = d3.range(state_range[0], state_range[1] + 1)\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\n    //-------------------- Threshold filter\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n    this.props.default_models.map(model_name => {\n      year_data.map(item => {\n        var two_realRank = parseInt(item['two_realRank'])\n        var predicted_rank = parseInt(item[model_name])\n        if (Math.abs(predicted_rank - two_realRank) > this.props.threshold) {\n          under_threshold_instances.push(two_realRank)\n        }\n      })\n    })\n    selected_instances = selected_instances.filter(item => !under_threshold_instances.includes(item))\n    //--------------------\n\n    //------------------------------\n    var number_of_charts = 8 + self.state.excluded_features.length\n    var features_with_score = algo1.features_with_score(this.props.dataset, [model_name], selected_instances, selected_year, number_of_charts, this.props.rank_data)\n    if(exp_id in self.props.dragged_features){features_with_score=self.props.dragged_features[exp_id]}\n    var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0]) \n    var temp_sorted_features = indexed_features.filter(item => !this.state.excluded_features.includes(item))// Exclude crossed features \n    var sorted_features = temp_sorted_features.slice(0, number_of_charts).map((item, index) => [item, index])\n    var marginTop = 5;\n    var parent_height = parseInt($('.explanation_chart_parent').height()) - this.state.mds_height - parseInt($('.title_p').height())\n    var item_width = parseInt($(\"#\" + this.props.exp_id).width())\n    var item_height = (parent_height - 10) / sorted_features.length - marginTop // 10 is the top margin\n    var feature_containers = d3.select('#' + this.props.exp_id).attr('height', parent_height).selectAll(\".feature_items\").data(sorted_features, d => d[0])\n      .join(enter => enter.append(\"svg\").attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\n        , update => update.transition().duration(2000).attr(\"y\", (d, i) => marginTop + i * (item_height + marginTop))\n        , exit => exit.remove()\n      )\n    feature_containers.attr(\"class\", d => \"feature_items \" + d[0]).attr(\"myindex\", (d, i) => i).attr('feature_name', d => d[0])\n    feature_containers.attr(\"add_title_text_and_rect_for_title_text\", function (d, index) {\n      d3.select(this).selectAll(\".title_rect\").data([0]).join('rect').attr(\"class\", \"title_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", 18).attr(\"fill\", \"#e2e2e2\").attr(\"y\", 0).attr(\"x\", 0)\n      d3.select(this).selectAll(\".title_text\").data([0]).join('text').attr(\"class\", \"title_text\").attr(\"myindex\", index).attr('feature_name', d[0]).attr('x', item_width / 2).text(d[0]).attr(\"dominant-baseline\", \"hanging\")\n        .attr(\"y\", 2).attr('text-anchor', 'middle').attr('font-size', 12)\n    })\n    feature_containers.attr(\"add_cross_button\", function (d, index) {\n      d3.select(this).selectAll(\".cross_button\").data([0]).join(\"text\").attr('y', 7.3).attr('dominant-baseline', 'middle').attr(\"myindex\", index).attr('feature_name', d[0]).raise()\n        .attr('x', item_width - 15).style('cursor', 'pointer').attr('font-size', 12).attr('fill', 'black')\n        .text(\"\\uf410\").attr('class', \"cross_button fa make_cursor\").on('click', () => {\n          //alert(\"clicked!\")\n          d3.event.preventDefault()\n          self.setState({ excluded_features: [...self.state.excluded_features, d[0]] })\n        })\n    })\n    feature_containers.attr(\"add_rect_for_circle_background_and_handle_clicks\", function (d, index) {\n      d3.select(this).selectAll(\".circ_rect\").data([0]).join('rect').attr(\"class\", \"circ_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", \"100%\").attr(\"height\", item_height - 18).attr(\"fill\", \"#f2f2f2\").attr(\"y\", 18).attr(\"x\", 0)\n        .on('click', () => {\n          if (self.props.clicked_features.includes(d[0])) {\n            self.props.Set_clicked_features(self.props.clicked_features.filter(item => item != d[0]))\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").remove()\n          }\n          else {\n            self.props.Set_clicked_features([...self.props.clicked_features, d[0]])\n            d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\n          }\n        })\n        .on('dblclick', () => {\n          var feature = d[0]\n          var year = selected_year\n          d3.event.preventDefault()\n          var temp = [...self.props.dbclicked_features]\n          if (!temp.includes(feature)) {\n            temp.unshift(feature)\n            d3.selectAll(\".rect\").classed(\"exp_chart_clicked\", true)\n          }\n          self.props.set_dbclicked_features(temp)\n          //self.props.set_dbclicked_features([feature])\n          //----------------------------Data for popup chart\n          var popup_chart_data = {}\n          self.props.default_models.filter(item => item != \"ListNet\").map(model_name => {\n            var data = []\n            if (self.props.histogram_data.length > 0) {\n              data = self.props.lime_data[model_name].filter(element => { if ((parseInt(element['1-qid']) == parseInt(year)) && (self.props.histogram_data.includes(parseInt(element['two_realRank'])))) { return element } });\n            }\n            else {\n              data = self.props.lime_data[model_name].filter(element => parseInt(element['1-qid']) == parseInt(year) && selected_instances.includes(parseInt(element['two_realRank'])))\n            }\n            popup_chart_data[model_name] = data\n          })\n          self.props.Set_popup_chart_data([popup_chart_data, feature]) // This is to update the pop when the year or anything changes during the pop up is open\n          //self.props.Set_popup_chart_data([popup_chart_data, feature])\n          self.props.set_pop_over(true)\n        })\n\n    })\n    feature_containers.attr(\"CreatexpCircle\", function (d, index) {\n      CreatexpCircle(d, d3.select(this), selected_instances, self.props.lime_data, selected_year, [model_name], self.props.clicked_circles,\n        self.props.Set_clicked_circles, self.props.diverginColor, self.props.anim_config, item_width, item_height, self.props.deviation_array, index,self.props.threshold)\n    }).attr(\"height\", item_height).attr('width', item_width)\n    feature_containers.attr('check_clicked_features', d => {\n      if (self.props.clicked_features.includes(d[0])) {\n        d3.selectAll(\".\" + d[0]).selectAll(\".border_rect\").data([0]).join('rect').attr(\"class\", \"border_rect\").attr(\"width\", \"100%\").attr(\"height\", \"100%\").style(\"stroke\", \"black\").style(\"fill\", \"none\").style(\"stroke-width\", 5)\n      }\n    })\n    feature_containers.attr('add_drag_drop', function (d, index) {\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"width\", item_width - 18).attr(\"height\", 18).style(\"fill\", \"transparent\").style('cursor', 'move')\n        .call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended).container(this.parentNode.parentNode)) // Set the parent node based on which the distance will be calculated\n      var deltaY, is_dragging;\n      function dragstarted(event, d) {\n        d3.select(this.parentNode).raise()\n        deltaY = d3.select(this.parentNode).attr(\"y\") - d3.event.y;\n      }\n      function dragged(event, d) {\n        is_dragging = true\n        d3.select(this.parentNode).raise()\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\n      }\n      function dragended(event, d) {\n        var origin_index = parseInt(d3.select(this).attr(\"myindex\")); d3.select(this.parentNode).lower();\n        d3.select(this.parentNode).attr(\"y\", d3.event.y + deltaY);\n        var difference = parseInt(d3.select(document.elementFromPoint(d3.event.sourceEvent.clientX, d3.event.sourceEvent.clientY)).attr(\"myindex\"))-origin_index\n        //if (isNaN(dest_index)) { alert(\"Please drop properly!\"); dest_index = origin_index }\n        var origin_feature = d3.select(this).attr(\"feature_name\")\n        \n        var temp1={}\n        self.props.exp_data.map((exp_data,index) => { // exp_data={[[\"r1exp\",this.props.range_mode_range1],[\"r2exp\",this.props.range_mode_range2]]}\n          var selected_instances = d3.range(state_range[0], state_range[1] + 1)\n          if (self.props.histogram_data.length > 0) { selected_instances = self.props.histogram_data }\n          var number_of_charts = 15 // change this number to get features when crossed\n          var features_with_score = algo1.features_with_score(self.props.dataset, [model_name], selected_instances, exp_data[1],\n            number_of_charts, self.props.rank_data)\n          if(exp_data[0] in self.props.dragged_features){\n            features_with_score=self.props.dragged_features[exp_data[0]]\n          }\n          var indexed_features = Object.entries(features_with_score).sort((a, b) => b[1] - a[1]).map((item, i) => item[0])\n          var origin_index=indexed_features.indexOf(origin_feature)\n          var dest_index=origin_index+difference\n          if(dest_index<0){var dest_feature=indexed_features[0]}\n          else if(dest_index>number_of_charts-1){var dest_feature=indexed_features[number_of_charts-1]}\n          else{var dest_feature=indexed_features[dest_index]}\n\n          console.log(origin_feature,dest_feature,indexed_features,dest_index,exp_data[1][0],'test')\n\n          features_with_score[origin_feature]=features_with_score[origin_feature]-difference\n          features_with_score[dest_feature]=features_with_score[dest_feature]+difference\n          temp1[exp_data[0]]=features_with_score\n        })\n        console.log(temp1,'temp1')\n        self.props.Set_dragged_features(temp1)\n        //-------------------------------------\n        d3.select(this).raise()\n      }\n    })\n    //--------------------------------------MDS Plot-------------------------------------//\n    var feature_contrib_data_for_mds = this.props.lime_data[model_name].filter(item => item['1-qid'] == selected_year && selected_instances.includes(item['two_realRank']))\n    getMdsData(this.props.url, { \"data\": feature_contrib_data_for_mds, \"weight\": features_with_score }).then(data => {\n      if (typeof data != 'undefined') {\n        var MDS_response = JSON.parse(data.response)\n        var circle_data = feature_contrib_data_for_mds.map((item, index) => {\n          item['x'] = MDS_response[index][0]\n          item['y'] = MDS_response[index][1]\n          item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + item[\"model\"].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n          return item\n        })\n        Create_MDS(this.mds, circle_data, \"#mds\" + this.props.exp_id, self.props.diverginColor, this.props.Set_clicked_circles,this.props.deviation_array)\n      }\n    })\n  }\n  //------------------------------\n  render() {\n    return (\n      <div className={\"explanation_chart_parent exp\" + this.props.model_name} style={{ width: '100%', height: '100%', \"border\": this.props.mode == 'Model' ? \"2px solid #e2e2e2\" : 'none', padding: \"2px 5px\" }}>\n        <p className=\"title_p\" style={{ padding: 0, margin: 0 }}>{this.props.model_name}</p>\n        <svg ref={this.mds} id={\"mds\" + this.props.exp_id} style={{ margin: 0, width: \"100%\", height: this.state.mds_height }}></svg>\n        <svg id={this.props.exp_id} style={{ marginTop: 0, width: \"100%\" }}></svg>\n      </div>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    deviation_array: state.deviation_array,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    show: state.show,\n    average_m: state.average_m,\n    average_y: state.average_y,\n    lime_data: state.lime_data,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    clicked_features: state.clicked_features,\n    threshold: state.threshold,\n    mode: state.mode,\n    dbclicked_features: state.dbclicked_features,\n    dragged_features: state.dragged_features,\n    url: state.url,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_dragged_features: (val) => dispatch({ type: \"dragged_features\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_prev_prop: (val) => dispatch({ type: \"prev_prop\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_replay: (val) => dispatch({ type: \"replay\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\n    Set_popup_chart_data: (val) => dispatch({ type: \"popup_chart_data\", value: val }),\n    set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as misc_algo from '../misc_algo'\nimport CreateCatChart from '../Popover/CreateCatChart'\nimport CreateNumChart from '../Popover/CreateNumChart'\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.setState({ a: 5 })\n  }\n  componentDidUpdate() {\n    var merged_arr = this.props.popup_chart_data[0] // only data\n    var scatterplot_data = [[this.props.popup_chart_data[1],this.props.popup_chart_data[0]]] // [feature name, data]\n    //----------------------------------------------------------------------------------------------------------Call createChart\n    if (merged_arr.length > 0) { // This is to avoid the error caused by the next line\n      if (isNaN(merged_arr[0][this.props.popup_chart_data[1]])) {\n        CreateCatChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\n      }\n      else {\n        CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\n      }\n    }\n    else {\n      CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array) // calling the function to set the  graph empty when all models are unselected\n    }\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n  }\n\n  render() {\n    return (\n      <div key={this.props.popup_chart_data[1]} style={{ margin: 10, padding: 10, border: this.props.index == 0 ? \"3px solid #e5e5e5\" : \"white\" }}>\n        <svg id={this.props.myid}> </svg>\n        <p style={{ color: \"#4f4c4c\", marginLeft: \"42%\", marginTop: -25, marginBottom: 0 }}>{this.props.popup_chart_data[1]}</p>\n      </div>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    //popup_chart_data: state.popup_chart_data,\n    pop_over_models: state.pop_over_models,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    anim_config:state.anim_config,\n    deviation_array: state.deviation_array,\n  }\n}\n//item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport Chart_pop from './04PopoverCharts'\nimport Draggable from 'react-draggable';\nimport Grid from '@mui/material/Grid';\nimport * as d3 from 'd3';\nexport function SimplePopover(props) {\n    const handleClose = () => {\n        props.set_pop_over(false)\n        props.set_dbclicked_features([])\n    };\n    //------------------------------\n    var selected_instances = d3.range(props.time_mode_range[0], props.time_mode_range[1] + 1)\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n\n    //----------\n    var under_threshold_instances = []\n    var year_data = props.original_data.filter(item => props.time_mode_year1 == item['1-qid'])\n    year_data.map(item => {\n        var two_realRank = parseInt(item['two_realRank'])\n        var predicted_rank = parseInt(item[props.time_mode_model])\n        if (Math.abs(predicted_rank - two_realRank) < props.threshold) {\n            under_threshold_instances.push(two_realRank)\n        }\n    })\n    var selected_instances1 = selected_instances.filter(item => under_threshold_instances.includes(item))\n    var data1 = props.lime_data[props.time_mode_model].filter(element => parseInt(element['1-qid']) == parseInt(props.time_mode_year1) && selected_instances1.includes(parseInt(element['two_realRank'])))\n    //------------------------------\n    var under_threshold_instances = []\n    var year_data = props.original_data.filter(item => props.time_mode_year2 == item['1-qid'])\n    year_data.map(item => {\n        var two_realRank = parseInt(item['two_realRank'])\n        var predicted_rank = parseInt(item[props.time_mode_model])\n        if (Math.abs(predicted_rank - two_realRank) < props.threshold) {\n            under_threshold_instances.push(two_realRank)\n        }\n    })\n    var selected_instances2 = selected_instances.filter(item => under_threshold_instances.includes(item))\n    var data2 = props.lime_data[props.time_mode_model].filter(element => parseInt(element['1-qid']) == parseInt(props.time_mode_year2) && selected_instances2.includes(parseInt(element['two_realRank'])))\n\n    return (\n        <div className=\"pop_over\" style={{ position: \"relative\" }}>\n            {props.pop_over == true ?\n                <div style={{ top: \"2%\", left: \"14%\", position: \"fixed\", pointerEvents: \"none\", backgroundColor: \"transparent\" }}>\n                    <Draggable>\n                        <Grid style={{ backgroundColor: \"#ffffff\", boxShadow: \"3px 2px 15px -7px #000000\", pointerEvents: \"auto\", display: \"relative\", zIndex: 6 }}>\n                            <Grid container style={{ borderBottom: \"1px solid #e2e2e2\", marginBottom: 20 }} direction=\"row\" justify=\"flex-end\" alignItems=\"center\" >\n                                <Button color=\"secondary\" id=\"draggable-dialog-title\" onClick={handleClose}>close</Button>\n                            </Grid>\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\n                                {\n                                    props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Grid item container direction=\"row\" ><Chart_pop\n                                        index={index}\n                                        popup_chart_data={[data1, item]} default_models={props.default_models}\n                                        myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '') + \"range1\"} diverginColor={props.diverginColor}\n                                    ></Chart_pop>\n                                        <Chart_pop\n                                            index={index}\n                                            popup_chart_data={[data2, item]} default_models={props.default_models}\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '') + \"range2\"} diverginColor={props.diverginColor}\n                                        ></Chart_pop></Grid>\n                                    ) : <Chart_pop popup_chart_data={data1} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\n                                }\n                            </Grid>\n                        </Grid>\n                    </Draggable>\n                </div> : null}\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        time_mode_year1: state.time_mode_year1,\n        time_mode_year2: state.time_mode_year2,\n        time_mode_model: state.time_mode_model,\n        time_mode_range: state.time_mode_range,\n        popup_chart_data: state.popup_chart_data,\n        pop_over: state.pop_over,\n        dbclicked_features: state.dbclicked_features,\n        selected_year: state.selected_year,\n        threshold: state.threshold,\n        original_data: state.original_data,\n        lime_data: state.lime_data,\n        histogram_data: state.histogram_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\n        set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\n        set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SimplePopover);\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport './YearModeComponent.scss';\nimport { connect } from \"react-redux\";\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\nimport * as misc_algo from '../misc_algo'\nimport * as $ from 'jquery';\nimport Year1DropDown from './Year1DropDown';\nimport Year2DropDown from './Year2DropDown';\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\nimport ExpChart from './02ExpChartComponent';\nimport Popover from './03TimePopover';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    //------------------------------\n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n\n    //----------\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.time_mode_year1 == item['1-qid'])\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank'])\n      var predicted_rank = parseInt(item[this.props.time_mode_model])\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank)\n      }\n    })\n    var selected_instances1 = selected_instances.filter(item => under_threshold_instances.includes(item))\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.time_mode_model], this.props.anim_config, this.props.time_mode_year1, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_time_mode_year1, this.props.dataset, this.props.threshold)\n    //------------------------------\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.time_mode_year2 == item['1-qid'])\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank'])\n      var predicted_rank = parseInt(item[this.props.time_mode_model])\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank)\n      }\n    })\n    var selected_instances2 = selected_instances.filter(item => under_threshold_instances.includes(item))\n    \n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.time_mode_model], this.props.anim_config, this.props.time_mode_year2, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_time_mode_year2, this.props.dataset, this.props.threshold)\n    //------------------------------\n    misc_algo.handle_transparency(\"circle2\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n    this.props.Set_selected_instances(selected_instances)\n    return (\n      <Box className=\"box_root\" sx={{ width: '100%',height:'100%', padding: 0.5 }}>\n        <Grid container justifyContent=\"space-between\">\n          <Grid item xs={12}>\n            <div className=\"year_and_model_selector_and_slider_container\" style={{ width: '100%' }}><YearModelSelection></YearModelSelection></div>\n          </Grid>\n          {/* Group 1 */}\n          <Grid item xs={5.9} className=\"Group1_container\" style={{ borderTop: '2px solid #eaeaea',borderLeft: '2px solid #eaeaea',borderRight: '2px solid #eaeaea'}}>\n            <Grid container>\n              <Grid item xs={12} style={{padding:0}}>\n                <div className=\"slidergroup1\" style={{ width: '100%', height: 30 }}><Year1DropDown></Year1DropDown></div>\n              </Grid>\n              <Grid className=\"dev_plot_and_exp_container\" item xs={6}>\n                <div className=\"deviation_plot_container_div\" style={{ width: '100%', height:$('.box_root').height() - ($('.year_and_model_selector_and_slider_container').height() + $('.slidergroup1').height()),overflow: 'scroll' }}><svg id=\"r1d\" style={{ width: \"100%\"}}></svg></div>\n              </Grid>\n              <Grid item xs={6}>\n                {\n                  this.props.rank_data != null ? <div className=\"explanation_plot_container\" style={{ width: '100%', height: '100%', }}>\n                    <ExpChart exp_data={[[\"r1exp\", this.props.time_mode_year1], [\"r2exp\", this.props.time_mode_year2]]} diverginColor={diverginColor} exp_id=\"r1exp\" default_models={[this.props.time_mode_model]} state_range={this.props.time_mode_range} selected_year={this.props.time_mode_year1} model_name={this.props.time_mode_model}></ExpChart>\n                  </div> : null\n                }\n              </Grid>\n            </Grid>\n          </Grid>\n          {/* Group 2 */}\n          <Grid item xs={5.9} style={{ borderTop: '2px solid #eaeaea',borderLeft: '2px solid #eaeaea',borderRight: '2px solid #eaeaea' }}>\n            <Grid container>\n              <Grid item xs={12} style={{padding:0}}>\n                <div className=\"slidergroup2\" style={{ width: '100%', height: 30 }}><Year2DropDown></Year2DropDown></div>\n              </Grid>\n              <Grid item xs={6}>\n                <div className=\"deviation_plot_container_div\" style={{ width: '100%', height:$('.box_root').height() - ($('.year_and_model_selector_and_slider_container').height() + $('.slidergroup2').height()),overflow: 'scroll' }}><svg id=\"r2d\" style={{ width: \"100%\" }}></svg></div>\n              </Grid>\n              <Grid item xs={6}>\n                  {\n                    this.props.rank_data != null ? <div className=\"explanation_plot_container\" style={{ width: '100%', height: 500, }}>\n                      <ExpChart exp_data={[[\"r1exp\", this.props.time_mode_year1], [\"r2exp\", this.props.time_mode_year2]]} diverginColor={diverginColor} exp_id=\"r2exp\" default_models={[this.props.time_mode_model]} state_range={this.props.time_mode_range} selected_year={this.props.time_mode_year2} model_name={this.props.time_mode_model}></ExpChart>\n                    </div> : null\n                  }\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Popover diverginColor={diverginColor} default_models={[this.props.time_mode_model]}></Popover>\n      </Box>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    mode: state.mode,\n    time_mode_range: state.time_mode_range,\n    time_mode_model: state.time_mode_model,\n    default_models: state.default_models,\n    original_data: state.original_data,\n    dataset: state.dataset,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    average_m: state.average_m,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    histogram_data: state.histogram_data,\n\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_time_mode_year1:(val) => dispatch({ type: \"time_mode_year1\", value: val }),\n    Set_time_mode_year2:(val) => dispatch({ type: \"time_mode_year2\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as $ from \"jquery\"\nimport * as d3 from 'd3';\nimport exp_fiscal_CordAscent from \"../../../Data/data/fiscal/lime/chart1_data.csv\";\nimport exp_school_CordAscent from \"../../../Data/data/school/lime/chart1_data.csv\";\nimport exp_house_CordAscent from \"../../../Data/data/house/lime/chart1_data.csv\";\nimport rur_histogram_data from \"../../../Data/RUR/RUR_histogram_data.csv\";\nimport * as algo1 from \"../../../Algorithms/algo1\";\nimport CreateHistogram from './CreateHistogram'\nimport CreateBarChart from './CreateBarChart';\nimport Button from '@material-ui/core/Button';\nimport { delay } from 'lodash';\nclass FeatureHistograms extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { feature_data: [] };\n    }\n    componentDidMount() {\n        var filename; if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent } else if (this.props.dataset == \"house\") { filename = exp_house_CordAscent } else if (this.props.dataset == \"rur\") { filename = rur_histogram_data }\n        d3.csv(filename).then(feature_data => {\n            this.setState({ feature_data: feature_data,all_instances:{} })\n        })\n    }\n    store_instances=(feature_name,instances)=>{\n        var temp={...this.state.all_instances}\n        temp[feature_name]=instances\n        this.setState({all_instances:temp})\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        if(typeof(this.state.all_instances)!=\"undefined\" && JSON.stringify(nextState.all_instances)!==JSON.stringify(this.state.all_instances)){\n            return false\n        }\n        return true    \n    }\n    componentDidUpdate() {\n        var self = this\n        var filename;\n        var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\n        //--------------------\n        var number_of_charts = 9\n        var features_dict = algo1.features_with_score(this.props.dataset, this.props.default_models, selected_instances, this.props.selected_year, number_of_charts, this.props.rank_data)\n        var sorted_features = Object.entries(features_dict).sort((first, second) => second[1] - first[1]).map(element => element[0])\n        //--------------------\n        if (this.props.dataset == \"fiscal\") { filename = exp_fiscal_CordAscent } else if (this.props.dataset == \"school\") { filename = exp_school_CordAscent } else if (this.props.dataset == \"rur\") { filename = rur_histogram_data }\n        //--------------------------------Iterate through each features\n        const margin = { top: 10, right: 5, bottom: 50, left: 5 }; // Histogram\n        //const margin = { top: 10, right: 5, bottom: 40, left: 5 } // Barchart\n        d3.select(\".feature_histograms_container\").selectAll(\".feature\").data(sorted_features, d => d).join(\"svg\").attr(\"class\", 'feature')\n            //.attr(\"width\", feature_width)\n            //.attr(\"y\", (d, feature_index) => feature_height * feature_index)\n            .attr(\"add_histogram\", function (d, feature_index) {\n                var histogram_data = []\n                if (!isNaN(self.state.feature_data[0][d])) {\n                    self.state.feature_data.forEach(element => {\n                        if (element[\"1-qid\"] == self.props.selected_year) {\n                            var temp_dict = {}\n                            temp_dict[\"x\"] = parseInt(element['two_realRank'])\n                            temp_dict[\"y\"] = parseFloat(element[d])\n                            histogram_data.push(temp_dict)\n                        }\n                    });\n                    CreateHistogram(histogram_data, d3.select(this), d, feature_index, sorted_features.length,self.store_instances)\n                }\n                else {\n                    self.state.feature_data.forEach(element => {\n                        if (element[\"1-qid\"] == self.props.selected_year) {\n                            var temp_dict = {}\n                            temp_dict[\"x\"] = parseInt(element['two_realRank'])\n                            temp_dict[\"y\"] = element[d]\n                            histogram_data.push(temp_dict)\n                        }})\n                    CreateBarChart(histogram_data, d3.select(this), d, feature_index, sorted_features.length,self.store_instances,self.state.all_instances)\n                }\n            })\n            .attr('id',d=>d)\n            //.call(d3.brush().extent([[0, margin.top], [400, 65]]))\n        //--------------------------------Iterate through each features\n    }\n    render() {\n        return (\n            this.props.original_data != null ? <div style={{display:'relative', width: 400,marginTop:-8 }}>\n                <Button fullWidth style={{margin:0,position:'sticky',top:0,backgroundColor:\"gray\",borderRadius:0}} onClick={()=>{\n                    var selected_instances=[...new Set([].concat(...Object.values(this.state.all_instances)))]\n                    var filtered_instances=selected_instances.filter(item => item>=this.props.state_range[0] && item<=this.props.state_range[1])\n                    this.props.handleClose() // This will close the select menu\n                    if(filtered_instances.length==0){alert(\"No instance is available withing the selected range!\")}\n                    this.props.Set_histogram_data([...filtered_instances])\n                }}> Update </Button>\n                <div className=\"feature_histograms_container_div\" style={{display:'relative', width: 400, height: window.innerHeight, overflow: \"scroll\",marginTop:-8 }}>\n                <svg className=\"feature_histograms_container\" style={{ width: \"100%\", padding: 10 }}> </svg>\n                </div>\n            </div> : null\n        );\n    }\n}\nconst maptstateToprop = (state) => {\n    return {\n        dataset: state.dataset,\n        deviate_by: state.deviate_by,\n        state_range: state.state_range,\n        default_models: state.default_models,\n        selected_year: state.selected_year,\n        sparkline_data: state.sparkline_data,\n        show: state.show,\n        mode: state.mode,\n        original_data: state.original_data,\n        rank_data: state.rank_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n        Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(FeatureHistograms);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","import * as d3 from 'd3';\nimport * as $ from \"jquery\"\nexport default function CreateChart(histogram_data, svg, feature_name, feature_index, number_of_features,store_instances,all_instances) {\n  //( feature_height, selected_year, handleHistogramselection, feature_data)\n  var parent_width = $(\".feature_histograms_container\").width()\n  var parent_height = $(\".feature_histograms_container\").height()\n  var feature_width = $(\".feature_histograms_container\").width()\n  var feature_height = 120\n  const margin = { top: 10, right: 5, bottom: 40, left: 5 }\n  d3.select(\".feature_histograms_container\").attr('height', feature_height * number_of_features + 20)\n  svg.attr('y', feature_height * feature_index).attr('width', parent_width).attr('height', feature_height)\n  //-----------------------------------------------------------\n  var occur = {}\n  histogram_data.map(item => {\n    if (item.y in occur) occur[item.y] = occur[item.y] + 1\n    else { occur[item.y] = 1 }\n  })\n  var items = Object.entries(occur).sort((first, second) => second[1] - first[1]);\n  var x = items.map(element => element[1]);\n  var sum_x = d3.sum(x)\n  svg.selectAll('.item_svg').data(items).join(\"svg\").attr(\"class\", 'item_svg').attr(\"x\", (d, i) => (d3.sum(x.slice(0, i)) / sum_x) * feature_width).attr('y',margin.top).attr('width', (d, i) => ((d[1] / sum_x) * feature_width) - .2).attr('height', feature_height - margin.bottom)\n    .attr('add_rectangle', function (d) {\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"width\", \"100%\").attr(\"height\", feature_height - margin.bottom).style(\"fill\", \"gray\")\n      .attr(\"check\",function(){\n        if(feature_name+d[0] in all_instances){ if(all_instances[feature_name+d[0]].length>0){d3.select(this).classed('feature_clicked',true) }} // if the feature and the category exists we check the length and decide that it is clicked item. In categorical items if something is clicked it can not have empty instances\n      })\n      .on('click', function(){\n        if(!d3.select(this).classed('feature_clicked')){ // if not classed we add the class and the data\n          d3.select(this).classed('feature_clicked',true)\n          store_instances(feature_name+d[0],histogram_data.filter(item=>item['y']==d[0]).map(item=>item.x))\n        }\n        else{ // if claassed we already have it so we set it empty\n          d3.select(this).classed('feature_clicked',false)\n          store_instances(feature_name+d[0],[])\n        }\n      })\n      \n    \n    })\n    .attr('add_text', function (d) {\n      //if(d3.select(this).attr(\"width\")>9)\n      d3.select(this).selectAll(\"text\").data([0]).join(\"text\").text(d[0]).attr('x', \"50%\").attr(\"y\", '50%').attr('dominant-baseline', 'middle').style(\"font-size\", d3.select(this).attr(\"width\") > 11 ? 10 : d3.select(this).attr(\"width\") - 2).style(\"writing-mode\", \"tb\").style(\"text-anchor\", \"middle\").style('cursor', 'pointer')\n    })\n  //----------------------------------------------------------- Histogram creation ends here\n  svg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", feature_height-10).attr(\"x\", feature_width / 2).attr(\"text-anchor\", \"middle\").attr('font-size', 14).text(feature_name).style('text-transform','capitalize')\n}","import * as d3 from \"d3\"\nimport * as $ from \"jquery\"\nexport default function CreateHistogram(histogram_data, svg, feature_name, feature_index, number_of_features, store_instances) {\n  const margin = { top: 10, right: 5, bottom: 50, left: 5 };\n  var parent_width = $(\".feature_histograms_container\").width()\n  var feature_height = 120\n  var feature_width = parent_width\n  d3.select(\".feature_histograms_container\").attr('height', feature_height * number_of_features + 20)\n  svg.attr('y', feature_height * feature_index).attr('width', parent_width).attr('height', feature_height)\n  var item_data = histogram_data.map(item => item['y'])\n  var area_chart_height = feature_height - margin.top - margin.bottom;\n  var area_chart_width = feature_width - margin.left - margin.right\n  const y = d3.scaleLinear().domain(d3.extent(item_data)).range([margin.top, area_chart_height])\n\n  var myticks = y.ticks(25)\n  var binned_data = d3.histogram().value(d => d).domain(y.domain()).thresholds(myticks)(item_data)\n  //--------- Create the areaChart\n  var area_chart_data = []\n  binned_data.map((item, i) => area_chart_data.push([item.x1, item.length]))\n  console.log(feature_name,histogram_data)\n  var xScale = d3.scaleLinear().domain(d3.extent(area_chart_data.map(item => item[0]))).range([margin.left, feature_width - margin.right]) // 20 is the baseline\n  var yScale = d3.scaleLinear().domain([0, d3.max(area_chart_data.map(item => item[1]))]).range([area_chart_height, 0])\n  const areaGenerator = d3.area().curve(d3.curveMonotoneX).x(d => xScale(d[0])).y0(yScale(0)).y1(d => yScale(d[1]))\n\n  svg.append(\"path\").attr('transform', 'translate(0,' + margin.top + ')')\n    .attr(\"d\", areaGenerator(area_chart_data))\n    .style(\"fill\", \"gray\");\n//--------------------------------\n  svg.selectAll(\".xAxis_g\").data([0]).join('g').attr('class', 'xAxis_g').attr(\"transform\", \"translate(0,\" + (feature_height - margin.bottom) + \")\")\n    .call(d3.axisBottom(xScale).ticks(5).tickFormat(d3.format(\".2s\")));\n  //.call(d3.axisBottom(xScale).ticks(5));\n  svg.selectAll('.domain').attr('stroke', '#dddddd')\n  svg.call(d3.brushX().extent([[0, margin.top], [400, area_chart_height + margin.top]]).on(\"end\", () => {\n    var extent = d3.event.selection\n    if (extent != null) {\n      var lower = xScale.invert(extent[0]), upper = xScale.invert(extent[1])\n      var instances = histogram_data.filter(item => item['y'] >= lower && item['y'] <= upper).map(item => item['x']) // x contains the ranking and y contains the value\n      store_instances(feature_name, instances)\n    }\n    else{store_instances(feature_name, [])}\n  }))\n  svg.selectAll(\".title\").data([0]).join('text').attr(\"class\",\"title\").attr('x', feature_width / 2).attr('y', feature_height - 28).attr('dominant-baseline', 'hanging')\n  .attr('text-anchor', 'middle').text(feature_name).attr('font-size', 14).style('text-transform', 'capitalize')\n  .attr(\"fill\",\"#3d3b3b\")\n}\n//https://stackoverflow.com/questions/54236051/how-to-draw-a-vertical-area-chart","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport FeatureHistograms from \"./FeatureHistograms/FeatureHistograms\"\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nexport default function SimpleMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div style={{marginTop:-2}}>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Features<ArrowDropDownIcon></ArrowDropDownIcon></Button>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} style={{marginTop:0}}>\n       {anchorEl?<FeatureHistograms handleClose={handleClose}></FeatureHistograms>:null}\n      </Menu>\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { connect } from 'react-redux';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nexport function SimpleMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div style={{marginTop:-2}}>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Mode<ArrowDropDownIcon></ArrowDropDownIcon></Button>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} style={{marginTop:0}}>\n       {anchorEl?<div style={{paddingLeft:10}}><form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\"></FormLabel>\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={(event, val) => {handleClose();props.Set_histogram_data([]);props.Set_mode(val)}}>\n                    {['Model', 'Ranges', 'Time'].map((value) => {\n                      return <FormControlLabel value={value} control={<Radio />} label={value} />\n                    })}\n                  </RadioGroup>\n                </FormControl>\n              </form></div>:null}\n      </Menu>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SimpleMenu);\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\n// Create a theme instance.\nconst outerTheme1 = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0069d9\"\n    },\n    secondary: {\n      main: \"#0069d9\"\n    }\n  }\n})\n\n\n\nconst outerTheme = createMuiTheme({\n  spacing: 2,\n  overrides: { // This is the place we override classes applied to a component\n    MuiFilledInput: { // This is the name of the component\n      root: { // This is the class we want to edit\n        backgroundColor: \"none\",\n        padding:0,\n      }\n    },\n    MuiInputLabel: {\n      root: {\n        backgroundColor: \"yellow\"\n      }\n    },\n    MuiTextField: {\n      root: {}\n    },\n    MuiButton: {\n      root: {\n        textTransform: \"none\",\n        padding: \"15px\"\n      },\n      fullWidth: {\n        maxWidth: \"100%\"\n      }\n    },\n    MuiFilledInput:{\n      root:{\n        padding:0,\n        backgroundColor:\"yellow\"\n      }\n    },\n    MuiAutocomplete:{\n      Root:{\n        padding:0\n      }\n    }\n\n  },\n  props: { // This is the place where we define props\n    MuiButton: {\n      disableRipple: true,\n      variant: \"contained\",\n      color: \"primary\"\n    },\n    MuiCheckbox: {\n      disableRipple: true\n    },\n    MuiTextField: {\n      variant: \"filled\",\n      InputLabelProps: {\n        shrink: true\n      }\n    },\n  }\n});\n\nexport default outerTheme","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport outerTheme from './theme'\nimport { connect } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\nfunction Inputs(props) {\n    const [threshold,set_threshold]=useState(props.threshold)\n    const classes = useStyles();\n    return (\n        <ThemeProvider theme={outerTheme}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <span>Deviation threshold:</span>\n                <Input style={{width:30}} defaultValue={threshold} inputProps={{ 'aria-label': 'description' }} \n                onChange={(event=>set_threshold(event.target.value))}\n                />\n                <Button style={{height:20,color:\"black\",fontSize:16,backgroundColor:'#f2f2f2'}} variant='string'\n                onClick={()=>props.Set_threshold(threshold)}\n                >Update</Button>\n            </form>\n        </ThemeProvider>\n\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        threshold:state.threshold\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_threshold: (val) => dispatch({ type: \"threshold\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Inputs);\n/*\nimport React from 'react';\nimport \"./Sliders.scss\";\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material/TextField';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states\n    const [threshold, set_threshold] = React.useState(props.threshold);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var min=0\n    var max=20\n    var number_marks=10\n    var step = (max - 1) / (number_marks - 1);\n    for (var i = 0; i < number_marks; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"rangeslider2\" style={{ marginLeft: 60,marginTop:-28, width: \"100%\", paddingTop: 0 }} >\n            <Typography>\n                Threshold\n            </Typography>\n\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        threshold:state.threshold\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_threshold: (val) => dispatch({ type: \"threshold\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);\n*/","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Menu from '@material-ui/core/Menu';\nimport Fade from '@material-ui/core/Fade';\nimport * as algo1 from \"../../Algorithms/algo1\";\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n/*\nChange in year,model selection and state range selection as well \n*/\nfunction Sort(props) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [sort_by, set_sort_by] = React.useState(props.sort_by);\n    const open = Boolean(anchorEl);\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const sortModels = (event) => {\n        set_sort_by(event.target.value)\n        if(event.target.value==\"None\"){var val=\"Alphabetically\"}\n        else{var val=event.target.value}\n        props.Set_sort_by(val)\n        var temp_Models = algo1.sort(val, props.state_range, props.default_models, props.selected_year,props.grouped_by_year_data)[0];\n        var default_model_scores = algo1.sort(val, props.state_range, props.default_models, props.selected_year,props.grouped_by_year_data)[1];\n        props.Set_default_model_scores(default_model_scores)\n        props.Set_default_models([...temp_Models])\n      };\n    return (\n        <div className=\"sort\" style={{borderRight:\"1px dashed #eaeaea\",paddingLeft:5}}>\n            <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Metrics <ArrowDropDownIcon></ArrowDropDownIcon></Button>\n            <Menu\n                id=\"fade-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                TransitionComponent={Fade}\n            >\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\"></FormLabel>\n                <RadioGroup aria-label=\"gender\" name=\"gender1\" value={sort_by} onChange={sortModels}>\n                    {['Discounted Cumulative Gain', 'Average Precision', 'None'].map((value) => {\n                        return <FormControlLabel value={value} control={<Radio />} label={value} />\n                    })}\n                </RadioGroup>\n            </FormControl>\n            </Menu>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        default_models: state.default_models,\n        sort_by:state.sort_by,\n        state_range: state.state_range,\n        selected_year: state.selected_year,\n        grouped_by_year_data:state.grouped_by_year_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_sort_by: (val) => dispatch({ type: \"sort_by\", value: val }),\n        Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Sort);\n//https://material-ui.com/components/menus/","import React, { Component } from 'react';\n//------------------------------------------------All datasets imports ends here\nimport { Row, Col } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport * as $ from 'jquery';\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport FeaturesDropdown from \"./FeaturesDropdown\"\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport SelectMode from './SelectMode'\nimport Threshold from './Threshold';\nimport SortModels from './SortModels';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // mydata is original data\n    this.state = {\n      random: 10,\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",\n    };\n  }\n  buttonclickHandler = (value, type) => {\n    setTimeout(() => { this.setState({ random: Math.random() }) }, 500);\n    type = \"button\" ? this.props.Set_view_data(value) : null\n    type = \"form\" ? this.setState({ view_data: value }) : null\n  }\n  shouldComponentUpdate() {\n    return true;\n  }\n  render() {\n    return (\n      <div>\n        <Grid container>\n          <ButtonGroup aria-label=\"outlined button group\" style={{marginRight:150,border:'none'}}>\n          <Button style={{borderRadius:0,border:'none',borderRight:'1px solid #bfbfbf'}} onClick={() => this.buttonclickHandler(1, \"button\")}>View Data</Button>\n          <Button style={{borderRadius:0,border:'none', borderRight:'1px solid #bfbfbf'}} onClick={() => this.buttonclickHandler(0, \"button\")}>Load Data</Button>\n          </ButtonGroup>\n          <SelectMode></SelectMode>\n          {this.props.mode==\"Model\"?<FeaturesDropdown></FeaturesDropdown>:null}\n          {this.props.mode==\"Model\"?<SortModels></SortModels>:null}\n          <Threshold></Threshold>\n        </Grid>\n        {this.props.view_data == false ?\n          <Row className=\"Topbar_container\">\n            <div className=\"load\">\n              <form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\"></FormLabel>\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={(event, val) => this.props.handleradioChange(val)}>\n                    {['Fiscal Dataset', 'School Dataset (World)','School Dataset (USA)'].map((value) => {\n                      return <FormControlLabel value={value} control={<Radio />} label={value} />\n                    })}\n                  </RadioGroup>\n                  <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Load</Button>\n                </FormControl>\n              </form>\n            </div></Row>\n          : null}\n      </div>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    view_data: state.view_data,\n    mode:state.mode,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_view_data: (val) => dispatch({ type: \"view_data\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","import React, { Component, PureComponent } from 'react';\nimport * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport { connect } from \"react-redux\";\nimport Grid from '@mui/material/Grid';\nimport './legend.scss'\nclass Legend extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {} // This is the default height\n  }\n  componentDidMount() { this.setState({ rand: 10 }) }\n  componentDidUpdate() {\n    var legend_container_width = $('.legend_container').width()\n    var legend_container_height = $('.legend_container').height()\n    //--------------------------- Legend 1\n    var legend1_height = 100\n    var legend1_rScale = d3.scaleLinear().domain(d3.extent(this.props.deviation_array)).range([8, 1])\n    var legend1_yScale = d3.scaleLinear().domain(d3.extent(this.props.deviation_array)).range([8, legend1_height - 5])\n    var legend1_ticks = legend1_yScale.ticks(4)\n    var legend1_svg = d3.select('#legend1').attr('width', legend_container_width).attr('height', legend1_height)\n    legend1_svg.selectAll('.legend1_circles').data(legend1_ticks).join('circle').attr('class', 'legend1_circles').attr('cx', 10).attr('cy', d => legend1_yScale(d)).attr('r', d => legend1_rScale(d)).attr('fill', 'grey')\n    legend1_svg.selectAll('.legend1_text').data(legend1_ticks).join('text').attr('class', 'legend1_text').attr('x', 20).attr('y', d => legend1_yScale(d)).text(d => d).attr('dominant-baseline', 'middle').attr('font-size', 10)\n\n    //--------------------------- Legend 2\n    var min = d3.min(this.props.selected_instances), max = d3.max(this.props.selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#00429d', '#4771b2', '#73a2c6', '#a5d5d8', /*'#ffffe0',*/ '#ffbcaf', '#f4777f', '#cf3759', '#93003a']);\n\n    var legend2_svg_height = legend_container_height / 2 - 50\n\n    var legend2_yScale = d3.scaleLinear().domain([min, max]).range([5, legend2_svg_height - 10])\n    var legend2_ticks = d3.range(min, max + 1, max / 10)\n    var rect_height = legend2_svg_height / legend2_ticks.length\n    var rect_width = 8\n    var legend2_svg = d3.select('#legend2').attr('width', legend_container_width).attr('height', legend2_svg_height)\n    legend2_svg.selectAll('.legend2_rects').data(legend2_ticks).join('rect').attr('class', 'legend2_rects').attr('x', 10)\n    .attr('y', (d, i) => rect_height*i).attr('width', rect_width).attr('height', rect_height).attr('fill', d => diverginColor(d))\n    legend2_svg.selectAll(\".legend2_labels\").data([min, parseInt(max / 2), max]).join(\"text\").attr(\"x\", 10 + rect_width + 2).attr(\"class\", \"legend2_labels\").attr('dominant-baseline', \"middle\").attr('y', (d, i) => i == 0 ? legend2_yScale(d) + rect_height / 2 : legend2_yScale(d)).text(d => d).attr('font-size', 12)\n  }\n\n  render() {\n    return (\n      <Grid className=\"legend_container\" container direction=\"column\" justifyContent=\"center\" alignItems=\"flex-start\" style={{ width: \"100%\", height: \"100%\" }}>\n        <Grid item style={{width:this.props.legend_width}}>\n          <div item style={{ backgroundColor: 'rgb(211, 211, 211,0.5)', padding: 5, marginBottom: 5 }}>\n            <p className=\"title\" style={{ marginBottom: 10 }}> Model Deviation</p>\n            <svg id=\"legend1\"> </svg>\n          </div>\n        </Grid>\n        <Grid item container  style={{width:this.props.legend_width,backgroundColor: 'rgb(211, 211, 211,0.5)', padding: 5 }}>\n            <p className=\"title\" style={{ marginBottom: 10 }}> Rank Range</p>\n            <p style={{ margin:0,fontSize:12 }}>High</p>\n            <svg id=\"legend2\" style={{marginTop:3,marginBottom:0}}> </svg>\n            <p style={{ margin:0,fontSize:12 }}>Low</p>\n        </Grid>\n      </Grid>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    selected_instances: state.selected_instances,\n    deviation_array: state.deviation_array,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Legend);","import React, { Component } from 'react';\n//------------------------------------------------All datasets imports\nimport fiscal from \"./Data/fiscal.csv\";\nimport school from \"./Data/school.csv\";\nimport house from \"./Data/house.csv\";\nimport rur from \"./Data/RUR/RUR.csv\";\n\nimport fiscal_rank from \"./Data/data/fiscal/lime/fiscal_rank.csv\";\nimport fiscal_lime from \"./Data/data/fiscal/lime/fiscal_lime.csv\";\n\nimport school_rank from \"./Data/data/school/lime/school_rank.csv\";\nimport school_lime from \"./Data/data/school/lime/school_lime.csv\";\n\nimport rur_rank from \"./Data/RUR/RUR_rank.csv\";\nimport rur_lime from \"./Data/RUR/RUR_lime.csv\";\n\n\nimport house_rank from \"./Data/data/house/lime/house_rank.csv\";\nimport house_lime from \"./Data/data/house/lime/house_lime.csv\";\n\n//------------------------------------------------All datasets imports ends here\nimport \"./App.scss\";\nimport * as d3 from 'd3';\nimport * as algo1 from \"./Algorithms/algo1\";\nimport ModelChart from \"./components/Charts/Model/ModelChartComponent\"\nimport RangeChart from \"./components/Charts/Range/01RangeChartComponent\"\nimport YearChart from \"./components/Charts/Time/01YearChartComponent\"\nimport { Row, Col } from 'reactstrap';\nimport * as $ from 'jquery';\nimport { connect } from \"react-redux\";\nimport Grid from '@mui/material/Grid';\nimport Top from './components/Top/Top';\nimport Legend from '../src/components/Legend/Legend'\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // mydata is original data\n    this.state = {\n      random: 10,\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",width:window.innerWidth\n    };\n  }\n  componentDidMount() { \n    var self=this\n    this.dataprocessor(this.props.dataset) \n    $(document).keyup(function(e) {\n      if (e.key === \"Escape\") {\n        self.props.Set_clicked_circles([])\n        self.props.Set_clicked_features([])\n     }\n });\n  }\n  //-------------------------------------------------------------------------------------------------------------------- data processor processes data for initial render\n  dataprocessor = (dataset_name) => {\n    if (dataset_name == \"school\") { this.process_data(school, school_rank, school_lime, dataset_name) }\n    if (dataset_name == \"fiscal\") { this.process_data(fiscal, fiscal_rank, fiscal_lime, dataset_name) }\n    if (dataset_name == \"house\") { this.process_data(house, house_rank, house_lime, dataset_name) }\n    if (dataset_name == \"rur\") { this.process_data(rur, rur_rank, rur_lime, dataset_name) }\n  }\n  process_data = (slopechart_data_filename, rank_data_filename, lime_data_filename, dataset_name) => {\n    var self = this\n    //-------------\n    d3.csv(slopechart_data_filename).then(original_data => {\n      var grouped_by_year_data = algo1.groupby_year(original_data).years\n      var sparkline_data = algo1.groupby_year(original_data).sparkline_data\n      var years_for_dropdown = Object.keys(grouped_by_year_data)\n      //console.log(grouped_by_year_data,sparkline_data,years_for_dropdown,'selected_year')\n      self.props.Set_sparkline_data(sparkline_data)\n      self.props.Set_slider_max(grouped_by_year_data[years_for_dropdown[0]].length)\n      self.setState({ years_for_dropdown: years_for_dropdown })\n      self.props.Set_years_for_dropdown(years_for_dropdown)\n      self.props.Set_time_mode_year1(years_for_dropdown[0])\n      self.props.Set_time_mode_year2(years_for_dropdown[1])\n      self.props.Set_legend_year(years_for_dropdown[0])\n      self.setState({ ref_year: years_for_dropdown[0] })\n      self.props.Set_grouped_by_year_data(grouped_by_year_data)\n      self.setState({ grouped_by_year_data: grouped_by_year_data })\n      self.setState({ original_data: original_data })\n      self.props.Set_original_data(original_data)\n      //self.props.Set_selected_year(years_for_dropdown[0])\n    })\n    //-------------\n    d3.csv(rank_data_filename).then(data => {\n      var nested_data = {}\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\n        nested_data[item.key] = item.values\n      })\n      self.props.Set_rank_data(nested_data)\n    })\n    //-------------\n    d3.csv(lime_data_filename).then(temp_data => {\n      if(self.props.dataset==\"rur\"){      \n        var data=temp_data.map(item=>{\n        item['predicted']=parseInt(item['predicted'])\n        item['two_realRank']=parseInt(item['two_realRank'])\n        console.log(Math.abs(item['predicted'] - item['relative_order']),item['deviation']=Math.abs(item['predicted']-item['two_realRank']))\n        item['deviation']=Math.abs(item['predicted'] - item['relative_order'])\n        return item\n      })}\n      else{\n        var data=temp_data.map(item=>{\n          item['predicted']=parseInt(item['predicted'])\n          item['two_realRank']=parseInt(item['two_realRank'])\n          item['deviation']=Math.abs(item['predicted']-item['two_realRank'])\n          return item\n        })\n      }\n\n      var nested_data = {}\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\n        nested_data[item.key] = item.values\n      })\n      self.props.Set_lime_data(nested_data)\n    })\n  }\n  //-------------------------------------------------------------------------------------------------------------------- data processor processes data for initial render\n\n  handleradioChange = (selected_dataset) => {\n    this.props.Set_rank_data(null)\n    this.props.Set_clicked_items_in_slopechart([])\n    this.props.Set_state_range([1, 25])\n    this.props.Set_histogram_data([])\n    this.props.Set_mode(\"Model\")\n    this.props.Set_range_mode_range1([1, 25])\n    this.props.Set_range_mode_range2([15, 40])\n    this.props.Set_time_mode_range([5, 35])\n    if (selected_dataset == 'Fiscal Dataset') {\n      this.setState({ dataset: 'fiscal' })\n      this.props.Set_dataset('fiscal')\n      this.dataprocessor(\"fiscal\")\n    }\n    else if (selected_dataset == 'House Dataset') {\n      this.setState({ dataset: 'house' })\n      this.props.Set_dataset('house')\n      this.dataprocessor(\"house\")\n    }\n    else if (selected_dataset == 'School Dataset (USA)') {\n      this.setState({ dataset: 'rur' })\n      this.props.Set_dataset('rur')\n      this.dataprocessor(\"rur\")\n      this.props.Set_selected_year(2012)\n    }\n    else {\n      this.setState({ dataset: 'school' })\n      this.props.Set_dataset('school')\n      this.dataprocessor(\"school\")\n    }\n  };\n  render() {\n    var legend_width = 80\n    return (\n      <div className=\"root_container\" style={{ height: window.innerHeight, width: window.innerWidth}}>\n        <div className=\"topBar_root\" style={{ height: 35, width: window.innerWidth}}>\n          <Top handleradioChange={this.handleradioChange}></Top>\n        </div>\n        {this.props.view_data ? <Row>\n          <div style={{ width: window.innerWidth, height: window.innerHeight - $('.topBar_root').height(), padding: \"2px 0px\" }} key={this.props.view_data}>\n            {this.state.view_data == true ?\n              <Grid className=\"charts_and_legend_container\" style={{ height: '100%', width: window.innerWidth, border: \"2px solid grey\"}} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\n                <Grid className=\"charts_container\" style={{ height: '100%', width: window.innerWidth - legend_width }} container spacing={0} direction=\"row\" justify=\"space-evenly\" >\n                  {this.props.mode == \"Model\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <ModelChart></ModelChart> : null}\n                  {this.props.mode == \"Ranges\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <RangeChart></RangeChart> : null}\n                  {this.props.mode == \"Time\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <YearChart></YearChart> : null}\n                </Grid>\n                <div style={{ padding: 0,marginTop:5, height: '100%', width: legend_width-10 }}><Legend legend_width={legend_width}></Legend></div>\n              </Grid> : null}\n          </div>\n        </Row> : null}\n      </div>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    tracking: state.tracking,\n    state_range: state.state_range,\n    deviate_by: state.deviate_by,\n    default_models: state.default_models,\n    sparkline_data: state.sparkline_data,\n    selected_year: state.selected_year,\n    mode: state.mode,\n    range_mode_model: state.range_mode_model,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sort_by: state.sort_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    popup_chart_data: state.popup_chart_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    config: state.config,\n    lime_data: state.lime_data,\n    view_data: state.view_data\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_dataset: (val) => dispatch({ type: \"dataset\", value: val }),\n    Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: parseInt(val) }),\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\n    Set_grouped_by_year_data: (val) => dispatch({ type: \"grouped_by_year_data\", value: val }),\n    Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\n\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n    Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n    Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n\n    Set_rank_data: (val) => dispatch({ type: \"rank_data\", value: val }),\n    Set_lime_data: (val) => dispatch({ type: \"lime_data\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","import { createMuiTheme } from '@material-ui/core/styles';\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#7f7f7f\"\n    },\n    secondary: {\n      main: \"#7f7f7f\"\n    }\n  },\n  spacing:3,      \n  typography: {\n    button: {\n      textTransform: 'none'\n    }\n  },\n  overrides:{\n    MuiGrid:{\n      root:{\n        margin:0,\n        padding:0\n      },\n    }\n  }\n});\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './store/reducer';\nimport theme from './Themes'; \nimport { ThemeProvider } from '@material-ui/styles';\nconst store=createStore(reducer);\nReactDOM.render( <ThemeProvider theme={theme}><Provider store={store}><App /></Provider></ThemeProvider>,document.getElementById('root'));\n\n\n"],"sourceRoot":""}