{"ast":null,"code":"import React from'react';import\"./YearModelSelection.scss\";import{connect}from\"react-redux\";import Slider from'./Slider';import Grid from'@material-ui/core/Grid';function YearModelSelection(props){var handle_year_click=function handle_year_click(year){props.Set_selected_year(year);};var handle_model_click=function handle_model_click(model){return props.Set_time_mode_model(model);};if(props.dataset==\"rur\"){var all_models=[\"MART\",\"RandomFor\"];}else{var all_models=props.all_models;}if(props.exp_method===\"ice\"){var all_models=props.all_models;all_models=all_models.filter(function(d){return d!==\"RandomFor\";});if(!all_models.includes(\"SVM\")){all_models.push(\"SVM\");}}else{var all_models=props.all_models;}return/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justifyContent:\"center\",alignItems:\"center\",style:{width:'100%',height:76,padding:3}},/*#__PURE__*/React.createElement(Grid,{item:true,xs:4,style:{marginTop:5,marginLeft:5,verticalAlign:'baseline'}},/*#__PURE__*/React.createElement(\"h5\",{style:{display:\"inline-block\",marginRight:5,marginTop:-4,fontSize:20,fontWeight:600}},\"Rankers:\"),all_models.map(function(item){return/*#__PURE__*/React.createElement(\"p\",{className:props.time_mode_model==item?\"years_p_selected years_p\":\"years_p\",onClick:function onClick(){return handle_model_click(item);}},item);})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6,style:{marginLeft:15,overflow:'scroll'}},/*#__PURE__*/React.createElement(Slider,null)));}var maptstateToprop=function maptstateToprop(state){return{all_models:state.all_models,selected_year:state.selected_year,years_for_dropdown:state.years_for_dropdown,default_models:state.default_models,time_mode_model:state.time_mode_model,dataset:state.dataset};};var mapdispatchToprop=function mapdispatchToprop(dispatch){return{Set_selected_year:function Set_selected_year(val){return dispatch({type:\"selected_year\",value:val});},Set_time_mode_model:function Set_time_mode_model(val){return dispatch({type:\"time_mode_model\",value:val});}};};export default connect(maptstateToprop,mapdispatchToprop)(YearModelSelection);//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Time/YearAndModelSelection/YearModelSelection.js"],"names":["React","connect","Slider","Grid","YearModelSelection","props","handle_year_click","year","Set_selected_year","handle_model_click","model","Set_time_mode_model","dataset","all_models","exp_method","filter","d","includes","push","width","height","padding","marginTop","marginLeft","verticalAlign","display","marginRight","fontSize","fontWeight","map","item","time_mode_model","overflow","maptstateToprop","state","selected_year","years_for_dropdown","default_models","mapdispatchToprop","dispatch","val","type","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./YearModelSelection.scss\";\nimport { connect } from \"react-redux\";\nimport Slider from './Slider'\nimport Grid from '@material-ui/core/Grid'\nfunction YearModelSelection(props) {\n  var handle_year_click = (year) => {\n    props.Set_selected_year(year)\n  }\n  var handle_model_click = (model) => props.Set_time_mode_model(model)\n  if(props.dataset==\"rur\"){var all_models=[\"MART\",\"RandomFor\"]}else{var all_models=props.all_models}\n  if(props.exp_method === \"ice\"){var all_models=props.all_models; all_models = all_models.filter(d => d !== \"RandomFor\"); if(!all_models.includes(\"SVM\")){all_models.push(\"SVM\")}}\n  else{var all_models=props.all_models}\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" style={{width:'100%',height:76,padding:3}}>\n      <Grid item xs={4} style={{marginTop:5, marginLeft: 5,verticalAlign:'baseline' }}><h5 style={{ display: \"inline-block\", marginRight: 5,marginTop:-4, fontSize: 20,fontWeight:600 }}>Rankers:</h5>{all_models.map(item => <p className={props.time_mode_model == item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</Grid>\n      <Grid item xs={6} style={{marginLeft:15,overflow:'scroll'}}><Slider></Slider></Grid>\n    </Grid>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    all_models: state.all_models,\n    selected_year: state.selected_year,\n    years_for_dropdown: state.years_for_dropdown,\n    default_models: state.default_models,\n    time_mode_model: state.time_mode_model,\n    dataset:state.dataset\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    Set_time_mode_model: (val) => dispatch({ type: \"time_mode_model\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/"]},"metadata":{},"sourceType":"module"}