{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/NewWork/trivea/src/App.js\";\nimport React, { Component } from 'react'; //------------------------------------------------All datasets imports\n\nimport fiscal from \"./Data/fiscal.csv\";\nimport school from \"./Data/school.csv\";\nimport house from \"./Data/house.csv\";\nimport rur from \"./Data/RUR/RUR.csv\";\n/** Also update SelectExpMethod.js */\n\nimport fiscal_rank from \"./Data/data/fiscal/lime/fiscal_rank.csv\";\nimport fiscal_lime from \"./Data/data/fiscal/lime/fiscal_lime_may25.csv\";\nimport fiscal_ice from \"./Data/data/fiscal/ice/fiscal_ice_may25.csv\";\nimport school_rank from \"./Data/data/school/lime/school_rank.csv\";\nimport school_lime from \"./Data/data/school/lime/school_lime_may25.csv\";\nimport school_ice from \"./Data/data/school/ice/school_ice_may25.csv\";\nimport rur_rank from \"./Data/RUR/RUR_rank.csv\";\nimport rur_lime from \"./Data/RUR/RUR_lime.csv\";\nimport house_rank from \"./Data/data/house/lime/house_rank.csv\";\nimport house_lime from \"./Data/data/house/lime/house_lime.csv\"; //------------------------------------------------All datasets imports ends here\n\nimport \"./App.scss\";\nimport * as d3 from 'd3';\nimport * as algo1 from \"./Algorithms/algo1\";\nimport ModelChart from \"./components/Charts/Model/ModelChartComponent\";\nimport RangeChart from \"./components/Charts/Range/01RangeChartComponent\";\nimport YearChart from \"./components/Charts/Time/01YearChartComponent\";\nimport { Row, Col } from 'reactstrap';\nimport * as $ from 'jquery';\nimport { connect } from \"react-redux\";\nimport Grid from '@mui/material/Grid';\nimport Top from './components/Top/Top';\nimport Legend from '../src/components/Legend/Legend';\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // mydata is original data\n\n    this.dataprocessor = (dataset_name, exp_method) => {\n      if (dataset_name == \"school\") {\n        this.process_data(school, school_rank, exp_method === \"lime\" ? school_lime : school_ice, dataset_name);\n      }\n\n      if (dataset_name == \"fiscal\") {\n        this.process_data(fiscal, fiscal_rank, exp_method === \"lime\" ? fiscal_lime : fiscal_ice, dataset_name);\n      }\n\n      if (dataset_name == \"house\") {\n        this.process_data(house, house_rank, house_lime, dataset_name);\n      }\n\n      if (dataset_name == \"rur\") {\n        this.process_data(rur, rur_rank, rur_lime, dataset_name);\n      }\n    };\n\n    this.process_data = (slopechart_data_filename, rank_data_filename, lime_data_filename, dataset_name) => {\n      var self = this; //-------------\n\n      d3.csv(slopechart_data_filename).then(original_data => {\n        var grouped_by_year_data = algo1.groupby_year(original_data).years;\n        var sparkline_data = algo1.groupby_year(original_data).sparkline_data;\n        var years_for_dropdown = Object.keys(grouped_by_year_data); //console.log(grouped_by_year_data,sparkline_data,years_for_dropdown,'selected_year')\n\n        self.props.Set_sparkline_data(sparkline_data);\n        self.props.Set_slider_max(grouped_by_year_data[years_for_dropdown[0]].length);\n        self.setState({\n          years_for_dropdown: years_for_dropdown\n        });\n        self.props.Set_years_for_dropdown(years_for_dropdown);\n        self.props.Set_time_mode_year1(years_for_dropdown[0]);\n        self.props.Set_time_mode_year2(years_for_dropdown[1]);\n        self.props.Set_legend_year(years_for_dropdown[0]);\n        self.setState({\n          ref_year: years_for_dropdown[0]\n        });\n        self.props.Set_grouped_by_year_data(grouped_by_year_data);\n        self.setState({\n          grouped_by_year_data: grouped_by_year_data\n        });\n        self.setState({\n          original_data: original_data\n        });\n        self.props.Set_original_data(original_data); //self.props.Set_selected_year(years_for_dropdown[0])\n      }); //-------------\n\n      d3.csv(rank_data_filename).then(data => {\n        var nested_data = {};\n        d3.nest().key(function (d) {\n          return d.model;\n        }).entries(data).map(item => {\n          nested_data[item.key] = item.values;\n        });\n        self.props.Set_rank_data(nested_data);\n      }); //-------------\n\n      d3.csv(lime_data_filename).then(temp_data => {\n        var temp_data2 = temp_data.map(d => {\n          var d1 = {};\n\n          for (var key of Object.keys(d)) {\n            d1[key] = d[key] === \"\" ? \"0\" : d[key];\n          }\n\n          return d1;\n        });\n        var data = temp_data2.map(item => {\n          item['predicted'] = parseInt(item['predicted']);\n          item['two_realRank'] = parseInt(item['two_realRank']);\n          item['deviation'] = Math.abs(item['predicted'] - item['two_realRank']);\n          return item;\n        });\n        var nested_data = {};\n        d3.nest().key(function (d) {\n          return d.model;\n        }).entries(data).map(item => {\n          nested_data[item.key] = item.values;\n        });\n        self.props.Set_lime_data(nested_data);\n      });\n    };\n\n    this.handleradioChange = selected_dataset => {\n      this.props.Set_rank_data(null);\n      this.props.Set_clicked_items_in_slopechart([]);\n      this.props.Set_state_range([1, 25]);\n      this.props.Set_histogram_data([]);\n      this.props.Set_mode(\"Model\");\n      this.props.Set_range_mode_range1([1, 25]);\n      this.props.Set_range_mode_range2([15, 40]);\n      this.props.Set_time_mode_range([5, 35]);\n\n      if (selected_dataset == 'Fiscal Dataset') {\n        this.setState({\n          dataset: 'fiscal'\n        });\n        this.props.Set_dataset('fiscal');\n        this.dataprocessor(\"fiscal\", this.props.exp_method);\n      } else if (selected_dataset == 'House Dataset') {\n        this.setState({\n          dataset: 'house'\n        });\n        this.props.Set_dataset('house');\n        this.dataprocessor(\"house\");\n      } else if (selected_dataset == 'School Dataset (USA)') {\n        this.setState({\n          dataset: 'rur'\n        });\n        this.props.Set_dataset('rur');\n        this.dataprocessor(\"rur\");\n        this.props.Set_selected_year(2012);\n      } else {\n        this.setState({\n          dataset: 'school'\n        });\n        this.props.Set_dataset('school');\n        this.dataprocessor(\"school\", this.props.exp_method);\n      }\n    };\n\n    this.state = {\n      random: 10,\n      original_data: null,\n      grouped_by_year_data: null,\n      show: [\"Slope charts\", \"Rankings\", \"Explanation\"],\n      view_data: 1,\n      histogram_data: [],\n      ref_year: null,\n      features_dict: {},\n      features_voted: null,\n      Legend_ready_to_vis: null,\n      legend_model: \"CordAscent\",\n      width: window.innerWidth\n    };\n  }\n\n  componentDidMount() {\n    var self = this;\n    this.dataprocessor(this.props.dataset, this.props.exp_method);\n    $(document).keyup(function (e) {\n      if (e.key === \"Escape\") {\n        self.props.Set_clicked_circles([]);\n        self.props.Set_clicked_features([]);\n      }\n    });\n  } //-------------------------------------------------------------------------------------------------------------------- data processor processes data for initial render\n\n\n  render() {\n    var legend_width = 120;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"root_container\",\n      style: {\n        height: window.innerHeight,\n        width: window.innerWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"topBar_root\",\n      style: {\n        height: 35,\n        width: window.innerWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Top, {\n      handleradioChange: this.handleradioChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    })), this.props.view_data ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: window.innerWidth,\n        height: window.innerHeight - $('.topBar_root').height(),\n        padding: \"2px 0px\"\n      },\n      key: this.props.view_data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, this.state.view_data == true ? /*#__PURE__*/React.createElement(Grid, {\n      className: \"charts_and_legend_container\",\n      style: {\n        height: '100%',\n        width: window.innerWidth,\n        border: \"2px solid grey\"\n      },\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"charts_container\",\n      style: {\n        height: '100%',\n        width: window.innerWidth - legend_width\n      },\n      container: true,\n      spacing: 0,\n      direction: \"row\",\n      justify: \"space-evenly\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, this.props.mode == \"Model\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? /*#__PURE__*/React.createElement(ModelChart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 160\n      }\n    }) : null, this.props.mode == \"Ranges\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? /*#__PURE__*/React.createElement(RangeChart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 161\n      }\n    }) : null, this.props.mode == \"Time\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? /*#__PURE__*/React.createElement(YearChart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 159\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 0,\n        marginTop: 5,\n        height: '100%',\n        width: legend_width - 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Legend, {\n      legend_width: legend_width,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 97\n      }\n    }))) : null)) : null);\n  }\n\n}\n\nconst maptstateToprop = state => {\n  return {\n    tracking: state.tracking,\n    state_range: state.state_range,\n    deviate_by: state.deviate_by,\n    default_models: state.default_models,\n    sparkline_data: state.sparkline_data,\n    selected_year: state.selected_year,\n    mode: state.mode,\n    range_mode_model: state.range_mode_model,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sort_by: state.sort_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    popup_chart_data: state.popup_chart_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    config: state.config,\n    lime_data: state.lime_data,\n    view_data: state.view_data,\n    exp_method: state.exp_method\n  };\n};\n\nconst mapdispatchToprop = dispatch => {\n  return {\n    Set_dataset: val => dispatch({\n      type: \"dataset\",\n      value: val\n    }),\n    Set_default_models: val => dispatch({\n      type: \"default_models\",\n      value: val\n    }),\n    Set_sparkline_data: val => dispatch({\n      type: \"sparkline_data\",\n      value: val\n    }),\n    Set_slider_max: val => dispatch({\n      type: \"slider_max\",\n      value: val\n    }),\n    Set_years_for_dropdown: val => dispatch({\n      type: \"years_for_dropdown\",\n      value: val\n    }),\n    Set_selected_year: val => dispatch({\n      type: \"selected_year\",\n      value: parseInt(val)\n    }),\n    Set_ref_year: val => dispatch({\n      type: \"ref_year\",\n      value: val\n    }),\n    Set_original_data: val => dispatch({\n      type: \"original_data\",\n      value: val\n    }),\n    Set_grouped_by_year_data: val => dispatch({\n      type: \"grouped_by_year_data\",\n      value: val\n    }),\n    Set_slider_and_feature_value: val => dispatch({\n      type: \"slider_and_feature_value\",\n      value: val\n    }),\n    Set_clicked_items_in_slopechart: val => dispatch({\n      type: \"clicked_items_in_slopechart\",\n      value: val\n    }),\n    Set_histogram_data: val => dispatch({\n      type: \"histogram_data\",\n      value: val\n    }),\n    Set_state_range: val => dispatch({\n      type: \"state_range\",\n      value: val\n    }),\n    Set_legend_year: val => dispatch({\n      type: \"legend_year\",\n      value: val\n    }),\n    Set_mode: val => dispatch({\n      type: \"mode\",\n      value: val\n    }),\n    Set_range_mode_range1: val => dispatch({\n      type: \"range_mode_range1\",\n      value: val\n    }),\n    Set_range_mode_range2: val => dispatch({\n      type: \"range_mode_range2\",\n      value: val\n    }),\n    Set_time_mode_range: val => dispatch({\n      type: \"time_mode_range\",\n      value: val\n    }),\n    Set_time_mode_year1: val => dispatch({\n      type: \"time_mode_year1\",\n      value: val\n    }),\n    Set_time_mode_year2: val => dispatch({\n      type: \"time_mode_year2\",\n      value: val\n    }),\n    Set_rank_data: val => dispatch({\n      type: \"rank_data\",\n      value: val\n    }),\n    Set_lime_data: val => dispatch({\n      type: \"lime_data\",\n      value: val\n    }),\n    Set_pop_over_models: val => dispatch({\n      type: \"pop_over_models\",\n      value: val\n    }),\n    Set_default_model_scores: val => dispatch({\n      type: \"default_model_scores\",\n      value: val\n    }),\n    Set_clicked_circles: val => dispatch({\n      type: \"clicked_circles\",\n      value: val\n    }),\n    Set_clicked_features: val => dispatch({\n      type: \"clicked_features\",\n      value: val\n    })\n  };\n};\n\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/App.js"],"names":["React","Component","fiscal","school","house","rur","fiscal_rank","fiscal_lime","fiscal_ice","school_rank","school_lime","school_ice","rur_rank","rur_lime","house_rank","house_lime","d3","algo1","ModelChart","RangeChart","YearChart","Row","Col","$","connect","Grid","Top","Legend","App","constructor","props","dataprocessor","dataset_name","exp_method","process_data","slopechart_data_filename","rank_data_filename","lime_data_filename","self","csv","then","original_data","grouped_by_year_data","groupby_year","years","sparkline_data","years_for_dropdown","Object","keys","Set_sparkline_data","Set_slider_max","length","setState","Set_years_for_dropdown","Set_time_mode_year1","Set_time_mode_year2","Set_legend_year","ref_year","Set_grouped_by_year_data","Set_original_data","data","nested_data","nest","key","d","model","entries","map","item","values","Set_rank_data","temp_data","temp_data2","d1","parseInt","Math","abs","Set_lime_data","handleradioChange","selected_dataset","Set_clicked_items_in_slopechart","Set_state_range","Set_histogram_data","Set_mode","Set_range_mode_range1","Set_range_mode_range2","Set_time_mode_range","dataset","Set_dataset","Set_selected_year","state","random","show","view_data","histogram_data","features_dict","features_voted","Legend_ready_to_vis","legend_model","width","window","innerWidth","componentDidMount","document","keyup","e","Set_clicked_circles","Set_clicked_features","render","legend_width","height","innerHeight","padding","border","mode","lime_data","marginTop","maptstateToprop","tracking","state_range","deviate_by","default_models","selected_year","range_mode_model","time_mode_model","chart_scale_type","sort_by","time_mode_year1","time_mode_year2","popup_chart_data","clicked_items_in_slopechart","config","mapdispatchToprop","dispatch","val","type","value","Set_default_models","Set_ref_year","Set_slider_and_feature_value","Set_pop_over_models","Set_default_model_scores"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//------------------------------------------------All datasets imports\nimport fiscal from \"./Data/fiscal.csv\";\nimport school from \"./Data/school.csv\";\nimport house from \"./Data/house.csv\";\nimport rur from \"./Data/RUR/RUR.csv\";\n\n/** Also update SelectExpMethod.js */\nimport fiscal_rank from \"./Data/data/fiscal/lime/fiscal_rank.csv\";\nimport fiscal_lime from \"./Data/data/fiscal/lime/fiscal_lime_may25.csv\";\nimport fiscal_ice from \"./Data/data/fiscal/ice/fiscal_ice_may25.csv\";\n\nimport school_rank from \"./Data/data/school/lime/school_rank.csv\";\nimport school_lime from \"./Data/data/school/lime/school_lime_may25.csv\";\nimport school_ice from \"./Data/data/school/ice/school_ice_may25.csv\";\n\nimport rur_rank from \"./Data/RUR/RUR_rank.csv\";\nimport rur_lime from \"./Data/RUR/RUR_lime.csv\";\n\n\nimport house_rank from \"./Data/data/house/lime/house_rank.csv\";\nimport house_lime from \"./Data/data/house/lime/house_lime.csv\";\n\n//------------------------------------------------All datasets imports ends here\nimport \"./App.scss\";\nimport * as d3 from 'd3';\nimport * as algo1 from \"./Algorithms/algo1\";\nimport ModelChart from \"./components/Charts/Model/ModelChartComponent\"\nimport RangeChart from \"./components/Charts/Range/01RangeChartComponent\"\nimport YearChart from \"./components/Charts/Time/01YearChartComponent\"\nimport { Row, Col } from 'reactstrap';\nimport * as $ from 'jquery';\nimport { connect } from \"react-redux\";\nimport Grid from '@mui/material/Grid';\nimport Top from './components/Top/Top';\nimport Legend from '../src/components/Legend/Legend'\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // mydata is original data\n    this.state = {\n      random: 10,\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",width:window.innerWidth\n    };\n  }\n  componentDidMount() { \n    var self=this\n    this.dataprocessor(this.props.dataset, this.props.exp_method) \n    $(document).keyup(function(e) {\n      if (e.key === \"Escape\") {\n        self.props.Set_clicked_circles([])\n        self.props.Set_clicked_features([])\n     }\n });\n  }\n\n  //-------------------------------------------------------------------------------------------------------------------- data processor processes data for initial render\n  dataprocessor = (dataset_name, exp_method) => {\n    if (dataset_name == \"school\") { this.process_data(school, school_rank, (exp_method===\"lime\")?school_lime:school_ice, dataset_name) }\n    if (dataset_name == \"fiscal\") { this.process_data(fiscal, fiscal_rank, (exp_method===\"lime\")?fiscal_lime:fiscal_ice, dataset_name) }\n    if (dataset_name == \"house\") { this.process_data(house, house_rank, house_lime, dataset_name) }\n    if (dataset_name == \"rur\") { this.process_data(rur, rur_rank, rur_lime, dataset_name) }\n  }\n  process_data = (slopechart_data_filename, rank_data_filename, lime_data_filename, dataset_name) => {\n    var self = this\n    //-------------\n    d3.csv(slopechart_data_filename).then(original_data => {\n      var grouped_by_year_data = algo1.groupby_year(original_data).years\n      var sparkline_data = algo1.groupby_year(original_data).sparkline_data\n      var years_for_dropdown = Object.keys(grouped_by_year_data)\n      //console.log(grouped_by_year_data,sparkline_data,years_for_dropdown,'selected_year')\n      self.props.Set_sparkline_data(sparkline_data)\n      self.props.Set_slider_max(grouped_by_year_data[years_for_dropdown[0]].length)\n      self.setState({ years_for_dropdown: years_for_dropdown })\n      self.props.Set_years_for_dropdown(years_for_dropdown)\n      self.props.Set_time_mode_year1(years_for_dropdown[0])\n      self.props.Set_time_mode_year2(years_for_dropdown[1])\n      self.props.Set_legend_year(years_for_dropdown[0])\n      self.setState({ ref_year: years_for_dropdown[0] })\n      self.props.Set_grouped_by_year_data(grouped_by_year_data)\n      self.setState({ grouped_by_year_data: grouped_by_year_data })\n      self.setState({ original_data: original_data })\n      self.props.Set_original_data(original_data)\n      //self.props.Set_selected_year(years_for_dropdown[0])\n    })\n    //-------------\n    d3.csv(rank_data_filename).then(data => {\n      var nested_data = {}\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\n        nested_data[item.key] = item.values\n      })\n      self.props.Set_rank_data(nested_data)\n    })\n    //-------------\n    d3.csv(lime_data_filename).then(temp_data => {\n        var temp_data2 = temp_data.map(d=>{\n          var d1 = {};\n          for(var key of Object.keys(d)){\n            d1[key] = (d[key] === \"\")?\"0\":d[key]\n          }\n          return d1;\n        })\n        var data=temp_data2.map(item=>{\n          item['predicted']=parseInt(item['predicted'])\n          item['two_realRank']=parseInt(item['two_realRank'])\n          item['deviation']=Math.abs(item['predicted']-item['two_realRank'])\n          return item\n        })\n        \n      var nested_data = {}\n      d3.nest().key(function (d) { return d.model; }).entries(data).map(item => {\n        nested_data[item.key] = item.values\n      })\n      self.props.Set_lime_data(nested_data)\n    })\n  }\n  //-------------------------------------------------------------------------------------------------------------------- data processor processes data for initial render\n\n  handleradioChange = (selected_dataset) => {\n    this.props.Set_rank_data(null)\n    this.props.Set_clicked_items_in_slopechart([])\n    this.props.Set_state_range([1, 25])\n    this.props.Set_histogram_data([])\n    this.props.Set_mode(\"Model\")\n    this.props.Set_range_mode_range1([1, 25])\n    this.props.Set_range_mode_range2([15, 40])\n    this.props.Set_time_mode_range([5, 35])\n    if (selected_dataset == 'Fiscal Dataset') {\n      this.setState({ dataset: 'fiscal' })\n      this.props.Set_dataset('fiscal')\n      this.dataprocessor(\"fiscal\", this.props.exp_method)\n    }\n    else if (selected_dataset == 'House Dataset') {\n      this.setState({ dataset: 'house' })\n      this.props.Set_dataset('house')\n      this.dataprocessor(\"house\")\n    }\n    else if (selected_dataset == 'School Dataset (USA)') {\n      this.setState({ dataset: 'rur' })\n      this.props.Set_dataset('rur')\n      this.dataprocessor(\"rur\")\n      this.props.Set_selected_year(2012)\n    }\n    else {\n      this.setState({ dataset: 'school' })\n      this.props.Set_dataset('school')\n      this.dataprocessor(\"school\", this.props.exp_method)\n    }\n  };\n  render() {\n    var legend_width = 120\n    return (\n      <div className=\"root_container\" style={{ height: window.innerHeight, width: window.innerWidth}}>\n        <div className=\"topBar_root\" style={{ height: 35, width: window.innerWidth}}>\n          <Top handleradioChange={this.handleradioChange}></Top>\n        </div>\n        {this.props.view_data ? <Row>\n          <div style={{ width: window.innerWidth, height: window.innerHeight - $('.topBar_root').height(), padding: \"2px 0px\" }} key={this.props.view_data}>\n            {this.state.view_data == true ?\n              <Grid className=\"charts_and_legend_container\" style={{ height: '100%', width: window.innerWidth, border: \"2px solid grey\"}} container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" >\n                <Grid className=\"charts_container\" style={{ height: '100%', width: window.innerWidth - legend_width }} container spacing={0} direction=\"row\" justify=\"space-evenly\" >\n                  {this.props.mode == \"Model\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <ModelChart></ModelChart> : null}\n                  {this.props.mode == \"Ranges\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <RangeChart></RangeChart> : null}\n                  {this.props.mode == \"Time\" && this.state.grouped_by_year_data != null && this.props.original_data != null && this.props.lime_data != null ? <YearChart></YearChart> : null}\n                </Grid>\n                <div style={{ padding: 0,marginTop:5, height: '100%', width: legend_width-10 }}><Legend legend_width={legend_width}></Legend></div>\n              </Grid> : null}\n          </div>\n        </Row> : null}\n      </div>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    tracking: state.tracking,\n    state_range: state.state_range,\n    deviate_by: state.deviate_by,\n    default_models: state.default_models,\n    sparkline_data: state.sparkline_data,\n    selected_year: state.selected_year,\n    mode: state.mode,\n    range_mode_model: state.range_mode_model,\n    original_data: state.original_data,\n    time_mode_model: state.time_mode_model,\n    chart_scale_type: state.chart_scale_type,\n    dataset: state.dataset,\n    histogram_data: state.histogram_data,\n    sort_by: state.sort_by,\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    popup_chart_data: state.popup_chart_data,\n    clicked_items_in_slopechart: state.clicked_items_in_slopechart,\n    config: state.config,\n    lime_data: state.lime_data,\n    view_data: state.view_data,\n    exp_method: state.exp_method,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_dataset: (val) => dispatch({ type: \"dataset\", value: val }),\n    Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\n    Set_sparkline_data: (val) => dispatch({ type: \"sparkline_data\", value: val }),\n    Set_slider_max: (val) => dispatch({ type: \"slider_max\", value: val }),\n    Set_years_for_dropdown: (val) => dispatch({ type: \"years_for_dropdown\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: parseInt(val) }),\n    Set_ref_year: (val) => dispatch({ type: \"ref_year\", value: val }),\n    Set_original_data: (val) => dispatch({ type: \"original_data\", value: val }),\n    Set_grouped_by_year_data: (val) => dispatch({ type: \"grouped_by_year_data\", value: val }),\n    Set_slider_and_feature_value: (val) => dispatch({ type: \"slider_and_feature_value\", value: val }),\n    Set_clicked_items_in_slopechart: (val) => dispatch({ type: \"clicked_items_in_slopechart\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n    Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n    Set_legend_year: (val) => dispatch({ type: \"legend_year\", value: val }),\n\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n    Set_range_mode_range1: (val) => dispatch({ type: \"range_mode_range1\", value: val }),\n    Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n    Set_time_mode_range: (val) => dispatch({ type: \"time_mode_range\", value: val }),\n    Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n    Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n\n    Set_rank_data: (val) => dispatch({ type: \"rank_data\", value: val }),\n    Set_lime_data: (val) => dispatch({ type: \"lime_data\", value: val }),\n    Set_pop_over_models: (val) => dispatch({ type: \"pop_over_models\", value: val }),\n    Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(App);"]},"metadata":{},"sourceType":"module"}