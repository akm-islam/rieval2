{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/NewWork/trivea/src/components/Charts/Range/SliderGroup2.js\";\nimport React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport './ModelSlider.scss';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary\n  },\n  tRoot: {\n    marginBottom: 35\n  },\n  rang_input: {\n    marginLeft: 10\n  }\n}));\n\nfunction Modes(props) {\n  const classes = useStyles(); // states \n\n  const [sliderRange, set_sliderRange] = React.useState(props.range_mode_range2); //-----------------------------------------------------------------\n\n  var temp_marks = [];\n  var step = (props.slider_max - 1) / (6 - 1);\n\n  for (var i = 0; i < 6; i++) {\n    temp_marks.push(1 + step * i);\n  }\n\n  var marks = temp_marks.map(item => {\n    var myitem = parseInt(item);\n    return {\n      value: myitem,\n      label: myitem\n    };\n  }); //console.log(props.marks)\n  //-----------------------------------------------------------------\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Modelslider\",\n    style: {\n      height: 70,\n      width: \"100%\",\n      marginBottom: 5,\n      paddingTop: 30,\n      paddingLeft: 15,\n      border: \"1px solid rgb(178, 178, 178,0.5)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lower\",\n    style: {\n      padding: \"0px 0px\",\n      marginTop: -20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      input: classes.rang_input\n    },\n    id: \"standard-basic\",\n    label: \"Lower\",\n    value: sliderRange[0],\n    style: {\n      width: \"100%\"\n    },\n    onChange: event => {\n      if (isNaN(parseInt(event.target.value))) {\n        set_sliderRange([\"\", sliderRange[1]]);\n      } else {\n        set_sliderRange([event.target.value, sliderRange[1]]);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    style: {\n      width: \"100%\",\n      margin: \"0px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: sliderRange,\n    onChange: (event, newValue) => set_sliderRange(newValue),\n    onChangeCommitted: (event, newValue) => props.Set_changed(\"range\"),\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"range-slider\",\n    valueLabelDisplay: \"on\",\n    min: 1,\n    max: props.slider_max,\n    marks: marks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upper\",\n    style: {\n      padding: \"0px 0px\",\n      marginTop: -20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    classes: {\n      input: classes.rang_input\n    },\n    id: \"standard-basic\",\n    label: \"Upper\",\n    value: sliderRange[1],\n    style: {\n      width: \"100%\"\n    },\n    onChange: event => {\n      if (isNaN(parseInt(event.target.value))) {\n        set_sliderRange([sliderRange[0], \"\"]);\n      } else {\n        if (parseInt(event.target.value) > props.slider_max) {\n          set_sliderRange([sliderRange[0], props.slider_max]);\n        } else {\n          set_sliderRange([sliderRange[0], parseInt(event.target.value)]);\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    item: true,\n    xs: \"2\",\n    style: {\n      marginTop: -10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"range_button\",\n    style: {\n      backgroundColor: \"#ededed\",\n      height: 30\n    },\n    onClick: () => {\n      if (sliderRange[0] > sliderRange[1]) {\n        alert(\"Lower range can not be larger than the upper range\");\n      } else if (sliderRange[1] < sliderRange[0]) {\n        alert(\"upper range can not be smaller than the lower range\");\n      } else {\n        props.Set_range_mode_range2(sliderRange);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Update range\")));\n}\n\nconst maptstateToprop = state => {\n  return {\n    slider_max: state.slider_max,\n    range_mode_range2: state.range_mode_range2\n  };\n};\n\nconst mapdispatchToprop = dispatch => {\n  return {\n    Set_range_mode_range2: val => dispatch({\n      type: \"range_mode_range2\",\n      value: val\n    }),\n    Set_changed: val => dispatch({\n      type: \"changed\",\n      value: val\n    })\n  };\n};\n\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Range/SliderGroup2.js"],"names":["React","Slider","makeStyles","connect","TextField","Button","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","tRoot","marginBottom","rang_input","marginLeft","Modes","props","classes","sliderRange","set_sliderRange","useState","range_mode_range2","temp_marks","step","slider_max","i","push","marks","map","item","myitem","parseInt","value","label","height","paddingTop","paddingLeft","border","padding","marginTop","input","event","isNaN","target","margin","newValue","Set_changed","backgroundColor","alert","Set_range_mode_range2","maptstateToprop","state","mapdispatchToprop","dispatch","val","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport './ModelSlider.scss';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.range_mode_range2);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"Modelslider\" style={{ height: 70, width: \"100%\", marginBottom: 5, paddingTop: 30, paddingLeft: 15, border: \"1px solid rgb(178, 178, 178,0.5)\" }}>\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([\"\", sliderRange[1]])\n                        } else {\n                            set_sliderRange([event.target.value, sliderRange[1]])\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"slider\" style={{ width: \"100%\", margin: \"0px 0px\" }}>\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\n                />\n            </div>\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([sliderRange[0], \"\"])\n                        } else {\n                            if (parseInt(event.target.value) > props.slider_max) {\n                                set_sliderRange([sliderRange[0], props.slider_max])\n                            }\n                            else {\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\n                    onClick={() => {\n                        if ( sliderRange[0] > sliderRange[1]) {\n                            alert(\"Lower range can not be larger than the upper range\")\n                        }\n                        else if ( sliderRange[1] < sliderRange[0]) {\n                            alert(\"upper range can not be smaller than the lower range\")\n                        }\n                        else{\n                            props.Set_range_mode_range2(sliderRange)\n                        }\n                    }}\n                >Update range</Button>\n            </div>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        slider_max: state.slider_max,\n        range_mode_range2: state.range_mode_range2,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);"]},"metadata":{},"sourceType":"module"}