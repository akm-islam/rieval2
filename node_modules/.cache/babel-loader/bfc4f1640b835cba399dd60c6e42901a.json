{"ast":null,"code":"import*as d3 from'd3';import*as $ from\"jquery\";export default function CreateChart(histogram_data,svg,feature_name,feature_index,number_of_features,store_instances,all_instances){console.log(feature_name,histogram_data,\"feature_name\");var parent_width=$(\".feature_histograms_container\").width();var parent_height=$(\".feature_histograms_container\").height();var feature_width=$(\".feature_histograms_container\").width();var feature_height=120;var margin={top:10,right:5,bottom:40,left:5};d3.select(\".feature_histograms_container\").attr('height',feature_height*number_of_features+20);svg.attr('y',feature_height*feature_index).attr('width',parent_width).attr('height',feature_height);//-----------------------------------------------------------\nvar occur={};histogram_data.map(function(item){if(item.y in occur)occur[item.y]=occur[item.y]+1;else{occur[item.y]=1;}});var items=Object.entries(occur).sort(function(first,second){return second[1]-first[1];});var x=items.map(function(element){return element[1];});var sum_x=d3.sum(x);svg.selectAll('.item_svg').data(items).join(\"svg\").attr(\"class\",'item_svg').attr(\"x\",function(d,i){return d3.sum(x.slice(0,i))/sum_x*feature_width;}).attr('y',margin.top).attr('width',function(d,i){return d[1]/sum_x*feature_width-.2;}).attr('height',feature_height-margin.bottom).attr('add_rectangle',function(d){d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\",\"my_rect\").attr(\"width\",\"100%\").attr(\"height\",feature_height-margin.bottom).style(\"fill\",\"gray\").attr(\"check\",function(){if(feature_name+d[0]in all_instances){if(all_instances[feature_name+d[0]].length>0){d3.select(this).classed('feature_clicked',true);}}// if the feature and the category exists we check the length and decide that it is clicked item. In categorical items if something is clicked it can not have empty instances\n}).on('click',function(){if(!d3.select(this).classed('feature_clicked')){// if not classed we add the class and the data\nd3.select(this).classed('feature_clicked',true);store_instances(feature_name+d[0],histogram_data.filter(function(item){return item['y']==d[0];}).map(function(item){return item.x;}));}else{// if claassed we already have it so we set it empty\nd3.select(this).classed('feature_clicked',false);store_instances(feature_name+d[0],[]);}});}).attr('add_text',function(d){//if(d3.select(this).attr(\"width\")>9)\nd3.select(this).selectAll(\"text\").data([0]).join(\"text\").text(d[0]).attr('x',\"50%\").attr(\"y\",'50%').attr('dominant-baseline','middle').style(\"font-size\",d3.select(this).attr(\"width\")>11?10:d3.select(this).attr(\"width\")-2).style(\"writing-mode\",\"tb\").style(\"text-anchor\",\"middle\").style('cursor','pointer');});//----------------------------------------------------------- Histogram creation ends here\nsvg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\",\"hist_title\").attr(\"y\",feature_height-10).attr(\"x\",feature_width/2).attr(\"text-anchor\",\"middle\").attr('font-size',14).text(feature_name).style('text-transform','capitalize');}","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Top/FeatureHistograms/CreateBarChart.js"],"names":["d3","$","CreateChart","histogram_data","svg","feature_name","feature_index","number_of_features","store_instances","all_instances","console","log","parent_width","width","parent_height","height","feature_width","feature_height","margin","top","right","bottom","left","select","attr","occur","map","item","y","items","Object","entries","sort","first","second","x","element","sum_x","sum","selectAll","data","join","d","i","slice","style","length","classed","on","filter","text"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport * as $ from \"jquery\"\nexport default function CreateChart(histogram_data, svg, feature_name, feature_index, number_of_features,store_instances,all_instances) {\n  console.log(feature_name,histogram_data,\"feature_name\")  \n  var parent_width = $(\".feature_histograms_container\").width()\n  var parent_height = $(\".feature_histograms_container\").height()\n  var feature_width = $(\".feature_histograms_container\").width()\n  var feature_height = 120\n  const margin = { top: 10, right: 5, bottom: 40, left: 5 }\n  d3.select(\".feature_histograms_container\").attr('height', feature_height * number_of_features + 20)\n  svg.attr('y', feature_height * feature_index).attr('width', parent_width).attr('height', feature_height)\n  //-----------------------------------------------------------\n  var occur = {}\n  histogram_data.map(item => {\n    if (item.y in occur) occur[item.y] = occur[item.y] + 1\n    else { occur[item.y] = 1 }\n  })\n  var items = Object.entries(occur).sort((first, second) => second[1] - first[1]);\n  var x = items.map(element => element[1]);\n  var sum_x = d3.sum(x)\n  svg.selectAll('.item_svg').data(items).join(\"svg\").attr(\"class\", 'item_svg').attr(\"x\", (d, i) => (d3.sum(x.slice(0, i)) / sum_x) * feature_width).attr('y',margin.top).attr('width', (d, i) => ((d[1] / sum_x) * feature_width) - .2).attr('height', feature_height - margin.bottom)\n    .attr('add_rectangle', function (d) {\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"width\", \"100%\").attr(\"height\", feature_height - margin.bottom).style(\"fill\", \"gray\")\n      .attr(\"check\",function(){\n        if(feature_name+d[0] in all_instances){ if(all_instances[feature_name+d[0]].length>0){d3.select(this).classed('feature_clicked',true) }} // if the feature and the category exists we check the length and decide that it is clicked item. In categorical items if something is clicked it can not have empty instances\n      })\n      .on('click', function(){\n        if(!d3.select(this).classed('feature_clicked')){ // if not classed we add the class and the data\n          d3.select(this).classed('feature_clicked',true)\n          store_instances(feature_name+d[0],histogram_data.filter(item=>item['y']==d[0]).map(item=>item.x))\n        }\n        else{ // if claassed we already have it so we set it empty\n          d3.select(this).classed('feature_clicked',false)\n          store_instances(feature_name+d[0],[])\n        }\n      })\n      \n    \n    })\n    .attr('add_text', function (d) {\n      //if(d3.select(this).attr(\"width\")>9)\n      d3.select(this).selectAll(\"text\").data([0]).join(\"text\").text(d[0]).attr('x', \"50%\").attr(\"y\", '50%').attr('dominant-baseline', 'middle').style(\"font-size\", d3.select(this).attr(\"width\") > 11 ? 10 : d3.select(this).attr(\"width\") - 2).style(\"writing-mode\", \"tb\").style(\"text-anchor\", \"middle\").style('cursor', 'pointer')\n    })\n  //----------------------------------------------------------- Histogram creation ends here\n  svg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", feature_height-10).attr(\"x\", feature_width / 2).attr(\"text-anchor\", \"middle\").attr('font-size', 14).text(feature_name).style('text-transform','capitalize')\n}"]},"metadata":{},"sourceType":"module"}