{"ast":null,"code":"import * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport textures from 'textures';\nexport function Create_deviation_chart(parent_id, parent_exp_id, selected_instances, original_data, default_models, anim_config, selected_year, average, clicked_circles, Set_clicked_circles, diverginColor, sparkline_data, Set_selected_year, dataset, threshold) {\n  console.log(\"Test\", original_data[0], parent_id);\n  var div = d3.select(\"body\").selectAll('.tooltip').data([0]).join(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n  var parent_width = $(\"#\" + parent_id).width() - 5;\n  var parent_height = $(\".\" + 'deviation_plot_container_div').height(); // deviation_plot_container_div is the div that contains the deviation plot for all modes\n\n  var data = original_data.filter(item => selected_year == item['1-qid'] && selected_instances.includes(parseInt(item['two_realRank'])));\n  var temp_scale_data = [];\n  data.map(item => {\n    default_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank']))));\n  }); // font_line_gap=sparkline_width+4\n\n  var config = {\n    space_for_state_name: 120,\n    fontSize: 12,\n    font_dy: -6,\n    sparkline_width: 0,\n    font_line_gap: 5,\n    line_stroke_width: 12,\n    animation_duration: 0,\n    container_height: 100,\n    my_svg_top_margin: 10,\n    myg_top_margin: 10\n  };\n  var y_distance = parent_height / selected_instances.length;\n\n  if (y_distance < 15) {\n    var y_distance = 15;\n  } //console.log(\"Checking\", y_distance, selected_instances)\n\n\n  d3.select(\"#\" + parent_id).attr(\"height\", y_distance * selected_instances);\n  var circle_radius = config.line_stroke_width / 2;\n  var t = textures.lines().size(5).strokeWidth(2).stroke(\"#cccccc\").background(\"gray\");\n  var svg = d3.select(\"#\" + parent_id).attr('height', y_distance + data.length * y_distance).call(t);\n  var parent_g = svg.selectAll(\".parent_g\").data([0]).join('g').attr('class', 'parent_g').attr('transform', \"translate(\" + 0 + \",13)\");\n  var items_g = parent_g.selectAll(\".items\").data(data, d => d['State']).join(enter => enter.append(\"g\").attr(\"class\", \"items\").attr('transform', (d, i) => \"translate(\" + config.space_for_state_name + \",\" + i * y_distance + \")\"), update => update.transition().duration(anim_config.rank_animation).attr('transform', (d, i) => \"translate(\" + config.space_for_state_name + \",\" + i * y_distance + \")\"), exit => exit.remove());\n  items_g.attr(\"add_state\", function (d) {\n    d3.select(this).selectAll(\"text\").data([d]).join('text').text(dd => {\n      var max_textsize = 15;\n      var val = d['State'];\n\n      if (val.length > max_textsize) {\n        val = val.replace(\"University\", \"U\");\n      }\n\n      if (val.length > max_textsize) {\n        val = val.substring(0, max_textsize) + \"..\";\n      }\n\n      return val + \" \" + d['two_realRank'];\n    }).attr('fill', d => diverginColor(d['two_realRank'])).attr(\"dominant-baseline\", \"hanging\").attr(\"font-size\", config.fontSize).attr(\"x\", 0).attr('text-anchor', 'end').attr(\"dy\", config.font_dy);\n  }).attr(\"stroke\", d => {\n    if (clicked_circles.includes(d['id'])) {\n      return \"rgb(227, 26, 28,0.5)\";\n    }\n  })\n  /*\n    .style(\"stroke-width\", (d) => {\n      if (clicked_circles.includes(d['id'])) {\n        return 2.5\n      }\n    })\n  */\n  .attr(\"add_lines_and_circles\", function (d) {\n    var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']));\n    var line_data = [];\n    default_models.map(model_name => {\n      data_for_all_years.map(item => {\n        var a = {};\n        var two_realRank = parseInt(item['two_realRank']);\n        var predicted_rank = parseInt(item[model_name]);\n        a['two_realRank'] = two_realRank;\n        a['predicted_rank'] = predicted_rank;\n        a[\"model\"] = model_name;\n        a['year'] = item['1-qid'];\n\n        if (Math.abs(predicted_rank - two_realRank) < threshold) {\n          line_data.push(a);\n        }\n      });\n    }); // This is only for scaling starts here\n\n    var temp_scale_data = [];\n    data.map(item => {\n      default_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank']))));\n    });\n    var temp_max = d3.max(temp_scale_data);\n    var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, parent_width - (config.space_for_state_name + circle_radius)]);\n\n    if (temp_max == 0) {\n      var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, 0]);\n    } // This is only for scaling ends here\n\n\n    d3.select(this).selectAll(\"line\").data([d]).join(enter => enter.append('line').attr(\"x1\", config.font_line_gap).attr(\"y1\", (d, i) => y_distance * i).attr(\"y2\", (d, i) => y_distance * i).attr(\"stroke-width\", config.line_stroke_width).attr(\"stroke\", t.url()).attr(\"x2\", d2 => {\n      var temp = [];\n      line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])));\n      return sclale1(d3.max(temp));\n    }) // Update\n    , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"x2\", d2 => {\n      var temp = [];\n      line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])));\n      return sclale1(d3.max(temp));\n    })); // ------------ Circles start here\n\n    var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']));\n    var circ_data = [];\n    default_models.map(model_name => {\n      data_for_all_years.map(item => {\n        var a = {};\n        var two_realRank = parseInt(item['two_realRank']);\n        var predicted_rank = parseInt(item[model_name]);\n        a['two_realRank'] = two_realRank;\n        a['predicted_rank'] = predicted_rank;\n        a[\"model\"] = model_name;\n        a['year'] = item['1-qid']; //a['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n\n        a['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\");\n        a['className'] = \"dev_circles \" + model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\");\n\n        if (Math.abs(predicted_rank - two_realRank) < threshold) {\n          circ_data.push(a);\n        }\n      });\n    });\n    var my_circs = d3.select(this).selectAll(\".my_circles\").data(circ_data, d => d['id']).join(enter => enter.append(\"circle\").attr('id', d => d['id']).attr(\"cx\", (d2, i) => {\n      d3.select(this).classed(d2['id'], true);\n\n      if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) {\n        return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius;\n      }\n\n      return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']));\n    }) // Update\n    , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"cx\", (d2, i) => {\n      d3.select(this).classed(d2['id'], true);\n\n      if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) {\n        return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius;\n      }\n\n      return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']));\n    }));\n    my_circs.attr(\"r\", circle_radius).attr('class', d => 'my_circles ' + d['className']).attr('fill', d => diverginColor(d['two_realRank'])).attr(\"parent_id\", parent_exp_id).on('click', d => Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']])).on(\"mouseover\", function (d2) {\n      div.transition().duration(200).style(\"opacity\", .9);\n      div.html(\"Year : \" + d2[\"year\"] + \"<br></br>\" + \"Model: \" + d2[\"model\"] + \"<br></br>\" + \"Deviation: \" + Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])).style(\"left\", d3.event.pageX - 140 + \"px\").style(\"top\", d3.event.pageY - 98 + \"px\");\n    }).on(\"mouseout\", function (d2) {\n      //d3.select(this).classed(d2['id'],true)\n      div.transition().duration(500).style(\"opacity\", 0);\n    });\n  });\n}","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/DevPlot/deviation_chart.js"],"names":["d3","$","textures","Create_deviation_chart","parent_id","parent_exp_id","selected_instances","original_data","default_models","anim_config","selected_year","average","clicked_circles","Set_clicked_circles","diverginColor","sparkline_data","Set_selected_year","dataset","threshold","console","log","div","select","selectAll","data","join","attr","style","parent_width","width","parent_height","height","filter","item","includes","parseInt","temp_scale_data","map","model","push","Math","abs","config","space_for_state_name","fontSize","font_dy","sparkline_width","font_line_gap","line_stroke_width","animation_duration","container_height","my_svg_top_margin","myg_top_margin","y_distance","length","circle_radius","t","lines","size","strokeWidth","stroke","background","svg","call","parent_g","items_g","d","enter","append","i","update","transition","duration","rank_animation","exit","remove","text","dd","max_textsize","val","replace","substring","data_for_all_years","line_data","model_name","a","two_realRank","predicted_rank","temp_max","max","sclale1","scaleLinear","domain","range","url","d2","temp","deviation_animation","delay","circ_data","my_circs","classed","on","html","event","pageX","pageY"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport * as $ from 'jquery';\nimport textures from 'textures';\n\nexport function Create_deviation_chart(parent_id, parent_exp_id, selected_instances, original_data, default_models, anim_config, selected_year, average, clicked_circles, Set_clicked_circles, diverginColor, sparkline_data, Set_selected_year, dataset, threshold) {\n  console.log(\"Test\",original_data[0], parent_id)\n  var div = d3.select(\"body\").selectAll('.tooltip').data([0]).join(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n  var parent_width = $(\"#\" + parent_id).width() - 5\n  var parent_height = $(\".\" + 'deviation_plot_container_div').height() // deviation_plot_container_div is the div that contains the deviation plot for all modes\n  var data = original_data.filter(item => selected_year == item['1-qid'] && selected_instances.includes(parseInt(item['two_realRank'])))\n  var temp_scale_data = []\n  data.map(item => { default_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n\n  // font_line_gap=sparkline_width+4\n  var config = { space_for_state_name: 120, fontSize: 12, font_dy: -6, sparkline_width: 0, font_line_gap: 5, line_stroke_width: 12, animation_duration: 0, container_height: 100, my_svg_top_margin: 10, myg_top_margin: 10 }\n  var y_distance = parent_height / selected_instances.length\n  if (y_distance < 15) { var y_distance = 15 }\n  //console.log(\"Checking\", y_distance, selected_instances)\n  d3.select(\"#\" + parent_id).attr(\"height\", y_distance * selected_instances)\n\n  var circle_radius = config.line_stroke_width / 2\n  var t = textures.lines().size(5).strokeWidth(2).stroke(\"#cccccc\").background(\"gray\");\n  var svg = d3.select(\"#\" + parent_id).attr('height', y_distance + data.length * y_distance).call(t)\n  var parent_g = svg.selectAll(\".parent_g\").data([0]).join('g').attr('class', 'parent_g').attr('transform', \"translate(\" + 0 + \",13)\")\n  var items_g = parent_g.selectAll(\".items\").data(data, d => d['State']).join(enter => enter.append(\"g\").attr(\"class\", \"items\")\n    .attr('transform', (d, i) => \"translate(\" + config.space_for_state_name + \",\" + i * y_distance + \")\")\n    , update => update.transition().duration(anim_config.rank_animation).attr('transform', (d, i) => \"translate(\" + config.space_for_state_name + \",\" + i * y_distance + \")\")\n    , exit => exit.remove()\n  )\n  items_g.attr(\"add_state\", function (d) {\n    d3.select(this).selectAll(\"text\").data([d]).join('text')\n      .text(dd => {\n        var max_textsize = 15\n        var val = d['State']\n        if (val.length > max_textsize) { val = val.replace(\"University\", \"U\") }\n        if (val.length > max_textsize) { val = val.substring(0, max_textsize) + \"..\" }\n        return val + \" \" + d['two_realRank']\n      })\n      .attr('fill', d => diverginColor(d['two_realRank'])).attr(\"dominant-baseline\", \"hanging\").attr(\"font-size\", config.fontSize)\n      .attr(\"x\", 0).attr('text-anchor', 'end').attr(\"dy\", config.font_dy)\n  }).attr(\"stroke\", (d) => {\n    if (clicked_circles.includes(d['id'])) {\n      return \"rgb(227, 26, 28,0.5)\"\n    }\n  })\n  /*\n    .style(\"stroke-width\", (d) => {\n      if (clicked_circles.includes(d['id'])) {\n        return 2.5\n      }\n    })\n*/\n    .attr(\"add_lines_and_circles\", function (d) {\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n      var line_data = []\n      default_models.map(model_name => {\n        data_for_all_years.map(item => {\n          var a = {}\n          var two_realRank = parseInt(item['two_realRank'])\n          var predicted_rank = parseInt(item[model_name])\n          a['two_realRank'] = two_realRank\n          a['predicted_rank'] = predicted_rank\n          a[\"model\"] = model_name\n          a['year'] = item['1-qid']\n          if (Math.abs(predicted_rank - two_realRank) < threshold) {\n            line_data.push(a)\n          }\n        })\n      })\n      // This is only for scaling starts here\n      var temp_scale_data = []\n      data.map(item => { default_models.map(model => temp_scale_data.push(Math.abs(parseInt(item[model]) - parseInt(item['two_realRank'])))) })\n      var temp_max = d3.max(temp_scale_data)\n      var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, parent_width - (config.space_for_state_name + circle_radius)])\n      if (temp_max == 0) { var sclale1 = d3.scaleLinear().domain([0, temp_max]).range([config.font_line_gap, 0]) }\n      // This is only for scaling ends here\n      d3.select(this).selectAll(\"line\").data([d]).join(enter => enter.append('line')\n        .attr(\"x1\", config.font_line_gap).attr(\"y1\", (d, i) => y_distance * i).attr(\"y2\", (d, i) => y_distance * i).attr(\"stroke-width\", config.line_stroke_width).attr(\"stroke\", t.url()).attr(\"x2\", (d2) => {\n          var temp = []\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n          return sclale1(d3.max(temp))\n        })\n        // Update\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"x2\", (d2) => {\n          var temp = []\n          line_data.map(item => temp.push(Math.abs(item[\"predicted_rank\"] - item[\"two_realRank\"])))\n          return sclale1(d3.max(temp))\n        }))\n      // ------------ Circles start here\n      var data_for_all_years = data.filter(item => d['two_realRank'] == parseInt(item['two_realRank']))\n      var circ_data = []\n      default_models.map(model_name => {\n        data_for_all_years.map(item => {\n          var a = {}\n          var two_realRank = parseInt(item['two_realRank'])\n          var predicted_rank = parseInt(item[model_name])\n          a['two_realRank'] = two_realRank\n          a['predicted_rank'] = predicted_rank\n          a[\"model\"] = model_name\n          a['year'] = item['1-qid']\n          //a['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n          a['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n          a['className'] = \"dev_circles \" + model_name.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n          if (Math.abs(predicted_rank - two_realRank) < threshold) {\n            circ_data.push(a)\n          }\n        })\n      })\n      var my_circs = d3.select(this).selectAll(\".my_circles\").data(circ_data, d => d['id']).join(\n        enter => enter.append(\"circle\").attr('id', d => d['id']).attr(\"cx\", (d2, i) => {\n          d3.select(this).classed(d2['id'], true)\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n        })\n        // Update\n        , update => update.transition().duration(anim_config.deviation_animation).delay(anim_config.rank_animation).attr(\"cx\", (d2, i) => {\n          d3.select(this).classed(d2['id'], true)\n          if (d2[\"predicted_rank\"] - d2['two_realRank'] == 0) { return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank'])) + circle_radius }\n          return sclale1(Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n        })\n      )\n      my_circs.attr(\"r\", circle_radius).attr('class', d => 'my_circles ' + d['className'])\n        .attr('fill', d => diverginColor(d['two_realRank'])).attr(\"parent_id\", parent_exp_id)\n        .on('click', d => Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']]))\n        .on(\"mouseover\", function (d2) {\n          div.transition().duration(200).style(\"opacity\", .9);\n          div.html(\"Year : \" + d2[\"year\"] + \"<br></br>\" + \"Model: \" + d2[\"model\"] + \"<br></br>\" + \"Deviation: \" + Math.abs(d2[\"predicted_rank\"] - d2['two_realRank']))\n            .style(\"left\", (d3.event.pageX - 140) + \"px\").style(\"top\", (d3.event.pageY - 98) + \"px\");\n        }).on(\"mouseout\", function (d2) {\n          //d3.select(this).classed(d2['id'],true)\n          div.transition()\n            .duration(500)\n            .style(\"opacity\", 0);\n        })\n\n    })\n\n}"]},"metadata":{},"sourceType":"module"}