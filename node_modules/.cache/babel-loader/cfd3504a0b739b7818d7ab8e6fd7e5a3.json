{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/NewWork/trivea/src/components/Top/Top.js\";\nimport React, { Component } from 'react'; //------------------------------------------------All datasets imports ends here\n\nimport { Row, Col } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport FeaturesDropdown from \"./FeaturesDropdown\";\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport SelectMode from './SelectMode';\nimport SelectExpMethod from './SelectExpMethod';\nimport Advance from './Advance';\nimport LabelOn from './LabelOn';\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // mydata is original data\n\n    this.buttonclickHandler = (value, type) => {\n      console.log(value);\n      setTimeout(() => {\n        this.setState({\n          random: Math.random()\n        });\n      }, 500);\n      type = \"button\" ? this.props.Set_view_data(value) : null;\n      type = \"form\" ? this.setState({\n        view_data: value\n      }) : null;\n    };\n\n    this.state = {\n      random: 10,\n      original_data: null,\n      grouped_by_year_data: null,\n      show: [\"Slope charts\", \"Rankings\", \"Explanation\"],\n      view_data: 1,\n      histogram_data: [],\n      ref_year: null,\n      features_dict: {},\n      features_voted: null,\n      Legend_ready_to_vis: null,\n      legend_model: \"CordAscent\"\n    };\n  }\n\n  shouldComponentUpdate() {\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: {\n        position: \"relative\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ButtonGroup, {\n      \"aria-label\": \"outlined button group\",\n      style: {\n        marginRight: 150,\n        border: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        borderRadius: 0,\n        border: 'none',\n        borderRight: '1px solid #bfbfbf'\n      },\n      onClick: () => this.buttonclickHandler(1, \"button\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, \"View Data\"), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        borderRadius: 0,\n        border: 'none',\n        borderRight: '1px solid #bfbfbf'\n      },\n      onClick: () => this.buttonclickHandler(0, \"button\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Load Data\")), /*#__PURE__*/React.createElement(SelectMode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }), this.props.mode == \"Model\" ? /*#__PURE__*/React.createElement(FeaturesDropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }\n    }) : null, /*#__PURE__*/React.createElement(SelectExpMethod, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(LabelOn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), this.props.mode == \"Model\" ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        right: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Advance, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 85\n      }\n    })) : null), this.props.view_data == false ? /*#__PURE__*/React.createElement(Row, {\n      className: \"Topbar_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"load\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: () => this.buttonclickHandler(1, \"form\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(RadioGroup, {\n      \"aria-label\": \"gender\",\n      name: \"gender1\",\n      onChange: (event, val) => this.props.handleradioChange(val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, ['Fiscal Dataset', 'School Dataset (World)', 'School Dataset (USA)'].map(value => {\n      return /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: value,\n        control: /*#__PURE__*/React.createElement(Radio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 71\n          }\n        }),\n        label: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 30\n        }\n      });\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"outlined\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"Load\"))))) : null);\n  }\n\n}\n\nconst maptstateToprop = state => {\n  return {\n    view_data: state.view_data,\n    mode: state.mode\n  };\n};\n\nconst mapdispatchToprop = dispatch => {\n  return {\n    Set_view_data: val => dispatch({\n      type: \"view_data\",\n      value: val\n    })\n  };\n};\n\nexport default connect(maptstateToprop, mapdispatchToprop)(App);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Top/Top.js"],"names":["React","Component","Row","Col","Button","FormControlLabel","FormControl","Radio","RadioGroup","FormLabel","connect","Grid","FeaturesDropdown","ButtonGroup","SelectMode","SelectExpMethod","Advance","LabelOn","App","constructor","props","buttonclickHandler","value","type","console","log","setTimeout","setState","random","Math","Set_view_data","view_data","state","original_data","grouped_by_year_data","show","histogram_data","ref_year","features_dict","features_voted","Legend_ready_to_vis","legend_model","shouldComponentUpdate","render","position","marginRight","border","borderRadius","borderRight","mode","right","event","val","handleradioChange","map","maptstateToprop","mapdispatchToprop","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,GAAN,SAAkBjB,SAAlB,CAA4B;AAC1BkB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAEjB;;AAFiB,SASnBC,kBATmB,GASE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAI,MAAAA,UAAU,CAAC,MAAM;AAAE,aAAKC,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAEC,IAAI,CAACD,MAAL;AAAV,SAAd;AAA0C,OAAnD,EAAqD,GAArD,CAAV;AACAL,MAAAA,IAAI,GAAG,WAAW,KAAKH,KAAL,CAAWU,aAAX,CAAyBR,KAAzB,CAAX,GAA6C,IAApD;AACAC,MAAAA,IAAI,GAAG,SAAS,KAAKI,QAAL,CAAc;AAAEI,QAAAA,SAAS,EAAET;AAAb,OAAd,CAAT,GAA+C,IAAtD;AACD,KAdkB;;AAGjB,SAAKU,KAAL,GAAa;AACXJ,MAAAA,MAAM,EAAE,EADG;AAEXK,MAAAA,aAAa,EAAE,IAFJ;AAEUC,MAAAA,oBAAoB,EAAE,IAFhC;AAEsCC,MAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,UAAjB,EAA6B,aAA7B,CAF5C;AAEyFJ,MAAAA,SAAS,EAAE,CAFpG;AAGXK,MAAAA,cAAc,EAAE,EAHL;AAGSC,MAAAA,QAAQ,EAAE,IAHnB;AAGyBC,MAAAA,aAAa,EAAE,EAHxC;AAG4CC,MAAAA,cAAc,EAAE,IAH5D;AAGkEC,MAAAA,mBAAmB,EAAE,IAHvF;AAG6FC,MAAAA,YAAY,EAAE;AAH3G,KAAb;AAKD;;AAODC,EAAAA,qBAAqB,GAAG;AACtB,WAAO,IAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,oBAAW,uBAAxB;AAAgD,MAAA,KAAK,EAAE;AAACC,QAAAA,WAAW,EAAC,GAAb;AAAiBC,QAAAA,MAAM,EAAC;AAAxB,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAC,CAAd;AAAgBD,QAAAA,MAAM,EAAC,MAAvB;AAA8BE,QAAAA,WAAW,EAAC;AAA1C,OAAf;AAA+E,MAAA,OAAO,EAAE,MAAM,KAAK3B,kBAAL,CAAwB,CAAxB,EAA2B,QAA3B,CAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAEA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAC0B,QAAAA,YAAY,EAAC,CAAd;AAAgBD,QAAAA,MAAM,EAAC,MAAvB;AAA+BE,QAAAA,WAAW,EAAC;AAA3C,OAAf;AAAgF,MAAA,OAAO,EAAE,MAAM,KAAK3B,kBAAL,CAAwB,CAAxB,EAA2B,QAA3B,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,CADF,eAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMG,KAAKD,KAAL,CAAW6B,IAAX,IAAiB,OAAjB,gBAAyB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,GAA+D,IANlE,eAOE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASG,KAAK7B,KAAL,CAAW6B,IAAX,IAAiB,OAAjB,gBAAyB;AAAK,MAAA,KAAK,EAAE;AAACL,QAAAA,QAAQ,EAAC,UAAV;AAAqBM,QAAAA,KAAK,EAAC;AAA3B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhD,CAAzB,GAAmG,IATtG,CADF,EAYG,KAAK9B,KAAL,CAAWW,SAAX,IAAwB,KAAxB,gBACC,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,MAAM,KAAKV,kBAAL,CAAwB,CAAxB,EAA2B,MAA3B,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AAAY,oBAAW,QAAvB;AAAgC,MAAA,IAAI,EAAC,SAArC;AAA+C,MAAA,QAAQ,EAAE,CAAC8B,KAAD,EAAQC,GAAR,KAAgB,KAAKhC,KAAL,CAAWiC,iBAAX,CAA6BD,GAA7B,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC,gBAAD,EAAmB,wBAAnB,EAA4C,sBAA5C,EAAoEE,GAApE,CAAyEhC,KAAD,IAAW;AAClF,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEA,KAAzB;AAAgC,QAAA,OAAO,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzC;AAAoD,QAAA,KAAK,EAAEA,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CADH,CAFF,eAOE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,UAA9B;AAAyC,MAAA,KAAK,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF,CADF,CADF,CADD,GAeG,IA3BN,CADF;AA+BD;;AAnDyB;;AAqD5B,MAAMiC,eAAe,GAAIvB,KAAD,IAAW;AACjC,SAAO;AACLD,IAAAA,SAAS,EAAEC,KAAK,CAACD,SADZ;AAELkB,IAAAA,IAAI,EAACjB,KAAK,CAACiB;AAFN,GAAP;AAKD,CAND;;AAOA,MAAMO,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACL3B,IAAAA,aAAa,EAAGsB,GAAD,IAASK,QAAQ,CAAC;AAAElC,MAAAA,IAAI,EAAE,WAAR;AAAqBD,MAAAA,KAAK,EAAE8B;AAA5B,KAAD;AAD3B,GAAP;AAID,CALD;;AAMA,eAAe1C,OAAO,CAAC6C,eAAD,EAAkBC,iBAAlB,CAAP,CAA4CtC,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\n//------------------------------------------------All datasets imports ends here\nimport { Row, Col } from 'reactstrap';\nimport Button from '@material-ui/core/Button';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport FeaturesDropdown from \"./FeaturesDropdown\"\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport SelectMode from './SelectMode';\nimport SelectExpMethod from './SelectExpMethod';\nimport Advance from './Advance';\nimport LabelOn from './LabelOn';\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // mydata is original data\n    this.state = {\n      random: 10,\n      original_data: null, grouped_by_year_data: null, show: [\"Slope charts\", \"Rankings\", \"Explanation\"], view_data: 1,\n      histogram_data: [], ref_year: null, features_dict: {}, features_voted: null, Legend_ready_to_vis: null, legend_model: \"CordAscent\",\n    };\n  }\n  buttonclickHandler = (value, type) => {\n    console.log(value)\n    setTimeout(() => { this.setState({ random: Math.random() }) }, 500);\n    type = \"button\" ? this.props.Set_view_data(value) : null\n    type = \"form\" ? this.setState({ view_data: value }) : null\n  }\n  shouldComponentUpdate() {\n    return true;\n  }\n  render() {\n    return (\n      <div>\n        <Grid container style={{position:\"relative\"}}>\n          <ButtonGroup aria-label=\"outlined button group\" style={{marginRight:150,border:'none'}}>\n          <Button style={{borderRadius:0,border:'none',borderRight:'1px solid #bfbfbf'}} onClick={() => this.buttonclickHandler(1, \"button\")}>View Data</Button>\n          <Button style={{borderRadius:0,border:'none', borderRight:'1px solid #bfbfbf'}} onClick={() => this.buttonclickHandler(0, \"button\")}>Load Data</Button>\n          </ButtonGroup>\n          <SelectMode></SelectMode>\n          {this.props.mode==\"Model\"?<FeaturesDropdown></FeaturesDropdown>:null}\n          <SelectExpMethod></SelectExpMethod>\n          <LabelOn></LabelOn>\n          {this.props.mode==\"Model\"?<div style={{position:\"absolute\",right:\"20px\"}}><Advance></Advance></div>:null}\n        </Grid>\n        {this.props.view_data == false ?\n          <Row className=\"Topbar_container\">\n            <div className=\"load\">\n              <form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\"></FormLabel>\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={(event, val) => this.props.handleradioChange(val)}>\n                    {['Fiscal Dataset', 'School Dataset (World)','School Dataset (USA)'].map((value) => {\n                      return <FormControlLabel value={value} control={<Radio />} label={value} />\n                    })}\n                  </RadioGroup>\n                  <Button type=\"submit\" variant=\"outlined\" color=\"primary\">Load</Button>\n                </FormControl>\n              </form>\n            </div></Row>\n          : null}\n      </div>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    view_data: state.view_data,\n    mode:state.mode,\n    \n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_view_data: (val) => dispatch({ type: \"view_data\", value: val }),\n  \n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(App);"]},"metadata":{},"sourceType":"module"}