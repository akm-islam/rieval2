{"ast":null,"code":"import React from'react';import Button from'@material-ui/core/Button';import{connect}from\"react-redux\";import Chart_pop from'./04PopoverCharts';import Draggable from'react-draggable';import Grid from'@mui/material/Grid';import*as d3 from'd3';export function SimplePopover(props){var handleClose=function handleClose(){props.set_pop_over(false);props.set_dbclicked_features([]);};//------------------------------\nvar selected_instances=d3.range(d3.min([props.range_mode_range1[0],props.range_mode_range2[0]]),d3.max([props.range_mode_range1[1],props.range_mode_range2[1]])+1);var min=d3.min(selected_instances),max=d3.max(selected_instances);var d=(max-min)/8;var diverginColor=d3.scaleLinear().domain([min+d*7,min+d*6,min+d*5,min+d*4,min+d*3,min+d*2,min]).interpolate(d3.interpolateRgb).range(['#af8dc3','#b197c1','#dbd88c','#dbd88c','#dbd88c','#90bc8d','#7fbf7b']);//------------------------------\nvar selected_instances1=d3.range(props.range_mode_range1[0],props.range_mode_range1[1]+1);//-------------------- Threshold filter\nvar under_threshold_instances=[];var year_data=props.original_data.filter(function(item){return props.selected_year==item['1-qid'];});year_data.map(function(item){var two_realRank=parseInt(item['two_realRank']);var predicted_rank=parseInt(item[props.range_mode_model]);if(Math.abs(predicted_rank-two_realRank)<props.threshold){under_threshold_instances.push(two_realRank);}});selected_instances1=selected_instances1.filter(function(item){return under_threshold_instances.includes(item);});var data1=props.lime_data[props.range_mode_model].filter(function(element){return parseInt(element['1-qid'])==parseInt(props.selected_year)&&selected_instances1.includes(parseInt(element['two_realRank']));});//------------------------------\nvar selected_instances2=d3.range(props.range_mode_range2[0],props.range_mode_range2[1]+1);var under_threshold_instances=[];var year_data=props.original_data.filter(function(item){return props.selected_year==item['1-qid'];});year_data.map(function(item){var two_realRank=parseInt(item['two_realRank']);var predicted_rank=parseInt(item[props.range_mode_model]);if(Math.abs(predicted_rank-two_realRank)<props.threshold){under_threshold_instances.push(two_realRank);}});selected_instances2=selected_instances2.filter(function(item){return under_threshold_instances.includes(item);});var data2=props.lime_data[props.range_mode_model].filter(function(element){return parseInt(element['1-qid'])==parseInt(props.selected_year)&&selected_instances2.includes(parseInt(element['two_realRank']));});return/*#__PURE__*/React.createElement(\"div\",{className:\"pop_over\",style:{position:\"relative\"}},props.pop_over==true?/*#__PURE__*/React.createElement(\"div\",{style:{top:\"2%\",left:\"14%\",position:\"fixed\",pointerEvents:\"none\",backgroundColor:\"transparent\"}},/*#__PURE__*/React.createElement(Draggable,null,/*#__PURE__*/React.createElement(Grid,{style:{backgroundColor:\"#ffffff\",boxShadow:\"3px 2px 15px -7px #000000\",pointerEvents:\"auto\",display:\"relative\",zIndex:6}},/*#__PURE__*/React.createElement(Grid,{container:true,style:{borderBottom:\"1px solid #e2e2e2\",marginBottom:20},direction:\"row\",justifyContent:\"flex-end\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Button,{color:\"secondary\",id:\"draggable-dialog-title\",onClick:handleClose},\"close\")),/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",style:{maxHeight:700,overflow:\"scroll\",maxWidth:1600}},props.dbclicked_features.length>0?props.dbclicked_features.map(function(item,index){return/*#__PURE__*/React.createElement(Grid,{item:true,container:true,direction:\"row\"},/*#__PURE__*/React.createElement(Chart_pop,{index:index,popup_chart_data:[data1,item],default_models:props.default_models,group:\"Group 1\",myid:item.replace(/\\s/g,'').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi,'')+\"range1\",diverginColor:props.diverginColor}),/*#__PURE__*/React.createElement(Chart_pop,{index:index,group:\"Group 2\",popup_chart_data:[data2,item],default_models:props.default_models,myid:item.replace(/\\s/g,'').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi,'')+\"range2\",diverginColor:props.diverginColor}));}):/*#__PURE__*/React.createElement(Chart_pop,{popup_chart_data:data1,default_models:props.default_models,myid:\"myid1\",diverginColor:props.diverginColor,textClickHandler_original:props.textClickHandler_original}))))):null);}var maptstateToprop=function maptstateToprop(state){return{range_mode_range1:state.range_mode_range1,range_mode_range2:state.range_mode_range2,range_mode_model:state.range_mode_model,popup_chart_data:state.popup_chart_data,pop_over:state.pop_over,dbclicked_features:state.dbclicked_features,selected_year:state.selected_year,threshold:state.threshold,original_data:state.original_data,lime_data:state.lime_data,histogram_data:state.histogram_data};};var mapdispatchToprop=function mapdispatchToprop(dispatch){return{set_pop_over:function set_pop_over(val){return dispatch({type:\"pop_over\",value:val});},set_dbclicked_features:function set_dbclicked_features(val){return dispatch({type:\"dbclicked_features\",value:val});},set_clicked_features:function set_clicked_features(val){return dispatch({type:\"clicked_features\",value:val});}};};export default connect(maptstateToprop,mapdispatchToprop)(SimplePopover);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Range/03RangePopover.js"],"names":["React","Button","connect","Chart_pop","Draggable","Grid","d3","SimplePopover","props","handleClose","set_pop_over","set_dbclicked_features","selected_instances","range","min","range_mode_range1","range_mode_range2","max","d","diverginColor","scaleLinear","domain","interpolate","interpolateRgb","selected_instances1","under_threshold_instances","year_data","original_data","filter","item","selected_year","map","two_realRank","parseInt","predicted_rank","range_mode_model","Math","abs","threshold","push","includes","data1","lime_data","element","selected_instances2","data2","position","pop_over","top","left","pointerEvents","backgroundColor","boxShadow","display","zIndex","borderBottom","marginBottom","maxHeight","overflow","maxWidth","dbclicked_features","length","index","default_models","replace","textClickHandler_original","maptstateToprop","state","popup_chart_data","histogram_data","mapdispatchToprop","dispatch","val","type","value","set_clicked_features"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport Chart_pop from './04PopoverCharts'\nimport Draggable from 'react-draggable';\nimport Grid from '@mui/material/Grid';\nimport * as d3 from 'd3';\nexport function SimplePopover(props) {\n    const handleClose = () => {\n        props.set_pop_over(false)\n        props.set_dbclicked_features([])\n    };\n     //------------------------------\n     var selected_instances = d3.range(d3.min([props.range_mode_range1[0], props.range_mode_range2[0]]), d3.max([props.range_mode_range1[1], props.range_mode_range2[1]]) + 1)\n     var min = d3.min(selected_instances), max = d3.max(selected_instances);\n     var d = (max - min) / 8;\n     var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3','#b197c1','#dbd88c','#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']);\n     //------------------------------\n     var selected_instances1 = d3.range(props.range_mode_range1[0], props.range_mode_range1[1] + 1)\n     //-------------------- Threshold filter\n     var under_threshold_instances = []\n     var year_data = props.original_data.filter(item => props.selected_year == item['1-qid'])\n       year_data.map(item => {\n         var two_realRank = parseInt(item['two_realRank'])\n         var predicted_rank = parseInt(item[props.range_mode_model])\n         if (Math.abs(predicted_rank - two_realRank) < props.threshold) {\n           under_threshold_instances.push(two_realRank)\n         }\n       })\n     selected_instances1 = selected_instances1.filter(item => under_threshold_instances.includes(item))\n     var data1 = props.lime_data[props.range_mode_model].filter(element => parseInt(element['1-qid']) == parseInt(props.selected_year) && selected_instances1.includes(parseInt(element['two_realRank'])))\n     //------------------------------\n     var selected_instances2 = d3.range(props.range_mode_range2[0], props.range_mode_range2[1] + 1)\n     var under_threshold_instances = []\n     var year_data = props.original_data.filter(item => props.selected_year == item['1-qid'])\n     year_data.map(item => {\n       var two_realRank = parseInt(item['two_realRank'])\n       var predicted_rank = parseInt(item[props.range_mode_model])\n       if (Math.abs(predicted_rank - two_realRank) < props.threshold) {\n         under_threshold_instances.push(two_realRank)\n       }\n     })\n     selected_instances2 = selected_instances2.filter(item => under_threshold_instances.includes(item))\n     var data2 = props.lime_data[props.range_mode_model].filter(element => parseInt(element['1-qid']) == parseInt(props.selected_year) && selected_instances2.includes(parseInt(element['two_realRank'])))\n    \n    return (\n        <div className=\"pop_over\" style={{ position: \"relative\" }}>\n            {props.pop_over == true ?\n                <div style={{ top: \"2%\", left: \"14%\", position: \"fixed\", pointerEvents: \"none\", backgroundColor: \"transparent\" }}>\n                    <Draggable>\n                        <Grid style={{ backgroundColor: \"#ffffff\", boxShadow: \"3px 2px 15px -7px #000000\", pointerEvents: \"auto\",display:\"relative\",zIndex:6 }}>\n                            <Grid container style={{ borderBottom: \"1px solid #e2e2e2\", marginBottom: 20 }} direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\" >\n                                <Button color=\"secondary\" id=\"draggable-dialog-title\" onClick={handleClose}>close</Button>\n                            </Grid>\n                            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\n                                { \n                                    props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Grid item container direction=\"row\" >\n                                        <Chart_pop index={index}\n                                        popup_chart_data={[data1, item]} default_models={props.default_models} group=\"Group 1\"\n                                        myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')+\"range1\"} diverginColor={props.diverginColor}>\n                                        </Chart_pop>\n                                    <Chart_pop index={index} group=\"Group 2\"\n                                        popup_chart_data={[data2, item]} default_models={props.default_models}\n                                        myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')+\"range2\"} diverginColor={props.diverginColor}>\n                                    </Chart_pop></Grid>\n                                    ) : <Chart_pop popup_chart_data={data1} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\n                                }\n                            </Grid>\n                        </Grid>\n                    </Draggable>\n                </div> : null}\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        range_mode_range1: state.range_mode_range1,\n        range_mode_range2: state.range_mode_range2,\n        range_mode_model: state.range_mode_model,    \n        popup_chart_data: state.popup_chart_data,\n        pop_over: state.pop_over,\n        dbclicked_features: state.dbclicked_features,\n        selected_year: state.selected_year,\n        threshold: state.threshold,\n        original_data: state.original_data,\n        lime_data: state.lime_data,\n        histogram_data: state.histogram_data,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\n        set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\n        set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SimplePopover);\n"]},"metadata":{},"sourceType":"module"}