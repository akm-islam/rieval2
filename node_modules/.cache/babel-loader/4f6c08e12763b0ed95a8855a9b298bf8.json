{"ast":null,"code":"import _defineProperty from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import Slider from'@material-ui/core/Slider';import{makeStyles}from'@material-ui/core/styles';import{connect}from\"react-redux\";import TextField from'@material-ui/core/TextField';import Button from\"@material-ui/core/Button\";import'./ModelSlider.scss';var useStyles=makeStyles(function(theme){return{root:{width:'100%'},heading:{fontSize:theme.typography.pxToRem(15),flexBasis:'33.33%',flexShrink:0},secondaryHeading:{fontSize:theme.typography.pxToRem(15),color:theme.palette.text.secondary},tRoot:{marginBottom:35},rang_input:{marginLeft:10}};});function Modes(props){var _React$createElement;var classes=useStyles();// states \nvar _React$useState=React.useState(props.range_mode_range2),_React$useState2=_slicedToArray(_React$useState,2),sliderRange=_React$useState2[0],set_sliderRange=_React$useState2[1];//-----------------------------------------------------------------\nvar temp_marks=[];var step=(props.slider_max-1)/(6-1);for(var i=0;i<6;i++){temp_marks.push(1+step*i);}var marks=temp_marks.map(function(item){var myitem=parseInt(item);return{value:myitem,label:myitem};});//console.log(props.marks)\n//-----------------------------------------------------------------\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"Modelslider\",style:{height:70,width:\"100%\",marginBottom:5,paddingTop:30,paddingLeft:15,border:\"1px solid rgb(178, 178, 178,0.5)\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"lower\",style:{padding:\"0px 0px\",marginTop:-20}},/*#__PURE__*/React.createElement(TextField,{classes:{input:classes.rang_input},id:\"standard-basic\",label:\"Lower\",value:sliderRange[0],style:{width:\"100%\"},onChange:function onChange(event){if(isNaN(parseInt(event.target.value))){set_sliderRange([\"\",sliderRange[1]]);}else{set_sliderRange([event.target.value,sliderRange[1]]);}}})),/*#__PURE__*/React.createElement(\"div\",{className:\"slider\",style:{width:\"100%\",margin:\"0px 0px\"}},/*#__PURE__*/React.createElement(Slider,(_React$createElement={value:sliderRange,onChange:function onChange(event,newValue){return set_sliderRange(newValue);},onChangeCommitted:function onChangeCommitted(event,newValue){return props.Set_changed(\"range\");},valueLabelDisplay:\"auto\",\"aria-labelledby\":\"range-slider\"},_defineProperty(_React$createElement,\"valueLabelDisplay\",\"on\"),_defineProperty(_React$createElement,\"min\",1),_defineProperty(_React$createElement,\"max\",props.slider_max),_defineProperty(_React$createElement,\"marks\",marks),_React$createElement))),/*#__PURE__*/React.createElement(\"div\",{className:\"upper\",style:{padding:\"0px 0px\",marginTop:-20}},/*#__PURE__*/React.createElement(TextField,{classes:{input:classes.rang_input},id:\"standard-basic\",label:\"Upper\",value:sliderRange[1],style:{width:\"100%\"},onChange:function onChange(event){if(isNaN(parseInt(event.target.value))){set_sliderRange([sliderRange[0],\"\"]);}else{if(parseInt(event.target.value)>props.slider_max){set_sliderRange([sliderRange[0],props.slider_max]);}else{set_sliderRange([sliderRange[0],parseInt(event.target.value)]);}}}})),/*#__PURE__*/React.createElement(\"div\",{className:\"button\",item:true,xs:\"2\",style:{marginTop:-10}},/*#__PURE__*/React.createElement(Button,{className:\"range_button\",style:{backgroundColor:\"#ededed\",height:30},onClick:function onClick(){if(sliderRange[0]>sliderRange[1]){alert(\"Lower range can not be larger than the upper range\");}else if(sliderRange[1]<sliderRange[0]){alert(\"upper range can not be smaller than the lower range\");}else{props.Set_range_mode_range2(sliderRange);}}},\"Update range\")));}var maptstateToprop=function maptstateToprop(state){return{slider_max:state.slider_max,range_mode_range2:state.range_mode_range2};};var mapdispatchToprop=function mapdispatchToprop(dispatch){return{Set_range_mode_range2:function Set_range_mode_range2(val){return dispatch({type:\"range_mode_range2\",value:val});},Set_changed:function Set_changed(val){return dispatch({type:\"changed\",value:val});}};};export default connect(maptstateToprop,mapdispatchToprop)(Modes);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Range/SliderGroup2.js"],"names":["React","Slider","makeStyles","connect","TextField","Button","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","tRoot","marginBottom","rang_input","marginLeft","Modes","props","classes","useState","range_mode_range2","sliderRange","set_sliderRange","temp_marks","step","slider_max","i","push","marks","map","item","myitem","parseInt","value","label","height","paddingTop","paddingLeft","border","padding","marginTop","input","event","isNaN","target","margin","newValue","Set_changed","backgroundColor","alert","Set_range_mode_range2","maptstateToprop","state","mapdispatchToprop","dispatch","val","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport './ModelSlider.scss';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.range_mode_range2);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"Modelslider\" style={{ height: 70, width: \"100%\", marginBottom: 5, paddingTop: 30, paddingLeft: 15, border: \"1px solid rgb(178, 178, 178,0.5)\" }}>\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([\"\", sliderRange[1]])\n                        } else {\n                            set_sliderRange([event.target.value, sliderRange[1]])\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"slider\" style={{ width: \"100%\", margin: \"0px 0px\" }}>\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                    valueLabelDisplay=\"auto\" aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\n                />\n            </div>\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([sliderRange[0], \"\"])\n                        } else {\n                            if (parseInt(event.target.value) > props.slider_max) {\n                                set_sliderRange([sliderRange[0], props.slider_max])\n                            }\n                            else {\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\n                    onClick={() => {\n                        if ( sliderRange[0] > sliderRange[1]) {\n                            alert(\"Lower range can not be larger than the upper range\")\n                        }\n                        else if ( sliderRange[1] < sliderRange[0]) {\n                            alert(\"upper range can not be smaller than the lower range\")\n                        }\n                        else{\n                            props.Set_range_mode_range2(sliderRange)\n                        }\n                    }}\n                >Update range</Button>\n            </div>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        slider_max: state.slider_max,\n        range_mode_range2: state.range_mode_range2,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_range_mode_range2: (val) => dispatch({ type: \"range_mode_range2\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);"]},"metadata":{},"sourceType":"module"}