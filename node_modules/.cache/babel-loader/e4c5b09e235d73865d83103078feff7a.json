{"ast":null,"code":"import React from'react';import Button from'@material-ui/core/Button';import{connect}from\"react-redux\";import Chart_pop from'./02Charts';import Draggable from'react-draggable';import Grid from\"@material-ui/core/Grid\";import FilterModel from\"./FilterModel\";export function SimplePopover(props){var handleClose=function handleClose(){props.set_pop_over(false);props.set_dbclicked_features([]);};return/*#__PURE__*/React.createElement(\"div\",{className:\"pop_over\",style:{position:\"relative\"}},props.pop_over==true?/*#__PURE__*/React.createElement(\"div\",{style:{top:\"2%\",left:\"14%\",position:\"fixed\",pointerEvents:\"none\",backgroundColor:\"transparent\"}},/*#__PURE__*/React.createElement(Draggable,null,/*#__PURE__*/React.createElement(Grid,{style:{backgroundColor:\"#ffffff\",boxShadow:\"3px 2px 15px -7px #000000\",pointerEvents:\"auto\"}},/*#__PURE__*/React.createElement(Grid,{container:true,style:{borderBottom:\"1px solid #e2e2e2\",marginBottom:20},direction:\"row\",justify:\"space-between\",alignItems:\"center\"},/*#__PURE__*/React.createElement(FilterModel,{default_models:props.default_models}),/*#__PURE__*/React.createElement(Button,{color:\"secondary\",id:\"draggable-dialog-title\",onClick:handleClose},\"close\")),props.mode==\"Model\"?/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",style:{maxHeight:700,overflow:\"scroll\",maxWidth:1600}},props.dbclicked_features.length>0?props.dbclicked_features.map(function(item,index){return/*#__PURE__*/React.createElement(Chart_pop,{index:index,popup_chart_data:[props.popup_chart_data[0],item],default_models:props.default_models,myid:item.replace(/\\s/g,'').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi,''),diverginColor:props.diverginColor});}):/*#__PURE__*/React.createElement(Chart_pop,{popup_chart_data:props.popup_chart_data,default_models:props.default_models,myid:\"myid1\",diverginColor:props.diverginColor,textClickHandler_original:props.textClickHandler_original})):null,props.mode==\"Ranges\"?/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",style:{maxHeight:700,overflow:\"scroll\",maxWidth:1600}},props.dbclicked_features.length>0?props.dbclicked_features.map(function(item,index){return/*#__PURE__*/React.createElement(Chart_pop,{index:index,popup_chart_data:[props.popup_chart_data[0],item],default_models:props.default_models,myid:item.replace(/\\s/g,'').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi,''),diverginColor:props.diverginColor});}):/*#__PURE__*/React.createElement(Chart_pop,{popup_chart_data:props.popup_chart_data,default_models:props.default_models,myid:\"myid1\",diverginColor:props.diverginColor,textClickHandler_original:props.textClickHandler_original})):null,props.mode==\"Time\"?/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"center\",alignItems:\"center\",style:{maxHeight:700,overflow:\"scroll\",maxWidth:1600}},props.dbclicked_features.length>0?props.dbclicked_features.map(function(item,index){return/*#__PURE__*/React.createElement(Chart_pop,{index:index,popup_chart_data:[props.popup_chart_data[0],item],default_models:props.default_models,myid:item.replace(/\\s/g,'').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi,''),diverginColor:props.diverginColor});}):/*#__PURE__*/React.createElement(Chart_pop,{popup_chart_data:props.popup_chart_data,default_models:props.default_models,myid:\"myid1\",diverginColor:props.diverginColor,textClickHandler_original:props.textClickHandler_original})):null))):null);}var maptstateToprop=function maptstateToprop(state){return{popup_chart_data:state.popup_chart_data,pop_over:state.pop_over,dbclicked_features:state.dbclicked_features,mode:state.mode};};var mapdispatchToprop=function mapdispatchToprop(dispatch){return{set_pop_over:function set_pop_over(val){return dispatch({type:\"pop_over\",value:val});},set_dbclicked_features:function set_dbclicked_features(val){return dispatch({type:\"dbclicked_features\",value:val});},set_clicked_features:function set_clicked_features(val){return dispatch({type:\"clicked_features\",value:val});}};};export default connect(maptstateToprop,mapdispatchToprop)(SimplePopover);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Popover/01Popover.js"],"names":["React","Button","connect","Chart_pop","Draggable","Grid","FilterModel","SimplePopover","props","handleClose","set_pop_over","set_dbclicked_features","position","pop_over","top","left","pointerEvents","backgroundColor","boxShadow","borderBottom","marginBottom","default_models","mode","maxHeight","overflow","maxWidth","dbclicked_features","length","map","item","index","popup_chart_data","replace","diverginColor","textClickHandler_original","maptstateToprop","state","mapdispatchToprop","dispatch","val","type","value","set_clicked_features"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { connect } from \"react-redux\";\nimport Chart_pop from './02Charts'\nimport Draggable from 'react-draggable';\nimport Grid from \"@material-ui/core/Grid\"\nimport FilterModel from \"./FilterModel\"\nexport function SimplePopover(props) {\n    const handleClose = () => {\n        props.set_pop_over(false)\n        props.set_dbclicked_features([])\n    };\n    return (\n        <div className=\"pop_over\" style={{ position: \"relative\" }}>\n            {props.pop_over == true ?\n                <div style={{ top: \"2%\", left: \"14%\", position: \"fixed\", pointerEvents: \"none\", backgroundColor: \"transparent\" }}>\n                    <Draggable>\n                        <Grid style={{ backgroundColor: \"#ffffff\", boxShadow: \"3px 2px 15px -7px #000000\", pointerEvents: \"auto\" }}>\n                            <Grid container style={{ borderBottom: \"1px solid #e2e2e2\", marginBottom: 20 }}\n                                direction=\"row\"\n                                justify=\"space-between\"\n                                alignItems=\"center\"\n                            >\n                                <FilterModel default_models={props.default_models}></FilterModel>\n                                <Button color=\"secondary\" id=\"draggable-dialog-title\" onClick={handleClose}>close</Button>\n                            </Grid>\n                            {\n                                props.mode == \"Model\" ? <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\n                                    {\n                                        props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Chart_pop\n                                            index={index}\n                                            popup_chart_data={[props.popup_chart_data[0], item]} default_models={props.default_models}\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')} diverginColor={props.diverginColor}\n                                        ></Chart_pop>) : <Chart_pop popup_chart_data={props.popup_chart_data} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\n                                    }\n                                </Grid> : null\n                            }\n                            {\n                                props.mode == \"Ranges\" ? <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\n                                    {\n                                        props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Chart_pop index={index}\n                                            popup_chart_data={[props.popup_chart_data[0], item]} default_models={props.default_models}\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')} diverginColor={props.diverginColor}\n                                        ></Chart_pop>) : <Chart_pop popup_chart_data={props.popup_chart_data} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\n                                    }\n                                </Grid> : null\n                            }\n                            {\n                                props.mode == \"Time\" ? <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ maxHeight: 700, overflow: \"scroll\", maxWidth: 1600 }}>\n                                    {\n                                        props.dbclicked_features.length > 0 ? props.dbclicked_features.map((item, index) => <Chart_pop\n                                            index={index}\n                                            popup_chart_data={[props.popup_chart_data[0], item]} default_models={props.default_models}\n                                            myid={item.replace(/\\s/g, '').replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, '')} diverginColor={props.diverginColor}\n                                        ></Chart_pop>) : <Chart_pop popup_chart_data={props.popup_chart_data} default_models={props.default_models} myid=\"myid1\" diverginColor={props.diverginColor} textClickHandler_original={props.textClickHandler_original}></Chart_pop>\n                                    }\n                                </Grid> : null\n                            }\n                        </Grid>\n                    </Draggable>\n                </div> : null}\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        popup_chart_data: state.popup_chart_data,\n        pop_over: state.pop_over,\n        dbclicked_features: state.dbclicked_features,\n        mode: state.mode,\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        set_pop_over: (val) => dispatch({ type: \"pop_over\", value: val }),\n        set_dbclicked_features: (val) => dispatch({ type: \"dbclicked_features\", value: val }),\n        set_clicked_features: (val) => dispatch({ type: \"clicked_features\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SimplePopover);\n"]},"metadata":{},"sourceType":"module"}