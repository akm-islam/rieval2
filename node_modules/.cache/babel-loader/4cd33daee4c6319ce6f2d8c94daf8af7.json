{"ast":null,"code":"import * as d3 from \"d3\";\nimport { createStore } from 'redux';\nimport reducer from \"../../../store/reducer\";\nconst store = createStore(reducer);\nconst state = store.getState();\nexport default function CreatexpCircle(d, selection, selected_instances, lime_data, selected_year, default_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, item_width, item_height, deviation_array, index, threshold, dataset, title_rect_height, label_on, sorted_features) {\n  var margin = {\n    item_top_margin: title_rect_height + 6,\n    item_bottom_margin: 8,\n    circ_radius: 5,\n    item_left_margin: 7,\n    item_right_margin: 7\n  };\n  var div = d3.select(\"body\").selectAll(\".tooltip\").data([0]).join('div').attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n  var feature_contrib_name = d[0] + \"_contribution\"; //-----------------Get Global range for scaling\n\n  var global_items = [];\n  var biggest = 0,\n      b_feature = \"\",\n      b_item = \"\";\n  sorted_features.map(feature => {\n    lime_data[default_models[0]].map(item => {\n      if (selected_instances.includes(parseInt(item['two_realRank']))) {\n        global_items.push(parseFloat(item[feature[0] + \"_contribution\"]));\n\n        if (parseFloat(item[feature[0] + \"_contribution\"]) > biggest) {\n          biggest = parseFloat(item[feature[0] + \"_contribution\"]);\n          b_feature = feature;\n          b_item = item['two_realRank'];\n        }\n      }\n    });\n  });\n  var global_range = d3.extent(global_items); //-----------------Get Global range for scaling\n\n  var circ_data = [];\n  var sum_data = [];\n  default_models.map(model => {\n    lime_data[model].map(item => {\n      // The following line filters out all negative \n      if (item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n        if (item['deviation'] < threshold) {\n          sum_data.push(parseFloat(item[feature_contrib_name]));\n        }\n\n        item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\");\n        circ_data.push(item);\n      }\n    });\n  }); // Draw circle starts here\n\n  var xScale = d3.scaleLinear().domain(global_range).range([margin.item_left_margin, item_width - margin.item_right_margin]); //----------\n\n  var my_mean = d3.mean(sum_data); //----------\n\n  selection.selectAll(\".my_mean_line\").data([0]).join(\"line\").attr(\"class\", \"my_mean_line\").attr(\"x1\", xScale(my_mean)).attr(\"x2\", xScale(my_mean)).attr(\"y1\", title_rect_height + 3).attr(\"y2\", item_height).attr('stroke', \"rgb(96, 96, 96,0.5)\").attr('stroke-width', 1);\n  var rScale = d3.scalePow().exponent(0.4).domain(d3.extent(deviation_array)).range([state.global_config.max_circle_r, state.global_config.min_circle_r]); //console.log(circ_data)\n\n  var mycircles = selection.selectAll(\".my_circles\").data(circ_data, d => d['id']).join(enter => enter.append('circle').attr('id', d => d['id']).attr('class', d => 'my_circles exp_circles').attr(\"transform\", function (d, i) {\n    var x_transform = xScale(parseFloat(d[feature_contrib_name]));\n    var y_transform = getRandomArbitrary(margin.item_top_margin, item_height - margin.item_bottom_margin, i);\n\n    if (label_on && clicked_circles.includes(d['id'])) {\n      selection.selectAll(\".label\" + d['id']).data([0]).join(\"text\").attr(\"x\", x_transform - 3).attr(\"class\", \"label\" + d['id']).attr('dominant-baseline', \"middle\").attr(\"y\", y_transform + 13).text(d[\"two_realRank\"]).attr(\"opacity\", 0.7).attr(\"font-size\", 10);\n    } else {\n      selection.selectAll(\".label\" + d['id']).remove();\n    }\n\n    return \"translate(\" + x_transform + \",\" + y_transform + \")\";\n  }).attr(\"r\", d => d['deviation'] > threshold ? 0 : rScale(d['deviation'])) // Update\n  , update => update.attr('class', d => d['id'] + ' items exp_circles my_circles').transition().duration(anim_config.circle_animation).delay(anim_config.rank_animation + anim_config.deviation_animation + anim_config.feature_animation).attr(\"transform\", function (d, i) {\n    var x_transform = xScale(parseFloat(d[feature_contrib_name]));\n    var y_transform = getRandomArbitrary(margin.item_top_margin, item_height - margin.item_bottom_margin, i);\n\n    if (label_on && clicked_circles.includes(d['id'])) {\n      selection.selectAll(\".label\" + d['id']).data([0]).join(\"text\").attr(\"x\", x_transform - 3).attr(\"class\", \"label\" + d['id']).attr('dominant-baseline', \"middle\").attr(\"y\", y_transform + 13).text(d[\"two_realRank\"]).attr(\"opacity\", 0.7).attr(\"font-size\", 10);\n    } else {\n      selection.selectAll(\".label\" + d['id']).remove();\n    }\n\n    return \"translate(\" + x_transform + \",\" + y_transform + \")\";\n  }).attr('id', d => d['id']).attr(\"r\", d => d['deviation'] > threshold ? 0 : rScale(d['deviation'])), exit => exit.remove());\n  mycircles.attr(\"myindex\", index).attr('feature_name', d[0]).attr(\"fill\", d => diverginColor(d['two_realRank']).replace(\")\", \",.7)\")).attr(\"stroke\", d => {\n    if (clicked_circles.includes(d['id'])) {\n      return \"rgb(227, 26, 28,0.75)\";\n    }\n  }).attr(\"handle_opacity\", function (d) {\n    if (clicked_circles.length == 0) {\n      d3.selectAll(\".my_circles\").attr(\"opacity\", 1);\n    }\n\n    if (clicked_circles.includes(d['id'])) {\n      d3.select(this).attr(\"opacity\", 1);\n    } else {\n      d3.select(this).attr(\"opacity\", 0.3);\n    }\n  }).on('click', function (d) {\n    Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']]);\n  }).style(\"stroke-width\", function (d) {\n    if (clicked_circles.includes(d['id'])) {\n      d3.select(this).raise();\n      return 2.5;\n    }\n  });\n\n  if (index == 0) {\n    selection.selectAll(\".avg_text\").data(['avg']).join(\"text\").attr(\"x\", xScale(my_mean)).attr(\"class\", \"avg_text\").attr(\"myindex\", index).attr(\"y\", (item_height - margin.item_top_margin - margin.item_bottom_margin) / 2 + margin.item_top_margin - 18).text('avg').attr('font-size', 12).attr('dominant-baseline', \"middle\").attr('text-anchor', 'middle').attr('transform', d => \"rotate(-90,\" + (xScale(my_mean) + 5) + \",\" + ((item_height - margin.item_top_margin - margin.item_bottom_margin) / 2 + margin.item_top_margin) + \")\");\n  } else {\n    selection.selectAll('.avg_text').remove();\n  }\n\n  mycircles.on(\"mouseover\", d => {\n    div.transition().duration(200).style(\"opacity\", .9);\n    div.html(\"<p>Name: \" + d['State'] + \"</p>\" + \"<p>Ground Truth: \" + d['two_realRank'] + \"</p>Model Outcome: \" + d['predicted'] + \"</p>\").style(\"left\", d3.event.pageX + \"px\").style(\"top\", d3.event.pageY + 12 + \"px\");\n  }).on(\"mouseout\", d => div.transition().duration(200).style(\"opacity\", 0)).attr(\"global_range\", global_range).attr(\"scaled_value\", d => d[feature_contrib_name] + \"-----\" + xScale(parseFloat(d[feature_contrib_name]))); // Draw circle ends here\n\n  function getRandomArbitrary(min, max, seed) {\n    min = min || 0;\n    max = max || 1;\n    var rand;\n\n    if (typeof seed === \"number\") {\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280;\n      var disp = Math.abs(Math.sin(seed));\n      rnd = rnd + disp - Math.floor(rnd + disp);\n      rand = Math.floor(min + rnd * (max - min + 1));\n    } else {\n      rand = Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    return rand;\n  }\n}","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/ExpChart/Create_exp_circles.js"],"names":["d3","createStore","reducer","store","state","getState","CreatexpCircle","d","selection","selected_instances","lime_data","selected_year","default_models","clicked_circles","Set_clicked_circles","diverginColor","anim_config","item_width","item_height","deviation_array","index","threshold","dataset","title_rect_height","label_on","sorted_features","margin","item_top_margin","item_bottom_margin","circ_radius","item_left_margin","item_right_margin","div","select","selectAll","data","join","attr","style","feature_contrib_name","global_items","biggest","b_feature","b_item","map","feature","item","includes","parseInt","push","parseFloat","global_range","extent","circ_data","sum_data","model","replace","xScale","scaleLinear","domain","range","my_mean","mean","rScale","scalePow","exponent","global_config","max_circle_r","min_circle_r","mycircles","enter","append","i","x_transform","y_transform","getRandomArbitrary","text","remove","update","transition","duration","circle_animation","delay","rank_animation","deviation_animation","feature_animation","exit","length","on","filter","raise","html","event","pageX","pageY","min","max","seed","rand","rnd","disp","Math","abs","sin","floor","random"],"mappings":"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","sourcesContent":["import * as d3 from \"d3\";\nimport { createStore } from 'redux';\nimport reducer from \"../../../store/reducer\";\nconst store = createStore(reducer);\nconst state = store.getState();\nexport default function CreatexpCircle(d, selection, selected_instances,\n    lime_data, selected_year, default_models, clicked_circles, Set_clicked_circles, diverginColor, anim_config, item_width, item_height,\n    deviation_array, index, threshold, dataset, title_rect_height, label_on,sorted_features) {\n    var margin = { item_top_margin: title_rect_height+6, item_bottom_margin: 8, circ_radius: 5, item_left_margin: 7, item_right_margin: 7 }\n    var div = d3.select(\"body\").selectAll(\".tooltip\").data([0]).join('div').attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n    var feature_contrib_name = d[0] + \"_contribution\"\n    //-----------------Get Global range for scaling\n\n    var global_items = []\n    var biggest=0,b_feature=\"\",b_item=\"\"\n    sorted_features.map(feature => {\n        lime_data[default_models[0]].map(item => {\n            if (selected_instances.includes(parseInt(item['two_realRank']))) {\n                global_items.push(parseFloat(item[feature[0] + \"_contribution\"]))\n                if(parseFloat(item[feature[0] + \"_contribution\"])>biggest){\n                    biggest=parseFloat(item[feature[0] + \"_contribution\"])\n                    b_feature=feature\n                    b_item=item['two_realRank']\n                }\n            }\n        })\n    })\n    var global_range=d3.extent(global_items)\n    //-----------------Get Global range for scaling\n    var circ_data = []\n    var sum_data = []\n    default_models.map(model => {\n        lime_data[model].map(item => {\n            // The following line filters out all negative \n            if (item['1-qid'] == selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n                if (item['deviation'] < threshold) { sum_data.push(parseFloat(item[feature_contrib_name])) }\n                item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\n                circ_data.push(item)\n            }\n        })\n    })\n    // Draw circle starts here\n    var xScale = d3.scaleLinear().domain(global_range).range([margin.item_left_margin, item_width - margin.item_right_margin])\n    //----------\n    var my_mean = d3.mean(sum_data)\n    //----------\n    selection.selectAll(\".my_mean_line\").data([0]).join(\"line\").attr(\"class\", \"my_mean_line\").attr(\"x1\", xScale(my_mean)).attr(\"x2\", xScale(my_mean)).attr(\"y1\", title_rect_height + 3).attr(\"y2\", item_height).attr('stroke', \"rgb(96, 96, 96,0.5)\").attr('stroke-width', 1)\n    var rScale = d3.scalePow().exponent(0.4).domain(d3.extent(deviation_array)).range([state.global_config.max_circle_r, state.global_config.min_circle_r])\n    //console.log(circ_data)\n    var mycircles = selection.selectAll(\".my_circles\").data(circ_data, d => d['id']).join(\n        enter => enter.append('circle')\n            .attr('id', d => d['id'])\n            .attr('class', d => 'my_circles exp_circles')\n            .attr(\"transform\", function (d, i) {\n                var x_transform = xScale(parseFloat(d[feature_contrib_name]))\n                var y_transform = getRandomArbitrary(margin.item_top_margin, item_height - margin.item_bottom_margin, i)\n                if (label_on && clicked_circles.includes(d['id'])) {\n                    selection.selectAll(\".label\" + d['id']).data([0]).join(\"text\").attr(\"x\", x_transform - 3).attr(\"class\", \"label\" + d['id']).attr('dominant-baseline', \"middle\").attr(\"y\", y_transform + 13).text(d[\"two_realRank\"]).attr(\"opacity\", 0.7).attr(\"font-size\", 10)\n                }\n                else {\n                    selection.selectAll(\".label\" + d['id']).remove()\n                }\n                return \"translate(\" + x_transform + \",\" + y_transform + \")\";\n            })\n            .attr(\"r\", d => d['deviation'] > threshold ? 0 : rScale(d['deviation']))\n        // Update\n        , update => update.attr('class', d => d['id'] + ' items exp_circles my_circles')\n            .transition().duration(anim_config.circle_animation).delay(anim_config.rank_animation + anim_config.deviation_animation + anim_config.feature_animation)\n            .attr(\"transform\", function (d, i) {\n                var x_transform = xScale(parseFloat(d[feature_contrib_name]))\n                var y_transform = getRandomArbitrary(margin.item_top_margin, item_height - margin.item_bottom_margin, i)\n                if (label_on && clicked_circles.includes(d['id'])) {\n                    selection.selectAll(\".label\" + d['id']).data([0]).join(\"text\").attr(\"x\", x_transform - 3).attr(\"class\", \"label\" + d['id']).attr('dominant-baseline', \"middle\").attr(\"y\", y_transform + 13).text(d[\"two_realRank\"]).attr(\"opacity\", 0.7).attr(\"font-size\", 10)\n                }\n                else {\n                    selection.selectAll(\".label\" + d['id']).remove()\n                }\n                return \"translate(\" + x_transform + \",\" + y_transform + \")\";\n            })\n            .attr('id', d => d['id'])\n            .attr(\"r\", d => d['deviation'] > threshold ? 0 : rScale(d['deviation']))\n        , exit => exit.remove())\n\n    mycircles.attr(\"myindex\", index).attr('feature_name', d[0])\n        .attr(\"fill\", d => diverginColor(d['two_realRank']).replace(\")\", \",.7)\")).attr(\"stroke\", (d) => {\n            if (clicked_circles.includes(d['id'])) {\n                return \"rgb(227, 26, 28,0.75)\"\n            }\n        })\n        .attr(\"handle_opacity\", function (d) {\n            if (clicked_circles.length == 0) { d3.selectAll(\".my_circles\").attr(\"opacity\", 1) }\n            if (clicked_circles.includes(d['id'])) {\n                d3.select(this).attr(\"opacity\", 1)\n            }\n            else {\n                d3.select(this).attr(\"opacity\", 0.3)\n            }\n        })\n        .on('click', function (d) {\n            Set_clicked_circles(clicked_circles.includes(d['id']) ? clicked_circles.filter(item => item != d['id']) : [...clicked_circles, d['id']])\n        })\n\n        .style(\"stroke-width\", function (d) {\n            if (clicked_circles.includes(d['id'])) {\n                d3.select(this).raise()\n                return 2.5\n            }\n        })\n\n    if (index == 0) {\n        selection.selectAll(\".avg_text\").data(['avg']).join(\"text\").attr(\"x\", xScale(my_mean)).attr(\"class\", \"avg_text\").attr(\"myindex\", index).attr(\"y\", (item_height - margin.item_top_margin - margin.item_bottom_margin) / 2 + margin.item_top_margin -18).text('avg').attr('font-size', 12)\n            .attr('dominant-baseline', \"middle\").attr('text-anchor', 'middle').attr('transform', d => \"rotate(-90,\" + (xScale(my_mean) + 5) + \",\" + ((item_height - margin.item_top_margin - margin.item_bottom_margin) / 2 + margin.item_top_margin) + \")\")\n    }\n    else { selection.selectAll('.avg_text').remove() }\n\n    mycircles.on(\"mouseover\", d => {\n        div.transition().duration(200).style(\"opacity\", .9);\n        div.html(\"<p>Name: \" + d['State'] + \"</p>\" + \"<p>Ground Truth: \" + d['two_realRank'] + \"</p>Model Outcome: \" + d['predicted'] + \"</p>\").style(\"left\", (d3.event.pageX) + \"px\").style(\"top\", (d3.event.pageY + 12) + \"px\")\n    }).on(\"mouseout\", d => div.transition().duration(200).style(\"opacity\", 0))\n    .attr(\"global_range\",global_range)\n    .attr(\"scaled_value\",d=>d[feature_contrib_name]+\"-----\"+xScale(parseFloat(d[feature_contrib_name])))\n\n    // Draw circle ends here\n    function getRandomArbitrary(min, max, seed) {\n        min = min || 0;\n        max = max || 1;\n        var rand;\n        if (typeof seed === \"number\") {\n            seed = (seed * 9301 + 49297) % 233280;\n            var rnd = seed / 233280;\n            var disp = Math.abs(Math.sin(seed));\n            rnd = (rnd + disp) - Math.floor((rnd + disp));\n            rand = Math.floor(min + rnd * (max - min + 1));\n        } else {\n            rand = Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n        return rand;\n    }\n}"]},"metadata":{},"sourceType":"module"}