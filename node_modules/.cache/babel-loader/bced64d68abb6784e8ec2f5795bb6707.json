{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/NewWork/trivea/src/components/Top/SelectMode.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { connect } from 'react-redux';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nexport function SimpleMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: -2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Select Mode\", /*#__PURE__*/React.createElement(ArrowDropDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 97\n    }\n  })), /*#__PURE__*/React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    style: {\n      marginTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, anchorEl ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => this.buttonclickHandler(1, \"form\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 48\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"gender\",\n    name: \"gender1\",\n    onChange: (event, val) => {\n      handleClose();\n      props.Set_histogram_data([]);\n      props.Set_mode(val);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }, ['Model', 'Ranges', 'Time'].map(value => {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      value: value,\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 71\n        }\n      }),\n      label: value == \"Model\" ? \"Ranker\" : value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 30\n      }\n    });\n  }))))) : null));\n}\n\nconst maptstateToprop = state => {\n  return {\n    state_range: state.state_range\n  };\n};\n\nconst mapdispatchToprop = dispatch => {\n  return {\n    Set_mode: val => dispatch({\n      type: \"mode\",\n      value: val\n    }),\n    Set_histogram_data: val => dispatch({\n      type: \"histogram_data\",\n      value: val\n    })\n  };\n};\n\nexport default connect(maptstateToprop, mapdispatchToprop)(SimpleMenu);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Top/SelectMode.js"],"names":["React","Button","Menu","ArrowDropDownIcon","connect","FormControlLabel","FormControl","Radio","RadioGroup","FormLabel","SimpleMenu","props","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","marginTop","Boolean","paddingLeft","buttonclickHandler","val","Set_histogram_data","Set_mode","map","value","maptstateToprop","state","state_range","mapdispatchToprop","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { connect } from 'react-redux';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nexport function SimpleMenu(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div style={{marginTop:-2}}>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>Select Mode<ArrowDropDownIcon></ArrowDropDownIcon></Button>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose} style={{marginTop:0}}>\n       {anchorEl?<div style={{paddingLeft:10}}><form onSubmit={() => this.buttonclickHandler(1, \"form\")}>\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\"></FormLabel>\n                  <RadioGroup aria-label=\"gender\" name=\"gender1\" onChange={(event, val) => {handleClose();props.Set_histogram_data([]);props.Set_mode(val)}}>\n                    {['Model', 'Ranges', 'Time'].map((value) => {\n                      return <FormControlLabel value={value} control={<Radio />} label={value==\"Model\"?\"Ranker\":value} />\n                    })}\n                  </RadioGroup>\n                </FormControl>\n              </form></div>:null}\n      </Menu>\n    </div>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    state_range: state.state_range,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_mode: (val) => dispatch({ type: \"mode\", value: val }),\n    Set_histogram_data: (val) => dispatch({ type: \"histogram_data\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SimpleMenu);\n"]},"metadata":{},"sourceType":"module"}