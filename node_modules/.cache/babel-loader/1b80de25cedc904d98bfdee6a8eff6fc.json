{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/NewWork/trivea/src/components/Top/Threshold.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport outerTheme from './theme';\nimport { connect } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction Inputs(props) {\n  const [threshold, set_threshold] = useState(props.threshold);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: outerTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Deviation threshold:\"), /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: 30\n    },\n    defaultValue: threshold,\n    inputProps: {\n      'aria-label': 'description'\n    },\n    onChange: event => set_threshold(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      height: 20,\n      color: \"black\",\n      fontSize: 16,\n      backgroundColor: '#f2f2f2'\n    },\n    variant: \"string\",\n    onClick: () => props.Set_threshold(threshold),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Update\")));\n}\n\nconst maptstateToprop = state => {\n  return {\n    threshold: state.threshold\n  };\n};\n\nconst mapdispatchToprop = dispatch => {\n  return {\n    Set_threshold: val => dispatch({\n      type: \"threshold\",\n      value: val\n    })\n  };\n};\n\nexport default connect(maptstateToprop, mapdispatchToprop)(Inputs);\n/*\nimport React from 'react';\nimport \"./Sliders.scss\";\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material/TextField';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states\n    const [threshold, set_threshold] = React.useState(props.threshold);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var min=0\n    var max=20\n    var number_marks=10\n    var step = (max - 1) / (number_marks - 1);\n    for (var i = 0; i < number_marks; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"rangeslider2\" style={{ marginLeft: 60,marginTop:-28, width: \"100%\", paddingTop: 0 }} >\n            <Typography>\n                Threshold\n            </Typography>\n\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        threshold:state.threshold\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_threshold: (val) => dispatch({ type: \"threshold\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);\n*/","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Top/Threshold.js"],"names":["React","makeStyles","Input","createMuiTheme","ThemeProvider","outerTheme","connect","Button","useState","useStyles","theme","root","margin","spacing","Inputs","props","threshold","set_threshold","classes","fontSize","width","event","target","value","height","color","backgroundColor","Set_threshold","maptstateToprop","state","mapdispatchToprop","dispatch","val","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,0BAA9C;AACA,OAAOC,UAAP,MAAuB,SAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACF,aAAS;AACLC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADH;AADP;AAD+B,CAAZ,CAAD,CAA5B;;AAOA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAM,CAACC,SAAD,EAAWC,aAAX,IAA0BT,QAAQ,CAACO,KAAK,CAACC,SAAP,CAAxC;AACA,QAAME,OAAO,GAAGT,SAAS,EAAzB;AACA,sBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEJ,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAEa,OAAO,CAACP,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,YAAY,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,QAAQ,EAAC;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC;AAAP,KAAd;AAA0B,IAAA,YAAY,EAAEJ,SAAxC;AAAmD,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAA/D;AACA,IAAA,QAAQ,EAAGK,KAAK,IAAEJ,aAAa,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAKI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC,EAAR;AAAWC,MAAAA,KAAK,EAAC,OAAjB;AAAyBN,MAAAA,QAAQ,EAAC,EAAlC;AAAqCO,MAAAA,eAAe,EAAC;AAArD,KAAf;AAAgF,IAAA,OAAO,EAAC,QAAxF;AACA,IAAA,OAAO,EAAE,MAAIX,KAAK,CAACY,aAAN,CAAoBX,SAApB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADJ,CADJ;AAcH;;AACD,MAAMY,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHb,IAAAA,SAAS,EAACa,KAAK,CAACb;AADb,GAAP;AAGH,CAJD;;AAKA,MAAMc,iBAAiB,GAAIC,QAAD,IAAc;AACpC,SAAO;AACHJ,IAAAA,aAAa,EAAGK,GAAD,IAASD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,WAAR;AAAqBV,MAAAA,KAAK,EAAES;AAA5B,KAAD;AAD7B,GAAP;AAGH,CAJD;;AAKA,eAAe1B,OAAO,CAACsB,eAAD,EAAkBE,iBAAlB,CAAP,CAA4ChB,MAA5C,CAAf;AACA","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport outerTheme from './theme'\nimport { connect } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n}));\nfunction Inputs(props) {\n    const [threshold,set_threshold]=useState(props.threshold)\n    const classes = useStyles();\n    return (\n        <ThemeProvider theme={outerTheme}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <span style={{fontSize:14}}>Deviation threshold:</span>\n                <Input style={{width:30}} defaultValue={threshold} inputProps={{ 'aria-label': 'description' }} \n                onChange={(event=>set_threshold(event.target.value))}\n                />\n                <Button style={{height:20,color:\"black\",fontSize:16,backgroundColor:'#f2f2f2'}} variant='string'\n                onClick={()=>props.Set_threshold(threshold)}\n                >Update</Button>\n            </form>\n        </ThemeProvider>\n\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        threshold:state.threshold\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_threshold: (val) => dispatch({ type: \"threshold\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Inputs);\n/*\nimport React from 'react';\nimport \"./Sliders.scss\";\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material/TextField';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states\n    const [threshold, set_threshold] = React.useState(props.threshold);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var min=0\n    var max=20\n    var number_marks=10\n    var step = (max - 1) / (number_marks - 1);\n    for (var i = 0; i < number_marks; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"rangeslider2\" style={{ marginLeft: 60,marginTop:-28, width: \"100%\", paddingTop: 0 }} >\n            <Typography>\n                Threshold\n            </Typography>\n\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        threshold:state.threshold\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_threshold: (val) => dispatch({ type: \"threshold\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);\n*/"]},"metadata":{},"sourceType":"module"}