{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/NewWork/trivea/src/components/Charts/Time/YearAndModelSelection/YearModelSelection.js\";\nimport React from 'react';\nimport \"./YearModelSelection.scss\";\nimport { connect } from \"react-redux\";\nimport Slider from './Slider';\nimport Grid from '@material-ui/core/Grid';\n\nfunction YearModelSelection(props) {\n  var handle_year_click = year => {\n    props.Set_selected_year(year);\n  };\n\n  var handle_model_click = model => props.Set_time_mode_model(model);\n\n  if (props.dataset == \"rur\") {\n    var all_models = [\"MART\", \"RandomFor\"];\n  } else {\n    var all_models = props.all_models;\n  }\n\n  if (props.exp_method === \"ice\") {\n    var all_models = props.all_models;\n    all_models = all_models.filter(d => d !== \"RandomFor\");\n\n    if (!all_models.includes(\"SVM\")) {\n      all_models.push(\"SVM\");\n    }\n  } else {\n    var all_models = props.all_models;\n  }\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    style: {\n      width: '100%',\n      height: 76,\n      padding: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {\n      marginTop: 5,\n      marginLeft: 5,\n      verticalAlign: 'baseline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      display: \"inline-block\",\n      marginRight: 5,\n      marginTop: -4,\n      fontSize: 20,\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 88\n    }\n  }, \"Rankers:\"), all_models.map(item => /*#__PURE__*/React.createElement(\"p\", {\n    className: props.time_mode_model == item ? \"years_p_selected years_p\" : \"years_p\",\n    onClick: () => handle_model_click(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 223\n    }\n  }, item))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    style: {\n      marginLeft: 15,\n      overflow: 'scroll'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 67\n    }\n  })));\n}\n\nconst maptstateToprop = state => {\n  return {\n    all_models: state.all_models,\n    selected_year: state.selected_year,\n    years_for_dropdown: state.years_for_dropdown,\n    default_models: state.default_models,\n    time_mode_model: state.time_mode_model,\n    dataset: state.dataset\n  };\n};\n\nconst mapdispatchToprop = dispatch => {\n  return {\n    Set_selected_year: val => dispatch({\n      type: \"selected_year\",\n      value: val\n    }),\n    Set_time_mode_model: val => dispatch({\n      type: \"time_mode_model\",\n      value: val\n    })\n  };\n};\n\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection); //https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Time/YearAndModelSelection/YearModelSelection.js"],"names":["React","connect","Slider","Grid","YearModelSelection","props","handle_year_click","year","Set_selected_year","handle_model_click","model","Set_time_mode_model","dataset","all_models","exp_method","filter","d","includes","push","width","height","padding","marginTop","marginLeft","verticalAlign","display","marginRight","fontSize","fontWeight","map","item","time_mode_model","overflow","maptstateToprop","state","selected_year","years_for_dropdown","default_models","mapdispatchToprop","dispatch","val","type","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./YearModelSelection.scss\";\nimport { connect } from \"react-redux\";\nimport Slider from './Slider'\nimport Grid from '@material-ui/core/Grid'\nfunction YearModelSelection(props) {\n  var handle_year_click = (year) => {\n    props.Set_selected_year(year)\n  }\n  var handle_model_click = (model) => props.Set_time_mode_model(model)\n  if(props.dataset==\"rur\"){var all_models=[\"MART\",\"RandomFor\"]}else{var all_models=props.all_models}\n  if(props.exp_method === \"ice\"){var all_models=props.all_models; all_models = all_models.filter(d => d !== \"RandomFor\"); if(!all_models.includes(\"SVM\")){all_models.push(\"SVM\")}}\n  else{var all_models=props.all_models}\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" style={{width:'100%',height:76,padding:3}}>\n      <Grid item xs={4} style={{marginTop:5, marginLeft: 5,verticalAlign:'baseline' }}><h5 style={{ display: \"inline-block\", marginRight: 5,marginTop:-4, fontSize: 20,fontWeight:600 }}>Rankers:</h5>{all_models.map(item => <p className={props.time_mode_model == item ? \"years_p_selected years_p\" : \"years_p\"} onClick={() => handle_model_click(item)}>{item}</p>)}</Grid>\n      <Grid item xs={6} style={{marginLeft:15,overflow:'scroll'}}><Slider></Slider></Grid>\n    </Grid>\n  );\n}\nconst maptstateToprop = (state) => {\n  return {\n    all_models: state.all_models,\n    selected_year: state.selected_year,\n    years_for_dropdown: state.years_for_dropdown,\n    default_models: state.default_models,\n    time_mode_model: state.time_mode_model,\n    dataset:state.dataset\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n    Set_time_mode_model: (val) => dispatch({ type: \"time_mode_model\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(YearModelSelection);\n\n//https://material-ui.com/api/slider/\n//https://material-ui.com/components/expansion-panels/\n//https://material-ui.com/api/checkbox/\n//https://material-ui.com/components/radio-buttons/"]},"metadata":{},"sourceType":"module"}