{"ast":null,"code":"import _classCallCheck from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{connect}from\"react-redux\";import*as misc_algo from'../../../Algorithms/misc_algo';import CreateCatChart from'../Popover/CreateCatChart';import CreateNumChart from'../Popover/CreateNumChart';var Chart=/*#__PURE__*/function(_Component){_inherits(Chart,_Component);var _super=_createSuper(Chart);function Chart(props){_classCallCheck(this,Chart);return _super.call(this,props);}_createClass(Chart,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({a:5});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){var merged_arr=this.props.popup_chart_data[0];// only data\nvar scatterplot_data=[[this.props.popup_chart_data[1],this.props.popup_chart_data[0]]];// [feature name, data]\n//----------------------------------------------------------------------------------------------------------Call createChart\nif(merged_arr.length>0){// This is to avoid the error caused by the next line\nif(isNaN(merged_arr[0][this.props.popup_chart_data[1]])){CreateCatChart(merged_arr,this.props.popup_chart_data[1],scatterplot_data,this.props,this.props.deviation_array);}else{CreateNumChart(merged_arr,this.props.popup_chart_data[1],scatterplot_data,this.props,this.props.deviation_array);}}else{CreateNumChart(merged_arr,this.props.popup_chart_data[1],scatterplot_data,this.props,this.props.deviation_array);// calling the function to set the  graph empty when all models are unselected\n}misc_algo.handle_transparency(\"None\",this.props.clicked_circles,this.props.anim_config);}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{key:this.props.popup_chart_data[1],style:{margin:10,padding:10,border:this.props.index==0?\"3px solid #e5e5e5\":\"white\"}},/*#__PURE__*/React.createElement(\"p\",{style:{color:\"#4f4c4c\",marginLeft:\"42%\",marginTop:0,marginBottom:5,fontWeight:600}},this.props.group),/*#__PURE__*/React.createElement(\"svg\",{id:this.props.myid},\" \"),/*#__PURE__*/React.createElement(\"p\",{style:{color:\"#4f4c4c\",marginLeft:\"42%\",marginTop:-25,marginBottom:0}},this.props.popup_chart_data[1]));}}]);return Chart;}(Component);var maptstateToprop=function maptstateToprop(state){return{clicked_circles:state.clicked_circles,threshold:state.threshold,anim_config:state.anim_config,deviation_array:state.deviation_array};};//item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\nvar mapdispatchToprop=function mapdispatchToprop(dispatch){return{Set_clicked_circles:function Set_clicked_circles(val){return dispatch({type:\"clicked_circles\",value:val});}};};export default connect(maptstateToprop,mapdispatchToprop)(Chart);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Time/04PopoverCharts.js"],"names":["React","Component","connect","misc_algo","CreateCatChart","CreateNumChart","Chart","props","setState","a","merged_arr","popup_chart_data","scatterplot_data","length","isNaN","deviation_array","handle_transparency","clicked_circles","anim_config","margin","padding","border","index","color","marginLeft","marginTop","marginBottom","fontWeight","group","myid","maptstateToprop","state","threshold","mapdispatchToprop","dispatch","Set_clicked_circles","val","type","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as misc_algo from '../../../Algorithms/misc_algo'\nimport CreateCatChart from '../Popover/CreateCatChart'\nimport CreateNumChart from '../Popover/CreateNumChart'\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.setState({ a: 5 })\n  }\n  componentDidUpdate() {\n    var merged_arr = this.props.popup_chart_data[0] // only data\n    var scatterplot_data = [[this.props.popup_chart_data[1],this.props.popup_chart_data[0]]] // [feature name, data]\n    //----------------------------------------------------------------------------------------------------------Call createChart\n    if (merged_arr.length > 0) { // This is to avoid the error caused by the next line\n      if (isNaN(merged_arr[0][this.props.popup_chart_data[1]])) {\n        CreateCatChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\n      }\n      else {\n        CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array)\n      }\n    }\n    else {\n      CreateNumChart(merged_arr, this.props.popup_chart_data[1], scatterplot_data,this.props,this.props.deviation_array) // calling the function to set the  graph empty when all models are unselected\n    }\n    misc_algo.handle_transparency(\"None\", this.props.clicked_circles, this.props.anim_config)\n  }\n\n  render() {\n    return (\n      <div key={this.props.popup_chart_data[1]} style={{ margin: 10, padding: 10, border: this.props.index == 0 ? \"3px solid #e5e5e5\" : \"white\" }}>\n        <p style={{ color: \"#4f4c4c\", marginLeft: \"42%\", marginTop: 0, marginBottom: 5,fontWeight:600 }}>{this.props.group}</p>\n        <svg id={this.props.myid}> </svg>\n        <p style={{ color: \"#4f4c4c\", marginLeft: \"42%\", marginTop: -25, marginBottom: 0 }}>{this.props.popup_chart_data[1]}</p>\n      </div>\n    );\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    anim_config:state.anim_config,\n    deviation_array: state.deviation_array,\n  }\n}\n//item['id'] = item['State'].replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\") + model.replace(/ /g, '').replace(/[^a-zA-Z ]/g, \"\")\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Chart);"]},"metadata":{},"sourceType":"module"}