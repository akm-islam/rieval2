{"ast":null,"code":"import _defineProperty from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import*as d3 from'd3';import{connect}from\"react-redux\";import*as deviation_chart from\"../DevPlot/deviation_chart\";import*as misc_algo from'../../../Algorithms/misc_algo';import*as $ from'jquery';import ModelSlider from'./ModelSlider';import ExpChart from'./ExpChartComponent';import'./ModelSlider.scss';import YearModelSelection from\"./YearAndModelSelection/YearModelSelection\";import Grid from'@mui/material/Grid';import Popover from'../Popover/01Popover';var SlopeChart=/*#__PURE__*/function(_Component){_inherits(SlopeChart,_Component);var _super=_createSuper(SlopeChart);function SlopeChart(props){var _this;_classCallCheck(this,SlopeChart);_this=_super.call(this,props);_this.line_color=null;_this.state={height_slope_exp_chart:700,mouseX:0,mouseY:0};return _this;}_createClass(SlopeChart,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({width:window.innerHeight});}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(prevProps,prevState){return true;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var _this2=this;var self=this;var selected_instances=d3.range(this.props.state_range[0],this.props.state_range[1]+1);if(this.props.histogram_data.length>0){selected_instances=this.props.histogram_data;}//--------------------\nvar min=d3.min(selected_instances),max=d3.max(selected_instances);var d=(max-min)/8;//var diverginColor = d3.scaleDiverging([max, parseInt((max+min)/2), min], d3.interpolateRgbBasis(['#af8dc3', '#dbd88c', '#7fbf7b']));\nvar diverginColor=d3.scaleDiverging([max,parseInt((max+min)/2),min],d3.interpolateRgbBasis(['#b37cd3','#d9d58c','#71ce6c']));//50% saturation\n//-------------------- Threshold filter\nvar under_threshold_instances=[];var year_data=this.props.original_data.filter(function(item){return _this2.props.selected_year==item['1-qid'];});this.props.default_models.map(function(model_name){year_data.map(function(item){var two_realRank=parseInt(item['two_realRank']);var predicted_rank=parseInt(item[model_name]);if(Math.abs(predicted_rank-two_realRank)<_this2.props.threshold){under_threshold_instances.push(two_realRank);}});});selected_instances=selected_instances.filter(function(item){return under_threshold_instances.includes(item);});deviation_chart.Create_deviation_chart('dev_plot_container_svg','exp',selected_instances,this.props.original_data,this.props.default_models,this.props.anim_config,this.props.selected_year,this.props.average_m,this.props.clicked_circles,this.props.Set_clicked_circles,diverginColor,this.props.sparkline_data,this.props.Set_selected_year,this.props.dataset,this.props.threshold);misc_algo.handle_transparency(\"None\",this.props.clicked_circles,this.props.anim_config);//-------------------------Handle model mousever start here \nd3.selectAll(\".model_p\").on('mouseover',function(){var selectedModel=d3.select(this).attr('modelName');if(self.props.default_models.includes(selectedModel)){d3.selectAll('.dev_circles').attr('opacity',0.1);d3.selectAll('.'+selectedModel).attr('opacity',1);}}).on('mouseout',function(){d3.selectAll('.dev_circles').attr('opacity',1);});//-------------------------Handle model mousever start here\n}},{key:\"render\",value:function render(){var _this3=this;var selected_instances=d3.range(this.props.state_range[0],this.props.state_range[1]+1);if(this.props.histogram_data.length>0){selected_instances=this.props.histogram_data;}//--------------------\nvar min=d3.min(selected_instances),max=d3.max(selected_instances);var d=(max-min)/8;//var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3','#b197c1','#dbd88c','#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']);\n//var diverginColor = d3.scaleDiverging([max, parseInt((max+min)/2), min], d3.interpolateRgbBasis(['#af8dc3', '#dbd88c', '#7fbf7b']));\n//var diverginColor = d3.scaleDiverging([min,(max - min) / 2 , max], d3.interpolateSpectral)\nvar diverginColor=d3.scaleDiverging([max,parseInt((max+min)/2),min],d3.interpolateRgbBasis(['#b37cd3','#d9d58c','#71ce6c']));//50% saturation\nthis.props.Set_selected_instances(selected_instances);//--------------------\nvar deviation_array=[];this.props.default_models.map(function(model){_this3.props.lime_data[model].map(function(item){if(item['1-qid']==_this3.props.selected_year&&selected_instances.includes(parseInt(item['two_realRank']))){deviation_array.push(item['deviation']);}});});this.props.Set_deviation_array(deviation_array);//console.log('deviation_array: ', d3.extent(deviation_array))\n//--------------------\nreturn/*#__PURE__*/React.createElement(Grid,{className:\"ModelChartParent\",container:true,direction:\"row\",justify:\"flex-start\",alignItems:\"center\",style:{height:'100%',width:'100%',backgroundColor:'white',margin:2,padding:2,boxShadow:\"-2px 1px 4px -1px white\"}},\" \",/*#__PURE__*/React.createElement(Grid,{item:true,className:\"left_container\",style:{width:400,backgroundColor:\"#fcfcfc\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"year_and_model_selector_and_slider_container\",style:{\"z-index\":1}},\" \",/*#__PURE__*/React.createElement(YearModelSelection,null),/*#__PURE__*/React.createElement(ModelSlider,null)),/*#__PURE__*/React.createElement(\"div\",{class:\"deviation_plot_container_div\",style:{width:\"100%\",height:$('.ModelChartParent').height()-$('.year_and_model_selector_and_slider_container').height(),marginBottom:0,overflow:'scroll'}},/*#__PURE__*/React.createElement(\"svg\",{id:\"dev_plot_container_svg\",style:{width:\"100%\",overflow:'hidden'}}))),this.props.rank_data!=null?/*#__PURE__*/React.createElement(Grid,{className:\"right_container\",item:true,container:true,xs:true,direction:\"row\",columnSpacing:1,style:{height:'100%'}},this.props.default_models.map(function(model_name,index){return/*#__PURE__*/React.createElement(Grid,{item:true,xs:12/_this3.props.default_models.length,style:{height:\"100%\"}},/*#__PURE__*/React.createElement(ExpChart,{diverginColor:diverginColor,exp_id:\"exp\"+index,default_models:_this3.props.default_models,state_range:_this3.props.state_range,selected_year:_this3.props.selected_year,model_name:model_name}));})):null,/*#__PURE__*/React.createElement(Popover,{diverginColor:diverginColor,default_models:this.props.default_models}));}}]);return SlopeChart;}(Component);var maptstateToprop=function maptstateToprop(state){var _ref;return _ref={default_models:state.default_models,histogram_data:state.histogram_data,state_range:state.state_range,selected_year:state.selected_year,lime_data:state.lime_data},_defineProperty(_ref,\"default_models\",state.default_models),_defineProperty(_ref,\"original_data\",state.original_data),_defineProperty(_ref,\"dataset\",state.dataset),_defineProperty(_ref,\"sparkline_data\",state.sparkline_data),_defineProperty(_ref,\"dataset\",state.dataset),_defineProperty(_ref,\"anim_config\",state.anim_config),_defineProperty(_ref,\"average_m\",state.average_m),_defineProperty(_ref,\"rank_data\",state.rank_data),_defineProperty(_ref,\"clicked_circles\",state.clicked_circles),_defineProperty(_ref,\"threshold\",state.threshold),_ref;};var mapdispatchToprop=function mapdispatchToprop(dispatch){return{Set_selected_instances:function Set_selected_instances(val){return dispatch({type:\"selected_instances\",value:val});},Set_deviation_array:function Set_deviation_array(val){return dispatch({type:\"deviation_array\",value:val});},Set_clicked_circles:function Set_clicked_circles(val){return dispatch({type:\"clicked_circles\",value:val});},Set_selected_year:function Set_selected_year(val){return dispatch({type:\"selected_year\",value:val});}};};export default connect(maptstateToprop,mapdispatchToprop)(SlopeChart);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Model/ModelChartComponent.js"],"names":["React","Component","d3","connect","deviation_chart","misc_algo","$","ModelSlider","ExpChart","YearModelSelection","Grid","Popover","SlopeChart","props","line_color","state","height_slope_exp_chart","mouseX","mouseY","setState","width","window","innerHeight","prevProps","prevState","self","selected_instances","range","state_range","histogram_data","length","min","max","d","diverginColor","scaleDiverging","parseInt","interpolateRgbBasis","under_threshold_instances","year_data","original_data","filter","item","selected_year","default_models","map","model_name","two_realRank","predicted_rank","Math","abs","threshold","push","includes","Create_deviation_chart","anim_config","average_m","clicked_circles","Set_clicked_circles","sparkline_data","Set_selected_year","dataset","handle_transparency","selectAll","on","selectedModel","select","attr","Set_selected_instances","deviation_array","model","lime_data","Set_deviation_array","height","backgroundColor","margin","padding","boxShadow","marginBottom","overflow","rank_data","index","maptstateToprop","mapdispatchToprop","dispatch","val","type","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { connect } from \"react-redux\";\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\nimport * as misc_algo from '../../../Algorithms/misc_algo'\nimport * as $ from 'jquery';\nimport ModelSlider from './ModelSlider';\nimport ExpChart from './ExpChartComponent';\nimport './ModelSlider.scss';\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\nimport Grid from '@mui/material/Grid';\nimport Popover from '../Popover/01Popover';\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() { this.setState({ width: window.innerHeight }) }\n  shouldComponentUpdate(prevProps, prevState) { return true; }\n  componentDidUpdate(prevProps, prevState) {\n    var self=this\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\n\n    //--------------------\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    //var diverginColor = d3.scaleDiverging([max, parseInt((max+min)/2), min], d3.interpolateRgbBasis(['#af8dc3', '#dbd88c', '#7fbf7b']));\n    var diverginColor = d3.scaleDiverging([max, parseInt((max+min)/2), min], d3.interpolateRgbBasis(['#b37cd3', '#d9d58c', '#71ce6c'])); //50% saturation\n    \n    //-------------------- Threshold filter\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n    this.props.default_models.map(model_name => {\n      year_data.map(item => {\n        var two_realRank = parseInt(item['two_realRank'])\n        var predicted_rank = parseInt(item[model_name])\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n          under_threshold_instances.push(two_realRank)\n        }\n      })\n    })\n    selected_instances = selected_instances.filter(item => under_threshold_instances.includes(item))\n    deviation_chart.Create_deviation_chart('dev_plot_container_svg', 'exp', selected_instances, this.props.original_data, this.props.default_models, this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\n    misc_algo.handle_transparency(\"None\", this.props.clicked_circles, this.props.anim_config)\n    \n    //-------------------------Handle model mousever start here \n    d3.selectAll(\".model_p\").on('mouseover',function(){\n      var selectedModel=d3.select(this).attr('modelName')\n      if(self.props.default_models.includes(selectedModel)){\n        d3.selectAll('.dev_circles').attr('opacity',0.1)\n        d3.selectAll('.'+selectedModel).attr('opacity',1)  \n      }\n    })\n    .on('mouseout',function(){\n      d3.selectAll('.dev_circles').attr('opacity',1)\n    })\n  //-------------------------Handle model mousever start here\n  \n  }\n  render() {\n    var selected_instances = d3.range(this.props.state_range[0], this.props.state_range[1] + 1)\n    if (this.props.histogram_data.length > 0) { selected_instances = this.props.histogram_data }\n    //--------------------\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    //var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3','#b197c1','#dbd88c','#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']);\n    //var diverginColor = d3.scaleDiverging([max, parseInt((max+min)/2), min], d3.interpolateRgbBasis(['#af8dc3', '#dbd88c', '#7fbf7b']));\n    //var diverginColor = d3.scaleDiverging([min,(max - min) / 2 , max], d3.interpolateSpectral)\n    var diverginColor = d3.scaleDiverging([max, parseInt((max+min)/2), min], d3.interpolateRgbBasis(['#b37cd3', '#d9d58c', '#71ce6c'])); //50% saturation\n    this.props.Set_selected_instances(selected_instances)\n    //--------------------\n    var deviation_array = []\n    this.props.default_models.map(model => {\n      this.props.lime_data[model].map(item => {\n        if (item['1-qid'] == this.props.selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n          deviation_array.push(item['deviation'])\n        }\n      })\n    })\n    this.props.Set_deviation_array(deviation_array)\n    //console.log('deviation_array: ', d3.extent(deviation_array))\n    //--------------------\n    return (\n      <Grid className=\"ModelChartParent\" container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" style={{ height: '100%', width: '100%', backgroundColor: 'white', margin: 2, padding: 2, boxShadow: \"-2px 1px 4px -1px white\" }}> {/* This model chart's height and width is the parent*/}\n        <Grid item className=\"left_container\" style={{width:400, backgroundColor: \"#fcfcfc\" }}>\n          {/* The deviation plot container starts below */}\n          <div className=\"year_and_model_selector_and_slider_container\" style={{\"z-index\":1}}> {/* This is used to calculate the deviation plot height */}\n            <YearModelSelection></YearModelSelection><ModelSlider></ModelSlider>\n          </div>\n          {/* The deviation plot container starts below */}\n          <div class=\"deviation_plot_container_div\" style={{ width: \"100%\", height: $('.ModelChartParent').height() - $('.year_and_model_selector_and_slider_container').height(), marginBottom: 0, overflow: 'scroll' }}>\n            <svg id=\"dev_plot_container_svg\" style={{ width: \"100%\", overflow: 'hidden' }}></svg>\n          </div>\n          {/* The deviation plot container ends here */}\n        </Grid>\n        {/* The explanation plot container starts below */}\n        {this.props.rank_data != null ?\n          <Grid className=\"right_container\" item container xs direction=\"row\" columnSpacing={1} style={{ height: '100%'}}>\n              {\n                this.props.default_models.map((model_name, index) => {\n                  return <Grid item xs={12/this.props.default_models.length} style={{height: \"100%\"}}>\n                    <ExpChart diverginColor={diverginColor} exp_id={\"exp\" + index} default_models={this.props.default_models} state_range={this.props.state_range} selected_year={this.props.selected_year} model_name={model_name}></ExpChart>\n                  </Grid>\n                })\n              }\n            \n          </Grid> : null}\n        {/* The explanation plot container ends here */}\n        <Popover diverginColor={diverginColor} default_models={this.props.default_models}></Popover>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    default_models: state.default_models,\n    histogram_data: state.histogram_data,\n    state_range: state.state_range,\n    selected_year: state.selected_year,\n    lime_data: state.lime_data,\n    default_models: state.default_models,\n    original_data: state.original_data,\n    dataset: state.dataset,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    average_m: state.average_m,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\n    Set_deviation_array: (val) => dispatch({ type: \"deviation_array\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);"]},"metadata":{},"sourceType":"module"}