{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/NewWork/trivea/src/components/Charts/Range/01RangeChartComponent.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as deviation_chart from \"../DevPlot/deviation_chart\";\nimport * as misc_algo from '../../../Algorithms/misc_algo';\nimport * as $ from 'jquery';\nimport SliderGroup1 from './SliderGroup1';\nimport SliderGroup2 from './SliderGroup2';\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\";\nimport ExpChart from './02RangeExpChart';\nimport Popover from './03RangePopover';\n\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = {\n      height_slope_exp_chart: 700,\n      mouseX: 0,\n      mouseY: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      width: window.innerHeight\n    });\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //------------------------------\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1);\n    var min = d3.min(selected_instances),\n        max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3', '#b197c1', '#dbd88c', '#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']); //var diverginColor = d3.scaleDiverging([min,(max - min) / 2 , max], d3.interpolateSpectral)\n    //------------------------------\n\n    var selected_instances1 = d3.range(this.props.range_mode_range1[0], this.props.range_mode_range1[1] + 1); //-------------------- Threshold filter\n\n    var under_threshold_instances = [];\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid']);\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank']);\n      var predicted_rank = parseInt(item[this.props.range_mode_model]);\n\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank);\n      }\n    }); //console.log(\"Checking\", selected_instances1, under_threshold_instances)\n\n    selected_instances1 = selected_instances1.filter(item => under_threshold_instances.includes(item));\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold); //------------------------------\n\n    var selected_instances2 = d3.range(this.props.range_mode_range2[0], this.props.range_mode_range2[1] + 1);\n    var under_threshold_instances = [];\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid']);\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank']);\n      var predicted_rank = parseInt(item[this.props.range_mode_model]);\n\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank);\n      }\n    });\n    selected_instances2 = selected_instances2.filter(item => under_threshold_instances.includes(item));\n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold); //------------------------------\n\n    misc_algo.handle_transparency(\"None\", this.props.clicked_circles, this.props.anim_config);\n  }\n\n  render() {\n    //------------------------------\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1);\n    var min = d3.min(selected_instances),\n        max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3', '#b197c1', '#dbd88c', '#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']); //var diverginColor = d3.scaleDiverging([min,(max - min) / 2 , max], d3.interpolateSpectral)\n\n    this.props.Set_selected_instances(selected_instances); //--------------------\n\n    var deviation_array = [];\n    this.props.lime_data[this.props.range_mode_model].map(item => {\n      if (item['1-qid'] == this.props.selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n        deviation_array.push(item['deviation']);\n      }\n    });\n    this.props.Set_deviation_array(deviation_array); //--------------------\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      key: this.props.mode,\n      className: \"RangeChartParent\",\n      container: true,\n      direction: \"row\",\n      justifyContent: \"space-between\",\n      className: \"slope_chart_exp\",\n      style: {\n        width: \"100%\",\n        height: '100%',\n        backgroundColor: 'white',\n        padding: \"0px 0px\",\n        overflow: 'hidden'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"year_and_model_selector_and_slider_container\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \" \", /*#__PURE__*/React.createElement(YearModelSelection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      className: \"Group1_container\",\n      style: {\n        height: \"100%\",\n        width: \"49.4%\",\n        paddingRight: 0,\n        border: \"2px solid #eaeaea\",\n        overflow: 'hidden'\n      },\n      container: true,\n      item: true,\n      direction: \"column\",\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title_p1\",\n      style: {\n        margin: 0,\n        paddingLeft: \"45%\",\n        backgroundColor: \"rgb(232, 232, 232,0.4)\",\n        fontWeight: \"bolder\",\n        borderBottom: \"1px solid #cecece\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Group 1\"), /*#__PURE__*/React.createElement(Grid, {\n      className: \"slidergroup1\",\n      item: true,\n      style: {\n        backgroundColor: \"rgb(232, 232, 232,0.4)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SliderGroup1, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 101\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      className: \"dev_plot_and_exp_container\",\n      style: {\n        width: '100%',\n        height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5)\n      },\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"deviation_plot_container_div\",\n      item: true,\n      style: {\n        width: '49%',\n        height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5),\n        overflow: 'scroll',\n        borderRight: '1px solid #dbdbdb'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      id: \"r1d\",\n      style: {\n        width: \"100%\",\n        padding: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    })), this.props.rank_data != null ? /*#__PURE__*/React.createElement(Grid, {\n      className: \"explanation_plot_container\",\n      item: true,\n      style: {\n        width: '49%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(ExpChart, {\n      diverginColor: diverginColor,\n      exp_data: [[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]],\n      exp_id: \"r1exp\",\n      state_range: this.props.range_mode_range1,\n      selected_year: this.props.selected_year,\n      model_name: this.props.range_mode_model,\n      default_models: [this.props.range_mode_model],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    })) : null)), /*#__PURE__*/React.createElement(Grid, {\n      className: \"Group2_container\",\n      style: {\n        height: \"100%\",\n        width: \"49.4%\",\n        marginLeft: '0.5%',\n        paddingRight: 0,\n        border: \"2px solid #eaeaea\",\n        overflow: 'hidden'\n      },\n      container: true,\n      item: true,\n      direction: \"column\",\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"title_p2\",\n      style: {\n        margin: 0,\n        paddingLeft: \"45%\",\n        backgroundColor: \"rgb(232, 232, 232,0.4)\",\n        fontWeight: \"bolder\",\n        borderBottom: \"1px solid #cecece\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Group 2\"), /*#__PURE__*/React.createElement(Grid, {\n      className: \"slidergroup2\",\n      item: true,\n      style: {\n        backgroundColor: \"rgb(232, 232, 232,0.4)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SliderGroup2, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 101\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      className: \"dev_plot_and_exp_container\",\n      style: {\n        width: '100%',\n        height: $('.Group2_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5)\n      },\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"deviation_plot_container_div\",\n      item: true,\n      style: {\n        width: '49%',\n        height: $('.Group1_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5),\n        overflow: 'scroll',\n        borderRight: '1px solid #dbdbdb'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      id: \"r2d\",\n      style: {\n        width: \"100%\",\n        padding: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    })), this.props.rank_data != null ? /*#__PURE__*/React.createElement(Grid, {\n      className: \"explanation_plot_container\",\n      item: true,\n      style: {\n        width: '49%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(ExpChart, {\n      diverginColor: diverginColor,\n      exp_data: [[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]],\n      exp_id: \"r2exp\",\n      state_range: this.props.range_mode_range2,\n      selected_year: this.props.selected_year,\n      model_name: this.props.range_mode_model,\n      default_models: [this.props.range_mode_model],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    })) : null)), /*#__PURE__*/React.createElement(Popover, {\n      diverginColor: diverginColor,\n      default_models: [this.props.range_mode_model],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst maptstateToprop = state => {\n  return {\n    mode: state.mode,\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    range_mode_model: state.range_mode_model,\n    lime_data: state.lime_data,\n    selected_year: state.selected_year,\n    original_data: state.original_data,\n    dataset: state.dataset,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    average_m: state.average_m,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    histogram_data: state.histogram_data\n  };\n};\n\nconst mapdispatchToprop = dispatch => {\n  return {\n    Set_selected_instances: val => dispatch({\n      type: \"selected_instances\",\n      value: val\n    }),\n    Set_deviation_array: val => dispatch({\n      type: \"deviation_array\",\n      value: val\n    }),\n    Set_clicked_circles: val => dispatch({\n      type: \"clicked_circles\",\n      value: val\n    }),\n    Set_selected_year: val => dispatch({\n      type: \"selected_year\",\n      value: val\n    })\n  };\n};\n\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Range/01RangeChartComponent.js"],"names":["React","Component","d3","connect","Grid","deviation_chart","misc_algo","$","SliderGroup1","SliderGroup2","YearModelSelection","ExpChart","Popover","SlopeChart","constructor","props","line_color","state","height_slope_exp_chart","mouseX","mouseY","componentDidMount","setState","width","window","innerHeight","shouldComponentUpdate","prevProps","prevState","componentDidUpdate","selected_instances","range","min","range_mode_range1","range_mode_range2","max","d","diverginColor","scaleLinear","domain","interpolate","interpolateRgb","selected_instances1","under_threshold_instances","year_data","original_data","filter","item","selected_year","map","two_realRank","parseInt","predicted_rank","range_mode_model","Math","abs","threshold","push","includes","Create_deviation_chart","anim_config","average_m","clicked_circles","Set_clicked_circles","sparkline_data","Set_selected_year","dataset","selected_instances2","handle_transparency","render","Set_selected_instances","deviation_array","lime_data","Set_deviation_array","mode","height","backgroundColor","padding","overflow","paddingRight","border","margin","paddingLeft","fontWeight","borderBottom","borderRight","rank_data","marginLeft","maptstateToprop","histogram_data","mapdispatchToprop","dispatch","val","type","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,KAAKC,eAAZ,MAAiC,4BAAjC;AACA,OAAO,KAAKC,SAAZ,MAA2B,+BAA3B;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,UAAN,SAAyBZ,SAAzB,CAAmC;AACjCa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,sBAAsB,EAAE,GAA1B;AAA+BC,MAAAA,MAAM,EAAE,CAAvC;AAA0CC,MAAAA,MAAM,EAAE;AAAlD,KAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAEC,MAAM,CAACC;AAAhB,KAAd;AACD;;AACDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,WAAO,IAAP;AACD;;AACDC,EAAAA,kBAAkB,CAACF,SAAD,EAAYC,SAAZ,EAAuB;AACvC;AACA,QAAIE,kBAAkB,GAAG5B,EAAE,CAAC6B,KAAH,CAAS7B,EAAE,CAAC8B,GAAH,CAAO,CAAC,KAAKjB,KAAL,CAAWkB,iBAAX,CAA6B,CAA7B,CAAD,EAAkC,KAAKlB,KAAL,CAAWmB,iBAAX,CAA6B,CAA7B,CAAlC,CAAP,CAAT,EAAqFhC,EAAE,CAACiC,GAAH,CAAO,CAAC,KAAKpB,KAAL,CAAWkB,iBAAX,CAA6B,CAA7B,CAAD,EAAkC,KAAKlB,KAAL,CAAWmB,iBAAX,CAA6B,CAA7B,CAAlC,CAAP,IAA6E,CAAlK,CAAzB;AACA,QAAIF,GAAG,GAAG9B,EAAE,CAAC8B,GAAH,CAAOF,kBAAP,CAAV;AAAA,QAAsCK,GAAG,GAAGjC,EAAE,CAACiC,GAAH,CAAOL,kBAAP,CAA5C;AACA,QAAIM,CAAC,GAAG,CAACD,GAAG,GAAGH,GAAP,IAAc,CAAtB;AACA,QAAIK,aAAa,GAAGnC,EAAE,CAACoC,WAAH,GAAiBC,MAAjB,CAAwB,CAACP,GAAG,GAAGI,CAAC,GAAG,CAAX,EAAcJ,GAAG,GAAGI,CAAC,GAAG,CAAxB,EAA2BJ,GAAG,GAAGI,CAAC,GAAG,CAArC,EAAwCJ,GAAG,GAAGI,CAAC,GAAG,CAAlD,EAAqDJ,GAAG,GAAGI,CAAC,GAAG,CAA/D,EAAkEJ,GAAG,GAAGI,CAAC,GAAG,CAA5E,EAA+EJ,GAA/E,CAAxB,EAA6GQ,WAA7G,CAAyHtC,EAAE,CAACuC,cAA5H,EAA4IV,KAA5I,CAAkJ,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAA0C,SAA1C,EAAqD,SAArD,EAAgE,SAAhE,CAAlJ,CAApB,CALuC,CAMvC;AACA;;AACA,QAAIW,mBAAmB,GAAGxC,EAAE,CAAC6B,KAAH,CAAS,KAAKhB,KAAL,CAAWkB,iBAAX,CAA6B,CAA7B,CAAT,EAA0C,KAAKlB,KAAL,CAAWkB,iBAAX,CAA6B,CAA7B,IAAkC,CAA5E,CAA1B,CARuC,CASvC;;AACA,QAAIU,yBAAyB,GAAG,EAAhC;AACA,QAAIC,SAAS,GAAG,KAAK7B,KAAL,CAAW8B,aAAX,CAAyBC,MAAzB,CAAgCC,IAAI,IAAI,KAAKhC,KAAL,CAAWiC,aAAX,IAA4BD,IAAI,CAAC,OAAD,CAAxE,CAAhB;AACEH,IAAAA,SAAS,CAACK,GAAV,CAAcF,IAAI,IAAI;AACpB,UAAIG,YAAY,GAAGC,QAAQ,CAACJ,IAAI,CAAC,cAAD,CAAL,CAA3B;AACA,UAAIK,cAAc,GAAGD,QAAQ,CAACJ,IAAI,CAAC,KAAKhC,KAAL,CAAWsC,gBAAZ,CAAL,CAA7B;;AACA,UAAIC,IAAI,CAACC,GAAL,CAASH,cAAc,GAAGF,YAA1B,IAA0C,KAAKnC,KAAL,CAAWyC,SAAzD,EAAoE;AAClEb,QAAAA,yBAAyB,CAACc,IAA1B,CAA+BP,YAA/B;AACD;AACF,KAND,EAZqC,CAoBvC;;AACAR,IAAAA,mBAAmB,GAAGA,mBAAmB,CAACI,MAApB,CAA2BC,IAAI,IAAIJ,yBAAyB,CAACe,QAA1B,CAAmCX,IAAnC,CAAnC,CAAtB;AACA1C,IAAAA,eAAe,CAACsD,sBAAhB,CAAuC,KAAvC,EAA8C,OAA9C,EAAuDjB,mBAAvD,EAA4E,KAAK3B,KAAL,CAAW8B,aAAvF,EAAsG,CAAC,KAAK9B,KAAL,CAAWsC,gBAAZ,CAAtG,EAAqI,KAAKtC,KAAL,CAAW6C,WAAhJ,EAA6J,KAAK7C,KAAL,CAAWiC,aAAxK,EAAuL,KAAKjC,KAAL,CAAW8C,SAAlM,EAA6M,KAAK9C,KAAL,CAAW+C,eAAxN,EAAyO,KAAK/C,KAAL,CAAWgD,mBAApP,EAAyQ1B,aAAzQ,EAAwR,KAAKtB,KAAL,CAAWiD,cAAnS,EAAmT,KAAKjD,KAAL,CAAWkD,iBAA9T,EAAiV,KAAKlD,KAAL,CAAWmD,OAA5V,EAAqW,KAAKnD,KAAL,CAAWyC,SAAhX,EAtBuC,CAuBvC;;AACA,QAAIW,mBAAmB,GAAGjE,EAAE,CAAC6B,KAAH,CAAS,KAAKhB,KAAL,CAAWmB,iBAAX,CAA6B,CAA7B,CAAT,EAA0C,KAAKnB,KAAL,CAAWmB,iBAAX,CAA6B,CAA7B,IAAkC,CAA5E,CAA1B;AACA,QAAIS,yBAAyB,GAAG,EAAhC;AACA,QAAIC,SAAS,GAAG,KAAK7B,KAAL,CAAW8B,aAAX,CAAyBC,MAAzB,CAAgCC,IAAI,IAAI,KAAKhC,KAAL,CAAWiC,aAAX,IAA4BD,IAAI,CAAC,OAAD,CAAxE,CAAhB;AACAH,IAAAA,SAAS,CAACK,GAAV,CAAcF,IAAI,IAAI;AACpB,UAAIG,YAAY,GAAGC,QAAQ,CAACJ,IAAI,CAAC,cAAD,CAAL,CAA3B;AACA,UAAIK,cAAc,GAAGD,QAAQ,CAACJ,IAAI,CAAC,KAAKhC,KAAL,CAAWsC,gBAAZ,CAAL,CAA7B;;AACA,UAAIC,IAAI,CAACC,GAAL,CAASH,cAAc,GAAGF,YAA1B,IAA0C,KAAKnC,KAAL,CAAWyC,SAAzD,EAAoE;AAClEb,QAAAA,yBAAyB,CAACc,IAA1B,CAA+BP,YAA/B;AACD;AACF,KAND;AAOAiB,IAAAA,mBAAmB,GAAGA,mBAAmB,CAACrB,MAApB,CAA2BC,IAAI,IAAIJ,yBAAyB,CAACe,QAA1B,CAAmCX,IAAnC,CAAnC,CAAtB;AAEA1C,IAAAA,eAAe,CAACsD,sBAAhB,CAAuC,KAAvC,EAA8C,OAA9C,EAAuDQ,mBAAvD,EAA4E,KAAKpD,KAAL,CAAW8B,aAAvF,EAAsG,CAAC,KAAK9B,KAAL,CAAWsC,gBAAZ,CAAtG,EAAqI,KAAKtC,KAAL,CAAW6C,WAAhJ,EAA6J,KAAK7C,KAAL,CAAWiC,aAAxK,EAAuL,KAAKjC,KAAL,CAAW8C,SAAlM,EAA6M,KAAK9C,KAAL,CAAW+C,eAAxN,EAAyO,KAAK/C,KAAL,CAAWgD,mBAApP,EAAyQ1B,aAAzQ,EAAwR,KAAKtB,KAAL,CAAWiD,cAAnS,EAAmT,KAAKjD,KAAL,CAAWkD,iBAA9T,EAAiV,KAAKlD,KAAL,CAAWmD,OAA5V,EAAqW,KAAKnD,KAAL,CAAWyC,SAAhX,EApCuC,CAqCvC;;AACAlD,IAAAA,SAAS,CAAC8D,mBAAV,CAA8B,MAA9B,EAAsC,KAAKrD,KAAL,CAAW+C,eAAjD,EAAkE,KAAK/C,KAAL,CAAW6C,WAA7E;AAED;;AACDS,EAAAA,MAAM,GAAG;AACP;AACA,QAAIvC,kBAAkB,GAAG5B,EAAE,CAAC6B,KAAH,CAAS7B,EAAE,CAAC8B,GAAH,CAAO,CAAC,KAAKjB,KAAL,CAAWkB,iBAAX,CAA6B,CAA7B,CAAD,EAAkC,KAAKlB,KAAL,CAAWmB,iBAAX,CAA6B,CAA7B,CAAlC,CAAP,CAAT,EAAqFhC,EAAE,CAACiC,GAAH,CAAO,CAAC,KAAKpB,KAAL,CAAWkB,iBAAX,CAA6B,CAA7B,CAAD,EAAkC,KAAKlB,KAAL,CAAWmB,iBAAX,CAA6B,CAA7B,CAAlC,CAAP,IAA6E,CAAlK,CAAzB;AACA,QAAIF,GAAG,GAAG9B,EAAE,CAAC8B,GAAH,CAAOF,kBAAP,CAAV;AAAA,QAAsCK,GAAG,GAAGjC,EAAE,CAACiC,GAAH,CAAOL,kBAAP,CAA5C;AACA,QAAIM,CAAC,GAAG,CAACD,GAAG,GAAGH,GAAP,IAAc,CAAtB;AACA,QAAIK,aAAa,GAAGnC,EAAE,CAACoC,WAAH,GAAiBC,MAAjB,CAAwB,CAACP,GAAG,GAAGI,CAAC,GAAG,CAAX,EAAcJ,GAAG,GAAGI,CAAC,GAAG,CAAxB,EAA2BJ,GAAG,GAAGI,CAAC,GAAG,CAArC,EAAwCJ,GAAG,GAAGI,CAAC,GAAG,CAAlD,EAAqDJ,GAAG,GAAGI,CAAC,GAAG,CAA/D,EAAkEJ,GAAG,GAAGI,CAAC,GAAG,CAA5E,EAA+EJ,GAA/E,CAAxB,EAA6GQ,WAA7G,CAAyHtC,EAAE,CAACuC,cAA5H,EAA4IV,KAA5I,CAAkJ,CAAC,SAAD,EAAW,SAAX,EAAqB,SAArB,EAA+B,SAA/B,EAA0C,SAA1C,EAAqD,SAArD,EAAgE,SAAhE,CAAlJ,CAApB,CALO,CAMP;;AACA,SAAKhB,KAAL,CAAWuD,sBAAX,CAAkCxC,kBAAlC,EAPO,CAQP;;AACA,QAAIyC,eAAe,GAAG,EAAtB;AAEA,SAAKxD,KAAL,CAAWyD,SAAX,CAAqB,KAAKzD,KAAL,CAAWsC,gBAAhC,EAAkDJ,GAAlD,CAAsDF,IAAI,IAAI;AAC5D,UAAIA,IAAI,CAAC,OAAD,CAAJ,IAAiB,KAAKhC,KAAL,CAAWiC,aAA5B,IAA6ClB,kBAAkB,CAAC4B,QAAnB,CAA4BP,QAAQ,CAACJ,IAAI,CAAC,cAAD,CAAL,CAApC,CAAjD,EAA8G;AAC5GwB,QAAAA,eAAe,CAACd,IAAhB,CAAqBV,IAAI,CAAC,WAAD,CAAzB;AACD;AACF,KAJD;AAKA,SAAKhC,KAAL,CAAW0D,mBAAX,CAA+BF,eAA/B,EAhBO,CAiBP;;AACA,wBACE,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAE,KAAKxD,KAAL,CAAW2D,IAAtB;AAA4B,MAAA,SAAS,EAAC,kBAAtC;AAAyD,MAAA,SAAS,MAAlE;AAAmE,MAAA,SAAS,EAAC,KAA7E;AAAmF,MAAA,cAAc,EAAC,eAAlG;AACE,MAAA,SAAS,EAAC,iBADZ;AAC8B,MAAA,KAAK,EAAE;AAAEnD,QAAAA,KAAK,EAAE,MAAT;AAAiBoD,QAAAA,MAAM,EAAE,MAAzB;AAAiCC,QAAAA,eAAe,EAAE,OAAlD;AAA2DC,QAAAA,OAAO,EAAE,SAApE;AAA+EC,QAAAA,QAAQ,EAAE;AAAzF,OADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,8CAAf;AAA8D,MAAA,KAAK,EAAE;AAAEvD,QAAAA,KAAK,EAAE;AAAT,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,eAME,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,KAAK,EAAE;AAAEoD,QAAAA,MAAM,EAAE,MAAV;AAAkBpD,QAAAA,KAAK,EAAE,OAAzB;AAAkCwD,QAAAA,YAAY,EAAE,CAAhD;AAAmDC,QAAAA,MAAM,EAAE,mBAA3D;AAAgFF,QAAAA,QAAQ,EAAE;AAA1F,OAA1C;AAAgJ,MAAA,SAAS,MAAzJ;AAA0J,MAAA,IAAI,MAA9J;AAA+J,MAAA,SAAS,EAAC,QAAzK;AAAkL,MAAA,cAAc,EAAC,eAAjM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAwB,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,WAAW,EAAE,KAA1B;AAAiCN,QAAAA,eAAe,EAAE,wBAAlD;AAA4EO,QAAAA,UAAU,EAAE,QAAxF;AAAkGC,QAAAA,YAAY,EAAE;AAAhH,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,IAAI,MAAnC;AAAoC,MAAA,KAAK,EAAE;AAAER,QAAAA,eAAe,EAAE;AAAnB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0F,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1F,CAFF,eAGE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAA6C,MAAA,KAAK,EAAE;AAAErD,QAAAA,KAAK,EAAE,MAAT;AAAiBoD,QAAAA,MAAM,EAAEpE,CAAC,CAAC,mBAAD,CAAD,CAAuBoE,MAAvB,MAAmCpE,CAAC,CAAC,WAAD,CAAD,CAAeoE,MAAf,KAA0BpE,CAAC,CAAC,eAAD,CAAD,CAAmBoE,MAAnB,EAA1B,GAAwDpE,CAAC,CAAC,+CAAD,CAAD,CAAmDoE,MAAnD,EAAxD,GAAsH,CAAzJ;AAAzB,OAApD;AAA4O,MAAA,SAAS,MAArP;AAAsP,MAAA,SAAS,EAAC,KAAhQ;AAAsQ,MAAA,OAAO,EAAC,QAA9Q;AAAuR,MAAA,UAAU,EAAC,QAAlS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,8BAAhB;AAA+C,MAAA,IAAI,MAAnD;AAAoD,MAAA,KAAK,EAAE;AAAEpD,QAAAA,KAAK,EAAE,KAAT;AAAgBoD,QAAAA,MAAM,EAAEpE,CAAC,CAAC,mBAAD,CAAD,CAAuBoE,MAAvB,MAAmCpE,CAAC,CAAC,WAAD,CAAD,CAAeoE,MAAf,KAA0BpE,CAAC,CAAC,eAAD,CAAD,CAAmBoE,MAAnB,EAA1B,GAAwDpE,CAAC,CAAC,+CAAD,CAAD,CAAmDoE,MAAnD,EAAxD,GAAsH,CAAzJ,CAAxB;AAAqLG,QAAAA,QAAQ,EAAE,QAA/L;AAAyMO,QAAAA,WAAW,EAAE;AAAtN,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,KAAK,EAAE;AAAE9D,QAAAA,KAAK,EAAE,MAAT;AAAiBsD,QAAAA,OAAO,EAAE;AAA1B,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKI,KAAK9D,KAAL,CAAWuE,SAAX,IAAwB,IAAxB,gBAA+B,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAA6C,MAAA,IAAI,MAAjD;AAAkD,MAAA,KAAK,EAAE;AAAE/D,QAAAA,KAAK,EAAE,KAAT;AAAgBoD,QAAAA,MAAM,EAAE;AAAxB,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAC7B,oBAAC,QAAD;AAAU,MAAA,aAAa,EAAEtC,aAAzB;AAAwC,MAAA,QAAQ,EAAE,CAAC,CAAC,OAAD,EAAU,KAAKtB,KAAL,CAAWkB,iBAArB,CAAD,EAA0C,CAAC,OAAD,EAAU,KAAKlB,KAAL,CAAWmB,iBAArB,CAA1C,CAAlD;AAAsI,MAAA,MAAM,EAAC,OAA7I;AAAqJ,MAAA,WAAW,EAAE,KAAKnB,KAAL,CAAWkB,iBAA7K;AAAgM,MAAA,aAAa,EAAE,KAAKlB,KAAL,CAAWiC,aAA1N;AAAyO,MAAA,UAAU,EAAE,KAAKjC,KAAL,CAAWsC,gBAAhQ;AAAkR,MAAA,cAAc,EAAE,CAAC,KAAKtC,KAAL,CAAWsC,gBAAZ,CAAlS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD6B,CAA/B,GAEU,IAPd,CAHF,CANF,eAqBE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,KAAK,EAAE;AAAEsB,QAAAA,MAAM,EAAE,MAAV;AAAkBpD,QAAAA,KAAK,EAAE,OAAzB;AAAkCgE,QAAAA,UAAU,EAAE,MAA9C;AAAsDR,QAAAA,YAAY,EAAE,CAApE;AAAuEC,QAAAA,MAAM,EAAE,mBAA/E;AAAoGF,QAAAA,QAAQ,EAAE;AAA9G,OAA1C;AAAoK,MAAA,SAAS,MAA7K;AAA8K,MAAA,IAAI,MAAlL;AAAmL,MAAA,SAAS,EAAC,QAA7L;AAAsM,MAAA,cAAc,EAAC,eAArN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAwB,MAAA,KAAK,EAAE;AAAEG,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,WAAW,EAAE,KAA1B;AAAiCN,QAAAA,eAAe,EAAE,wBAAlD;AAA4EO,QAAAA,UAAU,EAAE,QAAxF;AAAkGC,QAAAA,YAAY,EAAE;AAAhH,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,IAAI,MAAnC;AAAoC,MAAA,KAAK,EAAE;AAAER,QAAAA,eAAe,EAAE;AAAnB,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0F,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1F,CAFF,eAGE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAA6C,MAAA,KAAK,EAAE;AAAErD,QAAAA,KAAK,EAAE,MAAT;AAAiBoD,QAAAA,MAAM,EAAEpE,CAAC,CAAC,mBAAD,CAAD,CAAuBoE,MAAvB,MAAmCpE,CAAC,CAAC,WAAD,CAAD,CAAeoE,MAAf,KAA0BpE,CAAC,CAAC,eAAD,CAAD,CAAmBoE,MAAnB,EAA1B,GAAwDpE,CAAC,CAAC,+CAAD,CAAD,CAAmDoE,MAAnD,EAAxD,GAAsH,CAAzJ;AAAzB,OAApD;AAA4O,MAAA,SAAS,MAArP;AAAsP,MAAA,SAAS,EAAC,KAAhQ;AAAsQ,MAAA,OAAO,EAAC,QAA9Q;AAAuR,MAAA,UAAU,EAAC,QAAlS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,8BAAhB;AAA+C,MAAA,IAAI,MAAnD;AAAoD,MAAA,KAAK,EAAE;AAAEpD,QAAAA,KAAK,EAAE,KAAT;AAAgBoD,QAAAA,MAAM,EAAEpE,CAAC,CAAC,mBAAD,CAAD,CAAuBoE,MAAvB,MAAmCpE,CAAC,CAAC,WAAD,CAAD,CAAeoE,MAAf,KAA0BpE,CAAC,CAAC,eAAD,CAAD,CAAmBoE,MAAnB,EAA1B,GAAwDpE,CAAC,CAAC,+CAAD,CAAD,CAAmDoE,MAAnD,EAAxD,GAAsH,CAAzJ,CAAxB;AAAqLG,QAAAA,QAAQ,EAAE,QAA/L;AAAyMO,QAAAA,WAAW,EAAE;AAAtN,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,KAAK,EAAE;AAAE9D,QAAAA,KAAK,EAAE,MAAT;AAAiBsD,QAAAA,OAAO,EAAE;AAA1B,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKI,KAAK9D,KAAL,CAAWuE,SAAX,IAAwB,IAAxB,gBAA+B,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,4BAAhB;AAA6C,MAAA,IAAI,MAAjD;AAAkD,MAAA,KAAK,EAAE;AAAE/D,QAAAA,KAAK,EAAE,KAAT;AAAgBoD,QAAAA,MAAM,EAAE;AAAxB,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAC7B,oBAAC,QAAD;AAAU,MAAA,aAAa,EAAEtC,aAAzB;AAAwC,MAAA,QAAQ,EAAE,CAAC,CAAC,OAAD,EAAU,KAAKtB,KAAL,CAAWkB,iBAArB,CAAD,EAA0C,CAAC,OAAD,EAAU,KAAKlB,KAAL,CAAWmB,iBAArB,CAA1C,CAAlD;AAAsI,MAAA,MAAM,EAAC,OAA7I;AAAqJ,MAAA,WAAW,EAAE,KAAKnB,KAAL,CAAWmB,iBAA7K;AAAgM,MAAA,aAAa,EAAE,KAAKnB,KAAL,CAAWiC,aAA1N;AAAyO,MAAA,UAAU,EAAE,KAAKjC,KAAL,CAAWsC,gBAAhQ;AAAkR,MAAA,cAAc,EAAE,CAAC,KAAKtC,KAAL,CAAWsC,gBAAZ,CAAlS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD6B,CAA/B,GAEU,IAPd,CAHF,CArBF,eAmCE,oBAAC,OAAD;AAAS,MAAA,aAAa,EAAEhB,aAAxB;AAAuC,MAAA,cAAc,EAAE,CAAC,KAAKtB,KAAL,CAAWsC,gBAAZ,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCF,CADF;AAuCD;;AA9GgC;;AAgHnC,MAAMmC,eAAe,GAAIvE,KAAD,IAAW;AACjC,SAAO;AACLyD,IAAAA,IAAI,EAAEzD,KAAK,CAACyD,IADP;AAELzC,IAAAA,iBAAiB,EAAEhB,KAAK,CAACgB,iBAFpB;AAGLC,IAAAA,iBAAiB,EAAEjB,KAAK,CAACiB,iBAHpB;AAILmB,IAAAA,gBAAgB,EAAEpC,KAAK,CAACoC,gBAJnB;AAKLmB,IAAAA,SAAS,EAAEvD,KAAK,CAACuD,SALZ;AAMLxB,IAAAA,aAAa,EAAE/B,KAAK,CAAC+B,aANhB;AAOLH,IAAAA,aAAa,EAAE5B,KAAK,CAAC4B,aAPhB;AAQLqB,IAAAA,OAAO,EAAEjD,KAAK,CAACiD,OARV;AASLF,IAAAA,cAAc,EAAE/C,KAAK,CAAC+C,cATjB;AAULE,IAAAA,OAAO,EAAEjD,KAAK,CAACiD,OAVV;AAWLN,IAAAA,WAAW,EAAE3C,KAAK,CAAC2C,WAXd;AAYLC,IAAAA,SAAS,EAAE5C,KAAK,CAAC4C,SAZZ;AAaLyB,IAAAA,SAAS,EAAErE,KAAK,CAACqE,SAbZ;AAcLxB,IAAAA,eAAe,EAAE7C,KAAK,CAAC6C,eAdlB;AAeLN,IAAAA,SAAS,EAAEvC,KAAK,CAACuC,SAfZ;AAgBLiC,IAAAA,cAAc,EAAExE,KAAK,CAACwE;AAhBjB,GAAP;AAkBD,CAnBD;;AAoBA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AACtC,SAAO;AACLrB,IAAAA,sBAAsB,EAAGsB,GAAD,IAASD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,oBAAR;AAA8BC,MAAAA,KAAK,EAAEF;AAArC,KAAD,CADpC;AAELnB,IAAAA,mBAAmB,EAAGmB,GAAD,IAASD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,KAAK,EAAEF;AAAlC,KAAD,CAFjC;AAGL7B,IAAAA,mBAAmB,EAAG6B,GAAD,IAASD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,KAAK,EAAEF;AAAlC,KAAD,CAHjC;AAIL3B,IAAAA,iBAAiB,EAAG2B,GAAD,IAASD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,eAAR;AAAyBC,MAAAA,KAAK,EAAEF;AAAhC,KAAD;AAJ/B,GAAP;AAMD,CAPD;;AAQA,eAAezF,OAAO,CAACqF,eAAD,EAAkBE,iBAAlB,CAAP,CAA4C7E,UAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\nimport * as misc_algo from '../../../Algorithms/misc_algo'\nimport * as $ from 'jquery';\nimport SliderGroup1 from './SliderGroup1';\nimport SliderGroup2 from './SliderGroup2';\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\nimport ExpChart from './02RangeExpChart';\nimport Popover from './03RangePopover';\n\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    //------------------------------\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1)\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3','#b197c1','#dbd88c','#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']);\n    //var diverginColor = d3.scaleDiverging([min,(max - min) / 2 , max], d3.interpolateSpectral)\n    //------------------------------\n    var selected_instances1 = d3.range(this.props.range_mode_range1[0], this.props.range_mode_range1[1] + 1)\n    //-------------------- Threshold filter\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n      year_data.map(item => {\n        var two_realRank = parseInt(item['two_realRank'])\n        var predicted_rank = parseInt(item[this.props.range_mode_model])\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n          under_threshold_instances.push(two_realRank)\n        }\n      })\n    \n    //console.log(\"Checking\", selected_instances1, under_threshold_instances)\n    selected_instances1 = selected_instances1.filter(item => under_threshold_instances.includes(item))\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\n    //------------------------------\n    var selected_instances2 = d3.range(this.props.range_mode_range2[0], this.props.range_mode_range2[1] + 1)\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank'])\n      var predicted_rank = parseInt(item[this.props.range_mode_model])\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank)\n      }\n    })\n    selected_instances2 = selected_instances2.filter(item => under_threshold_instances.includes(item))\n\n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\n    //------------------------------\n    misc_algo.handle_transparency(\"None\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    //------------------------------\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1)\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3','#b197c1','#dbd88c','#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']);\n    //var diverginColor = d3.scaleDiverging([min,(max - min) / 2 , max], d3.interpolateSpectral)\n    this.props.Set_selected_instances(selected_instances)\n    //--------------------\n    var deviation_array = []\n\n    this.props.lime_data[this.props.range_mode_model].map(item => {\n      if (item['1-qid'] == this.props.selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n        deviation_array.push(item['deviation'])\n      }\n    })\n    this.props.Set_deviation_array(deviation_array)\n    //--------------------\n    return (\n      <Grid key={this.props.mode} className=\"RangeChartParent\" container direction=\"row\" justifyContent=\"space-between\"\n        className=\"slope_chart_exp\" style={{ width: \"100%\", height: '100%', backgroundColor: 'white', padding: \"0px 0px\", overflow: 'hidden' }}>\n        <div className=\"year_and_model_selector_and_slider_container\" style={{ width: \"100%\" }}> {/* This is used to calculate the deviation plot height */}\n          <YearModelSelection></YearModelSelection>\n        </div>\n        {/* Group 1 */}\n        <Grid className=\"Group1_container\" style={{ height: \"100%\", width: \"49.4%\", paddingRight: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\" justifyContent=\"space-between\">\n          <p className=\"title_p1\" style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 1</p>\n          <Grid className=\"slidergroup1\" item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><SliderGroup1></SliderGroup1></Grid>\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\n              <svg id=\"r1d\" style={{ width: \"100%\", padding: 5 }}></svg>\n            </Grid>\n            {\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\n                <ExpChart diverginColor={diverginColor} exp_data={[[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]]} exp_id=\"r1exp\" state_range={this.props.range_mode_range1} selected_year={this.props.selected_year} model_name={this.props.range_mode_model} default_models={[this.props.range_mode_model]}></ExpChart>\n              </Grid> : null\n            }\n          </Grid>\n        </Grid>\n        {/* Group 2 */}\n        <Grid className=\"Group2_container\" style={{ height: \"100%\", width: \"49.4%\", marginLeft: '0.5%', paddingRight: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\" justifyContent=\"space-between\">\n          <p className=\"title_p2\" style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 2</p>\n          <Grid className=\"slidergroup2\" item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><SliderGroup2></SliderGroup2></Grid>\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group2_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\n              <svg id=\"r2d\" style={{ width: \"100%\", padding: 5 }}></svg>\n            </Grid>\n            {\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\n                <ExpChart diverginColor={diverginColor} exp_data={[[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]]} exp_id=\"r2exp\" state_range={this.props.range_mode_range2} selected_year={this.props.selected_year} model_name={this.props.range_mode_model} default_models={[this.props.range_mode_model]}></ExpChart>\n              </Grid> : null\n            }\n          </Grid>\n        </Grid>\n        <Popover diverginColor={diverginColor} default_models={[this.props.range_mode_model]}></Popover>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    mode: state.mode,\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    range_mode_model: state.range_mode_model,\n    lime_data: state.lime_data,\n    selected_year: state.selected_year,\n    original_data: state.original_data,\n    dataset: state.dataset,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    average_m: state.average_m,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    histogram_data: state.histogram_data,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\n    Set_deviation_array: (val) => dispatch({ type: \"deviation_array\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);"]},"metadata":{},"sourceType":"module"}