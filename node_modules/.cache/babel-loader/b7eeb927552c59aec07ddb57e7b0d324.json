{"ast":null,"code":"import * as d3 from 'd3';\nimport * as $ from \"jquery\";\nexport default function CreateChart(histogram_data, svg, feature_name, feature_index, number_of_features, store_instances, all_instances) {\n  console.log(feature_name, histogram_data, \"feature_name\");\n  var parent_width = $(\".feature_histograms_container\").width();\n  var parent_height = $(\".feature_histograms_container\").height();\n  var feature_width = $(\".feature_histograms_container\").width();\n  var feature_height = 120;\n  const margin = {\n    top: 10,\n    right: 5,\n    bottom: 40,\n    left: 5\n  };\n  d3.select(\".feature_histograms_container\").attr('height', feature_height * number_of_features + 20);\n  svg.attr('y', feature_height * feature_index).attr('width', parent_width).attr('height', feature_height); //-----------------------------------------------------------\n\n  var occur = {};\n  histogram_data.map(item => {\n    if (item.y in occur) occur[item.y] = occur[item.y] + 1;else {\n      occur[item.y] = 1;\n    }\n  });\n  var items = Object.entries(occur).sort((first, second) => second[1] - first[1]);\n  var x = items.map(element => element[1]);\n  var sum_x = d3.sum(x);\n  svg.selectAll('.item_svg').data(items).join(\"svg\").attr(\"class\", 'item_svg').attr(\"x\", (d, i) => d3.sum(x.slice(0, i)) / sum_x * feature_width).attr('y', margin.top).attr('width', (d, i) => d[1] / sum_x * feature_width - .2).attr('height', feature_height - margin.bottom).attr('add_rectangle', function (d) {\n    d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"width\", \"100%\").attr(\"height\", feature_height - margin.bottom).style(\"fill\", \"gray\").attr(\"check\", function () {\n      if (feature_name + d[0] in all_instances) {\n        if (all_instances[feature_name + d[0]].length > 0) {\n          d3.select(this).classed('feature_clicked', true);\n        }\n      } // if the feature and the category exists we check the length and decide that it is clicked item. In categorical items if something is clicked it can not have empty instances\n\n    }).on('click', function () {\n      if (!d3.select(this).classed('feature_clicked')) {\n        // if not classed we add the class and the data\n        d3.select(this).classed('feature_clicked', true);\n        store_instances(feature_name + d[0], histogram_data.filter(item => item['y'] == d[0]).map(item => item.x));\n      } else {\n        // if claassed we already have it so we set it empty\n        d3.select(this).classed('feature_clicked', false);\n        store_instances(feature_name + d[0], []);\n      }\n    });\n  }).attr('add_text', function (d) {\n    //if(d3.select(this).attr(\"width\")>9)\n    d3.select(this).selectAll(\"text\").data([0]).join(\"text\").text(d[0]).attr('x', \"50%\").attr(\"y\", '50%').attr('dominant-baseline', 'middle').style(\"font-size\", d3.select(this).attr(\"width\") > 11 ? 10 : d3.select(this).attr(\"width\") - 2).style(\"writing-mode\", \"tb\").style(\"text-anchor\", \"middle\").style('cursor', 'pointer');\n  }); //----------------------------------------------------------- Histogram creation ends here\n\n  svg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", feature_height - 10).attr(\"x\", feature_width / 2).attr(\"text-anchor\", \"middle\").attr('font-size', 14).text(feature_name).style('text-transform', 'capitalize');\n}","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Top/FeatureHistograms/CreateBarChart.js"],"names":["d3","$","CreateChart","histogram_data","svg","feature_name","feature_index","number_of_features","store_instances","all_instances","console","log","parent_width","width","parent_height","height","feature_width","feature_height","margin","top","right","bottom","left","select","attr","occur","map","item","y","items","Object","entries","sort","first","second","x","element","sum_x","sum","selectAll","data","join","d","i","slice","style","length","classed","on","filter","text"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport * as $ from \"jquery\"\nexport default function CreateChart(histogram_data, svg, feature_name, feature_index, number_of_features,store_instances,all_instances) {\n  console.log(feature_name,histogram_data,\"feature_name\")  \n  var parent_width = $(\".feature_histograms_container\").width()\n  var parent_height = $(\".feature_histograms_container\").height()\n  var feature_width = $(\".feature_histograms_container\").width()\n  var feature_height = 120\n  const margin = { top: 10, right: 5, bottom: 40, left: 5 }\n  d3.select(\".feature_histograms_container\").attr('height', feature_height * number_of_features + 20)\n  svg.attr('y', feature_height * feature_index).attr('width', parent_width).attr('height', feature_height)\n  //-----------------------------------------------------------\n  var occur = {}\n  histogram_data.map(item => {\n    if (item.y in occur) occur[item.y] = occur[item.y] + 1\n    else { occur[item.y] = 1 }\n  })\n  var items = Object.entries(occur).sort((first, second) => second[1] - first[1]);\n  var x = items.map(element => element[1]);\n  var sum_x = d3.sum(x)\n  svg.selectAll('.item_svg').data(items).join(\"svg\").attr(\"class\", 'item_svg').attr(\"x\", (d, i) => (d3.sum(x.slice(0, i)) / sum_x) * feature_width).attr('y',margin.top).attr('width', (d, i) => ((d[1] / sum_x) * feature_width) - .2).attr('height', feature_height - margin.bottom)\n    .attr('add_rectangle', function (d) {\n      d3.select(this).selectAll(\".my_rect\").data([0]).join('rect').attr(\"class\", \"my_rect\").attr(\"width\", \"100%\").attr(\"height\", feature_height - margin.bottom).style(\"fill\", \"gray\")\n      .attr(\"check\",function(){\n        if(feature_name+d[0] in all_instances){ if(all_instances[feature_name+d[0]].length>0){d3.select(this).classed('feature_clicked',true) }} // if the feature and the category exists we check the length and decide that it is clicked item. In categorical items if something is clicked it can not have empty instances\n      })\n      .on('click', function(){\n        if(!d3.select(this).classed('feature_clicked')){ // if not classed we add the class and the data\n          d3.select(this).classed('feature_clicked',true)\n          store_instances(feature_name+d[0],histogram_data.filter(item=>item['y']==d[0]).map(item=>item.x))\n        }\n        else{ // if claassed we already have it so we set it empty\n          d3.select(this).classed('feature_clicked',false)\n          store_instances(feature_name+d[0],[])\n        }\n      })\n      \n    \n    })\n    .attr('add_text', function (d) {\n      //if(d3.select(this).attr(\"width\")>9)\n      d3.select(this).selectAll(\"text\").data([0]).join(\"text\").text(d[0]).attr('x', \"50%\").attr(\"y\", '50%').attr('dominant-baseline', 'middle').style(\"font-size\", d3.select(this).attr(\"width\") > 11 ? 10 : d3.select(this).attr(\"width\") - 2).style(\"writing-mode\", \"tb\").style(\"text-anchor\", \"middle\").style('cursor', 'pointer')\n    })\n  //----------------------------------------------------------- Histogram creation ends here\n  svg.selectAll(\".hist_title\").data([0]).join(\"text\").attr(\"class\", \"hist_title\").attr(\"y\", feature_height-10).attr(\"x\", feature_width / 2).attr(\"text-anchor\", \"middle\").attr('font-size', 14).text(feature_name).style('text-transform','capitalize')\n}"]},"metadata":{},"sourceType":"module"}