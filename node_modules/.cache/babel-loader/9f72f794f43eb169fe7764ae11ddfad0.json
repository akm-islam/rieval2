{"ast":null,"code":"var _jsxFileName = \"/Users/kaustav/NewWork/trivea/src/components/Charts/Time/01YearChartComponent.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport './YearModeComponent.scss';\nimport { connect } from \"react-redux\";\nimport * as deviation_chart from \"../DevPlot/deviation_chart\";\nimport * as misc_algo from '../../../Algorithms/misc_algo';\nimport * as $ from 'jquery';\nimport Year1DropDown from './Year1DropDown';\nimport Year2DropDown from './Year2DropDown';\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\";\nimport ExpChart from './02ExpChartComponentTime';\nimport Popover from './03TimePopover';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = {\n      height_slope_exp_chart: 700,\n      mouseX: 0,\n      mouseY: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      width: window.innerHeight\n    });\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //------------------------------\n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1);\n    var min = d3.min(selected_instances),\n        max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3', '#b197c1', '#dbd88c', '#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']); //----------\n\n    var under_threshold_instances = [];\n    var year_data = this.props.original_data.filter(item => this.props.time_mode_year1 == item['1-qid']);\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank']);\n      var predicted_rank = parseInt(item[this.props.time_mode_model]);\n\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank);\n      }\n    });\n    var selected_instances1 = selected_instances.filter(item => under_threshold_instances.includes(item));\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.time_mode_model], this.props.anim_config, this.props.time_mode_year1, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_time_mode_year1, this.props.dataset, this.props.threshold); //------------------------------\n\n    var under_threshold_instances = [];\n    var year_data = this.props.original_data.filter(item => this.props.time_mode_year2 == item['1-qid']);\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank']);\n      var predicted_rank = parseInt(item[this.props.time_mode_model]);\n\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank);\n      }\n    });\n    var selected_instances2 = selected_instances.filter(item => under_threshold_instances.includes(item));\n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.time_mode_model], this.props.anim_config, this.props.time_mode_year2, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_time_mode_year2, this.props.dataset, this.props.threshold); //------------------------------\n\n    misc_algo.handle_transparency(\"None\", this.props.clicked_circles, this.props.anim_config);\n  }\n\n  render() {\n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1); //--------------------\n\n    var deviation_array = [];\n    this.props.lime_data[this.props.time_mode_model].map(item => {\n      if ((item['1-qid'] == this.props.time_mode_year1 || item['1-qid'] == this.props.time_mode_year2) && selected_instances.includes(parseInt(item['two_realRank']))) {\n        deviation_array.push(item['deviation']);\n      }\n    });\n    console.log(deviation_array, \"deviation_array\");\n    this.props.Set_deviation_array(deviation_array); //--------------------\n\n    var min = d3.min(selected_instances),\n        max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3', '#b197c1', '#dbd88c', '#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']);\n    this.props.Set_selected_instances(selected_instances);\n    return /*#__PURE__*/React.createElement(Box, {\n      className: \"box_root\",\n      sx: {\n        width: '100%',\n        height: '100%',\n        padding: 0.5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justifyContent: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"year_and_model_selector_and_slider_container\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(YearModelSelection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 101\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5.9,\n      className: \"Group1_container\",\n      style: {\n        borderTop: '2px solid #eaeaea',\n        borderLeft: '2px solid #eaeaea',\n        borderRight: '2px solid #eaeaea'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slidergroup1\",\n      style: {\n        width: '100%',\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Year1DropDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 85\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      className: \"dev_plot_and_exp_container\",\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"deviation_plot_container_div\",\n      style: {\n        width: '100%',\n        height: $('.box_root').height() - ($('.year_and_model_selector_and_slider_container').height() + $('.slidergroup1').height()),\n        overflow: 'scroll'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      id: \"r1d\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 236\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, this.props.rank_data != null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"explanation_plot_container\",\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 50\n      }\n    }, /*#__PURE__*/React.createElement(ExpChart, {\n      exp_data: [[\"r1exp\", this.props.time_mode_year1], [\"r2exp\", this.props.time_mode_year2]],\n      diverginColor: diverginColor,\n      exp_id: \"r1exp\",\n      default_models: [this.props.time_mode_model],\n      state_range: this.props.time_mode_range,\n      selected_year: this.props.time_mode_year1,\n      model_name: this.props.time_mode_model,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    })) : null))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5.9,\n      style: {\n        borderTop: '2px solid #eaeaea',\n        borderLeft: '2px solid #eaeaea',\n        borderRight: '2px solid #eaeaea'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        padding: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slidergroup2\",\n      style: {\n        width: '100%',\n        height: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Year2DropDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 85\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"deviation_plot_container_div\",\n      style: {\n        width: '100%',\n        height: $('.box_root').height() - ($('.year_and_model_selector_and_slider_container').height() + $('.slidergroup2').height()),\n        overflow: 'scroll'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      id: \"r2d\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 236\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, this.props.rank_data != null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"explanation_plot_container\",\n      style: {\n        width: '100%',\n        height: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 50\n      }\n    }, /*#__PURE__*/React.createElement(ExpChart, {\n      exp_data: [[\"r1exp\", this.props.time_mode_year1], [\"r2exp\", this.props.time_mode_year2]],\n      diverginColor: diverginColor,\n      exp_id: \"r2exp\",\n      default_models: [this.props.time_mode_model],\n      state_range: this.props.time_mode_range,\n      selected_year: this.props.time_mode_year2,\n      model_name: this.props.time_mode_model,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })) : null)))), /*#__PURE__*/React.createElement(Popover, {\n      diverginColor: diverginColor,\n      default_models: [this.props.time_mode_model],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst maptstateToprop = state => {\n  return {\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    mode: state.mode,\n    time_mode_range: state.time_mode_range,\n    time_mode_model: state.time_mode_model,\n    default_models: state.default_models,\n    original_data: state.original_data,\n    dataset: state.dataset,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    average_m: state.average_m,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    histogram_data: state.histogram_data,\n    lime_data: state.lime_data\n  };\n};\n\nconst mapdispatchToprop = dispatch => {\n  return {\n    Set_selected_instances: val => dispatch({\n      type: \"selected_instances\",\n      value: val\n    }),\n    Set_clicked_circles: val => dispatch({\n      type: \"clicked_circles\",\n      value: val\n    }),\n    Set_time_mode_year1: val => dispatch({\n      type: \"time_mode_year1\",\n      value: val\n    }),\n    Set_time_mode_year2: val => dispatch({\n      type: \"time_mode_year2\",\n      value: val\n    }),\n    Set_deviation_array: val => dispatch({\n      type: \"deviation_array\",\n      value: val\n    })\n  };\n};\n\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Time/01YearChartComponent.js"],"names":["React","Component","d3","connect","deviation_chart","misc_algo","$","Year1DropDown","Year2DropDown","YearModelSelection","ExpChart","Popover","Box","Grid","SlopeChart","constructor","props","line_color","state","height_slope_exp_chart","mouseX","mouseY","componentDidMount","setState","width","window","innerHeight","shouldComponentUpdate","prevProps","prevState","componentDidUpdate","selected_instances","range","time_mode_range","min","max","d","diverginColor","scaleLinear","domain","interpolate","interpolateRgb","under_threshold_instances","year_data","original_data","filter","item","time_mode_year1","map","two_realRank","parseInt","predicted_rank","time_mode_model","Math","abs","threshold","push","selected_instances1","includes","Create_deviation_chart","anim_config","average_m","clicked_circles","Set_clicked_circles","sparkline_data","Set_time_mode_year1","dataset","time_mode_year2","selected_instances2","Set_time_mode_year2","handle_transparency","render","deviation_array","lime_data","console","log","Set_deviation_array","Set_selected_instances","height","padding","borderTop","borderLeft","borderRight","overflow","rank_data","maptstateToprop","mode","default_models","histogram_data","mapdispatchToprop","dispatch","val","type","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport './YearModeComponent.scss';\nimport { connect } from \"react-redux\";\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\nimport * as misc_algo from '../../../Algorithms/misc_algo'\nimport * as $ from 'jquery';\nimport Year1DropDown from './Year1DropDown';\nimport Year2DropDown from './Year2DropDown';\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\nimport ExpChart from './02ExpChartComponentTime';\nimport Popover from './03TimePopover';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    //------------------------------\n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3', '#b197c1', '#dbd88c', '#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']);\n\n    //----------\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.time_mode_year1 == item['1-qid'])\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank'])\n      var predicted_rank = parseInt(item[this.props.time_mode_model])\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank)\n      }\n    })\n    var selected_instances1 = selected_instances.filter(item => under_threshold_instances.includes(item))\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.time_mode_model], this.props.anim_config, this.props.time_mode_year1, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_time_mode_year1, this.props.dataset, this.props.threshold)\n    //------------------------------\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.time_mode_year2 == item['1-qid'])\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank'])\n      var predicted_rank = parseInt(item[this.props.time_mode_model])\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank)\n      }\n    })\n    var selected_instances2 = selected_instances.filter(item => under_threshold_instances.includes(item))\n\n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.time_mode_model], this.props.anim_config, this.props.time_mode_year2, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_time_mode_year2, this.props.dataset, this.props.threshold)\n    //------------------------------\n    misc_algo.handle_transparency(\"None\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    var selected_instances = d3.range(this.props.time_mode_range[0], this.props.time_mode_range[1] + 1)\n    //--------------------\n    var deviation_array = []\n    this.props.lime_data[this.props.time_mode_model].map(item => {\n      if ((item['1-qid'] == this.props.time_mode_year1 || item['1-qid'] == this.props.time_mode_year2) && selected_instances.includes(parseInt(item['two_realRank']))) {\n        deviation_array.push(item['deviation'])\n      }\n    })\n    console.log(deviation_array,\"deviation_array\")\n    this.props.Set_deviation_array(deviation_array)\n    //--------------------\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3', '#b197c1', '#dbd88c', '#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']);\n    this.props.Set_selected_instances(selected_instances)\n    return (\n      <Box className=\"box_root\" sx={{ width: '100%', height: '100%', padding: 0.5 }}>\n        <Grid container justifyContent=\"space-between\">\n          <Grid item xs={12}>\n            <div className=\"year_and_model_selector_and_slider_container\" style={{ width: '100%' }}><YearModelSelection></YearModelSelection></div>\n          </Grid>\n          {/* Group 1 */}\n          <Grid item xs={5.9} className=\"Group1_container\" style={{ borderTop: '2px solid #eaeaea', borderLeft: '2px solid #eaeaea', borderRight: '2px solid #eaeaea' }}>\n            <Grid container>\n              <Grid item xs={12} style={{ padding: 0 }}>\n                <div className=\"slidergroup1\" style={{ width: '100%', height: 30 }}><Year1DropDown></Year1DropDown></div>\n              </Grid>\n              <Grid className=\"dev_plot_and_exp_container\" item xs={6}>\n                <div className=\"deviation_plot_container_div\" style={{ width: '100%', height: $('.box_root').height() - ($('.year_and_model_selector_and_slider_container').height() + $('.slidergroup1').height()), overflow: 'scroll' }}><svg id=\"r1d\" style={{ width: \"100%\" }}></svg></div>\n              </Grid>\n              <Grid item xs={6}>\n                {\n                  this.props.rank_data != null ? <div className=\"explanation_plot_container\" style={{ width: '100%', height: '100%', }}>\n                    <ExpChart exp_data={[[\"r1exp\", this.props.time_mode_year1], [\"r2exp\", this.props.time_mode_year2]]} diverginColor={diverginColor} exp_id=\"r1exp\" default_models={[this.props.time_mode_model]} state_range={this.props.time_mode_range} selected_year={this.props.time_mode_year1} model_name={this.props.time_mode_model}></ExpChart>\n                  </div> : null\n                }\n              </Grid>\n            </Grid>\n          </Grid>\n          {/* Group 2 */}\n          <Grid item xs={5.9} style={{ borderTop: '2px solid #eaeaea', borderLeft: '2px solid #eaeaea', borderRight: '2px solid #eaeaea' }}>\n            <Grid container>\n              <Grid item xs={12} style={{ padding: 0 }}>\n                <div className=\"slidergroup2\" style={{ width: '100%', height: 30 }}><Year2DropDown></Year2DropDown></div>\n              </Grid>\n              <Grid item xs={6}>\n                <div className=\"deviation_plot_container_div\" style={{ width: '100%', height: $('.box_root').height() - ($('.year_and_model_selector_and_slider_container').height() + $('.slidergroup2').height()), overflow: 'scroll' }}><svg id=\"r2d\" style={{ width: \"100%\" }}></svg></div>\n              </Grid>\n              <Grid item xs={6}>\n                {\n                  this.props.rank_data != null ? <div className=\"explanation_plot_container\" style={{ width: '100%', height: 500, }}>\n                    <ExpChart exp_data={[[\"r1exp\", this.props.time_mode_year1], [\"r2exp\", this.props.time_mode_year2]]} diverginColor={diverginColor} exp_id=\"r2exp\" default_models={[this.props.time_mode_model]} state_range={this.props.time_mode_range} selected_year={this.props.time_mode_year2} model_name={this.props.time_mode_model}></ExpChart>\n                  </div> : null\n                }\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Popover diverginColor={diverginColor} default_models={[this.props.time_mode_model]}></Popover>\n      </Box>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    time_mode_year1: state.time_mode_year1,\n    time_mode_year2: state.time_mode_year2,\n    mode: state.mode,\n    time_mode_range: state.time_mode_range,\n    time_mode_model: state.time_mode_model,\n    default_models: state.default_models,\n    original_data: state.original_data,\n    dataset: state.dataset,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    average_m: state.average_m,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    histogram_data: state.histogram_data,\n    lime_data: state.lime_data,\n    \n\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_time_mode_year1: (val) => dispatch({ type: \"time_mode_year1\", value: val }),\n    Set_time_mode_year2: (val) => dispatch({ type: \"time_mode_year2\", value: val }),\n    Set_deviation_array: (val) => dispatch({ type: \"deviation_array\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);"]},"metadata":{},"sourceType":"module"}