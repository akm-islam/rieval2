{"ast":null,"code":"import _toConsumableArray from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import*as $ from'jquery';import Slider from'@material-ui/core/Slider';import{makeStyles}from'@material-ui/core/styles';import{connect}from\"react-redux\";import TextField from'@material-ui/core/TextField';import Button from\"@material-ui/core/Button\";import'./ModelSlider.scss';import*as algo1 from\"../../../Algorithms/algo1\";var useStyles=makeStyles(function(theme){return{root:{width:'100%'},heading:{fontSize:theme.typography.pxToRem(15),flexBasis:'33.33%',flexShrink:0},secondaryHeading:{fontSize:theme.typography.pxToRem(15),color:theme.palette.text.secondary},tRoot:{marginBottom:35},rang_input:{marginLeft:10}};});function Modes(props){var classes=useStyles();// states \nvar _React$useState=React.useState(props.state_range),_React$useState2=_slicedToArray(_React$useState,2),sliderRange=_React$useState2[0],set_sliderRange=_React$useState2[1];//-----------------------------------------------------------------\nvar temp_marks=[];var step=(props.slider_max-1)/(6-1);for(var i=0;i<6;i++){temp_marks.push(1+step*i);}var marks=temp_marks.map(function(item){var myitem=parseInt(item);return{value:myitem,label:myitem};});//console.log(props.marks)\n//-----------------------------------------------------------------\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"Modelslider\",style:{height:80,width:\"99%\",paddingTop:30,border:\"2px solid rgb(178, 178, 178,0.5)\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"lower\",style:{padding:\"0px 0px\",marginTop:-20}},/*#__PURE__*/React.createElement(TextField,{classes:{input:classes.rang_input},id:\"standard-basic\",label:\"Lower\",value:sliderRange[0],style:{width:\"100%\"},onChange:function onChange(event){if(isNaN(parseInt(event.target.value))){set_sliderRange([\"\",sliderRange[1]]);}set_sliderRange([event.target.value,sliderRange[1]]);}})),/*#__PURE__*/React.createElement(\"div\",{className:\"slider\",style:{width:\"100%\",margin:\"0px 0px\"}},/*#__PURE__*/React.createElement(Slider,{value:sliderRange,onChange:function onChange(event,newValue){return set_sliderRange(newValue);},onChangeCommitted:function onChangeCommitted(event,newValue){return props.Set_changed(\"range\");},\"aria-labelledby\":\"range-slider\",valueLabelDisplay:\"on\",min:1,max:props.slider_max,marks:marks})),/*#__PURE__*/React.createElement(\"div\",{className:\"upper\",style:{padding:\"0px 0px\",marginTop:-20}},/*#__PURE__*/React.createElement(TextField,{classes:{input:classes.rang_input},id:\"standard-basic\",label:\"Upper\",value:sliderRange[1],style:{width:\"100%\"},onChange:function onChange(event){if(isNaN(parseInt(event.target.value))){set_sliderRange([sliderRange[0],\"\"]);}else{if(parseInt(event.target.value)>props.slider_max){//alert(\"Upper range can not exceed maximum\")\nset_sliderRange([sliderRange[0],props.slider_max]);}else{set_sliderRange([sliderRange[0],parseInt(event.target.value)]);}}}})),/*#__PURE__*/React.createElement(\"div\",{className:\"button\",item:true,xs:\"2\",style:{marginTop:-10}},/*#__PURE__*/React.createElement(Button,{className:\"range_button\",style:{backgroundColor:\"#ededed\",height:30},onClick:function onClick(){if(sliderRange[0]>sliderRange[1]){alert(\"Lower range can not be larger than the upper range\");}else if(sliderRange[1]<sliderRange[0]){alert(\"Upper range can not be smaller than the lower range\");}else{var temp_Models=algo1.sort(props.sort_by,sliderRange,props.default_models,props.selected_year,props.grouped_by_year_data)[0];var default_model_scores=algo1.sort(props.sort_by,sliderRange,props.default_models,props.selected_year,props.grouped_by_year_data)[1];props.Set_default_model_scores(default_model_scores);props.Set_default_models(_toConsumableArray(temp_Models));props.Set_state_range(sliderRange);}}},\"Update range\")));}var maptstateToprop=function maptstateToprop(state){return{selected_year:state.selected_year,state_range:state.state_range,mode:state.mode,// Model mode model\nslider_max:state.slider_max,range_mode_model:state.range_mode_model,// Range mode model\nrange_mode_range1:state.range_mode_range1,range_mode_range2:state.range_mode_range2,time_mode_model:state.time_mode_model,// Time mode model\ntime_mode_range:state.time_mode_range,time_mode_year1:state.time_mode_year1,time_mode_year2:state.time_mode_year2,years_for_dropdown:state.years_for_dropdown,dataset:state.dataset,default_models:state.default_models,slider_and_feature_value:state.slider_and_feature_value,sort_by:state.sort_by,grouped_by_year_data:state.grouped_by_year_data};};var mapdispatchToprop=function mapdispatchToprop(dispatch){return{Set_state_range:function Set_state_range(val){return dispatch({type:\"state_range\",value:val});},Set_changed:function Set_changed(val){return dispatch({type:\"changed\",value:val});},Set_default_models:function Set_default_models(val){return dispatch({type:\"default_models\",value:val});},Set_default_model_scores:function Set_default_model_scores(val){return dispatch({type:\"default_model_scores\",value:val});}};};export default connect(maptstateToprop,mapdispatchToprop)(Modes);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Model/ModelSlider.js"],"names":["React","$","Slider","makeStyles","connect","TextField","Button","algo1","useStyles","theme","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","tRoot","marginBottom","rang_input","marginLeft","Modes","props","classes","useState","state_range","sliderRange","set_sliderRange","temp_marks","step","slider_max","i","push","marks","map","item","myitem","parseInt","value","label","height","paddingTop","border","padding","marginTop","input","event","isNaN","target","margin","newValue","Set_changed","backgroundColor","alert","temp_Models","sort","sort_by","default_models","selected_year","grouped_by_year_data","default_model_scores","Set_default_model_scores","Set_default_models","Set_state_range","maptstateToprop","state","mode","range_mode_model","range_mode_range1","range_mode_range2","time_mode_model","time_mode_range","time_mode_year1","time_mode_year2","years_for_dropdown","dataset","slider_and_feature_value","mapdispatchToprop","dispatch","val","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as $ from 'jquery';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from \"react-redux\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from \"@material-ui/core/Button\";\nimport './ModelSlider.scss';\nimport * as algo1 from \"../../../Algorithms/algo1\";\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    tRoot: {\n        marginBottom: 35,\n    },\n    rang_input: {\n        marginLeft: 10,\n    },\n}));\nfunction Modes(props) {\n    const classes = useStyles();\n    // states \n    const [sliderRange, set_sliderRange] = React.useState(props.state_range);\n    //-----------------------------------------------------------------\n    var temp_marks = [];\n    var step = (props.slider_max - 1) / (6 - 1);\n    for (var i = 0; i < 6; i++) {\n        temp_marks.push(1 + (step * i));\n    }\n    var marks = temp_marks.map(item => {\n        var myitem = parseInt(item)\n        return { value: myitem, label: myitem }\n    })\n    //console.log(props.marks)\n    //-----------------------------------------------------------------\n    return (\n        <div className=\"Modelslider\" style={{\n            height: 80, width: \"99%\",\n            paddingTop: 30, border: \"2px solid rgb(178, 178, 178,0.5)\"\n        }} >\n            <div className=\"lower\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Lower\" value={sliderRange[0]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([\"\", sliderRange[1]])\n                        } set_sliderRange([event.target.value, sliderRange[1]])\n                    }\n                    }\n                />\n            </div>\n            <div className=\"slider\" style={{ width: \"100%\", margin: \"0px 0px\" }}>\n                <Slider value={sliderRange} onChange={(event, newValue) => set_sliderRange(newValue)} onChangeCommitted={(event, newValue) => props.Set_changed(\"range\")}\n                     aria-labelledby=\"range-slider\" valueLabelDisplay=\"on\" min={1} max={props.slider_max} marks={marks}\n                />\n            </div>\n            <div className=\"upper\" style={{ padding: \"0px 0px\", marginTop: -20 }}>\n                <TextField classes={{ input: classes.rang_input }} id=\"standard-basic\" label=\"Upper\" value={sliderRange[1]} style={{ width: \"100%\" }}\n                    onChange={event => {\n                        if (isNaN(parseInt(event.target.value))) {\n                            set_sliderRange([sliderRange[0], \"\"])\n                        } else {\n                            if (parseInt(event.target.value) > props.slider_max) {\n                                //alert(\"Upper range can not exceed maximum\")\n                                set_sliderRange([sliderRange[0], props.slider_max])\n                            }\n                            else {\n                                set_sliderRange([sliderRange[0], parseInt(event.target.value)])\n                            }\n                        }\n                    }\n                    }\n                />\n            </div>\n            <div className=\"button\" item xs=\"2\" style={{ marginTop: -10 }}>\n                <Button className=\"range_button\" style={{ backgroundColor: \"#ededed\", height: 30 }}\n                    onClick={() => {\n                        if (sliderRange[0] > sliderRange[1]) {\n                            alert(\"Lower range can not be larger than the upper range\")\n                        }\n                        else if (sliderRange[1] < sliderRange[0]) {\n                            alert(\"Upper range can not be smaller than the lower range\")\n                        }\n                        else{\n                            var temp_Models = algo1.sort(props.sort_by, sliderRange, props.default_models, props.selected_year, props.grouped_by_year_data)[0];\n                            var default_model_scores = algo1.sort(props.sort_by, sliderRange, props.default_models, props.selected_year, props.grouped_by_year_data)[1];\n                            props.Set_default_model_scores(default_model_scores)\n                            props.Set_default_models([...temp_Models])\n                            props.Set_state_range(sliderRange)    \n                        }\n                    }}\n                >Update range</Button>\n            </div>\n        </div>\n    );\n}\nconst maptstateToprop = (state) => {\n    return {\n        selected_year: state.selected_year,\n        state_range: state.state_range,\n        mode: state.mode, // Model mode model\n        slider_max: state.slider_max,\n        range_mode_model: state.range_mode_model, // Range mode model\n        range_mode_range1: state.range_mode_range1,\n        range_mode_range2: state.range_mode_range2,\n        time_mode_model: state.time_mode_model, // Time mode model\n        time_mode_range: state.time_mode_range,\n        time_mode_year1: state.time_mode_year1,\n        time_mode_year2: state.time_mode_year2,\n        years_for_dropdown: state.years_for_dropdown,\n        dataset: state.dataset,\n        default_models: state.default_models,\n        slider_and_feature_value: state.slider_and_feature_value,\n        sort_by: state.sort_by,\n        grouped_by_year_data: state.grouped_by_year_data\n    }\n}\nconst mapdispatchToprop = (dispatch) => {\n    return {\n        Set_state_range: (val) => dispatch({ type: \"state_range\", value: val }),\n        Set_changed: (val) => dispatch({ type: \"changed\", value: val }),\n        Set_default_models: (val) => dispatch({ type: \"default_models\", value: val }),\n        Set_default_model_scores: (val) => dispatch({ type: \"default_model_scores\", value: val }),\n    }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(Modes);"]},"metadata":{},"sourceType":"module"}