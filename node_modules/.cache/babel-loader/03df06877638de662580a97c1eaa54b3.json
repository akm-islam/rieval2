{"ast":null,"code":"import _defineProperty from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/kaustav/NewWork/trivea/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import*as d3 from'd3';import{connect}from\"react-redux\";import Grid from'@material-ui/core/Grid';import*as deviation_chart from\"../DevPlot/deviation_chart\";import*as misc_algo from'../../../Algorithms/misc_algo';import*as $ from'jquery';import SliderGroup1 from'./SliderGroup1';import SliderGroup2 from'./SliderGroup2';import YearModelSelection from\"./YearAndModelSelection/YearModelSelection\";import ExpChart from'./02RangeExpChart';import Popover from'./03RangePopover';var SlopeChart=/*#__PURE__*/function(_Component){_inherits(SlopeChart,_Component);var _super=_createSuper(SlopeChart);function SlopeChart(props){var _this;_classCallCheck(this,SlopeChart);_this=_super.call(this,props);_this.line_color=null;_this.state={height_slope_exp_chart:700,mouseX:0,mouseY:0};return _this;}_createClass(SlopeChart,[{key:\"componentDidMount\",value:function componentDidMount(){this.setState({width:window.innerHeight});}},{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(prevProps,prevState){return true;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var _this2=this;//------------------------------\nvar selected_instances=d3.range(d3.min([this.props.range_mode_range1[0],this.props.range_mode_range2[0]]),d3.max([this.props.range_mode_range1[1],this.props.range_mode_range2[1]])+1);var min=d3.min(selected_instances),max=d3.max(selected_instances);var d=(max-min)/8;var diverginColor=d3.scaleLinear().domain([min+d*7,min+d*6,min+d*5,min+d*4,min+d*3,min+d*2,min]).interpolate(d3.interpolateRgb).range(['#af8dc3','#b197c1','#dbd88c','#dbd88c','#dbd88c','#90bc8d','#7fbf7b']);//var diverginColor = d3.scaleDiverging([min,(max - min) / 2 , max], d3.interpolateSpectral)\n//------------------------------\nvar selected_instances1=d3.range(this.props.range_mode_range1[0],this.props.range_mode_range1[1]+1);//-------------------- Threshold filter\nvar under_threshold_instances=[];var year_data=this.props.original_data.filter(function(item){return _this2.props.selected_year==item['1-qid'];});year_data.map(function(item){var two_realRank=parseInt(item['two_realRank']);var predicted_rank=parseInt(item[_this2.props.range_mode_model]);if(Math.abs(predicted_rank-two_realRank)<_this2.props.threshold){under_threshold_instances.push(two_realRank);}});//console.log(\"Checking\", selected_instances1, under_threshold_instances)\nselected_instances1=selected_instances1.filter(function(item){return under_threshold_instances.includes(item);});deviation_chart.Create_deviation_chart('r1d','r1exp',selected_instances1,this.props.original_data,[this.props.range_mode_model],this.props.anim_config,this.props.selected_year,this.props.average_m,this.props.clicked_circles,this.props.Set_clicked_circles,diverginColor,this.props.sparkline_data,this.props.Set_selected_year,this.props.dataset,this.props.threshold);//------------------------------\nvar selected_instances2=d3.range(this.props.range_mode_range2[0],this.props.range_mode_range2[1]+1);var under_threshold_instances=[];var year_data=this.props.original_data.filter(function(item){return _this2.props.selected_year==item['1-qid'];});year_data.map(function(item){var two_realRank=parseInt(item['two_realRank']);var predicted_rank=parseInt(item[_this2.props.range_mode_model]);if(Math.abs(predicted_rank-two_realRank)<_this2.props.threshold){under_threshold_instances.push(two_realRank);}});selected_instances2=selected_instances2.filter(function(item){return under_threshold_instances.includes(item);});deviation_chart.Create_deviation_chart('r2d','r2exp',selected_instances2,this.props.original_data,[this.props.range_mode_model],this.props.anim_config,this.props.selected_year,this.props.average_m,this.props.clicked_circles,this.props.Set_clicked_circles,diverginColor,this.props.sparkline_data,this.props.Set_selected_year,this.props.dataset,this.props.threshold);//------------------------------\nmisc_algo.handle_transparency(\"None\",this.props.clicked_circles,this.props.anim_config);}},{key:\"render\",value:function render(){var _this3=this,_React$createElement;//------------------------------\nvar selected_instances=d3.range(d3.min([this.props.range_mode_range1[0],this.props.range_mode_range2[0]]),d3.max([this.props.range_mode_range1[1],this.props.range_mode_range2[1]])+1);var min=d3.min(selected_instances),max=d3.max(selected_instances);var d=(max-min)/8;var diverginColor=d3.scaleLinear().domain([min+d*7,min+d*6,min+d*5,min+d*4,min+d*3,min+d*2,min]).interpolate(d3.interpolateRgb).range(['#af8dc3','#b197c1','#dbd88c','#dbd88c','#dbd88c','#90bc8d','#7fbf7b']);//var diverginColor = d3.scaleDiverging([min,(max - min) / 2 , max], d3.interpolateSpectral)\nthis.props.Set_selected_instances(selected_instances);//--------------------\nvar deviation_array=[];this.props.lime_data[this.props.range_mode_model].map(function(item){if(item['1-qid']==_this3.props.selected_year&&selected_instances.includes(parseInt(item['two_realRank']))){deviation_array.push(item['deviation']);}});this.props.Set_deviation_array(deviation_array);//--------------------\nreturn/*#__PURE__*/React.createElement(Grid,(_React$createElement={key:this.props.mode,className:\"RangeChartParent\",container:true,direction:\"row\",justifyContent:\"space-between\"},_defineProperty(_React$createElement,\"className\",\"slope_chart_exp\"),_defineProperty(_React$createElement,\"style\",{width:\"100%\",height:'100%',backgroundColor:'white',padding:\"0px 0px\",overflow:'hidden'}),_React$createElement),/*#__PURE__*/React.createElement(\"div\",{className:\"year_and_model_selector_and_slider_container\",style:{width:\"100%\"}},\" \",/*#__PURE__*/React.createElement(YearModelSelection,null)),/*#__PURE__*/React.createElement(Grid,{className:\"Group1_container\",style:{height:\"100%\",width:\"49.4%\",paddingRight:0,border:\"2px solid #eaeaea\",overflow:'hidden'},container:true,item:true,direction:\"column\",justifyContent:\"space-between\"},/*#__PURE__*/React.createElement(\"p\",{className:\"title_p1\",style:{margin:0,paddingLeft:\"45%\",backgroundColor:\"rgb(232, 232, 232,0.4)\",fontWeight:\"bolder\",borderBottom:\"1px solid #cecece\"}},\"Group 1\"),/*#__PURE__*/React.createElement(Grid,{className:\"slidergroup1\",item:true,style:{backgroundColor:\"rgb(232, 232, 232,0.4)\"}},/*#__PURE__*/React.createElement(SliderGroup1,null)),/*#__PURE__*/React.createElement(Grid,{className:\"dev_plot_and_exp_container\",style:{width:'100%',height:$('.Group1_container').height()-($('.title_p1').height()+$('.slidergroup1').height()+$('.year_and_model_selector_and_slider_container').height()+5)},container:true,direction:\"row\",justify:\"center\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Grid,{className:\"deviation_plot_container_div\",item:true,style:{width:'49%',height:$('.Group1_container').height()-($('.title_p1').height()+$('.slidergroup1').height()+$('.year_and_model_selector_and_slider_container').height()+5),overflow:'scroll',borderRight:'1px solid #dbdbdb'}},/*#__PURE__*/React.createElement(\"svg\",{id:\"r1d\",style:{width:\"100%\",padding:5}})),this.props.rank_data!=null?/*#__PURE__*/React.createElement(Grid,{className:\"explanation_plot_container\",item:true,style:{width:'49%',height:'100%'}},/*#__PURE__*/React.createElement(ExpChart,{diverginColor:diverginColor,exp_data:[[\"r1exp\",this.props.range_mode_range1],[\"r2exp\",this.props.range_mode_range2]],exp_id:\"r1exp\",state_range:this.props.range_mode_range1,selected_year:this.props.selected_year,model_name:this.props.range_mode_model,default_models:[this.props.range_mode_model]})):null)),/*#__PURE__*/React.createElement(Grid,{className:\"Group2_container\",style:{height:\"100%\",width:\"49.4%\",marginLeft:'0.5%',paddingRight:0,border:\"2px solid #eaeaea\",overflow:'hidden'},container:true,item:true,direction:\"column\",justifyContent:\"space-between\"},/*#__PURE__*/React.createElement(\"p\",{className:\"title_p2\",style:{margin:0,paddingLeft:\"45%\",backgroundColor:\"rgb(232, 232, 232,0.4)\",fontWeight:\"bolder\",borderBottom:\"1px solid #cecece\"}},\"Group 2\"),/*#__PURE__*/React.createElement(Grid,{className:\"slidergroup2\",item:true,style:{backgroundColor:\"rgb(232, 232, 232,0.4)\"}},/*#__PURE__*/React.createElement(SliderGroup2,null)),/*#__PURE__*/React.createElement(Grid,{className:\"dev_plot_and_exp_container\",style:{width:'100%',height:$('.Group2_container').height()-($('.title_p2').height()+$('.slidergroup2').height()+$('.year_and_model_selector_and_slider_container').height()+5)},container:true,direction:\"row\",justify:\"center\",alignItems:\"center\"},/*#__PURE__*/React.createElement(Grid,{className:\"deviation_plot_container_div\",item:true,style:{width:'49%',height:$('.Group1_container').height()-($('.title_p2').height()+$('.slidergroup2').height()+$('.year_and_model_selector_and_slider_container').height()+5),overflow:'scroll',borderRight:'1px solid #dbdbdb'}},/*#__PURE__*/React.createElement(\"svg\",{id:\"r2d\",style:{width:\"100%\",padding:5}})),this.props.rank_data!=null?/*#__PURE__*/React.createElement(Grid,{className:\"explanation_plot_container\",item:true,style:{width:'49%',height:'100%'}},/*#__PURE__*/React.createElement(ExpChart,{diverginColor:diverginColor,exp_data:[[\"r1exp\",this.props.range_mode_range1],[\"r2exp\",this.props.range_mode_range2]],exp_id:\"r2exp\",state_range:this.props.range_mode_range2,selected_year:this.props.selected_year,model_name:this.props.range_mode_model,default_models:[this.props.range_mode_model]})):null)),/*#__PURE__*/React.createElement(Popover,{diverginColor:diverginColor,default_models:[this.props.range_mode_model]}));}}]);return SlopeChart;}(Component);var maptstateToprop=function maptstateToprop(state){var _ref;return _ref={mode:state.mode,range_mode_range1:state.range_mode_range1,range_mode_range2:state.range_mode_range2,range_mode_model:state.range_mode_model,lime_data:state.lime_data,selected_year:state.selected_year,original_data:state.original_data,dataset:state.dataset,sparkline_data:state.sparkline_data},_defineProperty(_ref,\"dataset\",state.dataset),_defineProperty(_ref,\"anim_config\",state.anim_config),_defineProperty(_ref,\"average_m\",state.average_m),_defineProperty(_ref,\"rank_data\",state.rank_data),_defineProperty(_ref,\"clicked_circles\",state.clicked_circles),_defineProperty(_ref,\"threshold\",state.threshold),_defineProperty(_ref,\"histogram_data\",state.histogram_data),_ref;};var mapdispatchToprop=function mapdispatchToprop(dispatch){return{Set_selected_instances:function Set_selected_instances(val){return dispatch({type:\"selected_instances\",value:val});},Set_deviation_array:function Set_deviation_array(val){return dispatch({type:\"deviation_array\",value:val});},Set_clicked_circles:function Set_clicked_circles(val){return dispatch({type:\"clicked_circles\",value:val});},Set_selected_year:function Set_selected_year(val){return dispatch({type:\"selected_year\",value:val});}};};export default connect(maptstateToprop,mapdispatchToprop)(SlopeChart);","map":{"version":3,"sources":["/Users/kaustav/NewWork/trivea/src/components/Charts/Range/01RangeChartComponent.js"],"names":["React","Component","d3","connect","Grid","deviation_chart","misc_algo","$","SliderGroup1","SliderGroup2","YearModelSelection","ExpChart","Popover","SlopeChart","props","line_color","state","height_slope_exp_chart","mouseX","mouseY","setState","width","window","innerHeight","prevProps","prevState","selected_instances","range","min","range_mode_range1","range_mode_range2","max","d","diverginColor","scaleLinear","domain","interpolate","interpolateRgb","selected_instances1","under_threshold_instances","year_data","original_data","filter","item","selected_year","map","two_realRank","parseInt","predicted_rank","range_mode_model","Math","abs","threshold","push","includes","Create_deviation_chart","anim_config","average_m","clicked_circles","Set_clicked_circles","sparkline_data","Set_selected_year","dataset","selected_instances2","handle_transparency","Set_selected_instances","deviation_array","lime_data","Set_deviation_array","mode","height","backgroundColor","padding","overflow","paddingRight","border","margin","paddingLeft","fontWeight","borderBottom","borderRight","rank_data","marginLeft","maptstateToprop","histogram_data","mapdispatchToprop","dispatch","val","type","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { connect } from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport * as deviation_chart from \"../DevPlot/deviation_chart\"\nimport * as misc_algo from '../../../Algorithms/misc_algo'\nimport * as $ from 'jquery';\nimport SliderGroup1 from './SliderGroup1';\nimport SliderGroup2 from './SliderGroup2';\nimport YearModelSelection from \"./YearAndModelSelection/YearModelSelection\"\nimport ExpChart from './02RangeExpChart';\nimport Popover from './03RangePopover';\n\nclass SlopeChart extends Component {\n  constructor(props) {\n    super(props);\n    this.line_color = null;\n    this.state = { height_slope_exp_chart: 700, mouseX: 0, mouseY: 0 }\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerHeight })\n  }\n  shouldComponentUpdate(prevProps, prevState) {\n    return true;\n  }\n  componentDidUpdate(prevProps, prevState) {\n    //------------------------------\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1)\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3','#b197c1','#dbd88c','#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']);\n    //var diverginColor = d3.scaleDiverging([min,(max - min) / 2 , max], d3.interpolateSpectral)\n    //------------------------------\n    var selected_instances1 = d3.range(this.props.range_mode_range1[0], this.props.range_mode_range1[1] + 1)\n    //-------------------- Threshold filter\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n      year_data.map(item => {\n        var two_realRank = parseInt(item['two_realRank'])\n        var predicted_rank = parseInt(item[this.props.range_mode_model])\n        if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n          under_threshold_instances.push(two_realRank)\n        }\n      })\n    \n    //console.log(\"Checking\", selected_instances1, under_threshold_instances)\n    selected_instances1 = selected_instances1.filter(item => under_threshold_instances.includes(item))\n    deviation_chart.Create_deviation_chart('r1d', 'r1exp', selected_instances1, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\n    //------------------------------\n    var selected_instances2 = d3.range(this.props.range_mode_range2[0], this.props.range_mode_range2[1] + 1)\n    var under_threshold_instances = []\n    var year_data = this.props.original_data.filter(item => this.props.selected_year == item['1-qid'])\n    year_data.map(item => {\n      var two_realRank = parseInt(item['two_realRank'])\n      var predicted_rank = parseInt(item[this.props.range_mode_model])\n      if (Math.abs(predicted_rank - two_realRank) < this.props.threshold) {\n        under_threshold_instances.push(two_realRank)\n      }\n    })\n    selected_instances2 = selected_instances2.filter(item => under_threshold_instances.includes(item))\n\n    deviation_chart.Create_deviation_chart('r2d', 'r2exp', selected_instances2, this.props.original_data, [this.props.range_mode_model], this.props.anim_config, this.props.selected_year, this.props.average_m, this.props.clicked_circles, this.props.Set_clicked_circles, diverginColor, this.props.sparkline_data, this.props.Set_selected_year, this.props.dataset, this.props.threshold)\n    //------------------------------\n    misc_algo.handle_transparency(\"None\", this.props.clicked_circles, this.props.anim_config)\n\n  }\n  render() {\n    //------------------------------\n    var selected_instances = d3.range(d3.min([this.props.range_mode_range1[0], this.props.range_mode_range2[0]]), d3.max([this.props.range_mode_range1[1], this.props.range_mode_range2[1]]) + 1)\n    var min = d3.min(selected_instances), max = d3.max(selected_instances);\n    var d = (max - min) / 8;\n    var diverginColor = d3.scaleLinear().domain([min + d * 7, min + d * 6, min + d * 5, min + d * 4, min + d * 3, min + d * 2, min]).interpolate(d3.interpolateRgb).range(['#af8dc3','#b197c1','#dbd88c','#dbd88c', '#dbd88c', '#90bc8d', '#7fbf7b']);\n    //var diverginColor = d3.scaleDiverging([min,(max - min) / 2 , max], d3.interpolateSpectral)\n    this.props.Set_selected_instances(selected_instances)\n    //--------------------\n    var deviation_array = []\n\n    this.props.lime_data[this.props.range_mode_model].map(item => {\n      if (item['1-qid'] == this.props.selected_year && selected_instances.includes(parseInt(item['two_realRank']))) {\n        deviation_array.push(item['deviation'])\n      }\n    })\n    this.props.Set_deviation_array(deviation_array)\n    //--------------------\n    return (\n      <Grid key={this.props.mode} className=\"RangeChartParent\" container direction=\"row\" justifyContent=\"space-between\"\n        className=\"slope_chart_exp\" style={{ width: \"100%\", height: '100%', backgroundColor: 'white', padding: \"0px 0px\", overflow: 'hidden' }}>\n        <div className=\"year_and_model_selector_and_slider_container\" style={{ width: \"100%\" }}> {/* This is used to calculate the deviation plot height */}\n          <YearModelSelection></YearModelSelection>\n        </div>\n        {/* Group 1 */}\n        <Grid className=\"Group1_container\" style={{ height: \"100%\", width: \"49.4%\", paddingRight: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\" justifyContent=\"space-between\">\n          <p className=\"title_p1\" style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 1</p>\n          <Grid className=\"slidergroup1\" item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><SliderGroup1></SliderGroup1></Grid>\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p1').height() + $('.slidergroup1').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\n              <svg id=\"r1d\" style={{ width: \"100%\", padding: 5 }}></svg>\n            </Grid>\n            {\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\n                <ExpChart diverginColor={diverginColor} exp_data={[[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]]} exp_id=\"r1exp\" state_range={this.props.range_mode_range1} selected_year={this.props.selected_year} model_name={this.props.range_mode_model} default_models={[this.props.range_mode_model]}></ExpChart>\n              </Grid> : null\n            }\n          </Grid>\n        </Grid>\n        {/* Group 2 */}\n        <Grid className=\"Group2_container\" style={{ height: \"100%\", width: \"49.4%\", marginLeft: '0.5%', paddingRight: 0, border: \"2px solid #eaeaea\", overflow: 'hidden' }} container item direction=\"column\" justifyContent=\"space-between\">\n          <p className=\"title_p2\" style={{ margin: 0, paddingLeft: \"45%\", backgroundColor: \"rgb(232, 232, 232,0.4)\", fontWeight: \"bolder\", borderBottom: \"1px solid #cecece\" }}>Group 2</p>\n          <Grid className=\"slidergroup2\" item style={{ backgroundColor: \"rgb(232, 232, 232,0.4)\" }}><SliderGroup2></SliderGroup2></Grid>\n          <Grid className=\"dev_plot_and_exp_container\" style={{ width: '100%', height: $('.Group2_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5) }} container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <Grid className=\"deviation_plot_container_div\" item style={{ width: '49%', height: $('.Group1_container').height() - ($('.title_p2').height() + $('.slidergroup2').height() + $('.year_and_model_selector_and_slider_container').height() + 5), overflow: 'scroll', borderRight: '1px solid #dbdbdb' }}>\n              <svg id=\"r2d\" style={{ width: \"100%\", padding: 5 }}></svg>\n            </Grid>\n            {\n              this.props.rank_data != null ? <Grid className=\"explanation_plot_container\" item style={{ width: '49%', height: '100%' }}>\n                <ExpChart diverginColor={diverginColor} exp_data={[[\"r1exp\", this.props.range_mode_range1], [\"r2exp\", this.props.range_mode_range2]]} exp_id=\"r2exp\" state_range={this.props.range_mode_range2} selected_year={this.props.selected_year} model_name={this.props.range_mode_model} default_models={[this.props.range_mode_model]}></ExpChart>\n              </Grid> : null\n            }\n          </Grid>\n        </Grid>\n        <Popover diverginColor={diverginColor} default_models={[this.props.range_mode_model]}></Popover>\n      </Grid>\n    )\n  }\n}\nconst maptstateToprop = (state) => {\n  return {\n    mode: state.mode,\n    range_mode_range1: state.range_mode_range1,\n    range_mode_range2: state.range_mode_range2,\n    range_mode_model: state.range_mode_model,\n    lime_data: state.lime_data,\n    selected_year: state.selected_year,\n    original_data: state.original_data,\n    dataset: state.dataset,\n    sparkline_data: state.sparkline_data,\n    dataset: state.dataset,\n    anim_config: state.anim_config,\n    average_m: state.average_m,\n    rank_data: state.rank_data,\n    clicked_circles: state.clicked_circles,\n    threshold: state.threshold,\n    histogram_data: state.histogram_data,\n  }\n}\nconst mapdispatchToprop = (dispatch) => {\n  return {\n    Set_selected_instances: (val) => dispatch({ type: \"selected_instances\", value: val }),\n    Set_deviation_array: (val) => dispatch({ type: \"deviation_array\", value: val }),\n    Set_clicked_circles: (val) => dispatch({ type: \"clicked_circles\", value: val }),\n    Set_selected_year: (val) => dispatch({ type: \"selected_year\", value: val }),\n  }\n}\nexport default connect(maptstateToprop, mapdispatchToprop)(SlopeChart);"]},"metadata":{},"sourceType":"module"}