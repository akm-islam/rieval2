/**
 *  绑定 dom 事件
 * @param el 事件绑定对象
 * @param eventKey 事件名称
 * @param listener 事件回调
 */
export var bindEvent = function bindEvent(el, eventKey, handler) {
  if (!el) {
    return;
  }

  if (el.attachEvent) {
    el.attachEvent("on" + eventKey, handler);
  } else if (el.addEventListener) {
    el.addEventListener(eventKey, handler, false);
  } else {
    el["on".concat(eventKey)] = handler;
  }
};
/**
 *  解绑 dom 事件
 * @param el 事件绑定对象
 * @param eventKey 事件名称
 * @param listener 事件回调
 */

export var unBindEvent = function unBindEvent(el, eventKey, handler) {
  if (!el) {
    return;
  }

  if (el.detachEvent) {
    el.detachEvent("on" + eventKey, handler);
  } else if (el.removeEventListener) {
    el.removeEventListener(eventKey, handler, false);
  } else {
    el["on".concat(eventKey)] = null;
  }
};
/**
 * 设置body 鼠标样式
 * @param cursor
 */

export var setBodyCursor = function setBodyCursor(cursor) {
  document.body.style.cursor = cursor;
};